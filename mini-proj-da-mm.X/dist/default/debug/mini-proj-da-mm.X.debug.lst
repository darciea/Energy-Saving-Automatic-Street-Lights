

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Nov 08 01:37:21 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    50                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    52   000000                     
    53                           ; Version 2.35
    54                           ; Generated 05/05/2021 GMT
    55                           ; 
    56                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution. Publication is not required when
    70                           ;        this file is used in an embedded application.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F67K40 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88   000000                     _T0CON0bits	set	4053
    89   000000                     _T0CON1bits	set	4054
    90   000000                     _CM1CON1bits	set	3793
    91   000000                     _LATHbits	set	3968
    92   000000                     _ANSELAbits	set	3730
    93   000000                     _TRISAbits	set	3969
    94   000000                     _TMR0IE	set	29005
    95   000000                     _TRISEbits	set	3973
    96   000000                     _TRISCbits	set	3971
    97   000000                     _TRISBbits	set	3970
    98   000000                     _TRISFbits	set	3974
    99   000000                     _TRISGbits	set	3975
   100   000000                     _ANSELFbits	set	3764
   101   000000                     _ADREFbits	set	3928
   102   000000                     _ADPCH	set	3935
   103   000000                     _ADRESH	set	3940
   104   000000                     _ADCON0bits	set	3936
   105   000000                     _LATAbits	set	3961
   106   000000                     _LATGbits	set	3967
   107   000000                     _TMR0L	set	4051
   108   000000                     _TMR0H	set	4052
   109   000000                     _INTCONbits	set	4082
   110   000000                     _TRISHbits	set	3976
   111   000000                     _LATEbits	set	3965
   112   000000                     _LATCbits	set	3963
   113   000000                     _LATBbits	set	3962
   114   000000                     _LATFbits	set	3966
   115   000000                     _DAC1CON0bits	set	3782
   116   000000                     _CM1CON0bits	set	3792
   117   000000                     _CM1NCHbits	set	3794
   118   000000                     _DAC1CON1bits	set	3783
   119   000000                     _CM1PCHbits	set	3795
   120   000000                     _TMR0IF	set	29085
   121   000000                     _PIR2bits	set	3637
   122                           
   123                           	psect	smallconst
   124   000E00                     __psmallconst:
   125                           	callstack 0
   126   000E00  00                 	db	0
   127   000E01                     
   128                           ; BSR set to: 14
   129   000E01  56                 	db	86	;'V'
   130   000E02  6F                 	db	111	;'o'
   131   000E03  6C                 	db	108	;'l'
   132   000E04  74                 	db	116	;'t'
   133   000E05  61                 	db	97	;'a'
   134   000E06  67                 	db	103	;'g'
   135   000E07  65                 	db	101	;'e'
   136   000E08  20                 	db	32
   137   000E09  3D                 	db	61	;'='
   138   000E0A  20                 	db	32
   139   000E0B  25                 	db	37
   140   000E0C  64                 	db	100	;'d'
   141   000E0D  2E                 	db	46
   142   000E0E  25                 	db	37
   143   000E0F  30                 	db	48	;'0'
   144   000E10  32                 	db	50	;'2'
   145   000E11  64                 	db	100	;'d'
   146   000E12  00                 	db	0
   147   000E13                     
   148                           ; BSR set to: 14
   149   000E13  67                 	db	103	;'g'
   150   000E14  65                 	db	101	;'e'
   151   000E15  74                 	db	116	;'t'
   152   000E16  76                 	db	118	;'v'
   153   000E17  61                 	db	97	;'a'
   154   000E18  6C                 	db	108	;'l'
   155   000E19  20                 	db	32
   156   000E1A  3D                 	db	61	;'='
   157   000E1B  20                 	db	32
   158   000E1C  25                 	db	37
   159   000E1D  64                 	db	100	;'d'
   160   000E1E  00                 	db	0
   161   000E1F                     STR_1:
   162                           
   163                           ; BSR set to: 14
   164   000E1F  25                 	db	37
   165   000E20  64                 	db	100	;'d'
   166   000E21  20                 	db	32
   167   000E22  2F                 	db	47
   168   000E23  20                 	db	32
   169   000E24  25                 	db	37
   170   000E25  64                 	db	100	;'d'
   171   000E26  00                 	db	0
   172   000E27  00                 	db	0	; dummy byte at the end
   173   000000                     
   174                           ; #config settings
   175                           
   176                           	psect	cinit
   177   002618                     __pcinit:
   178                           	callstack 0
   179   002618                     start_initialization:
   180                           	callstack 0
   181   002618                     __initialization:
   182                           	callstack 0
   183                           
   184                           ; Clear objects allocated to BANK1 (32 bytes)
   185   002618  EE01  F000         	lfsr	0,__pbssBANK1
   186   00261C  0E20               	movlw	32
   187   00261E                     clear_0:
   188   00261E  6AEE               	clrf	postinc0,c
   189   002620  06E8               	decf	wreg,f,c
   190   002622  E1FD               	bnz	clear_0
   191                           
   192                           ; Clear objects allocated to BANK0 (22 bytes)
   193   002624  EE00  F0CD         	lfsr	0,__pbssBANK0
   194   002628  0E16               	movlw	22
   195   00262A                     clear_1:
   196   00262A  6AEE               	clrf	postinc0,c
   197   00262C  06E8               	decf	wreg,f,c
   198   00262E  E1FD               	bnz	clear_1
   199                           
   200                           ; Clear objects allocated to COMRAM (3 bytes)
   201   002630  6A5E               	clrf	(__pbssCOMRAM+2)& (0+255),c
   202   002632  6A5D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   203   002634  6A5C               	clrf	__pbssCOMRAM& (0+255),c
   204   002636                     end_of_initialization:
   205                           	callstack 0
   206   002636                     __end_of__initialization:
   207                           	callstack 0
   208   002636  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   209   002638  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   210   00263A  0100               	movlb	0
   211   00263C  EF14  F007         	goto	_main	;jump to C main() function
   212                           
   213                           	psect	bssCOMRAM
   214   00005C                     __pbssCOMRAM:
   215                           	callstack 0
   216   00005C                     _prec:
   217                           	callstack 0
   218   00005C                     	ds	2
   219   00005E                     _flags:
   220                           	callstack 0
   221   00005E                     	ds	1
   222                           
   223                           	psect	bssBANK0
   224   0000CD                     __pbssBANK0:
   225                           	callstack 0
   226   0000CD                     _width:
   227                           	callstack 0
   228   0000CD                     	ds	2
   229   0000CF                     _calculated_solar_noon_min:
   230                           	callstack 0
   231   0000CF                     	ds	2
   232   0000D1                     _calculated_solar_noon_hour:
   233                           	callstack 0
   234   0000D1                     	ds	2
   235   0000D3                     _daylight_end_min:
   236                           	callstack 0
   237   0000D3                     	ds	2
   238   0000D5                     _daylight_end_hour:
   239                           	callstack 0
   240   0000D5                     	ds	2
   241   0000D7                     _daylight_start_min:
   242                           	callstack 0
   243   0000D7                     	ds	2
   244   0000D9                     _daylight_start_hour:
   245                           	callstack 0
   246   0000D9                     	ds	2
   247   0000DB                     _current_day_min:
   248                           	callstack 0
   249   0000DB                     	ds	2
   250   0000DD                     _current_day_hour:
   251                           	callstack 0
   252   0000DD                     	ds	2
   253   0000DF                     _minute:
   254                           	callstack 0
   255   0000DF                     	ds	2
   256   0000E1                     _hour:
   257                           	callstack 0
   258   0000E1                     	ds	2
   259                           
   260                           	psect	bssBANK1
   261   000100                     __pbssBANK1:
   262                           	callstack 0
   263   000100                     _dbuf:
   264                           	callstack 0
   265   000100                     	ds	32
   266                           
   267                           	psect	cstackBANK0
   268   000060                     __pcstackBANK0:
   269                           	callstack 0
   270   000060                     ?_sprintf:
   271                           	callstack 0
   272   000060                     sprintf@s:
   273                           	callstack 0
   274                           
   275                           ; 2 bytes @ 0x0
   276   000060                     	ds	2
   277   000062                     sprintf@fmt:
   278                           	callstack 0
   279                           
   280                           ; 2 bytes @ 0x2
   281   000062                     	ds	8
   282   00006A                     sprintf@ap:
   283                           	callstack 0
   284                           
   285                           ; 2 bytes @ 0xA
   286   00006A                     	ds	2
   287   00006C                     sprintf@f:
   288                           	callstack 0
   289                           
   290                           ; 11 bytes @ 0xC
   291   00006C                     	ds	11
   292   000077                     ??_main:
   293                           
   294                           ; 1 bytes @ 0x17
   295   000077                     	ds	4
   296   00007B                     main@datestr:
   297                           	callstack 0
   298                           
   299                           ; 50 bytes @ 0x1B
   300   00007B                     	ds	50
   301   0000AD                     main@yearstr:
   302                           	callstack 0
   303                           
   304                           ; 20 bytes @ 0x4D
   305   0000AD                     	ds	20
   306   0000C1                     main@OneAmToFiveAmFlag:
   307                           	callstack 0
   308                           
   309                           ; 2 bytes @ 0x61
   310   0000C1                     	ds	2
   311   0000C3                     main@changed:
   312                           	callstack 0
   313                           
   314                           ; 2 bytes @ 0x63
   315   0000C3                     	ds	2
   316   0000C5                     main@year:
   317                           	callstack 0
   318                           
   319                           ; 2 bytes @ 0x65
   320   0000C5                     	ds	2
   321   0000C7                     main@day:
   322                           	callstack 0
   323                           
   324                           ; 2 bytes @ 0x67
   325   0000C7                     	ds	2
   326   0000C9                     main@month:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0x69
   330   0000C9                     	ds	2
   331   0000CB                     main@month_day:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0x6B
   335   0000CB                     	ds	2
   336                           
   337                           	psect	cstackCOMRAM
   338   000001                     __pcstackCOMRAM:
   339                           	callstack 0
   340   000001                     ?_isdigit:
   341                           	callstack 0
   342   000001                     ?_isspace:
   343                           	callstack 0
   344   000001                     ?___wmul:
   345                           	callstack 0
   346   000001                     ?___aodiv:
   347                           	callstack 0
   348   000001                     ?___aomod:
   349                           	callstack 0
   350   000001                     LCD_sendnibble@number:
   351                           	callstack 0
   352   000001                     LEDarray_disp_bin@number:
   353                           	callstack 0
   354   000001                     ___wmul@multiplier:
   355                           	callstack 0
   356   000001                     isdigit@c:
   357                           	callstack 0
   358   000001                     isspace@c:
   359                           	callstack 0
   360   000001                     fputc@c:
   361                           	callstack 0
   362   000001                     ___aodiv@dividend:
   363                           	callstack 0
   364   000001                     ___aomod@dividend:
   365                           	callstack 0
   366                           
   367                           ; 8 bytes @ 0x0
   368   000001                     	ds	1
   369   000002                     LCD_sendbyte@type:
   370                           	callstack 0
   371                           
   372                           ; 1 bytes @ 0x1
   373   000002                     	ds	1
   374   000003                     ??_isdigit:
   375   000003                     ??_isspace:
   376   000003                     LCD_sendbyte@Byte:
   377                           	callstack 0
   378   000003                     ___wmul@multiplicand:
   379                           	callstack 0
   380   000003                     fputc@fp:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x2
   384   000003                     	ds	1
   385   000004                     ??_LCD_Init:
   386   000004                     ??_LCD_clear:
   387   000004                     LCD_setline@line:
   388                           	callstack 0
   389   000004                     LCD_sendstring@string:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0x3
   393   000004                     	ds	1
   394   000005                     ??_fputc:
   395   000005                     _isspace$1936:
   396                           	callstack 0
   397   000005                     ___wmul@product:
   398                           	callstack 0
   399                           
   400                           ; 2 bytes @ 0x4
   401   000005                     	ds	1
   402   000006                     
   403                           ; 1 bytes @ 0x5
   404   000006                     	ds	1
   405   000007                     ?_atoi:
   406                           	callstack 0
   407   000007                     ?___lwdiv:
   408                           	callstack 0
   409   000007                     ?___lwmod:
   410                           	callstack 0
   411   000007                     ___lwdiv@dividend:
   412                           	callstack 0
   413   000007                     ___lwmod@dividend:
   414                           	callstack 0
   415   000007                     atoi@s:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x6
   419   000007                     	ds	2
   420   000009                     ??_atoi:
   421   000009                     ___lwdiv@divisor:
   422                           	callstack 0
   423   000009                     ___lwmod@divisor:
   424                           	callstack 0
   425   000009                     ___aodiv@divisor:
   426                           	callstack 0
   427   000009                     ___aomod@divisor:
   428                           	callstack 0
   429                           
   430                           ; 8 bytes @ 0x8
   431   000009                     	ds	1
   432   00000A                     fputs@s:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0x9
   436   00000A                     	ds	1
   437   00000B                     ___lwmod@counter:
   438                           	callstack 0
   439   00000B                     ___lwdiv@quotient:
   440                           	callstack 0
   441                           
   442                           ; 2 bytes @ 0xA
   443   00000B                     	ds	1
   444   00000C                     check_month@month:
   445                           	callstack 0
   446   00000C                     atoi@neg:
   447                           	callstack 0
   448   00000C                     fputs@fp:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0xB
   452   00000C                     	ds	1
   453   00000D                     ___lwdiv@counter:
   454                           	callstack 0
   455                           
   456                           ; 1 bytes @ 0xC
   457   00000D                     	ds	1
   458   00000E                     fputs@c:
   459                           	callstack 0
   460   00000E                     check_month@month_day:
   461                           	callstack 0
   462   00000E                     atoi@n:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0xD
   466   00000E                     	ds	1
   467   00000F                     fputs@i:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0xE
   471   00000F                     	ds	1
   472   000010                     check_month@year:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0xF
   476   000010                     	ds	1
   477   000011                     ___aodiv@counter:
   478                           	callstack 0
   479   000011                     ___aomod@counter:
   480                           	callstack 0
   481   000011                     pad@fp:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x10
   485   000011                     	ds	1
   486   000012                     ??_check_month:
   487   000012                     ___aodiv@sign:
   488                           	callstack 0
   489   000012                     ___aomod@sign:
   490                           	callstack 0
   491                           
   492                           ; 1 bytes @ 0x11
   493   000012                     	ds	1
   494   000013                     ?_abs:
   495                           	callstack 0
   496   000013                     pad@buf:
   497                           	callstack 0
   498   000013                     abs@a:
   499                           	callstack 0
   500   000013                     ___aodiv@quotient:
   501                           	callstack 0
   502                           
   503                           ; 8 bytes @ 0x12
   504   000013                     	ds	1
   505   000014                     check_month@leap_year:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x13
   509   000014                     	ds	1
   510   000015                     ??_abs:
   511   000015                     pad@p:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x14
   515   000015                     	ds	2
   516   000017                     ??_pad:
   517                           
   518                           ; 1 bytes @ 0x16
   519   000017                     	ds	1
   520   000018                     pad@i:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x17
   524   000018                     	ds	2
   525   00001A                     pad@w:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0x19
   529   00001A                     	ds	2
   530   00001C                     dtoa@fp:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x1B
   534   00001C                     	ds	2
   535   00001E                     dtoa@d:
   536                           	callstack 0
   537                           
   538                           ; 8 bytes @ 0x1D
   539   00001E                     	ds	8
   540   000026                     ??_dtoa:
   541                           
   542                           ; 1 bytes @ 0x25
   543   000026                     	ds	8
   544   00002E                     _dtoa$1887:
   545                           	callstack 0
   546                           
   547                           ; 2 bytes @ 0x2D
   548   00002E                     	ds	2
   549   000030                     dtoa@p:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x2F
   553   000030                     	ds	2
   554   000032                     dtoa@w:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x31
   558   000032                     	ds	2
   559   000034                     dtoa@n:
   560                           	callstack 0
   561                           
   562                           ; 8 bytes @ 0x33
   563   000034                     	ds	8
   564   00003C                     dtoa@i:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x3B
   568   00003C                     	ds	2
   569   00003E                     dtoa@s:
   570                           	callstack 0
   571                           
   572                           ; 1 bytes @ 0x3D
   573   00003E                     	ds	1
   574   00003F                     vfpfcnvrt@fp:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x3E
   578   00003F                     	ds	2
   579   000041                     vfpfcnvrt@fmt:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x40
   583   000041                     	ds	2
   584   000043                     vfpfcnvrt@ap:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x42
   588   000043                     	ds	2
   589   000045                     ??_vfpfcnvrt:
   590                           
   591                           ; 1 bytes @ 0x44
   592   000045                     	ds	3
   593   000048                     vfpfcnvrt@convarg:
   594                           	callstack 0
   595                           
   596                           ; 8 bytes @ 0x47
   597   000048                     	ds	8
   598   000050                     vfpfcnvrt@done:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0x4F
   602   000050                     	ds	2
   603   000052                     vfpfcnvrt@cp:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x51
   607   000052                     	ds	2
   608   000054                     ?_vfprintf:
   609                           	callstack 0
   610   000054                     vfprintf@fp:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x53
   614   000054                     	ds	2
   615   000056                     vfprintf@fmt:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x55
   619   000056                     	ds	2
   620   000058                     vfprintf@ap:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x57
   624   000058                     	ds	2
   625   00005A                     vfprintf@cfmt:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x59
   629   00005A                     	ds	2
   630   00005C                     
   631                           ; 1 bytes @ 0x5B
   632 ;;
   633 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   634 ;;
   635 ;; *************** function _main *****************
   636 ;; Defined at:
   637 ;;		line 24 in file "../main.c"
   638 ;; Parameters:    Size  Location     Type
   639 ;;		None
   640 ;; Auto vars:     Size  Location     Type
   641 ;;  datestr        50   27[BANK0 ] unsigned char [50]
   642 ;;  yearstr        20   77[BANK0 ] unsigned char [20]
   643 ;;  month_day       2  107[BANK0 ] unsigned int 
   644 ;;  month           2  105[BANK0 ] unsigned int 
   645 ;;  day             2  103[BANK0 ] unsigned int 
   646 ;;  year            2  101[BANK0 ] unsigned short 
   647 ;;  changed         2   99[BANK0 ] unsigned int 
   648 ;;  OneAmToFiveA    2   97[BANK0 ] unsigned int 
   649 ;; Return value:  Size  Location     Type
   650 ;;                  1    wreg      void 
   651 ;; Registers used:
   652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   653 ;; Tracked objects:
   654 ;;		On entry : 0/0
   655 ;;		On exit  : 0/0
   656 ;;		Unchanged: 0/0
   657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   659 ;;      Locals:         0      82       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   660 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   661 ;;      Totals:         0      86       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   662 ;;Total ram usage:       86 bytes
   663 ;; Hardware stack levels required when called: 9
   664 ;; This function calls:
   665 ;;		_ADC_init
   666 ;;		_Comp1_init
   667 ;;		_Interrupts_init
   668 ;;		_LCD_Init
   669 ;;		_LCD_clear
   670 ;;		_LCD_sendstring
   671 ;;		_LCD_setline
   672 ;;		_LEDarray_disp_bin
   673 ;;		_LEDarray_init
   674 ;;		_Light_init
   675 ;;		_Timer0_init
   676 ;;		___lwdiv
   677 ;;		___lwmod
   678 ;;		___wmul
   679 ;;		_check_month
   680 ;;		_sprintf
   681 ;; This function is called by:
   682 ;;		Startup code after reset
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686                           	psect	text0
   687   000E28                     __ptext0:
   688                           	callstack 0
   689   000E28                     _main:
   690                           	callstack 22
   691   000E28                     
   692                           ;../main.c: 27:     unsigned int day = 2;
   693   000E28  0E00               	movlw	0
   694   000E2A  0100               	movlb	0	; () banked
   695   000E2C  6FC8               	movwf	(main@day+1)& (0+255),b
   696   000E2E  0E02               	movlw	2
   697   000E30  6FC7               	movwf	main@day& (0+255),b
   698                           
   699                           ;../main.c: 28:     unsigned int month = 2;
   700   000E32  0E00               	movlw	0
   701   000E34  6FCA               	movwf	(main@month+1)& (0+255),b
   702   000E36  0E02               	movlw	2
   703   000E38  6FC9               	movwf	main@month& (0+255),b
   704                           
   705                           ;../main.c: 29:     unsigned int month_day = 28;
   706   000E3A  0E00               	movlw	0
   707   000E3C  6FCC               	movwf	(main@month_day+1)& (0+255),b
   708   000E3E  0E1C               	movlw	28
   709   000E40  6FCB               	movwf	main@month_day& (0+255),b
   710                           
   711                           ;../main.c: 30:     unsigned short year = 2022;
   712   000E42  0E07               	movlw	7
   713   000E44  6FC6               	movwf	(main@year+1)& (0+255),b
   714   000E46  0EE6               	movlw	230
   715   000E48  6FC5               	movwf	main@year& (0+255),b
   716                           
   717                           ;../main.c: 31:     unsigned int changed = 0;
   718   000E4A  0E00               	movlw	0
   719   000E4C  6FC4               	movwf	(main@changed+1)& (0+255),b
   720   000E4E  0E00               	movlw	0
   721   000E50  6FC3               	movwf	main@changed& (0+255),b
   722                           
   723                           ;../main.c: 32:     unsigned int OneAmToFiveAmFlag = 0;
   724   000E52  0E00               	movlw	0
   725   000E54  6FC2               	movwf	(main@OneAmToFiveAmFlag+1)& (0+255),b
   726   000E56  0E00               	movlw	0
   727   000E58  6FC1               	movwf	main@OneAmToFiveAmFlag& (0+255),b
   728   000E5A                     
   729                           ; BSR set to: 0
   730                           ;../main.c: 33:     char datestr[50];;../main.c: 34:     char yearstr[20];;../main.c: 37
      +                          :     Timer0_init();
   731   000E5A  EC57  F013         	call	_Timer0_init	;wreg free
   732                           
   733                           ;../main.c: 38:     LEDarray_init();
   734   000E5E  EC46  F013         	call	_LEDarray_init	;wreg free
   735                           
   736                           ;../main.c: 39:     Interrupts_init();
   737   000E62  EC92  F013         	call	_Interrupts_init	;wreg free
   738                           
   739                           ;../main.c: 40:     LEDarray_init();
   740   000E66  EC46  F013         	call	_LEDarray_init	;wreg free
   741   000E6A                     
   742                           ;../main.c: 41:     Comp1_init();
   743   000E6A  EC33  F013         	call	_Comp1_init	;wreg free
   744   000E6E                     
   745                           ;../main.c: 42:     Light_init();
   746   000E6E  EC97  F013         	call	_Light_init	;wreg free
   747                           
   748                           ;../main.c: 43:     ADC_init();
   749   000E72  EC74  F013         	call	_ADC_init	;wreg free
   750   000E76                     
   751                           ;../main.c: 44:     LCD_Init();
   752   000E76  EC02  F011         	call	_LCD_Init	;wreg free
   753   000E7A                     l2576:
   754                           
   755                           ;../main.c: 49:         LCD_setline(1);
   756   000E7A  0E01               	movlw	1
   757   000E7C  ECA4  F012         	call	_LCD_setline
   758   000E80                     
   759                           ;../main.c: 50:         sprintf(datestr, "%d / %d", month_day, month, year);
   760   000E80  0E7B               	movlw	low main@datestr
   761   000E82  0100               	movlb	0	; () banked
   762   000E84  6F60               	movwf	sprintf@s& (0+255),b
   763   000E86  0E00               	movlw	high main@datestr
   764   000E88  6F61               	movwf	(sprintf@s+1)& (0+255),b
   765   000E8A  0E1F               	movlw	low STR_1
   766   000E8C  6F62               	movwf	sprintf@fmt& (0+255),b
   767   000E8E  0E0E               	movlw	high STR_1
   768   000E90  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   769   000E92  C0CB  F064         	movff	main@month_day,?_sprintf+4
   770   000E96  C0CC  F065         	movff	main@month_day+1,?_sprintf+5
   771   000E9A  C0C9  F066         	movff	main@month,?_sprintf+6
   772   000E9E  C0CA  F067         	movff	main@month+1,?_sprintf+7
   773   000EA2  C0C5  F068         	movff	main@year,?_sprintf+8
   774   000EA6  C0C6  F069         	movff	main@year+1,?_sprintf+9
   775   000EAA  ECED  F011         	call	_sprintf	;wreg free
   776   000EAE                     
   777                           ;../main.c: 51:         LCD_sendstring(datestr);
   778   000EAE  0E7B               	movlw	low main@datestr
   779   000EB0  6E04               	movwf	LCD_sendstring@string^0,c
   780   000EB2  0E00               	movlw	high main@datestr
   781   000EB4  6E05               	movwf	(LCD_sendstring@string+1)^0,c
   782   000EB6  ECDC  F012         	call	_LCD_sendstring	;wreg free
   783   000EBA                     
   784                           ;../main.c: 52:         LCD_setline(2);
   785   000EBA  0E02               	movlw	2
   786   000EBC  ECA4  F012         	call	_LCD_setline
   787   000EC0                     
   788                           ;../main.c: 53:         sprintf(yearstr, "%d / %d", day, year);
   789   000EC0  0EAD               	movlw	low main@yearstr
   790   000EC2  0100               	movlb	0	; () banked
   791   000EC4  6F60               	movwf	sprintf@s& (0+255),b
   792   000EC6  0E00               	movlw	high main@yearstr
   793   000EC8  6F61               	movwf	(sprintf@s+1)& (0+255),b
   794   000ECA  0E1F               	movlw	low STR_1
   795   000ECC  6F62               	movwf	sprintf@fmt& (0+255),b
   796   000ECE  0E0E               	movlw	high STR_1
   797   000ED0  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   798   000ED2  C0C7  F064         	movff	main@day,?_sprintf+4
   799   000ED6  C0C8  F065         	movff	main@day+1,?_sprintf+5
   800   000EDA  C0C5  F066         	movff	main@year,?_sprintf+6
   801   000EDE  C0C6  F067         	movff	main@year+1,?_sprintf+7
   802   000EE2  ECED  F011         	call	_sprintf	;wreg free
   803   000EE6                     
   804                           ;../main.c: 54:         LCD_sendstring(yearstr);
   805   000EE6  0EAD               	movlw	low main@yearstr
   806   000EE8  6E04               	movwf	LCD_sendstring@string^0,c
   807   000EEA  0E00               	movlw	high main@yearstr
   808   000EEC  6E05               	movwf	(LCD_sendstring@string+1)^0,c
   809   000EEE  ECDC  F012         	call	_LCD_sendstring	;wreg free
   810   000EF2                     
   811                           ;../main.c: 57:         if (minute == 60) {
   812   000EF2  0E3C               	movlw	60
   813   000EF4  0100               	movlb	0	; () banked
   814   000EF6  19DF               	xorwf	_minute& (0+255),w,b
   815   000EF8  11E0               	iorwf	(_minute+1)& (0+255),w,b
   816   000EFA  A4D8               	btfss	status,2,c
   817   000EFC  EF82  F007         	goto	u2471
   818   000F00  EF84  F007         	goto	u2470
   819   000F04                     u2471:
   820   000F04  EF53  F008         	goto	l209
   821   000F08                     u2470:
   822   000F08                     
   823                           ; BSR set to: 0
   824                           ;../main.c: 58:             hour++;
   825   000F08  4BE1               	infsnz	_hour& (0+255),f,b
   826   000F0A  2BE2               	incf	(_hour+1)& (0+255),f,b
   827   000F0C                     
   828                           ; BSR set to: 0
   829                           ;../main.c: 59:             minute = 0;
   830   000F0C  0E00               	movlw	0
   831   000F0E  6FE0               	movwf	(_minute+1)& (0+255),b
   832   000F10  0E00               	movlw	0
   833   000F12  6FDF               	movwf	_minute& (0+255),b
   834   000F14                     
   835                           ; BSR set to: 0
   836                           ;../main.c: 60:             if (hour == 24){
   837   000F14  0E18               	movlw	24
   838   000F16  19E1               	xorwf	_hour& (0+255),w,b
   839   000F18  11E2               	iorwf	(_hour+1)& (0+255),w,b
   840   000F1A  A4D8               	btfss	status,2,c
   841   000F1C  EF92  F007         	goto	u2481
   842   000F20  EF94  F007         	goto	u2480
   843   000F24                     u2481:
   844   000F24  EF53  F008         	goto	l209
   845   000F28                     u2480:
   846   000F28                     
   847                           ; BSR set to: 0
   848                           ;../main.c: 61:                 hour = 0;
   849   000F28  0E00               	movlw	0
   850   000F2A  6FE2               	movwf	(_hour+1)& (0+255),b
   851   000F2C  0E00               	movlw	0
   852   000F2E  6FE1               	movwf	_hour& (0+255),b
   853   000F30                     
   854                           ; BSR set to: 0
   855                           ;../main.c: 62:                 day++;
   856   000F30  4BC7               	infsnz	main@day& (0+255),f,b
   857   000F32  2BC8               	incf	(main@day+1)& (0+255),f,b
   858   000F34                     
   859                           ; BSR set to: 0
   860                           ;../main.c: 63:                 month_day++;
   861   000F34  4BCB               	infsnz	main@month_day& (0+255),f,b
   862   000F36  2BCC               	incf	(main@month_day+1)& (0+255),f,b
   863   000F38                     
   864                           ; BSR set to: 0
   865                           ;../main.c: 64:                 check_month(&month, &month_day, &year);
   866   000F38  0EC9               	movlw	low main@month
   867   000F3A  6E0C               	movwf	check_month@month^0,c
   868   000F3C  0E00               	movlw	high main@month
   869   000F3E  6E0D               	movwf	(check_month@month+1)^0,c
   870   000F40  0ECB               	movlw	low main@month_day
   871   000F42  6E0E               	movwf	check_month@month_day^0,c
   872   000F44  0E00               	movlw	high main@month_day
   873   000F46  6E0F               	movwf	(check_month@month_day+1)^0,c
   874   000F48  0EC5               	movlw	low main@year
   875   000F4A  6E10               	movwf	check_month@year^0,c
   876   000F4C  0E00               	movlw	high main@year
   877   000F4E  6E11               	movwf	(check_month@year+1)^0,c
   878   000F50  EC6D  F009         	call	_check_month	;wreg free
   879   000F54                     
   880                           ;../main.c: 65:                 if (day == 7){day = 0;}
   881   000F54  0E07               	movlw	7
   882   000F56  0100               	movlb	0	; () banked
   883   000F58  19C7               	xorwf	main@day& (0+255),w,b
   884   000F5A  11C8               	iorwf	(main@day+1)& (0+255),w,b
   885   000F5C  A4D8               	btfss	status,2,c
   886   000F5E  EFB3  F007         	goto	u2491
   887   000F62  EFB5  F007         	goto	u2490
   888   000F66                     u2491:
   889   000F66  EFB9  F007         	goto	l2608
   890   000F6A                     u2490:
   891   000F6A                     
   892                           ; BSR set to: 0
   893   000F6A  0E00               	movlw	0
   894   000F6C  6FC8               	movwf	(main@day+1)& (0+255),b
   895   000F6E  0E00               	movlw	0
   896   000F70  6FC7               	movwf	main@day& (0+255),b
   897   000F72                     l2608:
   898                           
   899                           ; BSR set to: 0
   900                           ;../main.c: 66:                 LCD_clear();
   901   000F72  EC67  F013         	call	_LCD_clear	;wreg free
   902   000F76                     
   903                           ;../main.c: 70:                 if (daylight_end_min >= daylight_start_min) {
   904   000F76  0100               	movlb	0	; () banked
   905   000F78  51D7               	movf	_daylight_start_min& (0+255),w,b
   906   000F7A  5DD3               	subwf	_daylight_end_min& (0+255),w,b
   907   000F7C  51D8               	movf	(_daylight_start_min+1)& (0+255),w,b
   908   000F7E  59D4               	subwfb	(_daylight_end_min+1)& (0+255),w,b
   909   000F80  A0D8               	btfss	status,0,c
   910   000F82  EFC5  F007         	goto	u2501
   911   000F86  EFC7  F007         	goto	u2500
   912   000F8A                     u2501:
   913   000F8A  EFD5  F007         	goto	l2614
   914   000F8E                     u2500:
   915   000F8E                     
   916                           ; BSR set to: 0
   917                           ;../main.c: 71:                     current_day_min = daylight_end_min - daylight_start_
      +                          min;
   918   000F8E  51D7               	movf	_daylight_start_min& (0+255),w,b
   919   000F90  5DD3               	subwf	_daylight_end_min& (0+255),w,b
   920   000F92  6FDB               	movwf	_current_day_min& (0+255),b
   921   000F94  51D8               	movf	(_daylight_start_min+1)& (0+255),w,b
   922   000F96  59D4               	subwfb	(_daylight_end_min+1)& (0+255),w,b
   923   000F98  6FDC               	movwf	(_current_day_min+1)& (0+255),b
   924                           
   925                           ;../main.c: 72:                     current_day_hour = daylight_end_hour - daylight_star
      +                          t_hour;}
   926   000F9A  51D9               	movf	_daylight_start_hour& (0+255),w,b
   927   000F9C  5DD5               	subwf	_daylight_end_hour& (0+255),w,b
   928   000F9E  6FDD               	movwf	_current_day_hour& (0+255),b
   929   000FA0  51DA               	movf	(_daylight_start_hour+1)& (0+255),w,b
   930   000FA2  59D6               	subwfb	(_daylight_end_hour+1)& (0+255),w,b
   931   000FA4  6FDE               	movwf	(_current_day_hour+1)& (0+255),b
   932   000FA6  EFED  F007         	goto	l2616
   933   000FAA                     l2614:
   934                           
   935                           ; BSR set to: 0
   936                           ;../main.c: 74:                     current_day_min = daylight_end_min + (60-daylight_st
      +                          art_min);
   937   000FAA  51D7               	movf	_daylight_start_min& (0+255),w,b
   938   000FAC  5DD3               	subwf	_daylight_end_min& (0+255),w,b
   939   000FAE  6F77               	movwf	??_main& (0+255),b
   940   000FB0  51D8               	movf	(_daylight_start_min+1)& (0+255),w,b
   941   000FB2  59D4               	subwfb	(_daylight_end_min+1)& (0+255),w,b
   942   000FB4  6F78               	movwf	(??_main+1)& (0+255),b
   943   000FB6  0E3C               	movlw	60
   944   000FB8  2577               	addwf	??_main& (0+255),w,b
   945   000FBA  6FDB               	movwf	_current_day_min& (0+255),b
   946   000FBC  0E00               	movlw	0
   947   000FBE  2178               	addwfc	(??_main+1)& (0+255),w,b
   948   000FC0  6FDC               	movwf	(_current_day_min+1)& (0+255),b
   949                           
   950                           ;../main.c: 75:                     current_day_hour = daylight_end_hour - daylight_star
      +                          t_hour - 1;
   951   000FC2  51D9               	movf	_daylight_start_hour& (0+255),w,b
   952   000FC4  5DD5               	subwf	_daylight_end_hour& (0+255),w,b
   953   000FC6  6F77               	movwf	??_main& (0+255),b
   954   000FC8  51DA               	movf	(_daylight_start_hour+1)& (0+255),w,b
   955   000FCA  59D6               	subwfb	(_daylight_end_hour+1)& (0+255),w,b
   956   000FCC  6F78               	movwf	(??_main+1)& (0+255),b
   957   000FCE  0EFF               	movlw	255
   958   000FD0  2577               	addwf	??_main& (0+255),w,b
   959   000FD2  6FDD               	movwf	_current_day_hour& (0+255),b
   960   000FD4  0EFF               	movlw	255
   961   000FD6  2178               	addwfc	(??_main+1)& (0+255),w,b
   962   000FD8  6FDE               	movwf	(_current_day_hour+1)& (0+255),b
   963   000FDA                     l2616:
   964                           
   965                           ; BSR set to: 0
   966                           ;../main.c: 78:                 calculated_solar_noon_hour = (daylight_start_hour*60 + d
      +                          aylight_start_min + current_day_hour*60 + current_day_min)/60;
   967   000FDA  C0D9  F001         	movff	_daylight_start_hour,___wmul@multiplier
   968   000FDE  C0DA  F002         	movff	_daylight_start_hour+1,___wmul@multiplier+1
   969   000FE2  0E00               	movlw	0
   970   000FE4  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   971   000FE6  0E3C               	movlw	60
   972   000FE8  6E03               	movwf	___wmul@multiplicand^0,c
   973   000FEA  EC20  F013         	call	___wmul	;wreg free
   974   000FEE  C001  F077         	movff	?___wmul,??_main
   975   000FF2  C002  F078         	movff	?___wmul+1,??_main+1
   976   000FF6  C0DD  F001         	movff	_current_day_hour,___wmul@multiplier
   977   000FFA  C0DE  F002         	movff	_current_day_hour+1,___wmul@multiplier+1
   978   000FFE  0E00               	movlw	0
   979   001000  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   980   001002  0E3C               	movlw	60
   981   001004  6E03               	movwf	___wmul@multiplicand^0,c
   982   001006  EC20  F013         	call	___wmul	;wreg free
   983   00100A  5001               	movf	?___wmul^0,w,c
   984   00100C  0100               	movlb	0	; () banked
   985   00100E  2577               	addwf	??_main& (0+255),w,b
   986   001010  6F79               	movwf	(??_main+2)& (0+255),b
   987   001012  5002               	movf	(?___wmul+1)^0,w,c
   988   001014  2178               	addwfc	(??_main+1)& (0+255),w,b
   989   001016  6F7A               	movwf	(??_main+3)& (0+255),b
   990   001018  51D7               	movf	_daylight_start_min& (0+255),w,b
   991   00101A  2779               	addwf	(??_main+2)& (0+255),f,b
   992   00101C  51D8               	movf	(_daylight_start_min+1)& (0+255),w,b
   993   00101E  237A               	addwfc	(??_main+3)& (0+255),f,b
   994   001020  51DB               	movf	_current_day_min& (0+255),w,b
   995   001022  2579               	addwf	(??_main+2)& (0+255),w,b
   996   001024  6E07               	movwf	___lwdiv@dividend^0,c
   997   001026  51DC               	movf	(_current_day_min+1)& (0+255),w,b
   998   001028  217A               	addwfc	(??_main+3)& (0+255),w,b
   999   00102A  6E08               	movwf	(___lwdiv@dividend+1)^0,c
  1000   00102C  0E00               	movlw	0
  1001   00102E  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  1002   001030  0E3C               	movlw	60
  1003   001032  6E09               	movwf	___lwdiv@divisor^0,c
  1004   001034  EC4D  F011         	call	___lwdiv	;wreg free
  1005   001038  C007  F0D1         	movff	?___lwdiv,_calculated_solar_noon_hour
  1006   00103C  C008  F0D2         	movff	?___lwdiv+1,_calculated_solar_noon_hour+1
  1007   001040                     
  1008                           ;../main.c: 79:                 calculated_solar_noon_min = (daylight_start_hour*60 + da
      +                          ylight_start_min + current_day_hour*60 + current_day_min)%60;
  1009   001040  C0D9  F001         	movff	_daylight_start_hour,___wmul@multiplier
  1010   001044  C0DA  F002         	movff	_daylight_start_hour+1,___wmul@multiplier+1
  1011   001048  0E00               	movlw	0
  1012   00104A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1013   00104C  0E3C               	movlw	60
  1014   00104E  6E03               	movwf	___wmul@multiplicand^0,c
  1015   001050  EC20  F013         	call	___wmul	;wreg free
  1016   001054  C001  F077         	movff	?___wmul,??_main
  1017   001058  C002  F078         	movff	?___wmul+1,??_main+1
  1018   00105C  C0DD  F001         	movff	_current_day_hour,___wmul@multiplier
  1019   001060  C0DE  F002         	movff	_current_day_hour+1,___wmul@multiplier+1
  1020   001064  0E00               	movlw	0
  1021   001066  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1022   001068  0E3C               	movlw	60
  1023   00106A  6E03               	movwf	___wmul@multiplicand^0,c
  1024   00106C  EC20  F013         	call	___wmul	;wreg free
  1025   001070  5001               	movf	?___wmul^0,w,c
  1026   001072  0100               	movlb	0	; () banked
  1027   001074  2577               	addwf	??_main& (0+255),w,b
  1028   001076  6F79               	movwf	(??_main+2)& (0+255),b
  1029   001078  5002               	movf	(?___wmul+1)^0,w,c
  1030   00107A  2178               	addwfc	(??_main+1)& (0+255),w,b
  1031   00107C  6F7A               	movwf	(??_main+3)& (0+255),b
  1032   00107E  51D7               	movf	_daylight_start_min& (0+255),w,b
  1033   001080  2779               	addwf	(??_main+2)& (0+255),f,b
  1034   001082  51D8               	movf	(_daylight_start_min+1)& (0+255),w,b
  1035   001084  237A               	addwfc	(??_main+3)& (0+255),f,b
  1036   001086  51DB               	movf	_current_day_min& (0+255),w,b
  1037   001088  2579               	addwf	(??_main+2)& (0+255),w,b
  1038   00108A  6E07               	movwf	___lwmod@dividend^0,c
  1039   00108C  51DC               	movf	(_current_day_min+1)& (0+255),w,b
  1040   00108E  217A               	addwfc	(??_main+3)& (0+255),w,b
  1041   001090  6E08               	movwf	(___lwmod@dividend+1)^0,c
  1042   001092  0E00               	movlw	0
  1043   001094  6E0A               	movwf	(___lwmod@divisor+1)^0,c
  1044   001096  0E3C               	movlw	60
  1045   001098  6E09               	movwf	___lwmod@divisor^0,c
  1046   00109A  ECBB  F011         	call	___lwmod	;wreg free
  1047   00109E  C007  F0CF         	movff	?___lwmod,_calculated_solar_noon_min
  1048   0010A2  C008  F0D0         	movff	?___lwmod+1,_calculated_solar_noon_min+1
  1049   0010A6                     l209:
  1050                           
  1051                           ;../main.c: 85:         if (hour >= 1 && hour < 5){
  1052   0010A6  0100               	movlb	0	; () banked
  1053   0010A8  51E1               	movf	_hour& (0+255),w,b
  1054   0010AA  11E2               	iorwf	(_hour+1)& (0+255),w,b
  1055   0010AC  B4D8               	btfsc	status,2,c
  1056   0010AE  EF5B  F008         	goto	u2511
  1057   0010B2  EF5D  F008         	goto	u2510
  1058   0010B6                     u2511:
  1059   0010B6  EF6D  F008         	goto	l2626
  1060   0010BA                     u2510:
  1061   0010BA                     
  1062                           ; BSR set to: 0
  1063   0010BA  51E2               	movf	(_hour+1)& (0+255),w,b
  1064   0010BC  E107               	bnz	u2521
  1065   0010BE  0E05               	movlw	5
  1066   0010C0  5DE1               	subwf	_hour& (0+255),w,b
  1067   0010C2  B0D8               	btfsc	status,0,c
  1068   0010C4  EF66  F008         	goto	u2521
  1069   0010C8  EF68  F008         	goto	u2520
  1070   0010CC                     u2521:
  1071   0010CC  EF6D  F008         	goto	l2626
  1072   0010D0                     u2520:
  1073   0010D0                     
  1074                           ; BSR set to: 0
  1075                           ;../main.c: 86:             LATHbits.LATH3=0;
  1076   0010D0  9680               	bcf	128,3,c	;volatile
  1077   0010D2                     
  1078                           ; BSR set to: 0
  1079                           ;../main.c: 87:             OneAmToFiveAmFlag = 1;}
  1080   0010D2  0E00               	movlw	0
  1081   0010D4  6FC2               	movwf	(main@OneAmToFiveAmFlag+1)& (0+255),b
  1082   0010D6  0E01               	movlw	1
  1083   0010D8  6FC1               	movwf	main@OneAmToFiveAmFlag& (0+255),b
  1084   0010DA                     l2626:
  1085                           
  1086                           ; BSR set to: 0
  1087                           ;../main.c: 88:         if (hour == 5 && OneAmToFiveAmFlag == 1 && CM1CON0bits.OUT == 1)
      +                          {
  1088   0010DA  0E05               	movlw	5
  1089   0010DC  19E1               	xorwf	_hour& (0+255),w,b
  1090   0010DE  11E2               	iorwf	(_hour+1)& (0+255),w,b
  1091   0010E0  A4D8               	btfss	status,2,c
  1092   0010E2  EF75  F008         	goto	u2531
  1093   0010E6  EF77  F008         	goto	u2530
  1094   0010EA                     u2531:
  1095   0010EA  EF8E  F008         	goto	l2636
  1096   0010EE                     u2530:
  1097   0010EE                     
  1098                           ; BSR set to: 0
  1099   0010EE  05C1               	decf	main@OneAmToFiveAmFlag& (0+255),w,b
  1100   0010F0  11C2               	iorwf	(main@OneAmToFiveAmFlag+1)& (0+255),w,b
  1101   0010F2  A4D8               	btfss	status,2,c
  1102   0010F4  EF7E  F008         	goto	u2541
  1103   0010F8  EF80  F008         	goto	u2540
  1104   0010FC                     u2541:
  1105   0010FC  EF8E  F008         	goto	l2636
  1106   001100                     u2540:
  1107   001100                     
  1108                           ; BSR set to: 0
  1109   001100  010E               	movlb	14	; () banked
  1110   001102  ADD0               	btfss	208,6,b	;volatile
  1111   001104  EF86  F008         	goto	u2551
  1112   001108  EF88  F008         	goto	u2550
  1113   00110C                     u2551:
  1114   00110C  EF8E  F008         	goto	l2636
  1115   001110                     u2550:
  1116   001110                     
  1117                           ; BSR set to: 14
  1118                           ;../main.c: 89:                 LATHbits.LATH3=1;
  1119   001110  8680               	bsf	128,3,c	;volatile
  1120   001112                     
  1121                           ; BSR set to: 14
  1122                           ;../main.c: 90:                 OneAmToFiveAmFlag = 0;}
  1123   001112  0E00               	movlw	0
  1124   001114  0100               	movlb	0	; () banked
  1125   001116  6FC2               	movwf	(main@OneAmToFiveAmFlag+1)& (0+255),b
  1126   001118  0E00               	movlw	0
  1127   00111A  6FC1               	movwf	main@OneAmToFiveAmFlag& (0+255),b
  1128   00111C                     l2636:
  1129                           
  1130                           ;../main.c: 92:         LEDarray_disp_bin(hour);
  1131   00111C  C0E1  F001         	movff	_hour,LEDarray_disp_bin@number
  1132   001120  C0E2  F002         	movff	_hour+1,LEDarray_disp_bin@number+1
  1133   001124  EC49  F010         	call	_LEDarray_disp_bin	;wreg free
  1134   001128                     
  1135                           ;../main.c: 96:         if (day == 0 && month == 3 && hour == 1 && minute == 0 && month_
      +                          day >=25 && month_day <= 31) {hour++;}
  1136   001128  0100               	movlb	0	; () banked
  1137   00112A  51C7               	movf	main@day& (0+255),w,b
  1138   00112C  11C8               	iorwf	(main@day+1)& (0+255),w,b
  1139   00112E  A4D8               	btfss	status,2,c
  1140   001130  EF9C  F008         	goto	u2561
  1141   001134  EF9E  F008         	goto	u2560
  1142   001138                     u2561:
  1143   001138  EFD2  F008         	goto	l2652
  1144   00113C                     u2560:
  1145   00113C                     
  1146                           ; BSR set to: 0
  1147   00113C  0E03               	movlw	3
  1148   00113E  19C9               	xorwf	main@month& (0+255),w,b
  1149   001140  11CA               	iorwf	(main@month+1)& (0+255),w,b
  1150   001142  A4D8               	btfss	status,2,c
  1151   001144  EFA6  F008         	goto	u2571
  1152   001148  EFA8  F008         	goto	u2570
  1153   00114C                     u2571:
  1154   00114C  EFD2  F008         	goto	l2652
  1155   001150                     u2570:
  1156   001150                     
  1157                           ; BSR set to: 0
  1158   001150  05E1               	decf	_hour& (0+255),w,b
  1159   001152  11E2               	iorwf	(_hour+1)& (0+255),w,b
  1160   001154  A4D8               	btfss	status,2,c
  1161   001156  EFAF  F008         	goto	u2581
  1162   00115A  EFB1  F008         	goto	u2580
  1163   00115E                     u2581:
  1164   00115E  EFD2  F008         	goto	l2652
  1165   001162                     u2580:
  1166   001162                     
  1167                           ; BSR set to: 0
  1168   001162  51DF               	movf	_minute& (0+255),w,b
  1169   001164  11E0               	iorwf	(_minute+1)& (0+255),w,b
  1170   001166  A4D8               	btfss	status,2,c
  1171   001168  EFB8  F008         	goto	u2591
  1172   00116C  EFBA  F008         	goto	u2590
  1173   001170                     u2591:
  1174   001170  EFD2  F008         	goto	l2652
  1175   001174                     u2590:
  1176   001174                     
  1177                           ; BSR set to: 0
  1178   001174  51CC               	movf	(main@month_day+1)& (0+255),w,b
  1179   001176  E109               	bnz	u2600
  1180   001178  0E19               	movlw	25
  1181   00117A  5DCB               	subwf	main@month_day& (0+255),w,b
  1182   00117C  A0D8               	btfss	status,0,c
  1183   00117E  EFC3  F008         	goto	u2601
  1184   001182  EFC5  F008         	goto	u2600
  1185   001186                     u2601:
  1186   001186  EFD2  F008         	goto	l2652
  1187   00118A                     u2600:
  1188   00118A                     
  1189                           ; BSR set to: 0
  1190   00118A  51CC               	movf	(main@month_day+1)& (0+255),w,b
  1191   00118C  E107               	bnz	u2611
  1192   00118E  0E20               	movlw	32
  1193   001190  5DCB               	subwf	main@month_day& (0+255),w,b
  1194   001192  B0D8               	btfsc	status,0,c
  1195   001194  EFCE  F008         	goto	u2611
  1196   001198  EFD0  F008         	goto	u2610
  1197   00119C                     u2611:
  1198   00119C  EFD2  F008         	goto	l2652
  1199   0011A0                     u2610:
  1200   0011A0                     
  1201                           ; BSR set to: 0
  1202   0011A0  4BE1               	infsnz	_hour& (0+255),f,b
  1203   0011A2  2BE2               	incf	(_hour+1)& (0+255),f,b
  1204   0011A4                     l2652:
  1205                           
  1206                           ; BSR set to: 0
  1207                           ;../main.c: 98:         if (day == 0 && month == 10 && hour == 2 && minute == 0 && month
      +                          _day >=25 && month_day <= 31 && changed == 0) {
  1208   0011A4  51C7               	movf	main@day& (0+255),w,b
  1209   0011A6  11C8               	iorwf	(main@day+1)& (0+255),w,b
  1210   0011A8  A4D8               	btfss	status,2,c
  1211   0011AA  EFD9  F008         	goto	u2621
  1212   0011AE  EFDB  F008         	goto	u2620
  1213   0011B2                     u2621:
  1214   0011B2  EF20  F009         	goto	l2670
  1215   0011B6                     u2620:
  1216   0011B6                     
  1217                           ; BSR set to: 0
  1218   0011B6  0E0A               	movlw	10
  1219   0011B8  19C9               	xorwf	main@month& (0+255),w,b
  1220   0011BA  11CA               	iorwf	(main@month+1)& (0+255),w,b
  1221   0011BC  A4D8               	btfss	status,2,c
  1222   0011BE  EFE3  F008         	goto	u2631
  1223   0011C2  EFE5  F008         	goto	u2630
  1224   0011C6                     u2631:
  1225   0011C6  EF20  F009         	goto	l2670
  1226   0011CA                     u2630:
  1227   0011CA                     
  1228                           ; BSR set to: 0
  1229   0011CA  0E02               	movlw	2
  1230   0011CC  19E1               	xorwf	_hour& (0+255),w,b
  1231   0011CE  11E2               	iorwf	(_hour+1)& (0+255),w,b
  1232   0011D0  A4D8               	btfss	status,2,c
  1233   0011D2  EFED  F008         	goto	u2641
  1234   0011D6  EFEF  F008         	goto	u2640
  1235   0011DA                     u2641:
  1236   0011DA  EF20  F009         	goto	l2670
  1237   0011DE                     u2640:
  1238   0011DE                     
  1239                           ; BSR set to: 0
  1240   0011DE  51DF               	movf	_minute& (0+255),w,b
  1241   0011E0  11E0               	iorwf	(_minute+1)& (0+255),w,b
  1242   0011E2  A4D8               	btfss	status,2,c
  1243   0011E4  EFF6  F008         	goto	u2651
  1244   0011E8  EFF8  F008         	goto	u2650
  1245   0011EC                     u2651:
  1246   0011EC  EF20  F009         	goto	l2670
  1247   0011F0                     u2650:
  1248   0011F0                     
  1249                           ; BSR set to: 0
  1250   0011F0  51CC               	movf	(main@month_day+1)& (0+255),w,b
  1251   0011F2  E109               	bnz	u2660
  1252   0011F4  0E19               	movlw	25
  1253   0011F6  5DCB               	subwf	main@month_day& (0+255),w,b
  1254   0011F8  A0D8               	btfss	status,0,c
  1255   0011FA  EF01  F009         	goto	u2661
  1256   0011FE  EF03  F009         	goto	u2660
  1257   001202                     u2661:
  1258   001202  EF20  F009         	goto	l2670
  1259   001206                     u2660:
  1260   001206                     
  1261                           ; BSR set to: 0
  1262   001206  51CC               	movf	(main@month_day+1)& (0+255),w,b
  1263   001208  E107               	bnz	u2671
  1264   00120A  0E20               	movlw	32
  1265   00120C  5DCB               	subwf	main@month_day& (0+255),w,b
  1266   00120E  B0D8               	btfsc	status,0,c
  1267   001210  EF0C  F009         	goto	u2671
  1268   001214  EF0E  F009         	goto	u2670
  1269   001218                     u2671:
  1270   001218  EF20  F009         	goto	l2670
  1271   00121C                     u2670:
  1272   00121C                     
  1273                           ; BSR set to: 0
  1274   00121C  51C3               	movf	main@changed& (0+255),w,b
  1275   00121E  11C4               	iorwf	(main@changed+1)& (0+255),w,b
  1276   001220  A4D8               	btfss	status,2,c
  1277   001222  EF15  F009         	goto	u2681
  1278   001226  EF17  F009         	goto	u2680
  1279   00122A                     u2681:
  1280   00122A  EF20  F009         	goto	l2670
  1281   00122E                     u2680:
  1282   00122E                     
  1283                           ; BSR set to: 0
  1284                           ;../main.c: 99:             hour--;
  1285   00122E  07E1               	decf	_hour& (0+255),f,b
  1286   001230  A0D8               	btfss	status,0,c
  1287   001232  07E2               	decf	(_hour+1)& (0+255),f,b
  1288   001234                     
  1289                           ; BSR set to: 0
  1290                           ;../main.c: 100:             changed = 1;
  1291   001234  0E00               	movlw	0
  1292   001236  6FC4               	movwf	(main@changed+1)& (0+255),b
  1293   001238  0E01               	movlw	1
  1294   00123A  6FC3               	movwf	main@changed& (0+255),b
  1295                           
  1296                           ;../main.c: 101:         }
  1297   00123C  EF3D  F007         	goto	l2576
  1298   001240                     l2670:
  1299                           
  1300                           ; BSR set to: 0
  1301   001240  51C7               	movf	main@day& (0+255),w,b
  1302   001242  11C8               	iorwf	(main@day+1)& (0+255),w,b
  1303   001244  A4D8               	btfss	status,2,c
  1304   001246  EF27  F009         	goto	u2691
  1305   00124A  EF29  F009         	goto	u2690
  1306   00124E                     u2691:
  1307   00124E  EF3D  F007         	goto	l2576
  1308   001252                     u2690:
  1309   001252                     
  1310                           ; BSR set to: 0
  1311   001252  0E0A               	movlw	10
  1312   001254  19C9               	xorwf	main@month& (0+255),w,b
  1313   001256  11CA               	iorwf	(main@month+1)& (0+255),w,b
  1314   001258  A4D8               	btfss	status,2,c
  1315   00125A  EF31  F009         	goto	u2701
  1316   00125E  EF33  F009         	goto	u2700
  1317   001262                     u2701:
  1318   001262  EF3D  F007         	goto	l2576
  1319   001266                     u2700:
  1320   001266                     
  1321                           ; BSR set to: 0
  1322   001266  0E02               	movlw	2
  1323   001268  19E1               	xorwf	_hour& (0+255),w,b
  1324   00126A  11E2               	iorwf	(_hour+1)& (0+255),w,b
  1325   00126C  A4D8               	btfss	status,2,c
  1326   00126E  EF3B  F009         	goto	u2711
  1327   001272  EF3D  F009         	goto	u2710
  1328   001276                     u2711:
  1329   001276  EF3D  F007         	goto	l2576
  1330   00127A                     u2710:
  1331   00127A                     
  1332                           ; BSR set to: 0
  1333   00127A  51DF               	movf	_minute& (0+255),w,b
  1334   00127C  11E0               	iorwf	(_minute+1)& (0+255),w,b
  1335   00127E  A4D8               	btfss	status,2,c
  1336   001280  EF44  F009         	goto	u2721
  1337   001284  EF46  F009         	goto	u2720
  1338   001288                     u2721:
  1339   001288  EF3D  F007         	goto	l2576
  1340   00128C                     u2720:
  1341   00128C                     
  1342                           ; BSR set to: 0
  1343   00128C  51CC               	movf	(main@month_day+1)& (0+255),w,b
  1344   00128E  E109               	bnz	u2730
  1345   001290  0E19               	movlw	25
  1346   001292  5DCB               	subwf	main@month_day& (0+255),w,b
  1347   001294  A0D8               	btfss	status,0,c
  1348   001296  EF4F  F009         	goto	u2731
  1349   00129A  EF51  F009         	goto	u2730
  1350   00129E                     u2731:
  1351   00129E  EF3D  F007         	goto	l2576
  1352   0012A2                     u2730:
  1353   0012A2                     
  1354                           ; BSR set to: 0
  1355   0012A2  51CC               	movf	(main@month_day+1)& (0+255),w,b
  1356   0012A4  E107               	bnz	u2741
  1357   0012A6  0E20               	movlw	32
  1358   0012A8  5DCB               	subwf	main@month_day& (0+255),w,b
  1359   0012AA  B0D8               	btfsc	status,0,c
  1360   0012AC  EF5A  F009         	goto	u2741
  1361   0012B0  EF5C  F009         	goto	u2740
  1362   0012B4                     u2741:
  1363   0012B4  EF3D  F007         	goto	l2576
  1364   0012B8                     u2740:
  1365   0012B8                     
  1366                           ; BSR set to: 0
  1367   0012B8  05C3               	decf	main@changed& (0+255),w,b
  1368   0012BA  11C4               	iorwf	(main@changed+1)& (0+255),w,b
  1369   0012BC  A4D8               	btfss	status,2,c
  1370   0012BE  EF63  F009         	goto	u2751
  1371   0012C2  EF65  F009         	goto	u2750
  1372   0012C6                     u2751:
  1373   0012C6  EF3D  F007         	goto	l2576
  1374   0012CA                     u2750:
  1375   0012CA                     
  1376                           ; BSR set to: 0
  1377   0012CA  0E00               	movlw	0
  1378   0012CC  6FC4               	movwf	(main@changed+1)& (0+255),b
  1379   0012CE  0E00               	movlw	0
  1380   0012D0  6FC3               	movwf	main@changed& (0+255),b
  1381   0012D2  EF3D  F007         	goto	l2576
  1382   0012D6  EF64  F000         	goto	start
  1383   0012DA                     __end_of_main:
  1384                           	callstack 0
  1385                           
  1386 ;; *************** function _sprintf *****************
  1387 ;; Defined at:
  1388 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1389 ;; Parameters:    Size  Location     Type
  1390 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1391 ;;		 -> main@yearstr(20), main@datestr(50), 
  1392 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1393 ;;		 -> STR_4(12), STR_3(18), STR_2(8), STR_1(8), 
  1394 ;; Auto vars:     Size  Location     Type
  1395 ;;  f              11   12[BANK0 ] struct _IO_FILE
  1396 ;;  ap              2   10[BANK0 ] PTR void [1]
  1397 ;;		 -> ?_sprintf(2), 
  1398 ;;  ret             2    0        int 
  1399 ;; Return value:  Size  Location     Type
  1400 ;;                  2    0[BANK0 ] int 
  1401 ;; Registers used:
  1402 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1403 ;; Tracked objects:
  1404 ;;		On entry : 0/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1408 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1409 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1411 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1412 ;;Total ram usage:       23 bytes
  1413 ;; Hardware stack levels used: 1
  1414 ;; Hardware stack levels required when called: 8
  1415 ;; This function calls:
  1416 ;;		_vfprintf
  1417 ;; This function is called by:
  1418 ;;		_main
  1419 ;;		_ADC2String
  1420 ;;		_LDR2String
  1421 ;; This function uses a non-reentrant model
  1422 ;;
  1423                           
  1424                           	psect	text1
  1425   0023DA                     __ptext1:
  1426                           	callstack 0
  1427   0023DA                     _sprintf:
  1428                           	callstack 22
  1429   0023DA  0E64               	movlw	low (?_sprintf+4)
  1430   0023DC  0100               	movlb	0	; () banked
  1431   0023DE  6F6A               	movwf	sprintf@ap& (0+255),b
  1432   0023E0  0E00               	movlw	high (?_sprintf+4)
  1433   0023E2  6F6B               	movwf	(sprintf@ap+1)& (0+255),b
  1434   0023E4  C060  F06C         	movff	sprintf@s,sprintf@f
  1435   0023E8  C061  F06D         	movff	sprintf@s+1,sprintf@f+1
  1436   0023EC                     
  1437                           ; BSR set to: 0
  1438   0023EC  0E00               	movlw	0
  1439   0023EE  6F70               	movwf	(sprintf@f+4)& (0+255),b
  1440   0023F0  0E00               	movlw	0
  1441   0023F2  6F6F               	movwf	(sprintf@f+3)& (0+255),b
  1442   0023F4                     
  1443                           ; BSR set to: 0
  1444   0023F4  0E00               	movlw	0
  1445   0023F6  6F76               	movwf	(sprintf@f+10)& (0+255),b
  1446   0023F8  0E00               	movlw	0
  1447   0023FA  6F75               	movwf	(sprintf@f+9)& (0+255),b
  1448   0023FC                     
  1449                           ; BSR set to: 0
  1450   0023FC  0E6C               	movlw	low sprintf@f
  1451   0023FE  6E54               	movwf	vfprintf@fp^0,c
  1452   002400  0E00               	movlw	high sprintf@f
  1453   002402  6E55               	movwf	(vfprintf@fp+1)^0,c
  1454   002404  C062  F056         	movff	sprintf@fmt,vfprintf@fmt
  1455   002408  C063  F057         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1456   00240C  0E6A               	movlw	low sprintf@ap
  1457   00240E  6E58               	movwf	vfprintf@ap^0,c
  1458   002410  0E00               	movlw	high sprintf@ap
  1459   002412  6E59               	movwf	(vfprintf@ap+1)^0,c
  1460   002414  EC16  F012         	call	_vfprintf	;wreg free
  1461   002418  0100               	movlb	0	; () banked
  1462   00241A  516F               	movf	(sprintf@f+3)& (0+255),w,b
  1463   00241C  2560               	addwf	sprintf@s& (0+255),w,b
  1464   00241E  6ED9               	movwf	fsr2l,c
  1465   002420  5170               	movf	(sprintf@f+4)& (0+255),w,b
  1466   002422  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  1467   002424  6EDA               	movwf	fsr2h,c
  1468   002426  0E00               	movlw	0
  1469   002428  6EDF               	movwf	indf2,c
  1470   00242A                     
  1471                           ; BSR set to: 0
  1472   00242A  0012               	return		;funcret
  1473   00242C                     __end_of_sprintf:
  1474                           	callstack 0
  1475                           
  1476 ;; *************** function _vfprintf *****************
  1477 ;; Defined at:
  1478 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;  fp              2   83[COMRAM] PTR struct _IO_FILE
  1481 ;;		 -> sprintf@f(11), 
  1482 ;;  fmt             2   85[COMRAM] PTR const unsigned char 
  1483 ;;		 -> STR_4(12), STR_3(18), STR_2(8), STR_1(8), 
  1484 ;;  ap              2   87[COMRAM] PTR PTR void 
  1485 ;;		 -> sprintf@ap(2), 
  1486 ;; Auto vars:     Size  Location     Type
  1487 ;;  cfmt            2   89[COMRAM] PTR unsigned char 
  1488 ;;		 -> STR_4(12), STR_3(18), STR_2(8), STR_1(8), 
  1489 ;; Return value:  Size  Location     Type
  1490 ;;                  2   83[COMRAM] int 
  1491 ;; Registers used:
  1492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1493 ;; Tracked objects:
  1494 ;;		On entry : 0/0
  1495 ;;		On exit  : 0/0
  1496 ;;		Unchanged: 0/0
  1497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1498 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1499 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1501 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1502 ;;Total ram usage:        8 bytes
  1503 ;; Hardware stack levels used: 1
  1504 ;; Hardware stack levels required when called: 7
  1505 ;; This function calls:
  1506 ;;		_vfpfcnvrt
  1507 ;; This function is called by:
  1508 ;;		_sprintf
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512                           	psect	text2
  1513   00242C                     __ptext2:
  1514                           	callstack 0
  1515   00242C                     _vfprintf:
  1516                           	callstack 22
  1517   00242C                     
  1518                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1519   00242C  C056  F05A         	movff	vfprintf@fmt,vfprintf@cfmt
  1520   002430  C057  F05B         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1521                           
  1522                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1523   002434  EF2A  F012         	goto	l2314
  1524   002438                     l2312:
  1525                           
  1526                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1527   002438  C054  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  1528   00243C  C055  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1529   002440  0E5A               	movlw	low vfprintf@cfmt
  1530   002442  6E41               	movwf	vfpfcnvrt@fmt^0,c
  1531   002444  0E00               	movlw	high vfprintf@cfmt
  1532   002446  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1533   002448  C058  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  1534   00244C  C059  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1535   002450  EC08  F00B         	call	_vfpfcnvrt	;wreg free
  1536   002454                     l2314:
  1537                           
  1538                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1539   002454  C05A  FFF6         	movff	vfprintf@cfmt,tblptrl
  1540   002458  C05B  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1541   00245C                     	if	0	;tblptru may be non-zero
  1542   00245C                     	endif
  1543   00245C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1544   00245C  0E00               	movlw	low (__mediumconst shr (0+16))
  1545   00245E  6EF8               	movwf	tblptru,c
  1546   002460                     	endif
  1547   002460  0008               	tblrd		*
  1548   002462  50F5               	movf	tablat,w,c
  1549   002464  0900               	iorlw	0
  1550   002466  A4D8               	btfss	status,2,c
  1551   002468  EF38  F012         	goto	u1981
  1552   00246C  EF3A  F012         	goto	u1980
  1553   002470                     u1981:
  1554   002470  EF1C  F012         	goto	l2312
  1555   002474                     u1980:
  1556   002474                     
  1557                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1558   002474  0E00               	movlw	0
  1559   002476  6E55               	movwf	(?_vfprintf+1)^0,c
  1560   002478  0E00               	movlw	0
  1561   00247A  6E54               	movwf	?_vfprintf^0,c
  1562   00247C  0012               	return		;funcret
  1563   00247E                     __end_of_vfprintf:
  1564                           	callstack 0
  1565                           
  1566 ;; *************** function _vfpfcnvrt *****************
  1567 ;; Defined at:
  1568 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  1571 ;;		 -> sprintf@f(11), 
  1572 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  1573 ;;		 -> vfprintf@cfmt(2), 
  1574 ;;  ap              2   66[COMRAM] PTR PTR void 
  1575 ;;		 -> sprintf@ap(2), 
  1576 ;; Auto vars:     Size  Location     Type
  1577 ;;  convarg         8   71[COMRAM] struct .
  1578 ;;  cp              2   81[COMRAM] PTR unsigned char 
  1579 ;;		 -> STR_4(12), STR_3(18), STR_2(8), STR_1(8), 
  1580 ;;  done            2   79[COMRAM] int 
  1581 ;;  i               2    0        int 
  1582 ;;  c               1    0        unsigned char 
  1583 ;; Return value:  Size  Location     Type
  1584 ;;                  1    wreg      void 
  1585 ;; Registers used:
  1586 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1592 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1593 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1594 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1595 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1596 ;;Total ram usage:       21 bytes
  1597 ;; Hardware stack levels used: 1
  1598 ;; Hardware stack levels required when called: 6
  1599 ;; This function calls:
  1600 ;;		_atoi
  1601 ;;		_dtoa
  1602 ;;		_fputc
  1603 ;;		_isdigit
  1604 ;; This function is called by:
  1605 ;;		_vfprintf
  1606 ;; This function uses a non-reentrant model
  1607 ;;
  1608                           
  1609                           	psect	text3
  1610   001610                     __ptext3:
  1611                           	callstack 0
  1612   001610                     _vfpfcnvrt:
  1613                           	callstack 22
  1614   001610                     
  1615                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1616   001610  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1617   001614  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1618   001618  CFDE FFF6          	movff	postinc2,tblptrl
  1619   00161C  CFDD FFF7          	movff	postdec2,tblptrh
  1620   001620                     	if	0	;tblptru may be non-zero
  1621   001620                     	endif
  1622   001620                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1623   001620  0E00               	movlw	low (__mediumconst shr (0+16))
  1624   001622  6EF8               	movwf	tblptru,c
  1625   001624                     	endif
  1626   001624  0008               	tblrd		*
  1627   001626  50F5               	movf	tablat,w,c
  1628   001628  0A25               	xorlw	37
  1629   00162A  A4D8               	btfss	status,2,c
  1630   00162C  EF1A  F00B         	goto	u1871
  1631   001630  EF1C  F00B         	goto	u1870
  1632   001634                     u1871:
  1633   001634  EF4E  F00C         	goto	l2270
  1634   001638                     u1870:
  1635   001638                     
  1636                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1637   001638  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1638   00163C  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1639   001640  2ADE               	incf	postinc2,f,c
  1640   001642  0E00               	movlw	0
  1641   001644  22DD               	addwfc	postdec2,f,c
  1642   001646                     
  1643                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1644   001646  0E00               	movlw	0
  1645   001648  0100               	movlb	0	; () banked
  1646   00164A  6FCE               	movwf	(_width+1)& (0+255),b
  1647   00164C  0E00               	movlw	0
  1648   00164E  6FCD               	movwf	_width& (0+255),b
  1649   001650  C0CD  F05E         	movff	_width,_flags
  1650   001654                     
  1651                           ; BSR set to: 0
  1652                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1653   001654  685C               	setf	_prec^0,c
  1654   001656  685D               	setf	(_prec+1)^0,c
  1655   001658                     
  1656                           ; BSR set to: 0
  1657                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  1658   001658  0E00               	movlw	0
  1659   00165A  6E51               	movwf	(vfpfcnvrt@done+1)^0,c
  1660   00165C  0E00               	movlw	0
  1661   00165E  6E50               	movwf	vfpfcnvrt@done^0,c
  1662                           
  1663                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  1664   001660  EF5E  F00B         	goto	l2236
  1665   001664                     l2226:
  1666                           
  1667                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  1668   001664  825E               	bsf	_flags^0,1,c
  1669   001666                     
  1670                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  1671   001666  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1672   00166A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1673   00166E  2ADE               	incf	postinc2,f,c
  1674   001670  0E00               	movlw	0
  1675   001672  22DD               	addwfc	postdec2,f,c
  1676                           
  1677                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  1678   001674  EF5E  F00B         	goto	l2236
  1679   001678                     l2230:
  1680                           
  1681                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  1682   001678  0E00               	movlw	0
  1683   00167A  6E51               	movwf	(vfpfcnvrt@done+1)^0,c
  1684   00167C  0E01               	movlw	1
  1685   00167E  6E50               	movwf	vfpfcnvrt@done^0,c
  1686                           
  1687                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  1688   001680  EF5E  F00B         	goto	l2236
  1689   001684                     l2234:
  1690   001684  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1691   001688  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1692   00168C  CFDE FFF6          	movff	postinc2,tblptrl
  1693   001690  CFDD FFF7          	movff	postdec2,tblptrh
  1694   001694                     	if	0	;tblptru may be non-zero
  1695   001694                     	endif
  1696   001694                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1697   001694  0E00               	movlw	low (__mediumconst shr (0+16))
  1698   001696  6EF8               	movwf	tblptru,c
  1699   001698                     	endif
  1700   001698  0008               	tblrd		*
  1701   00169A  50F5               	movf	tablat,w,c
  1702   00169C  6E45               	movwf	??_vfpfcnvrt^0,c
  1703   00169E  6A46               	clrf	(??_vfpfcnvrt+1)^0,c
  1704                           
  1705                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1706                           ; Switch size 1, requested type "simple"
  1707                           ; Number of cases is 1, Range of values is 0 to 0
  1708                           ; switch strategies available:
  1709                           ; Name         Instructions Cycles
  1710                           ; simple_byte            4     3 (average)
  1711                           ;	Chosen strategy is simple_byte
  1712   0016A0  5046               	movf	(??_vfpfcnvrt+1)^0,w,c
  1713   0016A2  0A00               	xorlw	0	; case 0
  1714   0016A4  B4D8               	btfsc	status,2,c
  1715   0016A6  EF57  F00B         	goto	l2736
  1716   0016AA  EF3C  F00B         	goto	l2230
  1717   0016AE                     l2736:
  1718                           
  1719                           ; Switch size 1, requested type "simple"
  1720                           ; Number of cases is 1, Range of values is 48 to 48
  1721                           ; switch strategies available:
  1722                           ; Name         Instructions Cycles
  1723                           ; simple_byte            4     3 (average)
  1724                           ;	Chosen strategy is simple_byte
  1725   0016AE  5045               	movf	??_vfpfcnvrt^0,w,c
  1726   0016B0  0A30               	xorlw	48	; case 48
  1727   0016B2  B4D8               	btfsc	status,2,c
  1728   0016B4  EF32  F00B         	goto	l2226
  1729   0016B8  EF3C  F00B         	goto	l2230
  1730   0016BC                     l2236:
  1731                           
  1732                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  1733   0016BC  5050               	movf	vfpfcnvrt@done^0,w,c
  1734   0016BE  1051               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  1735   0016C0  B4D8               	btfsc	status,2,c
  1736   0016C2  EF65  F00B         	goto	u1881
  1737   0016C6  EF67  F00B         	goto	u1880
  1738   0016CA                     u1881:
  1739   0016CA  EF42  F00B         	goto	l2234
  1740   0016CE                     u1880:
  1741   0016CE                     
  1742                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1074:         if 
      +                          ((*fmt)[0] == '*') {
  1743   0016CE  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1744   0016D2  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1745   0016D6  CFDE FFF6          	movff	postinc2,tblptrl
  1746   0016DA  CFDD FFF7          	movff	postdec2,tblptrh
  1747   0016DE                     	if	0	;tblptru may be non-zero
  1748   0016DE                     	endif
  1749   0016DE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1750   0016DE  0E00               	movlw	low (__mediumconst shr (0+16))
  1751   0016E0  6EF8               	movwf	tblptru,c
  1752   0016E2                     	endif
  1753   0016E2  0008               	tblrd		*
  1754   0016E4  50F5               	movf	tablat,w,c
  1755   0016E6  0A2A               	xorlw	42
  1756   0016E8  A4D8               	btfss	status,2,c
  1757   0016EA  EF79  F00B         	goto	u1891
  1758   0016EE  EF7B  F00B         	goto	u1890
  1759   0016F2                     u1891:
  1760   0016F2  EFA5  F00B         	goto	l2246
  1761   0016F6                     u1890:
  1762   0016F6                     
  1763                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1075:            
      +                           ++*fmt;
  1764   0016F6  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1765   0016FA  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1766   0016FE  2ADE               	incf	postinc2,f,c
  1767   001700  0E00               	movlw	0
  1768   001702  22DD               	addwfc	postdec2,f,c
  1769                           
  1770                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1076:            
      +                           width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1771   001704  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1772   001708  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1773   00170C  CFDF F045          	movff	indf2,??_vfpfcnvrt
  1774   001710  0E02               	movlw	2
  1775   001712  26DE               	addwf	postinc2,f,c
  1776   001714  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  1777   001718  0E00               	movlw	0
  1778   00171A  22DD               	addwfc	postdec2,f,c
  1779   00171C  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1780   001720  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1781   001724  CFDE F0CD          	movff	postinc2,_width
  1782   001728  CFDD F0CE          	movff	postdec2,_width+1
  1783   00172C                     
  1784                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1077:            
      +                           if (width < 0) {
  1785   00172C  0100               	movlb	0	; () banked
  1786   00172E  BFCE               	btfsc	(_width+1)& (0+255),7,b
  1787   001730  EF9E  F00B         	goto	u1900
  1788   001734  EF9C  F00B         	goto	u1901
  1789   001738                     u1901:
  1790   001738  EFDA  F00B         	goto	l2254
  1791   00173C                     u1900:
  1792   00173C                     
  1793                           ; BSR set to: 0
  1794                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1078:            
      +                               flags |= (1 << 0);
  1795   00173C  805E               	bsf	_flags^0,0,c
  1796                           
  1797                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1079:            
      +                               width = -width;
  1798   00173E  6DCD               	negf	_width& (0+255),b
  1799   001740  1FCE               	comf	(_width+1)& (0+255),f,b
  1800   001742  B0D8               	btfsc	status,0,c
  1801   001744  2BCE               	incf	(_width+1)& (0+255),f,b
  1802   001746  EFDA  F00B         	goto	l2254
  1803   00174A                     l2246:
  1804                           
  1805                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1082:            
      +                           width = atoi(*fmt);
  1806   00174A  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1807   00174E  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1808   001752  CFDE F007          	movff	postinc2,atoi@s
  1809   001756  CFDD F008          	movff	postdec2,atoi@s+1
  1810   00175A  EC35  F00F         	call	_atoi	;wreg free
  1811   00175E  C007  F0CD         	movff	?_atoi,_width
  1812   001762  C008  F0CE         	movff	?_atoi+1,_width+1
  1813                           
  1814                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1083:            
      +                           while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1815   001766  EFBC  F00B         	goto	l2252
  1816   00176A                     l2248:
  1817                           
  1818                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1084:            
      +                               ++*fmt;
  1819   00176A  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1820   00176E  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1821   001772  2ADE               	incf	postinc2,f,c
  1822   001774  0E00               	movlw	0
  1823   001776  22DD               	addwfc	postdec2,f,c
  1824   001778                     l2252:
  1825   001778  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1826   00177C  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1827   001780  CFDE FFF6          	movff	postinc2,tblptrl
  1828   001784  CFDD FFF7          	movff	postdec2,tblptrh
  1829   001788                     	if	0	;tblptru may be non-zero
  1830   001788                     	endif
  1831   001788                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1832   001788  0E00               	movlw	low (__mediumconst shr (0+16))
  1833   00178A  6EF8               	movwf	tblptru,c
  1834   00178C                     	endif
  1835   00178C  0008               	tblrd		*
  1836   00178E  CFF5 F045          	movff	tablat,??_vfpfcnvrt
  1837   001792  0ED0               	movlw	208
  1838   001794  2445               	addwf	??_vfpfcnvrt^0,w,c
  1839   001796  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  1840   001798  6A47               	clrf	(??_vfpfcnvrt+2)^0,c
  1841   00179A  0EFF               	movlw	255
  1842   00179C  2247               	addwfc	(??_vfpfcnvrt+2)^0,f,c
  1843   00179E  5047               	movf	(??_vfpfcnvrt+2)^0,w,c
  1844   0017A0  E109               	bnz	u1910
  1845   0017A2  0E0A               	movlw	10
  1846   0017A4  5C46               	subwf	(??_vfpfcnvrt+1)^0,w,c
  1847   0017A6  A0D8               	btfss	status,0,c
  1848   0017A8  EFD8  F00B         	goto	u1911
  1849   0017AC  EFDA  F00B         	goto	u1910
  1850   0017B0                     u1911:
  1851   0017B0  EFB5  F00B         	goto	l2248
  1852   0017B4                     u1910:
  1853   0017B4                     l2254:
  1854                           
  1855                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1856   0017B4  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1857   0017B8  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1858   0017BC  CFDE F052          	movff	postinc2,vfpfcnvrt@cp
  1859   0017C0  CFDD F053          	movff	postdec2,vfpfcnvrt@cp+1
  1860   0017C4                     
  1861                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1862   0017C4  C052  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1863   0017C8  C053  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1864   0017CC                     	if	0	;tblptru may be non-zero
  1865   0017CC                     	endif
  1866   0017CC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1867   0017CC  0E00               	movlw	low (__mediumconst shr (0+16))
  1868   0017CE  6EF8               	movwf	tblptru,c
  1869   0017D0                     	endif
  1870   0017D0  0008               	tblrd		*
  1871   0017D2  50F5               	movf	tablat,w,c
  1872   0017D4  0A64               	xorlw	100
  1873   0017D6  B4D8               	btfsc	status,2,c
  1874   0017D8  EFF0  F00B         	goto	u1921
  1875   0017DC  EFF2  F00B         	goto	u1920
  1876   0017E0                     u1921:
  1877   0017E0  EF02  F00C         	goto	l2260
  1878   0017E4                     u1920:
  1879   0017E4  C052  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1880   0017E8  C053  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1881   0017EC                     	if	0	;tblptru may be non-zero
  1882   0017EC                     	endif
  1883   0017EC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1884   0017EC  0E00               	movlw	low (__mediumconst shr (0+16))
  1885   0017EE  6EF8               	movwf	tblptru,c
  1886   0017F0                     	endif
  1887   0017F0  0008               	tblrd		*
  1888   0017F2  50F5               	movf	tablat,w,c
  1889   0017F4  0A69               	xorlw	105
  1890   0017F6  A4D8               	btfss	status,2,c
  1891   0017F8  EF00  F00C         	goto	u1931
  1892   0017FC  EF02  F00C         	goto	u1930
  1893   001800                     u1931:
  1894   001800  EF45  F00C         	goto	l2266
  1895   001804                     u1930:
  1896   001804                     l2260:
  1897                           
  1898                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1899   001804  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1900   001808  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1901   00180C  CFDF F045          	movff	indf2,??_vfpfcnvrt
  1902   001810  0E02               	movlw	2
  1903   001812  26DE               	addwf	postinc2,f,c
  1904   001814  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  1905   001818  0E00               	movlw	0
  1906   00181A  22DD               	addwfc	postdec2,f,c
  1907   00181C  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1908   001820  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1909   001824  CFDE F048          	movff	postinc2,vfpfcnvrt@convarg
  1910   001828  CFDD F049          	movff	postdec2,vfpfcnvrt@convarg+1
  1911   00182C  0E00               	movlw	0
  1912   00182E  BE49               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1913   001830  0EFF               	movlw	-1
  1914   001832  6E4A               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1915   001834  6E4B               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1916   001836  6E4C               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1917   001838  6E4D               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1918   00183A  6E4E               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1919   00183C  6E4F               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1920                           
  1921                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1922   00183E  0E01               	movlw	1
  1923   001840  2452               	addwf	vfpfcnvrt@cp^0,w,c
  1924   001842  6E45               	movwf	??_vfpfcnvrt^0,c
  1925   001844  0E00               	movlw	0
  1926   001846  2053               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1927   001848  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  1928   00184A  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1929   00184E  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1930   001852  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  1931   001856  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1932   00185A                     
  1933                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1934   00185A  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1935   00185E  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1936   001862  C048  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  1937   001866  C049  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1938   00186A  C04A  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1939   00186E  C04B  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1940   001872  C04C  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1941   001876  C04D  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1942   00187A  C04E  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1943   00187E  C04F  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1944   001882  EC65  F00C         	call	_dtoa	;wreg free
  1945   001886  EF64  F00C         	goto	l1075
  1946   00188A                     l2266:
  1947                           
  1948                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1949   00188A  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1950   00188E  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1951   001892  2ADE               	incf	postinc2,f,c
  1952   001894  0E00               	movlw	0
  1953   001896  22DD               	addwfc	postdec2,f,c
  1954   001898  EF64  F00C         	goto	l1075
  1955   00189C                     l2270:
  1956                           
  1957                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1958   00189C  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1959   0018A0  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1960   0018A4  CFDE FFF6          	movff	postinc2,tblptrl
  1961   0018A8  CFDD FFF7          	movff	postdec2,tblptrh
  1962   0018AC                     	if	0	;tblptru may be non-zero
  1963   0018AC                     	endif
  1964   0018AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1965   0018AC  0E00               	movlw	low (__mediumconst shr (0+16))
  1966   0018AE  6EF8               	movwf	tblptru,c
  1967   0018B0                     	endif
  1968   0018B0  0008               	tblrd		*
  1969   0018B2  50F5               	movf	tablat,w,c
  1970   0018B4  6E01               	movwf	fputc@c^0,c
  1971   0018B6  6A02               	clrf	(fputc@c+1)^0,c
  1972   0018B8  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1973   0018BC  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1974   0018C0  ECE4  F00F         	call	_fputc	;wreg free
  1975   0018C4  EF45  F00C         	goto	l2266
  1976   0018C8                     l1075:
  1977   0018C8  0012               	return		;funcret
  1978   0018CA                     __end_of_vfpfcnvrt:
  1979                           	callstack 0
  1980                           
  1981 ;; *************** function _dtoa *****************
  1982 ;; Defined at:
  1983 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1984 ;; Parameters:    Size  Location     Type
  1985 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1986 ;;		 -> sprintf@f(11), 
  1987 ;;  d               8   29[COMRAM] long long 
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;  n               8   51[COMRAM] long long 
  1990 ;;  i               2   59[COMRAM] int 
  1991 ;;  w               2   49[COMRAM] int 
  1992 ;;  p               2   47[COMRAM] int 
  1993 ;;  s               1   61[COMRAM] unsigned char 
  1994 ;; Return value:  Size  Location     Type
  1995 ;;                  1    wreg      void 
  1996 ;; Registers used:
  1997 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2003 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2004 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2005 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2006 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2007 ;;Total ram usage:       35 bytes
  2008 ;; Hardware stack levels used: 1
  2009 ;; Hardware stack levels required when called: 5
  2010 ;; This function calls:
  2011 ;;		___aodiv
  2012 ;;		___aomod
  2013 ;;		_abs
  2014 ;;		_pad
  2015 ;; This function is called by:
  2016 ;;		_vfpfcnvrt
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020                           	psect	text4
  2021   0018CA                     __ptext4:
  2022                           	callstack 0
  2023   0018CA                     _dtoa:
  2024                           	callstack 22
  2025   0018CA                     
  2026                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  2027   0018CA  C01E  F034         	movff	dtoa@d,dtoa@n
  2028   0018CE  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  2029   0018D2  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  2030   0018D6  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  2031   0018DA  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  2032   0018DE  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  2033   0018E2  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  2034   0018E6  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  2035   0018EA                     
  2036                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  2037   0018EA  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  2038   0018EC  EF7A  F00C         	goto	u1661
  2039   0018F0  EF7D  F00C         	goto	u1660
  2040   0018F4                     u1661:
  2041   0018F4  0E01               	movlw	1
  2042   0018F6  EF7E  F00C         	goto	u1670
  2043   0018FA                     u1660:
  2044   0018FA  0E00               	movlw	0
  2045   0018FC                     u1670:
  2046   0018FC  6E3E               	movwf	dtoa@s^0,c
  2047   0018FE                     
  2048                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  2049   0018FE  503E               	movf	dtoa@s^0,w,c
  2050   001900  B4D8               	btfsc	status,2,c
  2051   001902  EF85  F00C         	goto	u1681
  2052   001906  EF87  F00C         	goto	u1680
  2053   00190A                     u1681:
  2054   00190A  EF97  F00C         	goto	l2112
  2055   00190E                     u1680:
  2056   00190E                     
  2057                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  2058   00190E  1E3B               	comf	(dtoa@n+7)^0,f,c
  2059   001910  1E3A               	comf	(dtoa@n+6)^0,f,c
  2060   001912  1E39               	comf	(dtoa@n+5)^0,f,c
  2061   001914  1E38               	comf	(dtoa@n+4)^0,f,c
  2062   001916  1E37               	comf	(dtoa@n+3)^0,f,c
  2063   001918  1E36               	comf	(dtoa@n+2)^0,f,c
  2064   00191A  1E35               	comf	(dtoa@n+1)^0,f,c
  2065   00191C  6C34               	negf	dtoa@n^0,c
  2066   00191E  0E00               	movlw	0
  2067   001920  2235               	addwfc	(dtoa@n+1)^0,f,c
  2068   001922  2236               	addwfc	(dtoa@n+2)^0,f,c
  2069   001924  2237               	addwfc	(dtoa@n+3)^0,f,c
  2070   001926  2238               	addwfc	(dtoa@n+4)^0,f,c
  2071   001928  2239               	addwfc	(dtoa@n+5)^0,f,c
  2072   00192A  223A               	addwfc	(dtoa@n+6)^0,f,c
  2073   00192C  223B               	addwfc	(dtoa@n+7)^0,f,c
  2074   00192E                     l2112:
  2075                           
  2076                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 458:     if (!(pr
      +                          ec < 0)) {
  2077   00192E  BE5D               	btfsc	(_prec+1)^0,7,c
  2078   001930  EF9C  F00C         	goto	u1691
  2079   001934  EF9E  F00C         	goto	u1690
  2080   001938                     u1691:
  2081   001938  EF9F  F00C         	goto	l2116
  2082   00193C                     u1690:
  2083   00193C                     
  2084                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 459:         flag
      +                          s &= ~(1 << 1);
  2085   00193C  925E               	bcf	_flags^0,1,c
  2086   00193E                     l2116:
  2087                           
  2088                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  2089   00193E  BE5D               	btfsc	(_prec+1)^0,7,c
  2090   001940  EFAC  F00C         	goto	u1700
  2091   001944  505D               	movf	(_prec+1)^0,w,c
  2092   001946  E106               	bnz	u1701
  2093   001948  045C               	decf	_prec^0,w,c
  2094   00194A  B0D8               	btfsc	status,0,c
  2095   00194C  EFAA  F00C         	goto	u1701
  2096   001950  EFAC  F00C         	goto	u1700
  2097   001954                     u1701:
  2098   001954  EFB2  F00C         	goto	l1037
  2099   001958                     u1700:
  2100   001958  0E00               	movlw	0
  2101   00195A  6E31               	movwf	(dtoa@p+1)^0,c
  2102   00195C  0E01               	movlw	1
  2103   00195E  6E30               	movwf	dtoa@p^0,c
  2104   001960  EFB6  F00C         	goto	l1039
  2105   001964                     l1037:
  2106   001964  C05C  F030         	movff	_prec,dtoa@p
  2107   001968  C05D  F031         	movff	_prec+1,dtoa@p+1
  2108   00196C                     l1039:
  2109                           
  2110                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  2111   00196C  C0CD  F032         	movff	_width,dtoa@w
  2112   001970  C0CE  F033         	movff	_width+1,dtoa@w+1
  2113   001974                     
  2114                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  2115   001974  503E               	movf	dtoa@s^0,w,c
  2116   001976  B4D8               	btfsc	status,2,c
  2117   001978  EFC0  F00C         	goto	u1711
  2118   00197C  EFC2  F00C         	goto	u1710
  2119   001980                     u1711:
  2120   001980  EFD9  F00C         	goto	l1040
  2121   001984                     u1710:
  2122   001984                     
  2123                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  2124   001984  0632               	decf	dtoa@w^0,f,c
  2125   001986  A0D8               	btfss	status,0,c
  2126   001988  0633               	decf	(dtoa@w+1)^0,f,c
  2127   00198A                     
  2128                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  2129   00198A  503E               	movf	dtoa@s^0,w,c
  2130   00198C  A4D8               	btfss	status,2,c
  2131   00198E  EFCB  F00C         	goto	u1721
  2132   001992  EFCD  F00C         	goto	u1720
  2133   001996                     u1721:
  2134   001996  EFD3  F00C         	goto	l2128
  2135   00199A                     u1720:
  2136   00199A  0E00               	movlw	0
  2137   00199C  6E2F               	movwf	(_dtoa$1887+1)^0,c
  2138   00199E  0E2B               	movlw	43
  2139   0019A0  6E2E               	movwf	_dtoa$1887^0,c
  2140   0019A2  EFD7  F00C         	goto	l2130
  2141   0019A6                     l2128:
  2142   0019A6  0E00               	movlw	0
  2143   0019A8  6E2F               	movwf	(_dtoa$1887+1)^0,c
  2144   0019AA  0E2D               	movlw	45
  2145   0019AC  6E2E               	movwf	_dtoa$1887^0,c
  2146   0019AE                     l2130:
  2147   0019AE  C02E  F03E         	movff	_dtoa$1887,dtoa@s
  2148   0019B2                     l1040:
  2149                           
  2150                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  2151   0019B2  0E00               	movlw	0
  2152   0019B4  6E3D               	movwf	(dtoa@i+1)^0,c
  2153   0019B6  0E1F               	movlw	31
  2154   0019B8  6E3C               	movwf	dtoa@i^0,c
  2155   0019BA                     
  2156                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  2157   0019BA  0E00               	movlw	0
  2158   0019BC  0101               	movlb	1	; () banked
  2159   0019BE  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2160                           
  2161                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2162   0019C0  EF5E  F00D         	goto	l2144
  2163   0019C4                     l2134:
  2164                           
  2165                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  2166   0019C4  063C               	decf	dtoa@i^0,f,c
  2167   0019C6  A0D8               	btfss	status,0,c
  2168   0019C8  063D               	decf	(dtoa@i+1)^0,f,c
  2169   0019CA                     
  2170                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2171   0019CA  0E00               	movlw	low _dbuf
  2172   0019CC  243C               	addwf	dtoa@i^0,w,c
  2173   0019CE  6ED9               	movwf	fsr2l,c
  2174   0019D0  0E01               	movlw	high _dbuf
  2175   0019D2  203D               	addwfc	(dtoa@i+1)^0,w,c
  2176   0019D4  6EDA               	movwf	fsr2h,c
  2177   0019D6  C034  F001         	movff	dtoa@n,___aomod@dividend
  2178   0019DA  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2179   0019DE  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2180   0019E2  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2181   0019E6  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2182   0019EA  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2183   0019EE  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2184   0019F2  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2185   0019F6  0E0A               	movlw	10
  2186   0019F8  6E09               	movwf	___aomod@divisor^0,c
  2187   0019FA  0E00               	movlw	0
  2188   0019FC  6E0A               	movwf	(___aomod@divisor+1)^0,c
  2189   0019FE  0E00               	movlw	0
  2190   001A00  6E0B               	movwf	(___aomod@divisor+2)^0,c
  2191   001A02  0E00               	movlw	0
  2192   001A04  6E0C               	movwf	(___aomod@divisor+3)^0,c
  2193   001A06  0E00               	movlw	0
  2194   001A08  6E0D               	movwf	(___aomod@divisor+4)^0,c
  2195   001A0A  0E00               	movlw	0
  2196   001A0C  6E0E               	movwf	(___aomod@divisor+5)^0,c
  2197   001A0E  0E00               	movlw	0
  2198   001A10  6E0F               	movwf	(___aomod@divisor+6)^0,c
  2199   001A12  0E00               	movlw	0
  2200   001A14  6E10               	movwf	(___aomod@divisor+7)^0,c
  2201   001A16  EC83  F00E         	call	___aomod	;wreg free
  2202   001A1A  C001  F026         	movff	?___aomod,??_dtoa
  2203   001A1E  C002  F027         	movff	?___aomod+1,??_dtoa+1
  2204   001A22  C003  F028         	movff	?___aomod+2,??_dtoa+2
  2205   001A26  C004  F029         	movff	?___aomod+3,??_dtoa+3
  2206   001A2A  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  2207   001A2E  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  2208   001A32  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  2209   001A36  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  2210   001A3A  C026  F013         	movff	??_dtoa,abs@a
  2211   001A3E  C027  F014         	movff	??_dtoa+1,abs@a+1
  2212   001A42  EC84  F012         	call	_abs	;wreg free
  2213   001A46  5013               	movf	?_abs^0,w,c
  2214   001A48  0F30               	addlw	48
  2215   001A4A  6EDF               	movwf	indf2,c
  2216   001A4C                     
  2217                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  2218   001A4C  0630               	decf	dtoa@p^0,f,c
  2219   001A4E  A0D8               	btfss	status,0,c
  2220   001A50  0631               	decf	(dtoa@p+1)^0,f,c
  2221   001A52                     
  2222                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  2223   001A52  0632               	decf	dtoa@w^0,f,c
  2224   001A54  A0D8               	btfss	status,0,c
  2225   001A56  0633               	decf	(dtoa@w+1)^0,f,c
  2226   001A58                     
  2227                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  2228   001A58  C034  F001         	movff	dtoa@n,___aodiv@dividend
  2229   001A5C  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2230   001A60  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2231   001A64  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2232   001A68  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2233   001A6C  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2234   001A70  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2235   001A74  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2236   001A78  0E0A               	movlw	10
  2237   001A7A  6E09               	movwf	___aodiv@divisor^0,c
  2238   001A7C  0E00               	movlw	0
  2239   001A7E  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2240   001A80  0E00               	movlw	0
  2241   001A82  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2242   001A84  0E00               	movlw	0
  2243   001A86  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2244   001A88  0E00               	movlw	0
  2245   001A8A  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2246   001A8C  0E00               	movlw	0
  2247   001A8E  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2248   001A90  0E00               	movlw	0
  2249   001A92  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2250   001A94  0E00               	movlw	0
  2251   001A96  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2252   001A98  ECBF  F00D         	call	___aodiv	;wreg free
  2253   001A9C  C001  F034         	movff	?___aodiv,dtoa@n
  2254   001AA0  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  2255   001AA4  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  2256   001AA8  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  2257   001AAC  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  2258   001AB0  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  2259   001AB4  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  2260   001AB8  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  2261   001ABC                     l2144:
  2262                           
  2263                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2264   001ABC  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  2265   001ABE  EF69  F00D         	goto	u1731
  2266   001AC2  503D               	movf	(dtoa@i+1)^0,w,c
  2267   001AC4  E108               	bnz	u1730
  2268   001AC6  043C               	decf	dtoa@i^0,w,c
  2269   001AC8  A0D8               	btfss	status,0,c
  2270   001ACA  EF69  F00D         	goto	u1731
  2271   001ACE  EF6B  F00D         	goto	u1730
  2272   001AD2                     u1731:
  2273   001AD2  EF9B  F00D         	goto	l2154
  2274   001AD6                     u1730:
  2275   001AD6  5034               	movf	dtoa@n^0,w,c
  2276   001AD8  1035               	iorwf	(dtoa@n+1)^0,w,c
  2277   001ADA  1036               	iorwf	(dtoa@n+2)^0,w,c
  2278   001ADC  1037               	iorwf	(dtoa@n+3)^0,w,c
  2279   001ADE  1038               	iorwf	(dtoa@n+4)^0,w,c
  2280   001AE0  1039               	iorwf	(dtoa@n+5)^0,w,c
  2281   001AE2  103A               	iorwf	(dtoa@n+6)^0,w,c
  2282   001AE4  103B               	iorwf	(dtoa@n+7)^0,w,c
  2283   001AE6  A4D8               	btfss	status,2,c
  2284   001AE8  EF78  F00D         	goto	u1741
  2285   001AEC  EF7A  F00D         	goto	u1740
  2286   001AF0                     u1741:
  2287   001AF0  EFE2  F00C         	goto	l2134
  2288   001AF4                     u1740:
  2289   001AF4  BE31               	btfsc	(dtoa@p+1)^0,7,c
  2290   001AF6  EF87  F00D         	goto	u1750
  2291   001AFA  5031               	movf	(dtoa@p+1)^0,w,c
  2292   001AFC  E106               	bnz	u1751
  2293   001AFE  0430               	decf	dtoa@p^0,w,c
  2294   001B00  B0D8               	btfsc	status,0,c
  2295   001B02  EF85  F00D         	goto	u1751
  2296   001B06  EF87  F00D         	goto	u1750
  2297   001B0A                     u1751:
  2298   001B0A  EFE2  F00C         	goto	l2134
  2299   001B0E                     u1750:
  2300   001B0E  BE33               	btfsc	(dtoa@w+1)^0,7,c
  2301   001B10  EF92  F00D         	goto	u1761
  2302   001B14  5033               	movf	(dtoa@w+1)^0,w,c
  2303   001B16  E108               	bnz	u1760
  2304   001B18  0432               	decf	dtoa@w^0,w,c
  2305   001B1A  A0D8               	btfss	status,0,c
  2306   001B1C  EF92  F00D         	goto	u1761
  2307   001B20  EF94  F00D         	goto	u1760
  2308   001B24                     u1761:
  2309   001B24  EF9B  F00D         	goto	l2154
  2310   001B28                     u1760:
  2311   001B28  B25E               	btfsc	_flags^0,1,c
  2312   001B2A  EF99  F00D         	goto	u1771
  2313   001B2E  EF9B  F00D         	goto	u1770
  2314   001B32                     u1771:
  2315   001B32  EFE2  F00C         	goto	l2134
  2316   001B36                     u1770:
  2317   001B36                     l2154:
  2318                           
  2319                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  2320   001B36  503E               	movf	dtoa@s^0,w,c
  2321   001B38  B4D8               	btfsc	status,2,c
  2322   001B3A  EFA1  F00D         	goto	u1781
  2323   001B3E  EFA3  F00D         	goto	u1780
  2324   001B42                     u1781:
  2325   001B42  EFAE  F00D         	goto	l2160
  2326   001B46                     u1780:
  2327   001B46                     
  2328                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  2329   001B46  063C               	decf	dtoa@i^0,f,c
  2330   001B48  A0D8               	btfss	status,0,c
  2331   001B4A  063D               	decf	(dtoa@i+1)^0,f,c
  2332   001B4C                     
  2333                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  2334   001B4C  0E00               	movlw	low _dbuf
  2335   001B4E  243C               	addwf	dtoa@i^0,w,c
  2336   001B50  6ED9               	movwf	fsr2l,c
  2337   001B52  0E01               	movlw	high _dbuf
  2338   001B54  203D               	addwfc	(dtoa@i+1)^0,w,c
  2339   001B56  6EDA               	movwf	fsr2h,c
  2340   001B58  C03E  FFDF         	movff	dtoa@s,indf2
  2341   001B5C                     l2160:
  2342                           
  2343                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2344   001B5C  C01C  F011         	movff	dtoa@fp,pad@fp
  2345   001B60  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2346   001B64  0E00               	movlw	low _dbuf
  2347   001B66  243C               	addwf	dtoa@i^0,w,c
  2348   001B68  6E13               	movwf	pad@buf^0,c
  2349   001B6A  0E01               	movlw	high _dbuf
  2350   001B6C  203D               	addwfc	(dtoa@i+1)^0,w,c
  2351   001B6E  6E14               	movwf	(pad@buf+1)^0,c
  2352   001B70  C032  F015         	movff	dtoa@w,pad@p
  2353   001B74  C033  F016         	movff	dtoa@w+1,pad@p+1
  2354   001B78  ECAD  F010         	call	_pad	;wreg free
  2355   001B7C  0012               	return		;funcret
  2356   001B7E                     __end_of_dtoa:
  2357                           	callstack 0
  2358                           
  2359 ;; *************** function _pad *****************
  2360 ;; Defined at:
  2361 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2362 ;; Parameters:    Size  Location     Type
  2363 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2364 ;;		 -> sprintf@f(11), 
  2365 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2366 ;;		 -> dbuf(32), 
  2367 ;;  p               2   20[COMRAM] int 
  2368 ;; Auto vars:     Size  Location     Type
  2369 ;;  w               2   25[COMRAM] int 
  2370 ;;  i               2   23[COMRAM] int 
  2371 ;; Return value:  Size  Location     Type
  2372 ;;                  1    wreg      void 
  2373 ;; Registers used:
  2374 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2380 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2381 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2382 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2383 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2384 ;;Total ram usage:       11 bytes
  2385 ;; Hardware stack levels used: 1
  2386 ;; Hardware stack levels required when called: 4
  2387 ;; This function calls:
  2388 ;;		_fputc
  2389 ;;		_fputs
  2390 ;; This function is called by:
  2391 ;;		_dtoa
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394                           
  2395                           	psect	text5
  2396   00215A                     __ptext5:
  2397                           	callstack 0
  2398   00215A                     _pad:
  2399                           	callstack 22
  2400   00215A                     
  2401                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 139:     if (flags & (1 << 0)) {
  2402   00215A  A05E               	btfss	_flags^0,0,c
  2403   00215C  EFB2  F010         	goto	u1571
  2404   002160  EFB4  F010         	goto	u1570
  2405   002164                     u1571:
  2406   002164  EFBE  F010         	goto	l2064
  2407   002168                     u1570:
  2408   002168                     
  2409                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 140:         fput
      +                          s((const char *)buf, fp);
  2410   002168  C013  F00A         	movff	pad@buf,fputs@s
  2411   00216C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2412   002170  C011  F00C         	movff	pad@fp,fputs@fp
  2413   002174  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2414   002178  EC62  F012         	call	_fputs	;wreg free
  2415   00217C                     l2064:
  2416                           
  2417                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 145:     w = (p <
      +                           0) ? 0 : p;
  2418   00217C  BE16               	btfsc	(pad@p+1)^0,7,c
  2419   00217E  EFC3  F010         	goto	u1581
  2420   002182  EFC5  F010         	goto	u1580
  2421   002186                     u1581:
  2422   002186  EFCB  F010         	goto	l2068
  2423   00218A                     u1580:
  2424   00218A  C015  F01A         	movff	pad@p,pad@w
  2425   00218E  C016  F01B         	movff	pad@p+1,pad@w+1
  2426   002192  EFCF  F010         	goto	l1026
  2427   002196                     l2068:
  2428   002196  0E00               	movlw	0
  2429   002198  6E1B               	movwf	(pad@w+1)^0,c
  2430   00219A  0E00               	movlw	0
  2431   00219C  6E1A               	movwf	pad@w^0,c
  2432   00219E                     l1026:
  2433                           
  2434                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2435   00219E  0E00               	movlw	0
  2436   0021A0  6E19               	movwf	(pad@i+1)^0,c
  2437   0021A2  0E00               	movlw	0
  2438   0021A4  6E18               	movwf	pad@i^0,c
  2439                           
  2440                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2441   0021A6  EFE1  F010         	goto	l2074
  2442   0021AA                     l2070:
  2443                           
  2444                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2445   0021AA  0E00               	movlw	0
  2446   0021AC  6E02               	movwf	(fputc@c+1)^0,c
  2447   0021AE  0E20               	movlw	32
  2448   0021B0  6E01               	movwf	fputc@c^0,c
  2449   0021B2  C011  F003         	movff	pad@fp,fputc@fp
  2450   0021B6  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2451   0021BA  ECE4  F00F         	call	_fputc	;wreg free
  2452   0021BE                     
  2453                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2454   0021BE  4A18               	infsnz	pad@i^0,f,c
  2455   0021C0  2A19               	incf	(pad@i+1)^0,f,c
  2456   0021C2                     l2074:
  2457                           
  2458                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2459   0021C2  501A               	movf	pad@w^0,w,c
  2460   0021C4  5C18               	subwf	pad@i^0,w,c
  2461   0021C6  5019               	movf	(pad@i+1)^0,w,c
  2462   0021C8  0A80               	xorlw	128
  2463   0021CA  6E17               	movwf	??_pad^0,c
  2464   0021CC  501B               	movf	(pad@w+1)^0,w,c
  2465   0021CE  0A80               	xorlw	128
  2466   0021D0  5817               	subwfb	??_pad^0,w,c
  2467   0021D2  A0D8               	btfss	status,0,c
  2468   0021D4  EFEE  F010         	goto	u1591
  2469   0021D8  EFF0  F010         	goto	u1590
  2470   0021DC                     u1591:
  2471   0021DC  EFD5  F010         	goto	l2070
  2472   0021E0                     u1590:
  2473   0021E0                     
  2474                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 154:     if (!(fl
      +                          ags & (1 << 0))) {
  2475   0021E0  B05E               	btfsc	_flags^0,0,c
  2476   0021E2  EFF5  F010         	goto	u1601
  2477   0021E6  EFF7  F010         	goto	u1600
  2478   0021EA                     u1601:
  2479   0021EA  EF01  F011         	goto	l1031
  2480   0021EE                     u1600:
  2481   0021EE                     
  2482                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2483   0021EE  C013  F00A         	movff	pad@buf,fputs@s
  2484   0021F2  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2485   0021F6  C011  F00C         	movff	pad@fp,fputs@fp
  2486   0021FA  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2487   0021FE  EC62  F012         	call	_fputs	;wreg free
  2488   002202                     l1031:
  2489   002202  0012               	return		;funcret
  2490   002204                     __end_of_pad:
  2491                           	callstack 0
  2492                           
  2493 ;; *************** function _fputs *****************
  2494 ;; Defined at:
  2495 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2498 ;;		 -> dbuf(32), 
  2499 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2500 ;;		 -> sprintf@f(11), 
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;  i               2   14[COMRAM] int 
  2503 ;;  c               1   13[COMRAM] unsigned char 
  2504 ;; Return value:  Size  Location     Type
  2505 ;;                  2    9[COMRAM] int 
  2506 ;; Registers used:
  2507 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2508 ;; Tracked objects:
  2509 ;;		On entry : 0/0
  2510 ;;		On exit  : 0/0
  2511 ;;		Unchanged: 0/0
  2512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2513 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2514 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2516 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2517 ;;Total ram usage:        7 bytes
  2518 ;; Hardware stack levels used: 1
  2519 ;; Hardware stack levels required when called: 3
  2520 ;; This function calls:
  2521 ;;		_fputc
  2522 ;; This function is called by:
  2523 ;;		_pad
  2524 ;; This function uses a non-reentrant model
  2525 ;;
  2526                           
  2527                           	psect	text6
  2528   0024C4                     __ptext6:
  2529                           	callstack 0
  2530   0024C4                     _fputs:
  2531                           	callstack 22
  2532   0024C4  0E00               	movlw	0
  2533   0024C6  6E10               	movwf	(fputs@i+1)^0,c
  2534   0024C8  0E00               	movlw	0
  2535   0024CA  6E0F               	movwf	fputs@i^0,c
  2536   0024CC  EF73  F012         	goto	l1972
  2537   0024D0                     l1968:
  2538   0024D0  C00E  F001         	movff	fputs@c,fputc@c
  2539   0024D4  6A02               	clrf	(fputc@c+1)^0,c
  2540   0024D6  C00C  F003         	movff	fputs@fp,fputc@fp
  2541   0024DA  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2542   0024DE  ECE4  F00F         	call	_fputc	;wreg free
  2543   0024E2  4A0F               	infsnz	fputs@i^0,f,c
  2544   0024E4  2A10               	incf	(fputs@i+1)^0,f,c
  2545   0024E6                     l1972:
  2546   0024E6  500F               	movf	fputs@i^0,w,c
  2547   0024E8  240A               	addwf	fputs@s^0,w,c
  2548   0024EA  6ED9               	movwf	fsr2l,c
  2549   0024EC  5010               	movf	(fputs@i+1)^0,w,c
  2550   0024EE  200B               	addwfc	(fputs@s+1)^0,w,c
  2551   0024F0  6EDA               	movwf	fsr2h,c
  2552   0024F2  50DF               	movf	indf2,w,c
  2553   0024F4  6E0E               	movwf	fputs@c^0,c
  2554   0024F6  500E               	movf	fputs@c^0,w,c
  2555   0024F8  A4D8               	btfss	status,2,c
  2556   0024FA  EF81  F012         	goto	u1431
  2557   0024FE  EF83  F012         	goto	u1430
  2558   002502                     u1431:
  2559   002502  EF68  F012         	goto	l1968
  2560   002506                     u1430:
  2561   002506  0012               	return		;funcret
  2562   002508                     __end_of_fputs:
  2563                           	callstack 0
  2564                           
  2565 ;; *************** function _fputc *****************
  2566 ;; Defined at:
  2567 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2568 ;; Parameters:    Size  Location     Type
  2569 ;;  c               2    0[COMRAM] int 
  2570 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2571 ;;		 -> sprintf@f(11), 
  2572 ;; Auto vars:     Size  Location     Type
  2573 ;;		None
  2574 ;; Return value:  Size  Location     Type
  2575 ;;                  2    0[COMRAM] int 
  2576 ;; Registers used:
  2577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2578 ;; Tracked objects:
  2579 ;;		On entry : 0/0
  2580 ;;		On exit  : 0/0
  2581 ;;		Unchanged: 0/0
  2582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2583 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2585 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2586 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2587 ;;Total ram usage:        9 bytes
  2588 ;; Hardware stack levels used: 1
  2589 ;; Hardware stack levels required when called: 2
  2590 ;; This function calls:
  2591 ;;		_putch
  2592 ;; This function is called by:
  2593 ;;		_pad
  2594 ;;		_vfpfcnvrt
  2595 ;;		_fputs
  2596 ;; This function uses a non-reentrant model
  2597 ;;
  2598                           
  2599                           	psect	text7
  2600   001FC8                     __ptext7:
  2601                           	callstack 0
  2602   001FC8                     _fputc:
  2603                           	callstack 25
  2604   001FC8  5003               	movf	fputc@fp^0,w,c
  2605   001FCA  1004               	iorwf	(fputc@fp+1)^0,w,c
  2606   001FCC  B4D8               	btfsc	status,2,c
  2607   001FCE  EFEB  F00F         	goto	u1391
  2608   001FD2  EFED  F00F         	goto	u1390
  2609   001FD6                     u1391:
  2610   001FD6  EFF6  F00F         	goto	l1956
  2611   001FDA                     u1390:
  2612   001FDA  5003               	movf	fputc@fp^0,w,c
  2613   001FDC  1004               	iorwf	(fputc@fp+1)^0,w,c
  2614   001FDE  A4D8               	btfss	status,2,c
  2615   001FE0  EFF4  F00F         	goto	u1401
  2616   001FE4  EFF6  F00F         	goto	u1400
  2617   001FE8                     u1401:
  2618   001FE8  EFFB  F00F         	goto	l1958
  2619   001FEC                     u1400:
  2620   001FEC                     l1956:
  2621   001FEC  5001               	movf	fputc@c^0,w,c
  2622   001FEE  EC9A  F013         	call	_putch
  2623   001FF2  EF48  F010         	goto	l1139
  2624   001FF6                     l1958:
  2625   001FF6  EE20 F009          	lfsr	2,9
  2626   001FFA  5003               	movf	fputc@fp^0,w,c
  2627   001FFC  26D9               	addwf	fsr2l,f,c
  2628   001FFE  5004               	movf	(fputc@fp+1)^0,w,c
  2629   002000  22DA               	addwfc	fsr2h,f,c
  2630   002002  50DE               	movf	postinc2,w,c
  2631   002004  10DE               	iorwf	postinc2,w,c
  2632   002006  B4D8               	btfsc	status,2,c
  2633   002008  EF08  F010         	goto	u1411
  2634   00200C  EF0A  F010         	goto	u1410
  2635   002010                     u1411:
  2636   002010  EF25  F010         	goto	l1962
  2637   002014                     u1410:
  2638   002014  EE20 F009          	lfsr	2,9
  2639   002018  5003               	movf	fputc@fp^0,w,c
  2640   00201A  26D9               	addwf	fsr2l,f,c
  2641   00201C  5004               	movf	(fputc@fp+1)^0,w,c
  2642   00201E  22DA               	addwfc	fsr2h,f,c
  2643   002020  EE10 F003          	lfsr	1,3
  2644   002024  5003               	movf	fputc@fp^0,w,c
  2645   002026  26E1               	addwf	fsr1l,f,c
  2646   002028  5004               	movf	(fputc@fp+1)^0,w,c
  2647   00202A  22E2               	addwfc	fsr1h,f,c
  2648   00202C  50DE               	movf	postinc2,w,c
  2649   00202E  5CE6               	subwf	postinc1,w,c
  2650   002030  50E6               	movf	postinc1,w,c
  2651   002032  0A80               	xorlw	128
  2652   002034  6E09               	movwf	(??_fputc+4)^0,c
  2653   002036  50DE               	movf	postinc2,w,c
  2654   002038  0A80               	xorlw	128
  2655   00203A  5809               	subwfb	(??_fputc+4)^0,w,c
  2656   00203C  B0D8               	btfsc	status,0,c
  2657   00203E  EF23  F010         	goto	u1421
  2658   002042  EF25  F010         	goto	u1420
  2659   002046                     u1421:
  2660   002046  EF48  F010         	goto	l1139
  2661   00204A                     u1420:
  2662   00204A                     l1962:
  2663   00204A  EE20 F003          	lfsr	2,3
  2664   00204E  5003               	movf	fputc@fp^0,w,c
  2665   002050  26D9               	addwf	fsr2l,f,c
  2666   002052  5004               	movf	(fputc@fp+1)^0,w,c
  2667   002054  22DA               	addwfc	fsr2h,f,c
  2668   002056  CFDE F005          	movff	postinc2,??_fputc
  2669   00205A  CFDD F006          	movff	postdec2,??_fputc+1
  2670   00205E  C003  FFD9         	movff	fputc@fp,fsr2l
  2671   002062  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2672   002066  CFDE F007          	movff	postinc2,??_fputc+2
  2673   00206A  CFDD F008          	movff	postdec2,??_fputc+3
  2674   00206E  5005               	movf	??_fputc^0,w,c
  2675   002070  2407               	addwf	(??_fputc+2)^0,w,c
  2676   002072  6ED9               	movwf	fsr2l,c
  2677   002074  5006               	movf	(??_fputc+1)^0,w,c
  2678   002076  2008               	addwfc	(??_fputc+3)^0,w,c
  2679   002078  6EDA               	movwf	fsr2h,c
  2680   00207A  C001  FFDF         	movff	fputc@c,indf2
  2681   00207E  EE20 F003          	lfsr	2,3
  2682   002082  5003               	movf	fputc@fp^0,w,c
  2683   002084  26D9               	addwf	fsr2l,f,c
  2684   002086  5004               	movf	(fputc@fp+1)^0,w,c
  2685   002088  22DA               	addwfc	fsr2h,f,c
  2686   00208A  2ADE               	incf	postinc2,f,c
  2687   00208C  0E00               	movlw	0
  2688   00208E  22DD               	addwfc	postdec2,f,c
  2689   002090                     l1139:
  2690   002090  0012               	return		;funcret
  2691   002092                     __end_of_fputc:
  2692                           	callstack 0
  2693                           
  2694 ;; *************** function _putch *****************
  2695 ;; Defined at:
  2696 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  2697 ;; Parameters:    Size  Location     Type
  2698 ;;  c               1    wreg     unsigned char 
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;  c               1    0[COMRAM] unsigned char 
  2701 ;; Return value:  Size  Location     Type
  2702 ;;                  1    wreg      void 
  2703 ;; Registers used:
  2704 ;;		wreg
  2705 ;; Tracked objects:
  2706 ;;		On entry : 0/0
  2707 ;;		On exit  : 0/0
  2708 ;;		Unchanged: 0/0
  2709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2714 ;;Total ram usage:        0 bytes
  2715 ;; Hardware stack levels used: 1
  2716 ;; Hardware stack levels required when called: 1
  2717 ;; This function calls:
  2718 ;;		Nothing
  2719 ;; This function is called by:
  2720 ;;		_fputc
  2721 ;; This function uses a non-reentrant model
  2722 ;;
  2723                           
  2724                           	psect	text8
  2725   002734                     __ptext8:
  2726                           	callstack 0
  2727   002734                     _putch:
  2728                           	callstack 25
  2729   002734  0012               	return		;funcret
  2730   002736                     __end_of_putch:
  2731                           	callstack 0
  2732                           
  2733 ;; *************** function _abs *****************
  2734 ;; Defined at:
  2735 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;  a               2   18[COMRAM] int 
  2738 ;; Auto vars:     Size  Location     Type
  2739 ;;		None
  2740 ;; Return value:  Size  Location     Type
  2741 ;;                  2   18[COMRAM] int 
  2742 ;; Registers used:
  2743 ;;		wreg, status,2, status,0
  2744 ;; Tracked objects:
  2745 ;;		On entry : 0/0
  2746 ;;		On exit  : 0/0
  2747 ;;		Unchanged: 0/0
  2748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2749 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2751 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2752 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2753 ;;Total ram usage:        4 bytes
  2754 ;; Hardware stack levels used: 1
  2755 ;; Hardware stack levels required when called: 1
  2756 ;; This function calls:
  2757 ;;		Nothing
  2758 ;; This function is called by:
  2759 ;;		_dtoa
  2760 ;; This function uses a non-reentrant model
  2761 ;;
  2762                           
  2763                           	psect	text9
  2764   002508                     __ptext9:
  2765                           	callstack 0
  2766   002508                     _abs:
  2767                           	callstack 25
  2768   002508  BE14               	btfsc	(abs@a+1)^0,7,c
  2769   00250A  EF91  F012         	goto	u1610
  2770   00250E  5014               	movf	(abs@a+1)^0,w,c
  2771   002510  E106               	bnz	u1611
  2772   002512  0413               	decf	abs@a^0,w,c
  2773   002514  B0D8               	btfsc	status,0,c
  2774   002516  EF8F  F012         	goto	u1611
  2775   00251A  EF91  F012         	goto	u1610
  2776   00251E                     u1611:
  2777   00251E  EF9F  F012         	goto	l1085
  2778   002522                     u1610:
  2779   002522  C013  F015         	movff	abs@a,??_abs
  2780   002526  C014  F016         	movff	abs@a+1,??_abs+1
  2781   00252A  1E15               	comf	??_abs^0,f,c
  2782   00252C  1E16               	comf	(??_abs+1)^0,f,c
  2783   00252E  4A15               	infsnz	??_abs^0,f,c
  2784   002530  2A16               	incf	(??_abs+1)^0,f,c
  2785   002532  C015  F013         	movff	??_abs,?_abs
  2786   002536  C016  F014         	movff	??_abs+1,?_abs+1
  2787   00253A  EFA3  F012         	goto	l1088
  2788   00253E                     l1085:
  2789   00253E  C013  F013         	movff	abs@a,?_abs
  2790   002542  C014  F014         	movff	abs@a+1,?_abs+1
  2791   002546                     l1088:
  2792   002546  0012               	return		;funcret
  2793   002548                     __end_of_abs:
  2794                           	callstack 0
  2795                           
  2796 ;; *************** function ___aomod *****************
  2797 ;; Defined at:
  2798 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2799 ;; Parameters:    Size  Location     Type
  2800 ;;  dividend        8    0[COMRAM] long long 
  2801 ;;  divisor         8    8[COMRAM] long long 
  2802 ;; Auto vars:     Size  Location     Type
  2803 ;;  sign            1   17[COMRAM] unsigned char 
  2804 ;;  counter         1   16[COMRAM] unsigned char 
  2805 ;; Return value:  Size  Location     Type
  2806 ;;                  8    0[COMRAM] long long 
  2807 ;; Registers used:
  2808 ;;		wreg, status,2, status,0
  2809 ;; Tracked objects:
  2810 ;;		On entry : 0/0
  2811 ;;		On exit  : 0/0
  2812 ;;		Unchanged: 0/0
  2813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2814 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2815 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2817 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2818 ;;Total ram usage:       18 bytes
  2819 ;; Hardware stack levels used: 1
  2820 ;; Hardware stack levels required when called: 1
  2821 ;; This function calls:
  2822 ;;		Nothing
  2823 ;; This function is called by:
  2824 ;;		_dtoa
  2825 ;; This function uses a non-reentrant model
  2826 ;;
  2827                           
  2828                           	psect	text10
  2829   001D06                     __ptext10:
  2830                           	callstack 0
  2831   001D06                     ___aomod:
  2832                           	callstack 25
  2833   001D06  0E00               	movlw	0
  2834   001D08  6E12               	movwf	___aomod@sign^0,c
  2835   001D0A  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2836   001D0C  EF8C  F00E         	goto	u1510
  2837   001D10  EF8A  F00E         	goto	u1511
  2838   001D14                     u1511:
  2839   001D14  EF9E  F00E         	goto	l2032
  2840   001D18                     u1510:
  2841   001D18  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2842   001D1A  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2843   001D1C  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2844   001D1E  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2845   001D20  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2846   001D22  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2847   001D24  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2848   001D26  6C01               	negf	___aomod@dividend^0,c
  2849   001D28  0E00               	movlw	0
  2850   001D2A  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2851   001D2C  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2852   001D2E  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2853   001D30  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2854   001D32  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2855   001D34  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2856   001D36  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2857   001D38  0E01               	movlw	1
  2858   001D3A  6E12               	movwf	___aomod@sign^0,c
  2859   001D3C                     l2032:
  2860   001D3C  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2861   001D3E  EFA5  F00E         	goto	u1520
  2862   001D42  EFA3  F00E         	goto	u1521
  2863   001D46                     u1521:
  2864   001D46  EFB5  F00E         	goto	l2036
  2865   001D4A                     u1520:
  2866   001D4A  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2867   001D4C  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2868   001D4E  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2869   001D50  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2870   001D52  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2871   001D54  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2872   001D56  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2873   001D58  6C09               	negf	___aomod@divisor^0,c
  2874   001D5A  0E00               	movlw	0
  2875   001D5C  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2876   001D5E  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2877   001D60  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2878   001D62  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2879   001D64  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2880   001D66  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2881   001D68  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2882   001D6A                     l2036:
  2883   001D6A  5009               	movf	___aomod@divisor^0,w,c
  2884   001D6C  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2885   001D6E  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2886   001D70  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2887   001D72  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2888   001D74  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2889   001D76  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2890   001D78  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2891   001D7A  B4D8               	btfsc	status,2,c
  2892   001D7C  EFC2  F00E         	goto	u1531
  2893   001D80  EFC4  F00E         	goto	u1530
  2894   001D84                     u1531:
  2895   001D84  EF0C  F00F         	goto	l2052
  2896   001D88                     u1530:
  2897   001D88  0E01               	movlw	1
  2898   001D8A  6E11               	movwf	___aomod@counter^0,c
  2899   001D8C  EFD2  F00E         	goto	l2042
  2900   001D90                     l2040:
  2901   001D90  90D8               	bcf	status,0,c
  2902   001D92  3609               	rlcf	___aomod@divisor^0,f,c
  2903   001D94  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2904   001D96  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2905   001D98  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2906   001D9A  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2907   001D9C  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2908   001D9E  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2909   001DA0  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2910   001DA2  2A11               	incf	___aomod@counter^0,f,c
  2911   001DA4                     l2042:
  2912   001DA4  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2913   001DA6  EFD7  F00E         	goto	u1541
  2914   001DAA  EFD9  F00E         	goto	u1540
  2915   001DAE                     u1541:
  2916   001DAE  EFC8  F00E         	goto	l2040
  2917   001DB2                     u1540:
  2918   001DB2                     l2044:
  2919   001DB2  5009               	movf	___aomod@divisor^0,w,c
  2920   001DB4  5C01               	subwf	___aomod@dividend^0,w,c
  2921   001DB6  500A               	movf	(___aomod@divisor+1)^0,w,c
  2922   001DB8  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2923   001DBA  500B               	movf	(___aomod@divisor+2)^0,w,c
  2924   001DBC  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2925   001DBE  500C               	movf	(___aomod@divisor+3)^0,w,c
  2926   001DC0  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2927   001DC2  500D               	movf	(___aomod@divisor+4)^0,w,c
  2928   001DC4  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2929   001DC6  500E               	movf	(___aomod@divisor+5)^0,w,c
  2930   001DC8  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2931   001DCA  500F               	movf	(___aomod@divisor+6)^0,w,c
  2932   001DCC  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2933   001DCE  5010               	movf	(___aomod@divisor+7)^0,w,c
  2934   001DD0  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2935   001DD2  A0D8               	btfss	status,0,c
  2936   001DD4  EFEE  F00E         	goto	u1551
  2937   001DD8  EFF0  F00E         	goto	u1550
  2938   001DDC                     u1551:
  2939   001DDC  EF00  F00F         	goto	l2048
  2940   001DE0                     u1550:
  2941   001DE0  5009               	movf	___aomod@divisor^0,w,c
  2942   001DE2  5E01               	subwf	___aomod@dividend^0,f,c
  2943   001DE4  500A               	movf	(___aomod@divisor+1)^0,w,c
  2944   001DE6  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2945   001DE8  500B               	movf	(___aomod@divisor+2)^0,w,c
  2946   001DEA  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2947   001DEC  500C               	movf	(___aomod@divisor+3)^0,w,c
  2948   001DEE  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2949   001DF0  500D               	movf	(___aomod@divisor+4)^0,w,c
  2950   001DF2  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2951   001DF4  500E               	movf	(___aomod@divisor+5)^0,w,c
  2952   001DF6  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2953   001DF8  500F               	movf	(___aomod@divisor+6)^0,w,c
  2954   001DFA  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2955   001DFC  5010               	movf	(___aomod@divisor+7)^0,w,c
  2956   001DFE  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2957   001E00                     l2048:
  2958   001E00  90D8               	bcf	status,0,c
  2959   001E02  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2960   001E04  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2961   001E06  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2962   001E08  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2963   001E0A  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2964   001E0C  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2965   001E0E  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2966   001E10  3209               	rrcf	___aomod@divisor^0,f,c
  2967   001E12  2E11               	decfsz	___aomod@counter^0,f,c
  2968   001E14  EFD9  F00E         	goto	l2044
  2969   001E18                     l2052:
  2970   001E18  5012               	movf	___aomod@sign^0,w,c
  2971   001E1A  B4D8               	btfsc	status,2,c
  2972   001E1C  EF12  F00F         	goto	u1561
  2973   001E20  EF14  F00F         	goto	u1560
  2974   001E24                     u1561:
  2975   001E24  EF24  F00F         	goto	l2056
  2976   001E28                     u1560:
  2977   001E28  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2978   001E2A  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2979   001E2C  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2980   001E2E  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2981   001E30  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2982   001E32  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2983   001E34  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2984   001E36  6C01               	negf	___aomod@dividend^0,c
  2985   001E38  0E00               	movlw	0
  2986   001E3A  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2987   001E3C  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2988   001E3E  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2989   001E40  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2990   001E42  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2991   001E44  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2992   001E46  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2993   001E48                     l2056:
  2994   001E48  C001  F001         	movff	___aomod@dividend,?___aomod
  2995   001E4C  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2996   001E50  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2997   001E54  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2998   001E58  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2999   001E5C  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3000   001E60  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3001   001E64  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3002   001E68  0012               	return		;funcret
  3003   001E6A                     __end_of___aomod:
  3004                           	callstack 0
  3005                           
  3006 ;; *************** function ___aodiv *****************
  3007 ;; Defined at:
  3008 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;  dividend        8    0[COMRAM] long long 
  3011 ;;  divisor         8    8[COMRAM] long long 
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;  quotient        8   18[COMRAM] long long 
  3014 ;;  sign            1   17[COMRAM] unsigned char 
  3015 ;;  counter         1   16[COMRAM] unsigned char 
  3016 ;; Return value:  Size  Location     Type
  3017 ;;                  8    0[COMRAM] long long 
  3018 ;; Registers used:
  3019 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3020 ;; Tracked objects:
  3021 ;;		On entry : 0/0
  3022 ;;		On exit  : 0/0
  3023 ;;		Unchanged: 0/0
  3024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3025 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3026 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3028 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3029 ;;Total ram usage:       26 bytes
  3030 ;; Hardware stack levels used: 1
  3031 ;; Hardware stack levels required when called: 1
  3032 ;; This function calls:
  3033 ;;		Nothing
  3034 ;; This function is called by:
  3035 ;;		_dtoa
  3036 ;; This function uses a non-reentrant model
  3037 ;;
  3038                           
  3039                           	psect	text11
  3040   001B7E                     __ptext11:
  3041                           	callstack 0
  3042   001B7E                     ___aodiv:
  3043                           	callstack 25
  3044   001B7E  0E00               	movlw	0
  3045   001B80  6E12               	movwf	___aodiv@sign^0,c
  3046   001B82  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3047   001B84  EFC8  F00D         	goto	u1440
  3048   001B88  EFC6  F00D         	goto	u1441
  3049   001B8C                     u1441:
  3050   001B8C  EFDA  F00D         	goto	l1988
  3051   001B90                     u1440:
  3052   001B90  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3053   001B92  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3054   001B94  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3055   001B96  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3056   001B98  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3057   001B9A  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3058   001B9C  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3059   001B9E  6C09               	negf	___aodiv@divisor^0,c
  3060   001BA0  0E00               	movlw	0
  3061   001BA2  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3062   001BA4  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3063   001BA6  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3064   001BA8  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3065   001BAA  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3066   001BAC  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3067   001BAE  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3068   001BB0  0E01               	movlw	1
  3069   001BB2  6E12               	movwf	___aodiv@sign^0,c
  3070   001BB4                     l1988:
  3071   001BB4  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3072   001BB6  EFE1  F00D         	goto	u1450
  3073   001BBA  EFDF  F00D         	goto	u1451
  3074   001BBE                     u1451:
  3075   001BBE  EFF3  F00D         	goto	l1994
  3076   001BC2                     u1450:
  3077   001BC2  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3078   001BC4  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3079   001BC6  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3080   001BC8  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3081   001BCA  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3082   001BCC  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3083   001BCE  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3084   001BD0  6C01               	negf	___aodiv@dividend^0,c
  3085   001BD2  0E00               	movlw	0
  3086   001BD4  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3087   001BD6  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3088   001BD8  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3089   001BDA  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3090   001BDC  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3091   001BDE  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3092   001BE0  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3093   001BE2  0E01               	movlw	1
  3094   001BE4  1A12               	xorwf	___aodiv@sign^0,f,c
  3095   001BE6                     l1994:
  3096   001BE6  EE20  F013         	lfsr	2,___aodiv@quotient
  3097   001BEA  0E07               	movlw	7
  3098   001BEC                     u1461:
  3099   001BEC  6ADE               	clrf	postinc2,c
  3100   001BEE  06E8               	decf	wreg,f,c
  3101   001BF0  E2FD               	bc	u1461
  3102   001BF2  5009               	movf	___aodiv@divisor^0,w,c
  3103   001BF4  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3104   001BF6  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3105   001BF8  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3106   001BFA  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3107   001BFC  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3108   001BFE  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3109   001C00  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3110   001C02  B4D8               	btfsc	status,2,c
  3111   001C04  EF06  F00E         	goto	u1471
  3112   001C08  EF08  F00E         	goto	u1470
  3113   001C0C                     u1471:
  3114   001C0C  EF5A  F00E         	goto	l2016
  3115   001C10                     u1470:
  3116   001C10  0E01               	movlw	1
  3117   001C12  6E11               	movwf	___aodiv@counter^0,c
  3118   001C14  EF16  F00E         	goto	l2002
  3119   001C18                     l2000:
  3120   001C18  90D8               	bcf	status,0,c
  3121   001C1A  3609               	rlcf	___aodiv@divisor^0,f,c
  3122   001C1C  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3123   001C1E  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3124   001C20  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3125   001C22  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3126   001C24  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3127   001C26  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3128   001C28  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3129   001C2A  2A11               	incf	___aodiv@counter^0,f,c
  3130   001C2C                     l2002:
  3131   001C2C  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3132   001C2E  EF1B  F00E         	goto	u1481
  3133   001C32  EF1D  F00E         	goto	u1480
  3134   001C36                     u1481:
  3135   001C36  EF0C  F00E         	goto	l2000
  3136   001C3A                     u1480:
  3137   001C3A                     l2004:
  3138   001C3A  90D8               	bcf	status,0,c
  3139   001C3C  3613               	rlcf	___aodiv@quotient^0,f,c
  3140   001C3E  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3141   001C40  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3142   001C42  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3143   001C44  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3144   001C46  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3145   001C48  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3146   001C4A  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3147   001C4C  5009               	movf	___aodiv@divisor^0,w,c
  3148   001C4E  5C01               	subwf	___aodiv@dividend^0,w,c
  3149   001C50  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3150   001C52  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3151   001C54  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3152   001C56  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3153   001C58  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3154   001C5A  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3155   001C5C  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3156   001C5E  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3157   001C60  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3158   001C62  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3159   001C64  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3160   001C66  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3161   001C68  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3162   001C6A  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3163   001C6C  A0D8               	btfss	status,0,c
  3164   001C6E  EF3B  F00E         	goto	u1491
  3165   001C72  EF3D  F00E         	goto	u1490
  3166   001C76                     u1491:
  3167   001C76  EF4E  F00E         	goto	l2012
  3168   001C7A                     u1490:
  3169   001C7A  5009               	movf	___aodiv@divisor^0,w,c
  3170   001C7C  5E01               	subwf	___aodiv@dividend^0,f,c
  3171   001C7E  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3172   001C80  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3173   001C82  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3174   001C84  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3175   001C86  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3176   001C88  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3177   001C8A  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3178   001C8C  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3179   001C8E  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3180   001C90  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3181   001C92  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3182   001C94  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3183   001C96  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3184   001C98  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3185   001C9A  8013               	bsf	___aodiv@quotient^0,0,c
  3186   001C9C                     l2012:
  3187   001C9C  90D8               	bcf	status,0,c
  3188   001C9E  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3189   001CA0  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3190   001CA2  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3191   001CA4  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3192   001CA6  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3193   001CA8  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3194   001CAA  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3195   001CAC  3209               	rrcf	___aodiv@divisor^0,f,c
  3196   001CAE  2E11               	decfsz	___aodiv@counter^0,f,c
  3197   001CB0  EF1D  F00E         	goto	l2004
  3198   001CB4                     l2016:
  3199   001CB4  5012               	movf	___aodiv@sign^0,w,c
  3200   001CB6  B4D8               	btfsc	status,2,c
  3201   001CB8  EF60  F00E         	goto	u1501
  3202   001CBC  EF62  F00E         	goto	u1500
  3203   001CC0                     u1501:
  3204   001CC0  EF72  F00E         	goto	l2020
  3205   001CC4                     u1500:
  3206   001CC4  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3207   001CC6  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3208   001CC8  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3209   001CCA  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3210   001CCC  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3211   001CCE  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3212   001CD0  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3213   001CD2  6C13               	negf	___aodiv@quotient^0,c
  3214   001CD4  0E00               	movlw	0
  3215   001CD6  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3216   001CD8  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3217   001CDA  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3218   001CDC  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3219   001CDE  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3220   001CE0  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3221   001CE2  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3222   001CE4                     l2020:
  3223   001CE4  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3224   001CE8  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3225   001CEC  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3226   001CF0  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3227   001CF4  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3228   001CF8  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3229   001CFC  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3230   001D00  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3231   001D04  0012               	return		;funcret
  3232   001D06                     __end_of___aodiv:
  3233                           	callstack 0
  3234                           
  3235 ;; *************** function _atoi *****************
  3236 ;; Defined at:
  3237 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  3238 ;; Parameters:    Size  Location     Type
  3239 ;;  s               2    6[COMRAM] PTR const unsigned char 
  3240 ;;		 -> STR_4(12), STR_3(18), STR_2(8), STR_1(8), 
  3241 ;; Auto vars:     Size  Location     Type
  3242 ;;  n               2   13[COMRAM] int 
  3243 ;;  neg             2   11[COMRAM] int 
  3244 ;; Return value:  Size  Location     Type
  3245 ;;                  2    6[COMRAM] int 
  3246 ;; Registers used:
  3247 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3248 ;; Tracked objects:
  3249 ;;		On entry : 0/0
  3250 ;;		On exit  : 0/0
  3251 ;;		Unchanged: 0/0
  3252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3253 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3254 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3255 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3256 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3257 ;;Total ram usage:        9 bytes
  3258 ;; Hardware stack levels used: 1
  3259 ;; Hardware stack levels required when called: 2
  3260 ;; This function calls:
  3261 ;;		___wmul
  3262 ;;		_isdigit
  3263 ;;		_isspace
  3264 ;; This function is called by:
  3265 ;;		_vfpfcnvrt
  3266 ;; This function uses a non-reentrant model
  3267 ;;
  3268                           
  3269                           	psect	text12
  3270   001E6A                     __ptext12:
  3271                           	callstack 0
  3272   001E6A                     _atoi:
  3273                           	callstack 25
  3274   001E6A  0E00               	movlw	0
  3275   001E6C  6E0F               	movwf	(atoi@n+1)^0,c
  3276   001E6E  0E00               	movlw	0
  3277   001E70  6E0E               	movwf	atoi@n^0,c
  3278   001E72  0E00               	movlw	0
  3279   001E74  6E0D               	movwf	(atoi@neg+1)^0,c
  3280   001E76  0E00               	movlw	0
  3281   001E78  6E0C               	movwf	atoi@neg^0,c
  3282   001E7A  EF41  F00F         	goto	l2170
  3283   001E7E                     l2166:
  3284   001E7E  4A07               	infsnz	atoi@s^0,f,c
  3285   001E80  2A08               	incf	(atoi@s+1)^0,f,c
  3286   001E82                     l2170:
  3287   001E82  C007  FFF6         	movff	atoi@s,tblptrl
  3288   001E86  C008  FFF7         	movff	atoi@s+1,tblptrh
  3289   001E8A                     	if	0	;tblptru may be non-zero
  3290   001E8A                     	endif
  3291   001E8A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3292   001E8A  0E00               	movlw	low (__mediumconst shr (0+16))
  3293   001E8C  6EF8               	movwf	tblptru,c
  3294   001E8E                     	endif
  3295   001E8E  0008               	tblrd		*
  3296   001E90  50F5               	movf	tablat,w,c
  3297   001E92  0A20               	xorlw	32
  3298   001E94  B4D8               	btfsc	status,2,c
  3299   001E96  EF4F  F00F         	goto	u1791
  3300   001E9A  EF51  F00F         	goto	u1790
  3301   001E9E                     u1791:
  3302   001E9E  EF3F  F00F         	goto	l2166
  3303   001EA2                     u1790:
  3304   001EA2  C007  FFF6         	movff	atoi@s,tblptrl
  3305   001EA6  C008  FFF7         	movff	atoi@s+1,tblptrh
  3306   001EAA                     	if	0	;tblptru may be non-zero
  3307   001EAA                     	endif
  3308   001EAA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3309   001EAA  0E00               	movlw	low (__mediumconst shr (0+16))
  3310   001EAC  6EF8               	movwf	tblptru,c
  3311   001EAE                     	endif
  3312   001EAE  0008               	tblrd		*
  3313   001EB0  CFF5 F009          	movff	tablat,??_atoi
  3314   001EB4  0EF7               	movlw	247
  3315   001EB6  2409               	addwf	??_atoi^0,w,c
  3316   001EB8  6E0A               	movwf	(??_atoi+1)^0,c
  3317   001EBA  6A0B               	clrf	(??_atoi+2)^0,c
  3318   001EBC  0EFF               	movlw	255
  3319   001EBE  220B               	addwfc	(??_atoi+2)^0,f,c
  3320   001EC0  500B               	movf	(??_atoi+2)^0,w,c
  3321   001EC2  E109               	bnz	u1800
  3322   001EC4  0E05               	movlw	5
  3323   001EC6  5C0A               	subwf	(??_atoi+1)^0,w,c
  3324   001EC8  A0D8               	btfss	status,0,c
  3325   001ECA  EF69  F00F         	goto	u1801
  3326   001ECE  EF6B  F00F         	goto	u1800
  3327   001ED2                     u1801:
  3328   001ED2  EF3F  F00F         	goto	l2166
  3329   001ED6                     u1800:
  3330   001ED6  EF75  F00F         	goto	l2178
  3331   001EDA                     l2174:
  3332   001EDA  0E00               	movlw	0
  3333   001EDC  6E0D               	movwf	(atoi@neg+1)^0,c
  3334   001EDE  0E01               	movlw	1
  3335   001EE0  6E0C               	movwf	atoi@neg^0,c
  3336   001EE2                     l2176:
  3337   001EE2  4A07               	infsnz	atoi@s^0,f,c
  3338   001EE4  2A08               	incf	(atoi@s+1)^0,f,c
  3339   001EE6  EFAE  F00F         	goto	l2186
  3340   001EEA                     l2178:
  3341   001EEA  C007  FFF6         	movff	atoi@s,tblptrl
  3342   001EEE  C008  FFF7         	movff	atoi@s+1,tblptrh
  3343   001EF2                     	if	0	;tblptru may be non-zero
  3344   001EF2                     	endif
  3345   001EF2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3346   001EF2  0E00               	movlw	low (__mediumconst shr (0+16))
  3347   001EF4  6EF8               	movwf	tblptru,c
  3348   001EF6                     	endif
  3349   001EF6  0008               	tblrd		*
  3350   001EF8  50F5               	movf	tablat,w,c
  3351   001EFA  6E09               	movwf	??_atoi^0,c
  3352   001EFC  6A0A               	clrf	(??_atoi+1)^0,c
  3353                           
  3354                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3355                           ; Switch size 1, requested type "simple"
  3356                           ; Number of cases is 1, Range of values is 0 to 0
  3357                           ; switch strategies available:
  3358                           ; Name         Instructions Cycles
  3359                           ; simple_byte            4     3 (average)
  3360                           ;	Chosen strategy is simple_byte
  3361   001EFE  500A               	movf	(??_atoi+1)^0,w,c
  3362   001F00  0A00               	xorlw	0	; case 0
  3363   001F02  B4D8               	btfsc	status,2,c
  3364   001F04  EF86  F00F         	goto	l2738
  3365   001F08  EFAE  F00F         	goto	l2186
  3366   001F0C                     l2738:
  3367                           
  3368                           ; Switch size 1, requested type "simple"
  3369                           ; Number of cases is 2, Range of values is 43 to 45
  3370                           ; switch strategies available:
  3371                           ; Name         Instructions Cycles
  3372                           ; simple_byte            7     4 (average)
  3373                           ;	Chosen strategy is simple_byte
  3374   001F0C  5009               	movf	??_atoi^0,w,c
  3375   001F0E  0A2B               	xorlw	43	; case 43
  3376   001F10  B4D8               	btfsc	status,2,c
  3377   001F12  EF71  F00F         	goto	l2176
  3378   001F16  0A06               	xorlw	6	; case 45
  3379   001F18  B4D8               	btfsc	status,2,c
  3380   001F1A  EF6D  F00F         	goto	l2174
  3381   001F1E  EFAE  F00F         	goto	l2186
  3382   001F22                     l2180:
  3383   001F22  C00E  F001         	movff	atoi@n,___wmul@multiplier
  3384   001F26  C00F  F002         	movff	atoi@n+1,___wmul@multiplier+1
  3385   001F2A  0E00               	movlw	0
  3386   001F2C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3387   001F2E  0E0A               	movlw	10
  3388   001F30  6E03               	movwf	___wmul@multiplicand^0,c
  3389   001F32  EC20  F013         	call	___wmul	;wreg free
  3390   001F36  C007  FFF6         	movff	atoi@s,tblptrl
  3391   001F3A  C008  FFF7         	movff	atoi@s+1,tblptrh
  3392   001F3E                     	if	0	;tblptru may be non-zero
  3393   001F3E                     	endif
  3394   001F3E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3395   001F3E  0E00               	movlw	low (__mediumconst shr (0+16))
  3396   001F40  6EF8               	movwf	tblptru,c
  3397   001F42                     	endif
  3398   001F42  0008               	tblrd		*
  3399   001F44  50F5               	movf	tablat,w,c
  3400   001F46  5E01               	subwf	?___wmul^0,f,c
  3401   001F48  0E00               	movlw	0
  3402   001F4A  5A02               	subwfb	(?___wmul+1)^0,f,c
  3403   001F4C  0E30               	movlw	48
  3404   001F4E  2401               	addwf	?___wmul^0,w,c
  3405   001F50  6E0E               	movwf	atoi@n^0,c
  3406   001F52  0E00               	movlw	0
  3407   001F54  2002               	addwfc	(?___wmul+1)^0,w,c
  3408   001F56  6E0F               	movwf	(atoi@n+1)^0,c
  3409   001F58  EF71  F00F         	goto	l2176
  3410   001F5C                     l2186:
  3411   001F5C  C007  FFF6         	movff	atoi@s,tblptrl
  3412   001F60  C008  FFF7         	movff	atoi@s+1,tblptrh
  3413   001F64                     	if	0	;tblptru may be non-zero
  3414   001F64                     	endif
  3415   001F64                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3416   001F64  0E00               	movlw	low (__mediumconst shr (0+16))
  3417   001F66  6EF8               	movwf	tblptru,c
  3418   001F68                     	endif
  3419   001F68  0008               	tblrd		*
  3420   001F6A  CFF5 F009          	movff	tablat,??_atoi
  3421   001F6E  0ED0               	movlw	208
  3422   001F70  2409               	addwf	??_atoi^0,w,c
  3423   001F72  6E0A               	movwf	(??_atoi+1)^0,c
  3424   001F74  6A0B               	clrf	(??_atoi+2)^0,c
  3425   001F76  0EFF               	movlw	255
  3426   001F78  220B               	addwfc	(??_atoi+2)^0,f,c
  3427   001F7A  500B               	movf	(??_atoi+2)^0,w,c
  3428   001F7C  E109               	bnz	u1810
  3429   001F7E  0E0A               	movlw	10
  3430   001F80  5C0A               	subwf	(??_atoi+1)^0,w,c
  3431   001F82  A0D8               	btfss	status,0,c
  3432   001F84  EFC6  F00F         	goto	u1811
  3433   001F88  EFC8  F00F         	goto	u1810
  3434   001F8C                     u1811:
  3435   001F8C  EF91  F00F         	goto	l2180
  3436   001F90                     u1810:
  3437   001F90  500C               	movf	atoi@neg^0,w,c
  3438   001F92  100D               	iorwf	(atoi@neg+1)^0,w,c
  3439   001F94  A4D8               	btfss	status,2,c
  3440   001F96  EFCF  F00F         	goto	u1821
  3441   001F9A  EFD1  F00F         	goto	u1820
  3442   001F9E                     u1821:
  3443   001F9E  EFDF  F00F         	goto	l1110
  3444   001FA2                     u1820:
  3445   001FA2  C00E  F009         	movff	atoi@n,??_atoi
  3446   001FA6  C00F  F00A         	movff	atoi@n+1,??_atoi+1
  3447   001FAA  1E09               	comf	??_atoi^0,f,c
  3448   001FAC  1E0A               	comf	(??_atoi+1)^0,f,c
  3449   001FAE  4A09               	infsnz	??_atoi^0,f,c
  3450   001FB0  2A0A               	incf	(??_atoi+1)^0,f,c
  3451   001FB2  C009  F007         	movff	??_atoi,?_atoi
  3452   001FB6  C00A  F008         	movff	??_atoi+1,?_atoi+1
  3453   001FBA  EFE3  F00F         	goto	l1113
  3454   001FBE                     l1110:
  3455   001FBE  C00E  F007         	movff	atoi@n,?_atoi
  3456   001FC2  C00F  F008         	movff	atoi@n+1,?_atoi+1
  3457   001FC6                     l1113:
  3458   001FC6  0012               	return		;funcret
  3459   001FC8                     __end_of_atoi:
  3460                           	callstack 0
  3461                           
  3462 ;; *************** function _isspace *****************
  3463 ;; Defined at:
  3464 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  3465 ;; Parameters:    Size  Location     Type
  3466 ;;  c               2    0[COMRAM] int 
  3467 ;; Auto vars:     Size  Location     Type
  3468 ;;		None
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  2    0[COMRAM] int 
  3471 ;; Registers used:
  3472 ;;		wreg, status,2, status,0
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3478 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3479 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3480 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3481 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3482 ;;Total ram usage:        5 bytes
  3483 ;; Hardware stack levels used: 1
  3484 ;; Hardware stack levels required when called: 1
  3485 ;; This function calls:
  3486 ;;		Nothing
  3487 ;; This function is called by:
  3488 ;;		_atoi
  3489 ;; This function uses a non-reentrant model
  3490 ;;
  3491                           
  3492                           	psect	text13
  3493   00247E                     __ptext13:
  3494                           	callstack 0
  3495   00247E                     _isspace:
  3496                           	callstack 25
  3497   00247E  0E01               	movlw	1
  3498   002480  6E05               	movwf	_isspace$1936^0,c
  3499   002482  0E20               	movlw	32
  3500   002484  1801               	xorwf	isspace@c^0,w,c
  3501   002486  1002               	iorwf	(isspace@c+1)^0,w,c
  3502   002488  B4D8               	btfsc	status,2,c
  3503   00248A  EF49  F012         	goto	u1641
  3504   00248E  EF4B  F012         	goto	u1640
  3505   002492                     u1641:
  3506   002492  EF5E  F012         	goto	l2094
  3507   002496                     u1640:
  3508   002496  0EF7               	movlw	247
  3509   002498  2401               	addwf	isspace@c^0,w,c
  3510   00249A  6E03               	movwf	??_isspace^0,c
  3511   00249C  0EFF               	movlw	255
  3512   00249E  2002               	addwfc	(isspace@c+1)^0,w,c
  3513   0024A0  6E04               	movwf	(??_isspace+1)^0,c
  3514   0024A2  5004               	movf	(??_isspace+1)^0,w,c
  3515   0024A4  E109               	bnz	u1650
  3516   0024A6  0E05               	movlw	5
  3517   0024A8  5C03               	subwf	??_isspace^0,w,c
  3518   0024AA  A0D8               	btfss	status,0,c
  3519   0024AC  EF5A  F012         	goto	u1651
  3520   0024B0  EF5C  F012         	goto	u1650
  3521   0024B4                     u1651:
  3522   0024B4  EF5E  F012         	goto	l2094
  3523   0024B8                     u1650:
  3524   0024B8  0E00               	movlw	0
  3525   0024BA  6E05               	movwf	_isspace$1936^0,c
  3526   0024BC                     l2094:
  3527   0024BC  C005  F001         	movff	_isspace$1936,?_isspace
  3528   0024C0  6A02               	clrf	(?_isspace+1)^0,c
  3529   0024C2  0012               	return		;funcret
  3530   0024C4                     __end_of_isspace:
  3531                           	callstack 0
  3532                           
  3533 ;; *************** function _isdigit *****************
  3534 ;; Defined at:
  3535 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  3536 ;; Parameters:    Size  Location     Type
  3537 ;;  c               2    0[COMRAM] int 
  3538 ;; Auto vars:     Size  Location     Type
  3539 ;;		None
  3540 ;; Return value:  Size  Location     Type
  3541 ;;                  2    0[COMRAM] int 
  3542 ;; Registers used:
  3543 ;;		wreg, status,2, status,0
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3549 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3551 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3552 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3553 ;;Total ram usage:        4 bytes
  3554 ;; Hardware stack levels used: 1
  3555 ;; Hardware stack levels required when called: 1
  3556 ;; This function calls:
  3557 ;;		Nothing
  3558 ;; This function is called by:
  3559 ;;		_vfpfcnvrt
  3560 ;;		_atoi
  3561 ;; This function uses a non-reentrant model
  3562 ;;
  3563                           
  3564                           	psect	text14
  3565   0025EC                     __ptext14:
  3566                           	callstack 0
  3567   0025EC                     _isdigit:
  3568                           	callstack 26
  3569   0025EC  0ED0               	movlw	208
  3570   0025EE  2401               	addwf	isdigit@c^0,w,c
  3571   0025F0  6E03               	movwf	??_isdigit^0,c
  3572   0025F2  0EFF               	movlw	255
  3573   0025F4  2002               	addwfc	(isdigit@c+1)^0,w,c
  3574   0025F6  6E04               	movwf	(??_isdigit+1)^0,c
  3575   0025F8  5004               	movf	(??_isdigit+1)^0,w,c
  3576   0025FA  E10A               	bnz	u1620
  3577   0025FC  0E0A               	movlw	10
  3578   0025FE  5C03               	subwf	??_isdigit^0,w,c
  3579   002600  A0D8               	btfss	status,0,c
  3580   002602  EF05  F013         	goto	u1621
  3581   002606  EF08  F013         	goto	u1620
  3582   00260A                     u1621:
  3583   00260A  0E01               	movlw	1
  3584   00260C  EF09  F013         	goto	u1630
  3585   002610                     u1620:
  3586   002610  0E00               	movlw	0
  3587   002612                     u1630:
  3588   002612  6E01               	movwf	?_isdigit^0,c
  3589   002614  6A02               	clrf	(?_isdigit+1)^0,c
  3590   002616  0012               	return		;funcret
  3591   002618                     __end_of_isdigit:
  3592                           	callstack 0
  3593                           
  3594 ;; *************** function ___wmul *****************
  3595 ;; Defined at:
  3596 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;  multiplier      2    0[COMRAM] unsigned int 
  3599 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3600 ;; Auto vars:     Size  Location     Type
  3601 ;;  product         2    4[COMRAM] unsigned int 
  3602 ;; Return value:  Size  Location     Type
  3603 ;;                  2    0[COMRAM] unsigned int 
  3604 ;; Registers used:
  3605 ;;		wreg, status,2, status,0, prodl, prodh
  3606 ;; Tracked objects:
  3607 ;;		On entry : 0/0
  3608 ;;		On exit  : 0/0
  3609 ;;		Unchanged: 0/0
  3610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3611 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3612 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3614 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3615 ;;Total ram usage:        6 bytes
  3616 ;; Hardware stack levels used: 1
  3617 ;; Hardware stack levels required when called: 1
  3618 ;; This function calls:
  3619 ;;		Nothing
  3620 ;; This function is called by:
  3621 ;;		_main
  3622 ;;		_atoi
  3623 ;;		_ADC2String
  3624 ;; This function uses a non-reentrant model
  3625 ;;
  3626                           
  3627                           	psect	text15
  3628   002640                     __ptext15:
  3629                           	callstack 0
  3630   002640                     ___wmul:
  3631                           	callstack 25
  3632   002640  5001               	movf	___wmul@multiplier^0,w,c
  3633   002642  0203               	mulwf	___wmul@multiplicand^0,c
  3634   002644  CFF3 F005          	movff	prodl,___wmul@product
  3635   002648  CFF4 F006          	movff	prodh,___wmul@product+1
  3636   00264C  5001               	movf	___wmul@multiplier^0,w,c
  3637   00264E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3638   002650  50F3               	movf	243,w,c
  3639   002652  2606               	addwf	(___wmul@product+1)^0,f,c
  3640   002654  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3641   002656  0203               	mulwf	___wmul@multiplicand^0,c
  3642   002658  50F3               	movf	243,w,c
  3643   00265A  2606               	addwf	(___wmul@product+1)^0,f,c
  3644   00265C  C005  F001         	movff	___wmul@product,?___wmul
  3645   002660  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3646   002664  0012               	return		;funcret
  3647   002666                     __end_of___wmul:
  3648                           	callstack 0
  3649                           
  3650 ;; *************** function _check_month *****************
  3651 ;; Defined at:
  3652 ;;		line 12 in file "../MonthTracker.c"
  3653 ;; Parameters:    Size  Location     Type
  3654 ;;  month           2   11[COMRAM] PTR unsigned int 
  3655 ;;		 -> main@month(2), 
  3656 ;;  month_day       2   13[COMRAM] PTR unsigned int 
  3657 ;;		 -> main@month_day(2), 
  3658 ;;  year            2   15[COMRAM] PTR unsigned short 
  3659 ;;		 -> main@year(2), 
  3660 ;; Auto vars:     Size  Location     Type
  3661 ;;  leap_year       2   19[COMRAM] int 
  3662 ;; Return value:  Size  Location     Type
  3663 ;;                  1    wreg      void 
  3664 ;; Registers used:
  3665 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3666 ;; Tracked objects:
  3667 ;;		On entry : 0/0
  3668 ;;		On exit  : 0/0
  3669 ;;		Unchanged: 0/0
  3670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3671 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3672 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3673 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3674 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3675 ;;Total ram usage:       10 bytes
  3676 ;; Hardware stack levels used: 1
  3677 ;; Hardware stack levels required when called: 2
  3678 ;; This function calls:
  3679 ;;		___lwmod
  3680 ;; This function is called by:
  3681 ;;		_main
  3682 ;; This function uses a non-reentrant model
  3683 ;;
  3684                           
  3685                           	psect	text16
  3686   0012DA                     __ptext16:
  3687                           	callstack 0
  3688   0012DA                     _check_month:
  3689                           	callstack 28
  3690   0012DA                     
  3691                           ;../MonthTracker.c: 16:         if ((*month == 1 || *month == 3 || *month == 5 || *month
      +                           == 7 || *month == 8|| *month == 10 || *month == 12) && *month_day == 32){
  3692   0012DA  C00C  FFD9         	movff	check_month@month,fsr2l
  3693   0012DE  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3694   0012E2  04DE               	decf	postinc2,w,c
  3695   0012E4  10DE               	iorwf	postinc2,w,c
  3696   0012E6  B4D8               	btfsc	status,2,c
  3697   0012E8  EF78  F009         	goto	u2111
  3698   0012EC  EF7A  F009         	goto	u2110
  3699   0012F0                     u2111:
  3700   0012F0  EFCE  F009         	goto	l2450
  3701   0012F4                     u2110:
  3702   0012F4  C00C  FFD9         	movff	check_month@month,fsr2l
  3703   0012F8  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3704   0012FC  0E03               	movlw	3
  3705   0012FE  18DE               	xorwf	postinc2,w,c
  3706   001300  10DE               	iorwf	postinc2,w,c
  3707   001302  B4D8               	btfsc	status,2,c
  3708   001304  EF86  F009         	goto	u2121
  3709   001308  EF88  F009         	goto	u2120
  3710   00130C                     u2121:
  3711   00130C  EFCE  F009         	goto	l2450
  3712   001310                     u2120:
  3713   001310  C00C  FFD9         	movff	check_month@month,fsr2l
  3714   001314  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3715   001318  0E05               	movlw	5
  3716   00131A  18DE               	xorwf	postinc2,w,c
  3717   00131C  10DE               	iorwf	postinc2,w,c
  3718   00131E  B4D8               	btfsc	status,2,c
  3719   001320  EF94  F009         	goto	u2131
  3720   001324  EF96  F009         	goto	u2130
  3721   001328                     u2131:
  3722   001328  EFCE  F009         	goto	l2450
  3723   00132C                     u2130:
  3724   00132C  C00C  FFD9         	movff	check_month@month,fsr2l
  3725   001330  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3726   001334  0E07               	movlw	7
  3727   001336  18DE               	xorwf	postinc2,w,c
  3728   001338  10DE               	iorwf	postinc2,w,c
  3729   00133A  B4D8               	btfsc	status,2,c
  3730   00133C  EFA2  F009         	goto	u2141
  3731   001340  EFA4  F009         	goto	u2140
  3732   001344                     u2141:
  3733   001344  EFCE  F009         	goto	l2450
  3734   001348                     u2140:
  3735   001348  C00C  FFD9         	movff	check_month@month,fsr2l
  3736   00134C  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3737   001350  0E08               	movlw	8
  3738   001352  18DE               	xorwf	postinc2,w,c
  3739   001354  10DE               	iorwf	postinc2,w,c
  3740   001356  B4D8               	btfsc	status,2,c
  3741   001358  EFB0  F009         	goto	u2151
  3742   00135C  EFB2  F009         	goto	u2150
  3743   001360                     u2151:
  3744   001360  EFCE  F009         	goto	l2450
  3745   001364                     u2150:
  3746   001364  C00C  FFD9         	movff	check_month@month,fsr2l
  3747   001368  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3748   00136C  0E0A               	movlw	10
  3749   00136E  18DE               	xorwf	postinc2,w,c
  3750   001370  10DE               	iorwf	postinc2,w,c
  3751   001372  B4D8               	btfsc	status,2,c
  3752   001374  EFBE  F009         	goto	u2161
  3753   001378  EFC0  F009         	goto	u2160
  3754   00137C                     u2161:
  3755   00137C  EFCE  F009         	goto	l2450
  3756   001380                     u2160:
  3757   001380  C00C  FFD9         	movff	check_month@month,fsr2l
  3758   001384  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3759   001388  0E0C               	movlw	12
  3760   00138A  18DE               	xorwf	postinc2,w,c
  3761   00138C  10DE               	iorwf	postinc2,w,c
  3762   00138E  A4D8               	btfss	status,2,c
  3763   001390  EFCC  F009         	goto	u2171
  3764   001394  EFCE  F009         	goto	u2170
  3765   001398                     u2171:
  3766   001398  EF08  F00A         	goto	l2462
  3767   00139C                     u2170:
  3768   00139C                     l2450:
  3769   00139C  C00E  FFD9         	movff	check_month@month_day,fsr2l
  3770   0013A0  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  3771   0013A4  0E20               	movlw	32
  3772   0013A6  18DE               	xorwf	postinc2,w,c
  3773   0013A8  10DE               	iorwf	postinc2,w,c
  3774   0013AA  A4D8               	btfss	status,2,c
  3775   0013AC  EFDA  F009         	goto	u2181
  3776   0013B0  EFDC  F009         	goto	u2180
  3777   0013B4                     u2181:
  3778   0013B4  EF08  F00A         	goto	l2462
  3779   0013B8                     u2180:
  3780   0013B8                     
  3781                           ;../MonthTracker.c: 18:             *month_day = 1;
  3782   0013B8  C00E  FFD9         	movff	check_month@month_day,fsr2l
  3783   0013BC  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  3784   0013C0  0E01               	movlw	1
  3785   0013C2  6EDE               	movwf	postinc2,c
  3786   0013C4  0E00               	movlw	0
  3787   0013C6  6EDD               	movwf	postdec2,c
  3788   0013C8                     
  3789                           ;../MonthTracker.c: 19:             (*month)++;
  3790   0013C8  C00C  FFD9         	movff	check_month@month,fsr2l
  3791   0013CC  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3792   0013D0  2ADE               	incf	postinc2,f,c
  3793   0013D2  0E00               	movlw	0
  3794   0013D4  22DD               	addwfc	postdec2,f,c
  3795   0013D6                     
  3796                           ;../MonthTracker.c: 20:             if (*month == 13){
  3797   0013D6  C00C  FFD9         	movff	check_month@month,fsr2l
  3798   0013DA  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3799   0013DE  0E0D               	movlw	13
  3800   0013E0  18DE               	xorwf	postinc2,w,c
  3801   0013E2  10DE               	iorwf	postinc2,w,c
  3802   0013E4  A4D8               	btfss	status,2,c
  3803   0013E6  EFF7  F009         	goto	u2191
  3804   0013EA  EFF9  F009         	goto	u2190
  3805   0013EE                     u2191:
  3806   0013EE  EF08  F00A         	goto	l2462
  3807   0013F2                     u2190:
  3808   0013F2                     
  3809                           ;../MonthTracker.c: 21:                 *month = 1;
  3810   0013F2  C00C  FFD9         	movff	check_month@month,fsr2l
  3811   0013F6  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3812   0013FA  0E01               	movlw	1
  3813   0013FC  6EDE               	movwf	postinc2,c
  3814   0013FE  0E00               	movlw	0
  3815   001400  6EDD               	movwf	postdec2,c
  3816   001402                     
  3817                           ;../MonthTracker.c: 22:                 (*year)++;
  3818   001402  C010  FFD9         	movff	check_month@year,fsr2l
  3819   001406  C011  FFDA         	movff	check_month@year+1,fsr2h
  3820   00140A  2ADE               	incf	postinc2,f,c
  3821   00140C  0E00               	movlw	0
  3822   00140E  22DD               	addwfc	postdec2,f,c
  3823   001410                     l2462:
  3824                           
  3825                           ;../MonthTracker.c: 26:         if ((*month == 4 || *month == 6 || *month == 9 || *month
      +                           == 11) && *month_day == 31){
  3826   001410  C00C  FFD9         	movff	check_month@month,fsr2l
  3827   001414  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3828   001418  0E04               	movlw	4
  3829   00141A  18DE               	xorwf	postinc2,w,c
  3830   00141C  10DE               	iorwf	postinc2,w,c
  3831   00141E  B4D8               	btfsc	status,2,c
  3832   001420  EF14  F00A         	goto	u2201
  3833   001424  EF16  F00A         	goto	u2200
  3834   001428                     u2201:
  3835   001428  EF40  F00A         	goto	l2470
  3836   00142C                     u2200:
  3837   00142C  C00C  FFD9         	movff	check_month@month,fsr2l
  3838   001430  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3839   001434  0E06               	movlw	6
  3840   001436  18DE               	xorwf	postinc2,w,c
  3841   001438  10DE               	iorwf	postinc2,w,c
  3842   00143A  B4D8               	btfsc	status,2,c
  3843   00143C  EF22  F00A         	goto	u2211
  3844   001440  EF24  F00A         	goto	u2210
  3845   001444                     u2211:
  3846   001444  EF40  F00A         	goto	l2470
  3847   001448                     u2210:
  3848   001448  C00C  FFD9         	movff	check_month@month,fsr2l
  3849   00144C  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3850   001450  0E09               	movlw	9
  3851   001452  18DE               	xorwf	postinc2,w,c
  3852   001454  10DE               	iorwf	postinc2,w,c
  3853   001456  B4D8               	btfsc	status,2,c
  3854   001458  EF30  F00A         	goto	u2221
  3855   00145C  EF32  F00A         	goto	u2220
  3856   001460                     u2221:
  3857   001460  EF40  F00A         	goto	l2470
  3858   001464                     u2220:
  3859   001464  C00C  FFD9         	movff	check_month@month,fsr2l
  3860   001468  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3861   00146C  0E0B               	movlw	11
  3862   00146E  18DE               	xorwf	postinc2,w,c
  3863   001470  10DE               	iorwf	postinc2,w,c
  3864   001472  A4D8               	btfss	status,2,c
  3865   001474  EF3E  F00A         	goto	u2231
  3866   001478  EF40  F00A         	goto	u2230
  3867   00147C                     u2231:
  3868   00147C  EF5D  F00A         	goto	l2476
  3869   001480                     u2230:
  3870   001480                     l2470:
  3871   001480  C00E  FFD9         	movff	check_month@month_day,fsr2l
  3872   001484  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  3873   001488  0E1F               	movlw	31
  3874   00148A  18DE               	xorwf	postinc2,w,c
  3875   00148C  10DE               	iorwf	postinc2,w,c
  3876   00148E  A4D8               	btfss	status,2,c
  3877   001490  EF4C  F00A         	goto	u2241
  3878   001494  EF4E  F00A         	goto	u2240
  3879   001498                     u2241:
  3880   001498  EF5D  F00A         	goto	l2476
  3881   00149C                     u2240:
  3882   00149C                     
  3883                           ;../MonthTracker.c: 28:             *month_day = 1;
  3884   00149C  C00E  FFD9         	movff	check_month@month_day,fsr2l
  3885   0014A0  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  3886   0014A4  0E01               	movlw	1
  3887   0014A6  6EDE               	movwf	postinc2,c
  3888   0014A8  0E00               	movlw	0
  3889   0014AA  6EDD               	movwf	postdec2,c
  3890   0014AC                     
  3891                           ;../MonthTracker.c: 29:             (*month)++;
  3892   0014AC  C00C  FFD9         	movff	check_month@month,fsr2l
  3893   0014B0  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3894   0014B4  2ADE               	incf	postinc2,f,c
  3895   0014B6  0E00               	movlw	0
  3896   0014B8  22DD               	addwfc	postdec2,f,c
  3897   0014BA                     l2476:
  3898                           
  3899                           ;../MonthTracker.c: 33:         if ((*year % 4 == 0 && *year % 100 != 0) || *year % 400 
      +                          == 0) {leap_year = 1;}
  3900   0014BA  C010  FFD9         	movff	check_month@year,fsr2l
  3901   0014BE  C011  FFDA         	movff	check_month@year+1,fsr2h
  3902   0014C2  CFDE F012          	movff	postinc2,??_check_month
  3903   0014C6  CFDD F013          	movff	postdec2,??_check_month+1
  3904   0014CA  0E03               	movlw	3
  3905   0014CC  1612               	andwf	??_check_month^0,f,c
  3906   0014CE  0E00               	movlw	0
  3907   0014D0  1613               	andwf	(??_check_month+1)^0,f,c
  3908   0014D2  5012               	movf	??_check_month^0,w,c
  3909   0014D4  1013               	iorwf	(??_check_month+1)^0,w,c
  3910   0014D6  A4D8               	btfss	status,2,c
  3911   0014D8  EF70  F00A         	goto	u2251
  3912   0014DC  EF72  F00A         	goto	u2250
  3913   0014E0                     u2251:
  3914   0014E0  EF89  F00A         	goto	l2480
  3915   0014E4                     u2250:
  3916   0014E4  C010  FFD9         	movff	check_month@year,fsr2l
  3917   0014E8  C011  FFDA         	movff	check_month@year+1,fsr2h
  3918   0014EC  CFDE F007          	movff	postinc2,___lwmod@dividend
  3919   0014F0  CFDD F008          	movff	postdec2,___lwmod@dividend+1
  3920   0014F4  0E00               	movlw	0
  3921   0014F6  6E0A               	movwf	(___lwmod@divisor+1)^0,c
  3922   0014F8  0E64               	movlw	100
  3923   0014FA  6E09               	movwf	___lwmod@divisor^0,c
  3924   0014FC  ECBB  F011         	call	___lwmod	;wreg free
  3925   001500  5007               	movf	?___lwmod^0,w,c
  3926   001502  1008               	iorwf	(?___lwmod+1)^0,w,c
  3927   001504  A4D8               	btfss	status,2,c
  3928   001506  EF87  F00A         	goto	u2261
  3929   00150A  EF89  F00A         	goto	u2260
  3930   00150E                     u2261:
  3931   00150E  EFA0  F00A         	goto	l2482
  3932   001512                     u2260:
  3933   001512                     l2480:
  3934   001512  C010  FFD9         	movff	check_month@year,fsr2l
  3935   001516  C011  FFDA         	movff	check_month@year+1,fsr2h
  3936   00151A  CFDE F007          	movff	postinc2,___lwmod@dividend
  3937   00151E  CFDD F008          	movff	postdec2,___lwmod@dividend+1
  3938   001522  0E01               	movlw	1
  3939   001524  6E0A               	movwf	(___lwmod@divisor+1)^0,c
  3940   001526  0E90               	movlw	144
  3941   001528  6E09               	movwf	___lwmod@divisor^0,c
  3942   00152A  ECBB  F011         	call	___lwmod	;wreg free
  3943   00152E  5007               	movf	?___lwmod^0,w,c
  3944   001530  1008               	iorwf	(?___lwmod+1)^0,w,c
  3945   001532  A4D8               	btfss	status,2,c
  3946   001534  EF9E  F00A         	goto	u2271
  3947   001538  EFA0  F00A         	goto	u2270
  3948   00153C                     u2271:
  3949   00153C  EFA6  F00A         	goto	l2484
  3950   001540                     u2270:
  3951   001540                     l2482:
  3952   001540  0E00               	movlw	0
  3953   001542  6E15               	movwf	(check_month@leap_year+1)^0,c
  3954   001544  0E01               	movlw	1
  3955   001546  6E14               	movwf	check_month@leap_year^0,c
  3956   001548  EFAA  F00A         	goto	l2486
  3957   00154C                     l2484:
  3958   00154C  0E00               	movlw	0
  3959   00154E  6E15               	movwf	(check_month@leap_year+1)^0,c
  3960   001550  0E00               	movlw	0
  3961   001552  6E14               	movwf	check_month@leap_year^0,c
  3962   001554                     l2486:
  3963                           
  3964                           ;../MonthTracker.c: 36:         if (*month == 2 && leap_year == 1){
  3965   001554  C00C  FFD9         	movff	check_month@month,fsr2l
  3966   001558  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3967   00155C  0E02               	movlw	2
  3968   00155E  18DE               	xorwf	postinc2,w,c
  3969   001560  10DE               	iorwf	postinc2,w,c
  3970   001562  A4D8               	btfss	status,2,c
  3971   001564  EFB6  F00A         	goto	u2281
  3972   001568  EFB8  F00A         	goto	u2280
  3973   00156C                     u2281:
  3974   00156C  EF07  F00B         	goto	l257
  3975   001570                     u2280:
  3976   001570  0414               	decf	check_month@leap_year^0,w,c
  3977   001572  1015               	iorwf	(check_month@leap_year+1)^0,w,c
  3978   001574  A4D8               	btfss	status,2,c
  3979   001576  EFBF  F00A         	goto	u2291
  3980   00157A  EFC1  F00A         	goto	u2290
  3981   00157E                     u2291:
  3982   00157E  EF07  F00B         	goto	l257
  3983   001582                     u2290:
  3984   001582                     
  3985                           ;../MonthTracker.c: 38:             if (*month_day == 30){
  3986   001582  C00E  FFD9         	movff	check_month@month_day,fsr2l
  3987   001586  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  3988   00158A  0E1E               	movlw	30
  3989   00158C  18DE               	xorwf	postinc2,w,c
  3990   00158E  10DE               	iorwf	postinc2,w,c
  3991   001590  A4D8               	btfss	status,2,c
  3992   001592  EFCD  F00A         	goto	u2301
  3993   001596  EFCF  F00A         	goto	u2300
  3994   00159A                     u2301:
  3995   00159A  EFE0  F00A         	goto	l2496
  3996   00159E                     u2300:
  3997   00159E                     l2492:
  3998                           
  3999                           ;../MonthTracker.c: 39:                 *month_day = 1;
  4000   00159E  C00E  FFD9         	movff	check_month@month_day,fsr2l
  4001   0015A2  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  4002   0015A6  0E01               	movlw	1
  4003   0015A8  6EDE               	movwf	postinc2,c
  4004   0015AA  0E00               	movlw	0
  4005   0015AC  6EDD               	movwf	postdec2,c
  4006   0015AE                     
  4007                           ;../MonthTracker.c: 40:                 (*month)++;
  4008   0015AE  C00C  FFD9         	movff	check_month@month,fsr2l
  4009   0015B2  C00D  FFDA         	movff	check_month@month+1,fsr2h
  4010   0015B6  2ADE               	incf	postinc2,f,c
  4011   0015B8  0E00               	movlw	0
  4012   0015BA  22DD               	addwfc	postdec2,f,c
  4013                           
  4014                           ;../MonthTracker.c: 41:             }
  4015   0015BC  EF07  F00B         	goto	l257
  4016   0015C0                     l2496:
  4017   0015C0  C00C  FFD9         	movff	check_month@month,fsr2l
  4018   0015C4  C00D  FFDA         	movff	check_month@month+1,fsr2h
  4019   0015C8  0E02               	movlw	2
  4020   0015CA  18DE               	xorwf	postinc2,w,c
  4021   0015CC  10DE               	iorwf	postinc2,w,c
  4022   0015CE  A4D8               	btfss	status,2,c
  4023   0015D0  EFEC  F00A         	goto	u2311
  4024   0015D4  EFEE  F00A         	goto	u2310
  4025   0015D8                     u2311:
  4026   0015D8  EF07  F00B         	goto	l257
  4027   0015DC                     u2310:
  4028   0015DC  5014               	movf	check_month@leap_year^0,w,c
  4029   0015DE  1015               	iorwf	(check_month@leap_year+1)^0,w,c
  4030   0015E0  A4D8               	btfss	status,2,c
  4031   0015E2  EFF5  F00A         	goto	u2321
  4032   0015E6  EFF7  F00A         	goto	u2320
  4033   0015EA                     u2321:
  4034   0015EA  EF07  F00B         	goto	l257
  4035   0015EE                     u2320:
  4036   0015EE                     
  4037                           ;../MonthTracker.c: 43:             if (*month_day == 29){
  4038   0015EE  C00E  FFD9         	movff	check_month@month_day,fsr2l
  4039   0015F2  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  4040   0015F6  0E1D               	movlw	29
  4041   0015F8  18DE               	xorwf	postinc2,w,c
  4042   0015FA  10DE               	iorwf	postinc2,w,c
  4043   0015FC  A4D8               	btfss	status,2,c
  4044   0015FE  EF03  F00B         	goto	u2331
  4045   001602  EF05  F00B         	goto	u2330
  4046   001606                     u2331:
  4047   001606  EF07  F00B         	goto	l254
  4048   00160A                     u2330:
  4049   00160A  EFCF  F00A         	goto	l2492
  4050   00160E                     l254:
  4051   00160E                     l257:
  4052   00160E  0012               	return		;funcret
  4053   001610                     __end_of_check_month:
  4054                           	callstack 0
  4055                           
  4056 ;; *************** function ___lwmod *****************
  4057 ;; Defined at:
  4058 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwmod.c"
  4059 ;; Parameters:    Size  Location     Type
  4060 ;;  dividend        2    6[COMRAM] unsigned int 
  4061 ;;  divisor         2    8[COMRAM] unsigned int 
  4062 ;; Auto vars:     Size  Location     Type
  4063 ;;  counter         1   10[COMRAM] unsigned char 
  4064 ;; Return value:  Size  Location     Type
  4065 ;;                  2    6[COMRAM] unsigned int 
  4066 ;; Registers used:
  4067 ;;		wreg, status,2, status,0
  4068 ;; Tracked objects:
  4069 ;;		On entry : 0/0
  4070 ;;		On exit  : 0/0
  4071 ;;		Unchanged: 0/0
  4072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4073 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4074 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4076 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4077 ;;Total ram usage:        5 bytes
  4078 ;; Hardware stack levels used: 1
  4079 ;; Hardware stack levels required when called: 1
  4080 ;; This function calls:
  4081 ;;		Nothing
  4082 ;; This function is called by:
  4083 ;;		_main
  4084 ;;		_check_month
  4085 ;; This function uses a non-reentrant model
  4086 ;;
  4087                           
  4088                           	psect	text17
  4089   002376                     __ptext17:
  4090                           	callstack 0
  4091   002376                     ___lwmod:
  4092                           	callstack 28
  4093   002376  5009               	movf	___lwmod@divisor^0,w,c
  4094   002378  100A               	iorwf	(___lwmod@divisor+1)^0,w,c
  4095   00237A  B4D8               	btfsc	status,2,c
  4096   00237C  EFC2  F011         	goto	u1951
  4097   002380  EFC4  F011         	goto	u1950
  4098   002384                     u1951:
  4099   002384  EFE8  F011         	goto	l822
  4100   002388                     u1950:
  4101   002388  0E01               	movlw	1
  4102   00238A  6E0B               	movwf	___lwmod@counter^0,c
  4103   00238C  EFCC  F011         	goto	l2300
  4104   002390                     l2298:
  4105   002390  90D8               	bcf	status,0,c
  4106   002392  3609               	rlcf	___lwmod@divisor^0,f,c
  4107   002394  360A               	rlcf	(___lwmod@divisor+1)^0,f,c
  4108   002396  2A0B               	incf	___lwmod@counter^0,f,c
  4109   002398                     l2300:
  4110   002398  AE0A               	btfss	(___lwmod@divisor+1)^0,7,c
  4111   00239A  EFD1  F011         	goto	u1961
  4112   00239E  EFD3  F011         	goto	u1960
  4113   0023A2                     u1961:
  4114   0023A2  EFC8  F011         	goto	l2298
  4115   0023A6                     u1960:
  4116   0023A6                     l2302:
  4117   0023A6  5009               	movf	___lwmod@divisor^0,w,c
  4118   0023A8  5C07               	subwf	___lwmod@dividend^0,w,c
  4119   0023AA  500A               	movf	(___lwmod@divisor+1)^0,w,c
  4120   0023AC  5808               	subwfb	(___lwmod@dividend+1)^0,w,c
  4121   0023AE  A0D8               	btfss	status,0,c
  4122   0023B0  EFDC  F011         	goto	u1971
  4123   0023B4  EFDE  F011         	goto	u1970
  4124   0023B8                     u1971:
  4125   0023B8  EFE2  F011         	goto	l2306
  4126   0023BC                     u1970:
  4127   0023BC  5009               	movf	___lwmod@divisor^0,w,c
  4128   0023BE  5E07               	subwf	___lwmod@dividend^0,f,c
  4129   0023C0  500A               	movf	(___lwmod@divisor+1)^0,w,c
  4130   0023C2  5A08               	subwfb	(___lwmod@dividend+1)^0,f,c
  4131   0023C4                     l2306:
  4132   0023C4  90D8               	bcf	status,0,c
  4133   0023C6  320A               	rrcf	(___lwmod@divisor+1)^0,f,c
  4134   0023C8  3209               	rrcf	___lwmod@divisor^0,f,c
  4135   0023CA  2E0B               	decfsz	___lwmod@counter^0,f,c
  4136   0023CC  EFD3  F011         	goto	l2302
  4137   0023D0                     l822:
  4138   0023D0  C007  F007         	movff	___lwmod@dividend,?___lwmod
  4139   0023D4  C008  F008         	movff	___lwmod@dividend+1,?___lwmod+1
  4140   0023D8  0012               	return		;funcret
  4141   0023DA                     __end_of___lwmod:
  4142                           	callstack 0
  4143                           
  4144 ;; *************** function ___lwdiv *****************
  4145 ;; Defined at:
  4146 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;  dividend        2    6[COMRAM] unsigned int 
  4149 ;;  divisor         2    8[COMRAM] unsigned int 
  4150 ;; Auto vars:     Size  Location     Type
  4151 ;;  quotient        2   10[COMRAM] unsigned int 
  4152 ;;  counter         1   12[COMRAM] unsigned char 
  4153 ;; Return value:  Size  Location     Type
  4154 ;;                  2    6[COMRAM] unsigned int 
  4155 ;; Registers used:
  4156 ;;		wreg, status,2, status,0
  4157 ;; Tracked objects:
  4158 ;;		On entry : 0/0
  4159 ;;		On exit  : 0/0
  4160 ;;		Unchanged: 0/0
  4161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4162 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4163 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4165 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4166 ;;Total ram usage:        7 bytes
  4167 ;; Hardware stack levels used: 1
  4168 ;; Hardware stack levels required when called: 1
  4169 ;; This function calls:
  4170 ;;		Nothing
  4171 ;; This function is called by:
  4172 ;;		_main
  4173 ;;		_LEDarray_disp_dec
  4174 ;;		_LEDarray_disp_PPM
  4175 ;;		_ADC2String
  4176 ;; This function uses a non-reentrant model
  4177 ;;
  4178                           
  4179                           	psect	text18
  4180   00229A                     __ptext18:
  4181                           	callstack 0
  4182   00229A                     ___lwdiv:
  4183                           	callstack 29
  4184   00229A  0E00               	movlw	0
  4185   00229C  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  4186   00229E  0E00               	movlw	0
  4187   0022A0  6E0B               	movwf	___lwdiv@quotient^0,c
  4188   0022A2  5009               	movf	___lwdiv@divisor^0,w,c
  4189   0022A4  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4190   0022A6  B4D8               	btfsc	status,2,c
  4191   0022A8  EF58  F011         	goto	u2341
  4192   0022AC  EF5A  F011         	goto	u2340
  4193   0022B0                     u2341:
  4194   0022B0  EF82  F011         	goto	l812
  4195   0022B4                     u2340:
  4196   0022B4  0E01               	movlw	1
  4197   0022B6  6E0D               	movwf	___lwdiv@counter^0,c
  4198   0022B8  EF62  F011         	goto	l2518
  4199   0022BC                     l2516:
  4200   0022BC  90D8               	bcf	status,0,c
  4201   0022BE  3609               	rlcf	___lwdiv@divisor^0,f,c
  4202   0022C0  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4203   0022C2  2A0D               	incf	___lwdiv@counter^0,f,c
  4204   0022C4                     l2518:
  4205   0022C4  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  4206   0022C6  EF67  F011         	goto	u2351
  4207   0022CA  EF69  F011         	goto	u2350
  4208   0022CE                     u2351:
  4209   0022CE  EF5E  F011         	goto	l2516
  4210   0022D2                     u2350:
  4211   0022D2                     l2520:
  4212   0022D2  90D8               	bcf	status,0,c
  4213   0022D4  360B               	rlcf	___lwdiv@quotient^0,f,c
  4214   0022D6  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4215   0022D8  5009               	movf	___lwdiv@divisor^0,w,c
  4216   0022DA  5C07               	subwf	___lwdiv@dividend^0,w,c
  4217   0022DC  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  4218   0022DE  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4219   0022E0  A0D8               	btfss	status,0,c
  4220   0022E2  EF75  F011         	goto	u2361
  4221   0022E6  EF77  F011         	goto	u2360
  4222   0022EA                     u2361:
  4223   0022EA  EF7C  F011         	goto	l2528
  4224   0022EE                     u2360:
  4225   0022EE  5009               	movf	___lwdiv@divisor^0,w,c
  4226   0022F0  5E07               	subwf	___lwdiv@dividend^0,f,c
  4227   0022F2  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  4228   0022F4  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4229   0022F6  800B               	bsf	___lwdiv@quotient^0,0,c
  4230   0022F8                     l2528:
  4231   0022F8  90D8               	bcf	status,0,c
  4232   0022FA  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4233   0022FC  3209               	rrcf	___lwdiv@divisor^0,f,c
  4234   0022FE  2E0D               	decfsz	___lwdiv@counter^0,f,c
  4235   002300  EF69  F011         	goto	l2520
  4236   002304                     l812:
  4237   002304  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  4238   002308  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4239   00230C  0012               	return		;funcret
  4240   00230E                     __end_of___lwdiv:
  4241                           	callstack 0
  4242                           
  4243 ;; *************** function _Timer0_init *****************
  4244 ;; Defined at:
  4245 ;;		line 7 in file "../timers.c"
  4246 ;; Parameters:    Size  Location     Type
  4247 ;;		None
  4248 ;; Auto vars:     Size  Location     Type
  4249 ;;		None
  4250 ;; Return value:  Size  Location     Type
  4251 ;;                  1    wreg      void 
  4252 ;; Registers used:
  4253 ;;		wreg, status,2
  4254 ;; Tracked objects:
  4255 ;;		On entry : 0/0
  4256 ;;		On exit  : 0/0
  4257 ;;		Unchanged: 0/0
  4258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4263 ;;Total ram usage:        0 bytes
  4264 ;; Hardware stack levels used: 1
  4265 ;; Hardware stack levels required when called: 1
  4266 ;; This function calls:
  4267 ;;		Nothing
  4268 ;; This function is called by:
  4269 ;;		_main
  4270 ;; This function uses a non-reentrant model
  4271 ;;
  4272                           
  4273                           	psect	text19
  4274   0026AE                     __ptext19:
  4275                           	callstack 0
  4276   0026AE                     _Timer0_init:
  4277                           	callstack 29
  4278   0026AE                     
  4279                           ;../timers.c: 9:     T0CON1bits.T0CS=0b010;
  4280   0026AE  50D6               	movf	214,w,c	;volatile
  4281   0026B0  0B1F               	andlw	-225
  4282   0026B2  0940               	iorlw	64
  4283   0026B4  6ED6               	movwf	214,c	;volatile
  4284   0026B6                     
  4285                           ;../timers.c: 10:     T0CON1bits.T0ASYNC=1;
  4286   0026B6  88D6               	bsf	214,4,c	;volatile
  4287                           
  4288                           ;../timers.c: 11:     T0CON1bits.T0CKPS=0b0010;
  4289   0026B8  50D6               	movf	214,w,c	;volatile
  4290   0026BA  0BF0               	andlw	-16
  4291   0026BC  0902               	iorlw	2
  4292   0026BE  6ED6               	movwf	214,c	;volatile
  4293   0026C0                     
  4294                           ;../timers.c: 12:     T0CON0bits.T016BIT=1;
  4295   0026C0  88D5               	bsf	213,4,c	;volatile
  4296                           
  4297                           ;../timers.c: 15:     TMR0H=0b00001011;
  4298   0026C2  0E0B               	movlw	11
  4299   0026C4  6ED4               	movwf	212,c	;volatile
  4300                           
  4301                           ;../timers.c: 16:     TMR0L=0b00001011;
  4302   0026C6  0E0B               	movlw	11
  4303   0026C8  6ED3               	movwf	211,c	;volatile
  4304   0026CA                     
  4305                           ;../timers.c: 17:     T0CON0bits.T0EN=1;
  4306   0026CA  8ED5               	bsf	213,7,c	;volatile
  4307   0026CC  0012               	return		;funcret
  4308   0026CE                     __end_of_Timer0_init:
  4309                           	callstack 0
  4310                           
  4311 ;; *************** function _Light_init *****************
  4312 ;; Defined at:
  4313 ;;		line 8 in file "../comparator.c"
  4314 ;; Parameters:    Size  Location     Type
  4315 ;;		None
  4316 ;; Auto vars:     Size  Location     Type
  4317 ;;		None
  4318 ;; Return value:  Size  Location     Type
  4319 ;;                  1    wreg      void 
  4320 ;; Registers used:
  4321 ;;		None
  4322 ;; Tracked objects:
  4323 ;;		On entry : 0/0
  4324 ;;		On exit  : 0/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4331 ;;Total ram usage:        0 bytes
  4332 ;; Hardware stack levels used: 1
  4333 ;; Hardware stack levels required when called: 1
  4334 ;; This function calls:
  4335 ;;		Nothing
  4336 ;; This function is called by:
  4337 ;;		_main
  4338 ;; This function uses a non-reentrant model
  4339 ;;
  4340                           
  4341                           	psect	text20
  4342   00272E                     __ptext20:
  4343                           	callstack 0
  4344   00272E                     _Light_init:
  4345                           	callstack 29
  4346   00272E                     
  4347                           ;../comparator.c: 10:    LATHbits.LATH3=1;
  4348   00272E  8680               	bsf	128,3,c	;volatile
  4349                           
  4350                           ;../comparator.c: 11:    TRISHbits.TRISH3=0;
  4351   002730  9688               	bcf	136,3,c	;volatile
  4352   002732  0012               	return		;funcret
  4353   002734                     __end_of_Light_init:
  4354                           	callstack 0
  4355                           
  4356 ;; *************** function _LEDarray_init *****************
  4357 ;; Defined at:
  4358 ;;		line 8 in file "../LEDarray.c"
  4359 ;; Parameters:    Size  Location     Type
  4360 ;;		None
  4361 ;; Auto vars:     Size  Location     Type
  4362 ;;		None
  4363 ;; Return value:  Size  Location     Type
  4364 ;;                  1    wreg      void 
  4365 ;; Registers used:
  4366 ;;		None
  4367 ;; Tracked objects:
  4368 ;;		On entry : 0/0
  4369 ;;		On exit  : 0/0
  4370 ;;		Unchanged: 0/0
  4371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4376 ;;Total ram usage:        0 bytes
  4377 ;; Hardware stack levels used: 1
  4378 ;; Hardware stack levels required when called: 1
  4379 ;; This function calls:
  4380 ;;		Nothing
  4381 ;; This function is called by:
  4382 ;;		_main
  4383 ;; This function uses a non-reentrant model
  4384 ;;
  4385                           
  4386                           	psect	text21
  4387   00268C                     __ptext21:
  4388                           	callstack 0
  4389   00268C                     _LEDarray_init:
  4390                           	callstack 29
  4391   00268C                     
  4392                           ;../LEDarray.c: 9:     TRISGbits.TRISG0 = 0;
  4393   00268C  9087               	bcf	135,0,c	;volatile
  4394                           
  4395                           ;../LEDarray.c: 10:     TRISGbits.TRISG1 = 0;
  4396   00268E  9287               	bcf	135,1,c	;volatile
  4397                           
  4398                           ;../LEDarray.c: 11:     TRISAbits.TRISA2 = 0;
  4399   002690  9481               	bcf	129,2,c	;volatile
  4400                           
  4401                           ;../LEDarray.c: 12:     TRISFbits.TRISF6 = 0;
  4402   002692  9C86               	bcf	134,6,c	;volatile
  4403                           
  4404                           ;../LEDarray.c: 13:     TRISAbits.TRISA4 = 0;
  4405   002694  9881               	bcf	129,4,c	;volatile
  4406                           
  4407                           ;../LEDarray.c: 14:     TRISAbits.TRISA5 = 0;
  4408   002696  9A81               	bcf	129,5,c	;volatile
  4409                           
  4410                           ;../LEDarray.c: 15:     TRISFbits.TRISF0 = 0;
  4411   002698  9086               	bcf	134,0,c	;volatile
  4412                           
  4413                           ;../LEDarray.c: 16:     TRISBbits.TRISB0 = 0;
  4414   00269A  9082               	bcf	130,0,c	;volatile
  4415                           
  4416                           ;../LEDarray.c: 18:     LATGbits.LATG0 = 0;
  4417   00269C  907F               	bcf	127,0,c	;volatile
  4418                           
  4419                           ;../LEDarray.c: 19:     LATGbits.LATG1 = 0;
  4420   00269E  927F               	bcf	127,1,c	;volatile
  4421                           
  4422                           ;../LEDarray.c: 20:     LATAbits.LATA2 = 0;
  4423   0026A0  9479               	bcf	121,2,c	;volatile
  4424                           
  4425                           ;../LEDarray.c: 21:     LATFbits.LATF6 = 0;
  4426   0026A2  9C7E               	bcf	126,6,c	;volatile
  4427                           
  4428                           ;../LEDarray.c: 22:     LATAbits.LATA4 = 0;
  4429   0026A4  9879               	bcf	121,4,c	;volatile
  4430                           
  4431                           ;../LEDarray.c: 23:     LATAbits.LATA5 = 0;
  4432   0026A6  9A79               	bcf	121,5,c	;volatile
  4433                           
  4434                           ;../LEDarray.c: 24:     LATFbits.LATF0 = 0;
  4435   0026A8  907E               	bcf	126,0,c	;volatile
  4436                           
  4437                           ;../LEDarray.c: 25:     LATBbits.LATB0 = 0;
  4438   0026AA  907A               	bcf	122,0,c	;volatile
  4439   0026AC  0012               	return		;funcret
  4440   0026AE                     __end_of_LEDarray_init:
  4441                           	callstack 0
  4442                           
  4443 ;; *************** function _LEDarray_disp_bin *****************
  4444 ;; Defined at:
  4445 ;;		line 37 in file "../LEDarray.c"
  4446 ;; Parameters:    Size  Location     Type
  4447 ;;  number          2    0[COMRAM] unsigned int 
  4448 ;; Auto vars:     Size  Location     Type
  4449 ;;		None
  4450 ;; Return value:  Size  Location     Type
  4451 ;;                  1    wreg      void 
  4452 ;; Registers used:
  4453 ;;		None
  4454 ;; Tracked objects:
  4455 ;;		On entry : 0/0
  4456 ;;		On exit  : 0/0
  4457 ;;		Unchanged: 0/0
  4458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4459 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4462 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4463 ;;Total ram usage:        2 bytes
  4464 ;; Hardware stack levels used: 1
  4465 ;; Hardware stack levels required when called: 1
  4466 ;; This function calls:
  4467 ;;		Nothing
  4468 ;; This function is called by:
  4469 ;;		_main
  4470 ;;		_LEDarray_disp_dec
  4471 ;;		_LEDarray_disp_PPM
  4472 ;; This function uses a non-reentrant model
  4473 ;;
  4474                           
  4475                           	psect	text22
  4476   002092                     __ptext22:
  4477                           	callstack 0
  4478   002092                     _LEDarray_disp_bin:
  4479                           	callstack 29
  4480   002092                     
  4481                           ;../LEDarray.c: 38:     if (number & 0b000000001) {LATGbits.LATG0=1;} else {LATGbits.LAT
      +                          G0=0;}
  4482   002092  A001               	btfss	LEDarray_disp_bin@number^0,0,c
  4483   002094  EF4E  F010         	goto	u1991
  4484   002098  EF50  F010         	goto	u1990
  4485   00209C                     u1991:
  4486   00209C  EF53  F010         	goto	l48
  4487   0020A0                     u1990:
  4488   0020A0  807F               	bsf	127,0,c	;volatile
  4489   0020A2  EF54  F010         	goto	l49
  4490   0020A6                     l48:
  4491   0020A6  907F               	bcf	127,0,c	;volatile
  4492   0020A8                     l49:
  4493                           
  4494                           ;../LEDarray.c: 39:     if (number & 0b000000010) {LATGbits.LATG1=1;} else {LATGbits.LAT
      +                          G1=0;}
  4495   0020A8  A201               	btfss	LEDarray_disp_bin@number^0,1,c
  4496   0020AA  EF59  F010         	goto	u2001
  4497   0020AE  EF5B  F010         	goto	u2000
  4498   0020B2                     u2001:
  4499   0020B2  EF5E  F010         	goto	l50
  4500   0020B6                     u2000:
  4501   0020B6  827F               	bsf	127,1,c	;volatile
  4502   0020B8  EF5F  F010         	goto	l51
  4503   0020BC                     l50:
  4504   0020BC  927F               	bcf	127,1,c	;volatile
  4505   0020BE                     l51:
  4506                           
  4507                           ;../LEDarray.c: 40:     if (number & 0b000000100) {LATAbits.LATA2=1;} else {LATAbits.LAT
      +                          A2=0;}
  4508   0020BE  A401               	btfss	LEDarray_disp_bin@number^0,2,c
  4509   0020C0  EF64  F010         	goto	u2011
  4510   0020C4  EF66  F010         	goto	u2010
  4511   0020C8                     u2011:
  4512   0020C8  EF69  F010         	goto	l52
  4513   0020CC                     u2010:
  4514   0020CC  8479               	bsf	121,2,c	;volatile
  4515   0020CE  EF6A  F010         	goto	l53
  4516   0020D2                     l52:
  4517   0020D2  9479               	bcf	121,2,c	;volatile
  4518   0020D4                     l53:
  4519                           
  4520                           ;../LEDarray.c: 41:     if (number & 0b000001000) {LATFbits.LATF6=1;} else {LATFbits.LAT
      +                          F6=0;}
  4521   0020D4  A601               	btfss	LEDarray_disp_bin@number^0,3,c
  4522   0020D6  EF6F  F010         	goto	u2021
  4523   0020DA  EF71  F010         	goto	u2020
  4524   0020DE                     u2021:
  4525   0020DE  EF74  F010         	goto	l54
  4526   0020E2                     u2020:
  4527   0020E2  8C7E               	bsf	126,6,c	;volatile
  4528   0020E4  EF75  F010         	goto	l55
  4529   0020E8                     l54:
  4530   0020E8  9C7E               	bcf	126,6,c	;volatile
  4531   0020EA                     l55:
  4532                           
  4533                           ;../LEDarray.c: 42:     if (number & 0b000010000) {LATAbits.LATA4=1;} else {LATAbits.LAT
      +                          A4=0;}
  4534   0020EA  A801               	btfss	LEDarray_disp_bin@number^0,4,c
  4535   0020EC  EF7A  F010         	goto	u2031
  4536   0020F0  EF7C  F010         	goto	u2030
  4537   0020F4                     u2031:
  4538   0020F4  EF7F  F010         	goto	l56
  4539   0020F8                     u2030:
  4540   0020F8  8879               	bsf	121,4,c	;volatile
  4541   0020FA  EF80  F010         	goto	l57
  4542   0020FE                     l56:
  4543   0020FE  9879               	bcf	121,4,c	;volatile
  4544   002100                     l57:
  4545                           
  4546                           ;../LEDarray.c: 43:     if (number & 0b000100000) {LATAbits.LATA5=1;} else {LATAbits.LAT
      +                          A5=0;}
  4547   002100  AA01               	btfss	LEDarray_disp_bin@number^0,5,c
  4548   002102  EF85  F010         	goto	u2041
  4549   002106  EF87  F010         	goto	u2040
  4550   00210A                     u2041:
  4551   00210A  EF8A  F010         	goto	l58
  4552   00210E                     u2040:
  4553   00210E  8A79               	bsf	121,5,c	;volatile
  4554   002110  EF8B  F010         	goto	l59
  4555   002114                     l58:
  4556   002114  9A79               	bcf	121,5,c	;volatile
  4557   002116                     l59:
  4558                           
  4559                           ;../LEDarray.c: 44:     if (number & 0b001000000) {LATFbits.LATF0=1;} else {LATFbits.LAT
      +                          F0=0;}
  4560   002116  AC01               	btfss	LEDarray_disp_bin@number^0,6,c
  4561   002118  EF90  F010         	goto	u2051
  4562   00211C  EF92  F010         	goto	u2050
  4563   002120                     u2051:
  4564   002120  EF95  F010         	goto	l60
  4565   002124                     u2050:
  4566   002124  807E               	bsf	126,0,c	;volatile
  4567   002126  EF96  F010         	goto	l61
  4568   00212A                     l60:
  4569   00212A  907E               	bcf	126,0,c	;volatile
  4570   00212C                     l61:
  4571                           
  4572                           ;../LEDarray.c: 45:     if (number & 0b010000000) {LATBbits.LATB0=1;} else {LATBbits.LAT
      +                          B0=0;}
  4573   00212C  AE01               	btfss	LEDarray_disp_bin@number^0,7,c
  4574   00212E  EF9B  F010         	goto	u2061
  4575   002132  EF9D  F010         	goto	u2060
  4576   002136                     u2061:
  4577   002136  EFA0  F010         	goto	l62
  4578   00213A                     u2060:
  4579   00213A  807A               	bsf	122,0,c	;volatile
  4580   00213C  EFA1  F010         	goto	l63
  4581   002140                     l62:
  4582   002140  907A               	bcf	122,0,c	;volatile
  4583   002142                     l63:
  4584                           
  4585                           ;../LEDarray.c: 46:     if (number & 0b100000000) {LATBbits.LATB1=1;} else {LATBbits.LAT
      +                          B1=0;}
  4586   002142  A002               	btfss	(LEDarray_disp_bin@number+1)^0,0,c
  4587   002144  EFA6  F010         	goto	u2071
  4588   002148  EFA8  F010         	goto	u2070
  4589   00214C                     u2071:
  4590   00214C  EFAB  F010         	goto	l64
  4591   002150                     u2070:
  4592   002150  827A               	bsf	122,1,c	;volatile
  4593   002152  EFAC  F010         	goto	l66
  4594   002156                     l64:
  4595   002156  927A               	bcf	122,1,c	;volatile
  4596   002158                     l66:
  4597   002158  0012               	return		;funcret
  4598   00215A                     __end_of_LEDarray_disp_bin:
  4599                           	callstack 0
  4600                           
  4601 ;; *************** function _LCD_setline *****************
  4602 ;; Defined at:
  4603 ;;		line 96 in file "../LCD.c"
  4604 ;; Parameters:    Size  Location     Type
  4605 ;;  line            1    wreg     unsigned char 
  4606 ;; Auto vars:     Size  Location     Type
  4607 ;;  line            1    3[COMRAM] unsigned char 
  4608 ;; Return value:  Size  Location     Type
  4609 ;;                  1    wreg      void 
  4610 ;; Registers used:
  4611 ;;		wreg, status,2, status,0, cstack
  4612 ;; Tracked objects:
  4613 ;;		On entry : 0/0
  4614 ;;		On exit  : 0/0
  4615 ;;		Unchanged: 0/0
  4616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4618 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4620 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4621 ;;Total ram usage:        1 bytes
  4622 ;; Hardware stack levels used: 1
  4623 ;; Hardware stack levels required when called: 4
  4624 ;; This function calls:
  4625 ;;		_LCD_sendbyte
  4626 ;; This function is called by:
  4627 ;;		_main
  4628 ;; This function uses a non-reentrant model
  4629 ;;
  4630                           
  4631                           	psect	text23
  4632   002548                     __ptext23:
  4633                           	callstack 0
  4634   002548                     _LCD_setline:
  4635                           	callstack 26
  4636                           
  4637                           ;incstack = 0
  4638                           ;LCD_setline@line stored from wreg
  4639   002548  6E04               	movwf	LCD_setline@line^0,c
  4640   00254A                     
  4641                           ;../LCD.c: 96: void LCD_setline (char line);../LCD.c: 97: {;../LCD.c: 98:     if (line =
      +                          = 1) {LCD_sendbyte(0x80,0);};
  4642   00254A  0404               	decf	LCD_setline@line^0,w,c
  4643   00254C  A4D8               	btfss	status,2,c
  4644   00254E  EFAB  F012         	goto	u2081
  4645   002552  EFAD  F012         	goto	u2080
  4646   002556                     u2081:
  4647   002556  EFB2  F012         	goto	l2410
  4648   00255A                     u2080:
  4649   00255A  0E00               	movlw	0
  4650   00255C  6E02               	movwf	LCD_sendbyte@type^0,c
  4651   00255E  0E80               	movlw	128
  4652   002560  ECC1  F012         	call	_LCD_sendbyte
  4653   002564                     l2410:
  4654                           
  4655                           ;../LCD.c: 99:     if (line == 2) {LCD_sendbyte(0xC0,0);}
  4656   002564  0E02               	movlw	2
  4657   002566  1804               	xorwf	LCD_setline@line^0,w,c
  4658   002568  A4D8               	btfss	status,2,c
  4659   00256A  EFB9  F012         	goto	u2091
  4660   00256E  EFBB  F012         	goto	u2090
  4661   002572                     u2091:
  4662   002572  EFC0  F012         	goto	l303
  4663   002576                     u2090:
  4664   002576  0E00               	movlw	0
  4665   002578  6E02               	movwf	LCD_sendbyte@type^0,c
  4666   00257A  0EC0               	movlw	192
  4667   00257C  ECC1  F012         	call	_LCD_sendbyte
  4668   002580                     l303:
  4669   002580  0012               	return		;funcret
  4670   002582                     __end_of_LCD_setline:
  4671                           	callstack 0
  4672                           
  4673 ;; *************** function _LCD_sendstring *****************
  4674 ;; Defined at:
  4675 ;;		line 105 in file "../LCD.c"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;  string          2    3[COMRAM] PTR unsigned char 
  4678 ;;		 -> main@yearstr(20), main@datestr(50), 
  4679 ;; Auto vars:     Size  Location     Type
  4680 ;;		None
  4681 ;; Return value:  Size  Location     Type
  4682 ;;                  1    wreg      void 
  4683 ;; Registers used:
  4684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4685 ;; Tracked objects:
  4686 ;;		On entry : 0/0
  4687 ;;		On exit  : 0/0
  4688 ;;		Unchanged: 0/0
  4689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4690 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4693 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4694 ;;Total ram usage:        2 bytes
  4695 ;; Hardware stack levels used: 1
  4696 ;; Hardware stack levels required when called: 4
  4697 ;; This function calls:
  4698 ;;		_LCD_sendbyte
  4699 ;; This function is called by:
  4700 ;;		_main
  4701 ;; This function uses a non-reentrant model
  4702 ;;
  4703                           
  4704                           	psect	text24
  4705   0025B8                     __ptext24:
  4706                           	callstack 0
  4707   0025B8                     _LCD_sendstring:
  4708                           	callstack 26
  4709   0025B8                     
  4710                           ;../LCD.c: 105: void LCD_sendstring(char *string);../LCD.c: 106: {;../LCD.c: 107:  while
      +                          (*string != 0) {
  4711   0025B8  EFE9  F012         	goto	l2432
  4712   0025BC                     l2428:
  4713                           
  4714                           ;../LCD.c: 108:         LCD_sendbyte(*string++,1);
  4715   0025BC  0E01               	movlw	1
  4716   0025BE  6E02               	movwf	LCD_sendbyte@type^0,c
  4717   0025C0  C004  FFD9         	movff	LCD_sendstring@string,fsr2l
  4718   0025C4  C005  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  4719   0025C8  50DF               	movf	indf2,w,c
  4720   0025CA  ECC1  F012         	call	_LCD_sendbyte
  4721   0025CE  4A04               	infsnz	LCD_sendstring@string^0,f,c
  4722   0025D0  2A05               	incf	(LCD_sendstring@string+1)^0,f,c
  4723   0025D2                     l2432:
  4724                           
  4725                           ;../LCD.c: 107:  while(*string != 0) {
  4726   0025D2  C004  FFD9         	movff	LCD_sendstring@string,fsr2l
  4727   0025D6  C005  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  4728   0025DA  50DF               	movf	indf2,w,c
  4729   0025DC  A4D8               	btfss	status,2,c
  4730   0025DE  EFF3  F012         	goto	u2101
  4731   0025E2  EFF5  F012         	goto	u2100
  4732   0025E6                     u2101:
  4733   0025E6  EFDE  F012         	goto	l2428
  4734   0025EA                     u2100:
  4735   0025EA  0012               	return		;funcret
  4736   0025EC                     __end_of_LCD_sendstring:
  4737                           	callstack 0
  4738                           
  4739 ;; *************** function _LCD_clear *****************
  4740 ;; Defined at:
  4741 ;;		line 87 in file "../LCD.c"
  4742 ;; Parameters:    Size  Location     Type
  4743 ;;		None
  4744 ;; Auto vars:     Size  Location     Type
  4745 ;;		None
  4746 ;; Return value:  Size  Location     Type
  4747 ;;                  1    wreg      void 
  4748 ;; Registers used:
  4749 ;;		wreg, status,2, status,0, cstack
  4750 ;; Tracked objects:
  4751 ;;		On entry : 0/0
  4752 ;;		On exit  : 0/0
  4753 ;;		Unchanged: 0/0
  4754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4757 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4758 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4759 ;;Total ram usage:        1 bytes
  4760 ;; Hardware stack levels used: 1
  4761 ;; Hardware stack levels required when called: 4
  4762 ;; This function calls:
  4763 ;;		_LCD_sendbyte
  4764 ;; This function is called by:
  4765 ;;		_main
  4766 ;; This function uses a non-reentrant model
  4767 ;;
  4768                           
  4769                           	psect	text25
  4770   0026CE                     __ptext25:
  4771                           	callstack 0
  4772   0026CE                     _LCD_clear:
  4773                           	callstack 26
  4774   0026CE                     
  4775                           ;../LCD.c: 89:     LCD_sendbyte(0b00000001,0);
  4776   0026CE  0E00               	movlw	0
  4777   0026D0  6E02               	movwf	LCD_sendbyte@type^0,c
  4778   0026D2  0E01               	movlw	1
  4779   0026D4  ECC1  F012         	call	_LCD_sendbyte
  4780   0026D8                     
  4781                           ;../LCD.c: 90:     _delay((unsigned long)((2)*(64000000/4000.0)));
  4782   0026D8  0E2A               	movlw	42
  4783   0026DA  6E04               	movwf	??_LCD_clear^0,c
  4784   0026DC  0E8E               	movlw	142
  4785   0026DE                     u2767:
  4786   0026DE  2EE8               	decfsz	wreg,f,c
  4787   0026E0  D7FE               	bra	u2767
  4788   0026E2  2E04               	decfsz	??_LCD_clear^0,f,c
  4789   0026E4  D7FC               	bra	u2767
  4790   0026E6  0012               	return		;funcret
  4791   0026E8                     __end_of_LCD_clear:
  4792                           	callstack 0
  4793                           
  4794 ;; *************** function _LCD_Init *****************
  4795 ;; Defined at:
  4796 ;;		line 48 in file "../LCD.c"
  4797 ;; Parameters:    Size  Location     Type
  4798 ;;		None
  4799 ;; Auto vars:     Size  Location     Type
  4800 ;;		None
  4801 ;; Return value:  Size  Location     Type
  4802 ;;                  1    wreg      void 
  4803 ;; Registers used:
  4804 ;;		wreg, status,2, status,0, cstack
  4805 ;; Tracked objects:
  4806 ;;		On entry : 0/0
  4807 ;;		On exit  : 0/0
  4808 ;;		Unchanged: 0/0
  4809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4812 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4813 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4814 ;;Total ram usage:        2 bytes
  4815 ;; Hardware stack levels used: 1
  4816 ;; Hardware stack levels required when called: 4
  4817 ;; This function calls:
  4818 ;;		_LCD_sendbyte
  4819 ;;		_LCD_sendnibble
  4820 ;; This function is called by:
  4821 ;;		_main
  4822 ;; This function uses a non-reentrant model
  4823 ;;
  4824                           
  4825                           	psect	text26
  4826   002204                     __ptext26:
  4827                           	callstack 0
  4828   002204                     _LCD_Init:
  4829                           	callstack 26
  4830   002204                     
  4831                           ;../LCD.c: 51:     TRISCbits.TRISC6 = 0;
  4832   002204  9C83               	bcf	131,6,c	;volatile
  4833                           
  4834                           ;../LCD.c: 52:     TRISCbits.TRISC2 = 0;
  4835   002206  9483               	bcf	131,2,c	;volatile
  4836                           
  4837                           ;../LCD.c: 53:     TRISBbits.TRISB3 = 0;
  4838   002208  9682               	bcf	130,3,c	;volatile
  4839                           
  4840                           ;../LCD.c: 54:     TRISBbits.TRISB2 = 0;
  4841   00220A  9482               	bcf	130,2,c	;volatile
  4842                           
  4843                           ;../LCD.c: 55:     TRISEbits.TRISE3 = 0;
  4844   00220C  9685               	bcf	133,3,c	;volatile
  4845                           
  4846                           ;../LCD.c: 56:     TRISEbits.TRISE1 = 0;
  4847   00220E  9285               	bcf	133,1,c	;volatile
  4848                           
  4849                           ;../LCD.c: 58:     LATCbits.LATC6 = 0;
  4850   002210  9C7B               	bcf	123,6,c	;volatile
  4851                           
  4852                           ;../LCD.c: 59:     LATCbits.LATC2 = 0;
  4853   002212  947B               	bcf	123,2,c	;volatile
  4854                           
  4855                           ;../LCD.c: 60:     LATBbits.LATB3 = 0;
  4856   002214  967A               	bcf	122,3,c	;volatile
  4857                           
  4858                           ;../LCD.c: 61:     LATBbits.LATB2 = 0;
  4859   002216  947A               	bcf	122,2,c	;volatile
  4860                           
  4861                           ;../LCD.c: 62:     LATEbits.LATE3 = 0;
  4862   002218  967D               	bcf	125,3,c	;volatile
  4863                           
  4864                           ;../LCD.c: 63:     LATEbits.LATE1 = 0;
  4865   00221A  927D               	bcf	125,1,c	;volatile
  4866   00221C                     
  4867                           ;../LCD.c: 66:  _delay((unsigned long)((50)*(64000000/4000.0)));
  4868   00221C  0E05               	movlw	5
  4869   00221E  6E05               	movwf	(??_LCD_Init+1)^0,c
  4870   002220  0E0F               	movlw	15
  4871   002222  6E04               	movwf	??_LCD_Init^0,c
  4872   002224  0EF1               	movlw	241
  4873   002226                     u2777:
  4874   002226  2EE8               	decfsz	wreg,f,c
  4875   002228  D7FE               	bra	u2777
  4876   00222A  2E04               	decfsz	??_LCD_Init^0,f,c
  4877   00222C  D7FC               	bra	u2777
  4878   00222E  2E05               	decfsz	(??_LCD_Init+1)^0,f,c
  4879   002230  D7FA               	bra	u2777
  4880   002232  F000               	nop	
  4881   002234                     
  4882                           ;../LCD.c: 67:  LCD_sendnibble(0b0011);
  4883   002234  0E03               	movlw	3
  4884   002236  EC87  F011         	call	_LCD_sendnibble
  4885   00223A                     
  4886                           ;../LCD.c: 68:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  4887   00223A  0EF0               	movlw	240
  4888   00223C                     u2787:
  4889   00223C  2EE8               	decfsz	wreg,f,c
  4890   00223E  D7FE               	bra	u2787
  4891                           
  4892                           ;../LCD.c: 69:     LCD_sendnibble(0b0010);
  4893   002240  0E02               	movlw	2
  4894   002242  EC87  F011         	call	_LCD_sendnibble
  4895   002246                     
  4896                           ;../LCD.c: 70:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  4897   002246  0EF0               	movlw	240
  4898   002248                     u2797:
  4899   002248  2EE8               	decfsz	wreg,f,c
  4900   00224A  D7FE               	bra	u2797
  4901   00224C                     
  4902                           ;../LCD.c: 71:     LCD_sendbyte(0b00101000,0);
  4903   00224C  0E00               	movlw	0
  4904   00224E  6E02               	movwf	LCD_sendbyte@type^0,c
  4905   002250  0E28               	movlw	40
  4906   002252  ECC1  F012         	call	_LCD_sendbyte
  4907   002256                     
  4908                           ;../LCD.c: 72:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  4909   002256  0EF0               	movlw	240
  4910   002258                     u2807:
  4911   002258  2EE8               	decfsz	wreg,f,c
  4912   00225A  D7FE               	bra	u2807
  4913   00225C                     
  4914                           ;../LCD.c: 74:     LCD_sendbyte(0b00001000,0);
  4915   00225C  0E00               	movlw	0
  4916   00225E  6E02               	movwf	LCD_sendbyte@type^0,c
  4917   002260  0E08               	movlw	8
  4918   002262  ECC1  F012         	call	_LCD_sendbyte
  4919   002266                     
  4920                           ;../LCD.c: 75:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  4921   002266  0EF0               	movlw	240
  4922   002268                     u2817:
  4923   002268  2EE8               	decfsz	wreg,f,c
  4924   00226A  D7FE               	bra	u2817
  4925   00226C                     
  4926                           ;../LCD.c: 76:     LCD_sendbyte(0b00000001,0);
  4927   00226C  0E00               	movlw	0
  4928   00226E  6E02               	movwf	LCD_sendbyte@type^0,c
  4929   002270  0E01               	movlw	1
  4930   002272  ECC1  F012         	call	_LCD_sendbyte
  4931   002276                     
  4932                           ;../LCD.c: 77:     _delay((unsigned long)((2)*(64000000/4000.0)));
  4933   002276  0E2A               	movlw	42
  4934   002278  6E04               	movwf	??_LCD_Init^0,c
  4935   00227A  0E8E               	movlw	142
  4936   00227C                     u2827:
  4937   00227C  2EE8               	decfsz	wreg,f,c
  4938   00227E  D7FE               	bra	u2827
  4939   002280  2E04               	decfsz	??_LCD_Init^0,f,c
  4940   002282  D7FC               	bra	u2827
  4941   002284                     
  4942                           ;../LCD.c: 78:     LCD_sendbyte(0b0000110,0);
  4943   002284  0E00               	movlw	0
  4944   002286  6E02               	movwf	LCD_sendbyte@type^0,c
  4945   002288  0E06               	movlw	6
  4946   00228A  ECC1  F012         	call	_LCD_sendbyte
  4947   00228E                     
  4948                           ;../LCD.c: 81:     LCD_sendbyte(0b00001100,0);
  4949   00228E  0E00               	movlw	0
  4950   002290  6E02               	movwf	LCD_sendbyte@type^0,c
  4951   002292  0E0C               	movlw	12
  4952   002294  ECC1  F012         	call	_LCD_sendbyte
  4953   002298  0012               	return		;funcret
  4954   00229A                     __end_of_LCD_Init:
  4955                           	callstack 0
  4956                           
  4957 ;; *************** function _LCD_sendbyte *****************
  4958 ;; Defined at:
  4959 ;;		line 36 in file "../LCD.c"
  4960 ;; Parameters:    Size  Location     Type
  4961 ;;  Byte            1    wreg     unsigned char 
  4962 ;;  type            1    1[COMRAM] unsigned char 
  4963 ;; Auto vars:     Size  Location     Type
  4964 ;;  Byte            1    2[COMRAM] unsigned char 
  4965 ;; Return value:  Size  Location     Type
  4966 ;;                  1    wreg      void 
  4967 ;; Registers used:
  4968 ;;		wreg, status,2, status,0, cstack
  4969 ;; Tracked objects:
  4970 ;;		On entry : 0/0
  4971 ;;		On exit  : 0/0
  4972 ;;		Unchanged: 0/0
  4973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4974 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4975 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4977 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4978 ;;Total ram usage:        2 bytes
  4979 ;; Hardware stack levels used: 1
  4980 ;; Hardware stack levels required when called: 3
  4981 ;; This function calls:
  4982 ;;		_LCD_sendnibble
  4983 ;; This function is called by:
  4984 ;;		_LCD_Init
  4985 ;;		_LCD_clear
  4986 ;;		_LCD_setline
  4987 ;;		_LCD_sendstring
  4988 ;;		_LCD_scroll
  4989 ;; This function uses a non-reentrant model
  4990 ;;
  4991                           
  4992                           	psect	text27
  4993   002582                     __ptext27:
  4994                           	callstack 0
  4995   002582                     _LCD_sendbyte:
  4996                           	callstack 26
  4997                           
  4998                           ;incstack = 0
  4999                           ;LCD_sendbyte@Byte stored from wreg
  5000   002582  6E03               	movwf	LCD_sendbyte@Byte^0,c
  5001   002584                     
  5002                           ;../LCD.c: 36: void LCD_sendbyte(unsigned char Byte, char type);../LCD.c: 37: {;../LCD.c
      +                          : 38:     if (type) {LATCbits.LATC6 = 1;} else {LATCbits.LATC6 = 0;}
  5003   002584  5002               	movf	LCD_sendbyte@type^0,w,c
  5004   002586  B4D8               	btfsc	status,2,c
  5005   002588  EFC8  F012         	goto	u1941
  5006   00258C  EFCA  F012         	goto	u1940
  5007   002590                     u1941:
  5008   002590  EFCD  F012         	goto	l290
  5009   002594                     u1940:
  5010   002594  8C7B               	bsf	123,6,c	;volatile
  5011   002596  EFCE  F012         	goto	l2290
  5012   00259A                     l290:
  5013   00259A  9C7B               	bcf	123,6,c	;volatile
  5014   00259C                     l2290:
  5015                           
  5016                           ;../LCD.c: 39:     LCD_sendnibble((Byte >> 4)& 0b1111);
  5017   00259C  3803               	swapf	LCD_sendbyte@Byte^0,w,c
  5018   00259E  0B0F               	andlw	15
  5019   0025A0  0B0F               	andlw	15
  5020   0025A2  EC87  F011         	call	_LCD_sendnibble
  5021                           
  5022                           ;../LCD.c: 40:     LCD_sendnibble(Byte & 0b00001111);
  5023   0025A6  5003               	movf	LCD_sendbyte@Byte^0,w,c
  5024   0025A8  0B0F               	andlw	15
  5025   0025AA  EC87  F011         	call	_LCD_sendnibble
  5026   0025AE                     
  5027                           ;../LCD.c: 42:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  5028   0025AE  0EA0               	movlw	160
  5029   0025B0                     u2837:
  5030   0025B0  D000               	nop2	
  5031   0025B2  2EE8               	decfsz	wreg,f,c
  5032   0025B4  D7FD               	bra	u2837
  5033   0025B6  0012               	return		;funcret
  5034   0025B8                     __end_of_LCD_sendbyte:
  5035                           	callstack 0
  5036                           
  5037 ;; *************** function _LCD_sendnibble *****************
  5038 ;; Defined at:
  5039 ;;		line 19 in file "../LCD.c"
  5040 ;; Parameters:    Size  Location     Type
  5041 ;;  number          1    wreg     unsigned char 
  5042 ;; Auto vars:     Size  Location     Type
  5043 ;;  number          1    0[COMRAM] unsigned char 
  5044 ;; Return value:  Size  Location     Type
  5045 ;;                  1    wreg      void 
  5046 ;; Registers used:
  5047 ;;		wreg, cstack
  5048 ;; Tracked objects:
  5049 ;;		On entry : 0/0
  5050 ;;		On exit  : 0/0
  5051 ;;		Unchanged: 0/0
  5052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5054 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5056 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5057 ;;Total ram usage:        1 bytes
  5058 ;; Hardware stack levels used: 1
  5059 ;; Hardware stack levels required when called: 2
  5060 ;; This function calls:
  5061 ;;		_LCD_E_TOG
  5062 ;; This function is called by:
  5063 ;;		_LCD_sendbyte
  5064 ;;		_LCD_Init
  5065 ;; This function uses a non-reentrant model
  5066 ;;
  5067                           
  5068                           	psect	text28
  5069   00230E                     __ptext28:
  5070                           	callstack 0
  5071   00230E                     _LCD_sendnibble:
  5072                           	callstack 26
  5073                           
  5074                           ;incstack = 0
  5075                           ;LCD_sendnibble@number stored from wreg
  5076   00230E  6E01               	movwf	LCD_sendnibble@number^0,c
  5077   002310                     
  5078                           ;../LCD.c: 19: void LCD_sendnibble(unsigned char number);../LCD.c: 20: {;../LCD.c: 22:  
      +                          if (number & 0b0001) {LATBbits.LATB3 = 1;} else {LATBbits.LATB3 = 0;}
  5079   002310  A001               	btfss	LCD_sendnibble@number^0,0,c
  5080   002312  EF8D  F011         	goto	u1831
  5081   002316  EF8F  F011         	goto	u1830
  5082   00231A                     u1831:
  5083   00231A  EF92  F011         	goto	l279
  5084   00231E                     u1830:
  5085   00231E  867A               	bsf	122,3,c	;volatile
  5086   002320  EF93  F011         	goto	l2200
  5087   002324                     l279:
  5088   002324  967A               	bcf	122,3,c	;volatile
  5089   002326                     l2200:
  5090                           
  5091                           ;../LCD.c: 23:     if (number & 0b0010) {LATBbits.LATB2 = 1;} else {LATBbits.LATB2 = 0;}
  5092   002326  A201               	btfss	LCD_sendnibble@number^0,1,c
  5093   002328  EF98  F011         	goto	u1841
  5094   00232C  EF9A  F011         	goto	u1840
  5095   002330                     u1841:
  5096   002330  EF9D  F011         	goto	l281
  5097   002334                     u1840:
  5098   002334  847A               	bsf	122,2,c	;volatile
  5099   002336  EF9E  F011         	goto	l2204
  5100   00233A                     l281:
  5101   00233A  947A               	bcf	122,2,c	;volatile
  5102   00233C                     l2204:
  5103                           
  5104                           ;../LCD.c: 24:     if (number & 0b0100) {LATEbits.LATE3 = 1;} else {LATEbits.LATE3 = 0;}
  5105   00233C  A401               	btfss	LCD_sendnibble@number^0,2,c
  5106   00233E  EFA3  F011         	goto	u1851
  5107   002342  EFA5  F011         	goto	u1850
  5108   002346                     u1851:
  5109   002346  EFA8  F011         	goto	l283
  5110   00234A                     u1850:
  5111   00234A  867D               	bsf	125,3,c	;volatile
  5112   00234C  EFA9  F011         	goto	l2208
  5113   002350                     l283:
  5114   002350  967D               	bcf	125,3,c	;volatile
  5115   002352                     l2208:
  5116                           
  5117                           ;../LCD.c: 25:     if (number & 0b1000) {LATEbits.LATE1 = 1;} else {LATEbits.LATE1 = 0;}
  5118   002352  A601               	btfss	LCD_sendnibble@number^0,3,c
  5119   002354  EFAE  F011         	goto	u1861
  5120   002358  EFB0  F011         	goto	u1860
  5121   00235C                     u1861:
  5122   00235C  EFB3  F011         	goto	l285
  5123   002360                     u1860:
  5124   002360  827D               	bsf	125,1,c	;volatile
  5125   002362  EFB4  F011         	goto	l2212
  5126   002366                     l285:
  5127   002366  927D               	bcf	125,1,c	;volatile
  5128   002368                     l2212:
  5129                           
  5130                           ;../LCD.c: 27:     LCD_E_TOG();
  5131   002368  EC8B  F013         	call	_LCD_E_TOG	;wreg free
  5132   00236C                     
  5133                           ;../LCD.c: 28:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  5134   00236C  0E1A               	movlw	26
  5135   00236E                     u2847:
  5136   00236E  2EE8               	decfsz	wreg,f,c
  5137   002370  D7FE               	bra	u2847
  5138   002372  D000               	nop2	
  5139   002374  0012               	return		;funcret
  5140   002376                     __end_of_LCD_sendnibble:
  5141                           	callstack 0
  5142                           
  5143 ;; *************** function _LCD_E_TOG *****************
  5144 ;; Defined at:
  5145 ;;		line 9 in file "../LCD.c"
  5146 ;; Parameters:    Size  Location     Type
  5147 ;;		None
  5148 ;; Auto vars:     Size  Location     Type
  5149 ;;		None
  5150 ;; Return value:  Size  Location     Type
  5151 ;;                  1    wreg      void 
  5152 ;; Registers used:
  5153 ;;		wreg
  5154 ;; Tracked objects:
  5155 ;;		On entry : 0/0
  5156 ;;		On exit  : 0/0
  5157 ;;		Unchanged: 0/0
  5158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5163 ;;Total ram usage:        0 bytes
  5164 ;; Hardware stack levels used: 1
  5165 ;; Hardware stack levels required when called: 1
  5166 ;; This function calls:
  5167 ;;		Nothing
  5168 ;; This function is called by:
  5169 ;;		_LCD_sendnibble
  5170 ;; This function uses a non-reentrant model
  5171 ;;
  5172                           
  5173                           	psect	text29
  5174   002716                     __ptext29:
  5175                           	callstack 0
  5176   002716                     _LCD_E_TOG:
  5177                           	callstack 26
  5178   002716                     
  5179                           ;../LCD.c: 11:  LATCbits.LATC2 = 1;
  5180   002716  847B               	bsf	123,2,c	;volatile
  5181   002718                     
  5182                           ;../LCD.c: 12:  _delay((unsigned long)((2)*(64000000/4000000.0)));
  5183   002718  0E0A               	movlw	10
  5184   00271A                     u2857:
  5185   00271A  2EE8               	decfsz	wreg,f,c
  5186   00271C  D7FE               	bra	u2857
  5187   00271E  D000               	nop2	
  5188   002720                     
  5189                           ;../LCD.c: 13:  LATCbits.LATC2 = 0;
  5190   002720  947B               	bcf	123,2,c	;volatile
  5191   002722  0012               	return		;funcret
  5192   002724                     __end_of_LCD_E_TOG:
  5193                           	callstack 0
  5194                           
  5195 ;; *************** function _Interrupts_init *****************
  5196 ;; Defined at:
  5197 ;;		line 11 in file "../interrupts.c"
  5198 ;; Parameters:    Size  Location     Type
  5199 ;;		None
  5200 ;; Auto vars:     Size  Location     Type
  5201 ;;		None
  5202 ;; Return value:  Size  Location     Type
  5203 ;;                  1    wreg      void 
  5204 ;; Registers used:
  5205 ;;		None
  5206 ;; Tracked objects:
  5207 ;;		On entry : 0/0
  5208 ;;		On exit  : 0/0
  5209 ;;		Unchanged: 0/0
  5210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5215 ;;Total ram usage:        0 bytes
  5216 ;; Hardware stack levels used: 1
  5217 ;; Hardware stack levels required when called: 1
  5218 ;; This function calls:
  5219 ;;		Nothing
  5220 ;; This function is called by:
  5221 ;;		_main
  5222 ;; This function uses a non-reentrant model
  5223 ;;
  5224                           
  5225                           	psect	text30
  5226   002724                     __ptext30:
  5227                           	callstack 0
  5228   002724                     _Interrupts_init:
  5229                           	callstack 29
  5230   002724                     
  5231                           ;../interrupts.c: 14:     TMR0IE=1;
  5232   002724  010E               	movlb	14	; () banked
  5233   002726  8B29               	bsf	41,5,b	;volatile
  5234                           
  5235                           ;../interrupts.c: 15:     INTCONbits.GIEH=1;
  5236   002728  8EF2               	bsf	242,7,c	;volatile
  5237                           
  5238                           ;../interrupts.c: 16:     INTCONbits.GIEL = 1;
  5239   00272A  8CF2               	bsf	242,6,c	;volatile
  5240   00272C                     
  5241                           ; BSR set to: 14
  5242   00272C  0012               	return		;funcret
  5243   00272E                     __end_of_Interrupts_init:
  5244                           	callstack 0
  5245                           
  5246 ;; *************** function _Comp1_init *****************
  5247 ;; Defined at:
  5248 ;;		line 29 in file "../comparator.c"
  5249 ;; Parameters:    Size  Location     Type
  5250 ;;		None
  5251 ;; Auto vars:     Size  Location     Type
  5252 ;;		None
  5253 ;; Return value:  Size  Location     Type
  5254 ;;                  1    wreg      void 
  5255 ;; Registers used:
  5256 ;;		wreg, status,2, cstack
  5257 ;; Tracked objects:
  5258 ;;		On entry : 0/0
  5259 ;;		On exit  : 0/0
  5260 ;;		Unchanged: 0/0
  5261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5266 ;;Total ram usage:        0 bytes
  5267 ;; Hardware stack levels used: 1
  5268 ;; Hardware stack levels required when called: 2
  5269 ;; This function calls:
  5270 ;;		_DAC_init
  5271 ;; This function is called by:
  5272 ;;		_main
  5273 ;; This function uses a non-reentrant model
  5274 ;;
  5275                           
  5276                           	psect	text31
  5277   002666                     __ptext31:
  5278                           	callstack 0
  5279   002666                     _Comp1_init:
  5280                           	callstack 28
  5281   002666                     
  5282                           ;../comparator.c: 31:     TRISAbits.TRISA3=1;
  5283   002666  8681               	bsf	129,3,c	;volatile
  5284   002668                     
  5285                           ;../comparator.c: 32:     CM1NCHbits.NCH=0b011;
  5286   002668  010E               	movlb	14	; () banked
  5287   00266A  51D2               	movf	210,w,b	;volatile
  5288   00266C  0BF8               	andlw	-8
  5289   00266E  0903               	iorlw	3
  5290   002670  6FD2               	movwf	210,b	;volatile
  5291                           
  5292                           ;../comparator.c: 33:     CM1PCHbits.PCH=0b101;
  5293   002672  51D3               	movf	211,w,b	;volatile
  5294   002674  0BF8               	andlw	-8
  5295   002676  0905               	iorlw	5
  5296   002678  6FD3               	movwf	211,b	;volatile
  5297   00267A                     
  5298                           ; BSR set to: 14
  5299                           ;../comparator.c: 34:     CM1CON0bits.HYS=1;
  5300   00267A  83D0               	bsf	208,1,b	;volatile
  5301   00267C                     
  5302                           ; BSR set to: 14
  5303                           ;../comparator.c: 35:     CM1CON0bits.POL=1;
  5304   00267C  89D0               	bsf	208,4,b	;volatile
  5305   00267E                     
  5306                           ; BSR set to: 14
  5307                           ;../comparator.c: 36:     CM1CON1bits.INTP=1;
  5308   00267E  83D1               	bsf	209,1,b	;volatile
  5309   002680                     
  5310                           ; BSR set to: 14
  5311                           ;../comparator.c: 37:     CM1CON1bits.INTN=1;
  5312   002680  81D1               	bsf	209,0,b	;volatile
  5313   002682                     
  5314                           ; BSR set to: 14
  5315                           ;../comparator.c: 38:     DAC_init();
  5316   002682  EC81  F013         	call	_DAC_init	;wreg free
  5317   002686                     
  5318                           ;../comparator.c: 39:     CM1CON0bits.EN=1;
  5319   002686  010E               	movlb	14	; () banked
  5320   002688  8FD0               	bsf	208,7,b	;volatile
  5321   00268A                     
  5322                           ; BSR set to: 14
  5323   00268A  0012               	return		;funcret
  5324   00268C                     __end_of_Comp1_init:
  5325                           	callstack 0
  5326                           
  5327 ;; *************** function _DAC_init *****************
  5328 ;; Defined at:
  5329 ;;		line 14 in file "../comparator.c"
  5330 ;; Parameters:    Size  Location     Type
  5331 ;;		None
  5332 ;; Auto vars:     Size  Location     Type
  5333 ;;		None
  5334 ;; Return value:  Size  Location     Type
  5335 ;;                  1    wreg      void 
  5336 ;; Registers used:
  5337 ;;		wreg, status,2
  5338 ;; Tracked objects:
  5339 ;;		On entry : 0/0
  5340 ;;		On exit  : 0/0
  5341 ;;		Unchanged: 0/0
  5342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5347 ;;Total ram usage:        0 bytes
  5348 ;; Hardware stack levels used: 1
  5349 ;; Hardware stack levels required when called: 1
  5350 ;; This function calls:
  5351 ;;		Nothing
  5352 ;; This function is called by:
  5353 ;;		_Comp1_init
  5354 ;; This function uses a non-reentrant model
  5355 ;;
  5356                           
  5357                           	psect	text32
  5358   002702                     __ptext32:
  5359                           	callstack 0
  5360   002702                     _DAC_init:
  5361                           	callstack 28
  5362   002702                     
  5363                           ;../comparator.c: 16:     DAC1CON0bits.PSS=0b00;
  5364   002702  0EF3               	movlw	-13
  5365   002704  010E               	movlb	14	; () banked
  5366   002706  17C6               	andwf	198,f,b	;volatile
  5367   002708                     
  5368                           ; BSR set to: 14
  5369                           ;../comparator.c: 17:     DAC1CON0bits.NSS=0b0;
  5370   002708  91C6               	bcf	198,0,b	;volatile
  5371                           
  5372                           ;../comparator.c: 21:     DAC1CON1bits.DAC1R=27;
  5373   00270A  51C7               	movf	199,w,b	;volatile
  5374   00270C  0BE0               	andlw	-32
  5375   00270E  091B               	iorlw	27
  5376   002710  6FC7               	movwf	199,b	;volatile
  5377   002712                     
  5378                           ; BSR set to: 14
  5379                           ;../comparator.c: 22:     DAC1CON0bits.DAC1EN=1;
  5380   002712  8FC6               	bsf	198,7,b	;volatile
  5381   002714                     
  5382                           ; BSR set to: 14
  5383   002714  0012               	return		;funcret
  5384   002716                     __end_of_DAC_init:
  5385                           	callstack 0
  5386                           
  5387 ;; *************** function _ADC_init *****************
  5388 ;; Defined at:
  5389 ;;		line 9 in file "../ADC.c"
  5390 ;; Parameters:    Size  Location     Type
  5391 ;;		None
  5392 ;; Auto vars:     Size  Location     Type
  5393 ;;		None
  5394 ;; Return value:  Size  Location     Type
  5395 ;;                  1    wreg      void 
  5396 ;; Registers used:
  5397 ;;		wreg, status,2
  5398 ;; Tracked objects:
  5399 ;;		On entry : 0/0
  5400 ;;		On exit  : 0/0
  5401 ;;		Unchanged: 0/0
  5402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5407 ;;Total ram usage:        0 bytes
  5408 ;; Hardware stack levels used: 1
  5409 ;; Hardware stack levels required when called: 1
  5410 ;; This function calls:
  5411 ;;		Nothing
  5412 ;; This function is called by:
  5413 ;;		_main
  5414 ;; This function uses a non-reentrant model
  5415 ;;
  5416                           
  5417                           	psect	text33
  5418   0026E8                     __ptext33:
  5419                           	callstack 0
  5420   0026E8                     _ADC_init:
  5421                           	callstack 29
  5422   0026E8                     
  5423                           ;../ADC.c: 11:     TRISAbits.TRISA3=1;
  5424   0026E8  8681               	bsf	129,3,c	;volatile
  5425                           
  5426                           ;../ADC.c: 12:     ANSELAbits.ANSELA3=1;
  5427   0026EA  010E               	movlb	14	; () banked
  5428   0026EC  8792               	bsf	146,3,b	;volatile
  5429                           
  5430                           ;../ADC.c: 15:     ADREFbits.ADNREF = 0;
  5431   0026EE  010F               	movlb	15	; () banked
  5432   0026F0  9958               	bcf	88,4,b	;volatile
  5433   0026F2                     
  5434                           ; BSR set to: 15
  5435                           ;../ADC.c: 16:     ADREFbits.ADPREF = 0b00;
  5436   0026F2  0EFC               	movlw	-4
  5437   0026F4  1758               	andwf	88,f,b	;volatile
  5438                           
  5439                           ;../ADC.c: 17:     ADPCH=0b11;
  5440   0026F6  0E03               	movlw	3
  5441   0026F8  6F5F               	movwf	95,b	;volatile
  5442   0026FA                     
  5443                           ; BSR set to: 15
  5444                           ;../ADC.c: 18:     ADCON0bits.ADFM = 0;
  5445   0026FA  9460               	bcf	96,2,c	;volatile
  5446   0026FC                     
  5447                           ; BSR set to: 15
  5448                           ;../ADC.c: 19:     ADCON0bits.ADCS = 1;
  5449   0026FC  8860               	bsf	96,4,c	;volatile
  5450   0026FE                     
  5451                           ; BSR set to: 15
  5452                           ;../ADC.c: 20:     ADCON0bits.ADON = 1;
  5453   0026FE  8E60               	bsf	96,7,c	;volatile
  5454   002700                     
  5455                           ; BSR set to: 15
  5456   002700  0012               	return		;funcret
  5457   002702                     __end_of_ADC_init:
  5458                           	callstack 0
  5459                           
  5460 ;; *************** function _HighISR *****************
  5461 ;; Defined at:
  5462 ;;		line 23 in file "../interrupts.c"
  5463 ;; Parameters:    Size  Location     Type
  5464 ;;		None
  5465 ;; Auto vars:     Size  Location     Type
  5466 ;;		None
  5467 ;; Return value:  Size  Location     Type
  5468 ;;                  1    wreg      void 
  5469 ;; Registers used:
  5470 ;;		wreg, status,2, status,0
  5471 ;; Tracked objects:
  5472 ;;		On entry : 0/0
  5473 ;;		On exit  : 0/0
  5474 ;;		Unchanged: 0/0
  5475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5480 ;;Total ram usage:        0 bytes
  5481 ;; Hardware stack levels used: 1
  5482 ;; This function calls:
  5483 ;;		Nothing
  5484 ;; This function is called by:
  5485 ;;		Interrupt level 2
  5486 ;; This function uses a non-reentrant model
  5487 ;;
  5488                           
  5489                           	psect	intcode
  5490   000008                     __pintcode:
  5491                           	callstack 0
  5492   000008                     _HighISR:
  5493                           	callstack 22
  5494                           
  5495                           ; BSR set to: 15
  5496                           ;incstack = 0
  5497   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5498   00000A                     
  5499                           ;../interrupts.c: 27:     if (TMR0IF) {
  5500   00000A  010E               	movlb	14	; () banked
  5501   00000C  AB33               	btfss	51,5,b	;volatile
  5502   00000E  EF0B  F000         	goto	i2u240_41
  5503   000012  EF0D  F000         	goto	i2u240_40
  5504   000016                     i2u240_41:
  5505   000016  EF16  F000         	goto	i2l2552
  5506   00001A                     i2u240_40:
  5507   00001A                     
  5508                           ; BSR set to: 14
  5509                           ;../interrupts.c: 28:         TMR0H=0b00001011;
  5510   00001A  0E0B               	movlw	11
  5511   00001C  6ED4               	movwf	212,c	;volatile
  5512                           
  5513                           ;../interrupts.c: 29:         TMR0L=0b00001011;
  5514   00001E  0E0B               	movlw	11
  5515   000020  6ED3               	movwf	211,c	;volatile
  5516   000022                     
  5517                           ; BSR set to: 14
  5518                           ;../interrupts.c: 30:         minute += 1;
  5519   000022  0100               	movlb	0	; () banked
  5520   000024  4BDF               	infsnz	_minute& (0+255),f,b
  5521   000026  2BE0               	incf	(_minute+1)& (0+255),f,b
  5522   000028                     
  5523                           ; BSR set to: 0
  5524                           ;../interrupts.c: 31:         TMR0IF=0;
  5525   000028  010E               	movlb	14	; () banked
  5526   00002A  9B33               	bcf	51,5,b	;volatile
  5527   00002C                     i2l2552:
  5528                           
  5529                           ; BSR set to: 14
  5530                           ;../interrupts.c: 34:     if (PIR2bits.C1IF){
  5531   00002C  A135               	btfss	53,0,b	;volatile
  5532   00002E  EF1B  F000         	goto	i2u241_41
  5533   000032  EF1D  F000         	goto	i2u241_40
  5534   000036                     i2u241_41:
  5535   000036  EF62  F000         	goto	i2l153
  5536   00003A                     i2u241_40:
  5537   00003A                     
  5538                           ; BSR set to: 14
  5539                           ;../interrupts.c: 35:         if (CM1CON0bits.OUT == 0) {
  5540   00003A  BDD0               	btfsc	208,6,b	;volatile
  5541   00003C  EF22  F000         	goto	i2u242_41
  5542   000040  EF24  F000         	goto	i2u242_40
  5543   000044                     i2u242_41:
  5544   000044  EF2F  F000         	goto	i2l145
  5545   000048                     i2u242_40:
  5546   000048                     
  5547                           ; BSR set to: 14
  5548                           ;../interrupts.c: 36:             daylight_start_hour = hour;
  5549   000048  C0E1  F0D9         	movff	_hour,_daylight_start_hour
  5550   00004C  C0E2  F0DA         	movff	_hour+1,_daylight_start_hour+1
  5551                           
  5552                           ;../interrupts.c: 37:             daylight_start_min = minute;
  5553   000050  C0DF  F0D7         	movff	_minute,_daylight_start_min
  5554   000054  C0E0  F0D8         	movff	_minute+1,_daylight_start_min+1
  5555                           
  5556                           ;../interrupts.c: 38:             LATHbits.LATH3=0;
  5557   000058  9680               	bcf	128,3,c	;volatile
  5558                           
  5559                           ;../interrupts.c: 39:             }
  5560   00005A  EF60  F000         	goto	i2l146
  5561   00005E                     i2l145:
  5562                           
  5563                           ; BSR set to: 14
  5564   00005E  ADD0               	btfss	208,6,b	;volatile
  5565   000060  EF34  F000         	goto	i2u243_41
  5566   000064  EF36  F000         	goto	i2u243_40
  5567   000068                     i2u243_41:
  5568   000068  EF60  F000         	goto	i2l146
  5569   00006C                     i2u243_40:
  5570   00006C                     
  5571                           ; BSR set to: 14
  5572                           ;../interrupts.c: 41:             daylight_end_hour = hour;
  5573   00006C  C0E1  F0D5         	movff	_hour,_daylight_end_hour
  5574   000070  C0E2  F0D6         	movff	_hour+1,_daylight_end_hour+1
  5575                           
  5576                           ;../interrupts.c: 42:             daylight_end_min = minute;
  5577   000074  C0DF  F0D3         	movff	_minute,_daylight_end_min
  5578   000078  C0E0  F0D4         	movff	_minute+1,_daylight_end_min+1
  5579   00007C                     
  5580                           ; BSR set to: 14
  5581                           ;../interrupts.c: 43:         if (hour <1 || hour >=5){
  5582   00007C  0100               	movlb	0	; () banked
  5583   00007E  51E1               	movf	_hour& (0+255),w,b
  5584   000080  11E2               	iorwf	(_hour+1)& (0+255),w,b
  5585   000082  B4D8               	btfsc	status,2,c
  5586   000084  EF46  F000         	goto	i2u244_41
  5587   000088  EF48  F000         	goto	i2u244_40
  5588   00008C                     i2u244_41:
  5589   00008C  EF53  F000         	goto	i2l150
  5590   000090                     i2u244_40:
  5591   000090                     
  5592                           ; BSR set to: 0
  5593   000090  51E2               	movf	(_hour+1)& (0+255),w,b
  5594   000092  E109               	bnz	i2u245_40
  5595   000094  0E05               	movlw	5
  5596   000096  5DE1               	subwf	_hour& (0+255),w,b
  5597   000098  A0D8               	btfss	status,0,c
  5598   00009A  EF51  F000         	goto	i2u245_41
  5599   00009E  EF53  F000         	goto	i2u245_40
  5600   0000A2                     i2u245_41:
  5601   0000A2  EF60  F000         	goto	i2l146
  5602   0000A6                     i2u245_40:
  5603   0000A6                     i2l150:
  5604                           
  5605                           ; BSR set to: 0
  5606                           ;../interrupts.c: 44:             if (CM1CON0bits.OUT == 1) {LATHbits.LATH3=1;}
  5607   0000A6  010E               	movlb	14	; () banked
  5608   0000A8  ADD0               	btfss	208,6,b	;volatile
  5609   0000AA  EF59  F000         	goto	i2u246_41
  5610   0000AE  EF5B  F000         	goto	i2u246_40
  5611   0000B2                     i2u246_41:
  5612   0000B2  EF5E  F000         	goto	i2l151
  5613   0000B6                     i2u246_40:
  5614   0000B6                     
  5615                           ; BSR set to: 14
  5616   0000B6  8680               	bsf	128,3,c	;volatile
  5617   0000B8  EF5F  F000         	goto	i2l152
  5618   0000BC                     i2l151:
  5619                           
  5620                           ; BSR set to: 14
  5621   0000BC  9680               	bcf	128,3,c	;volatile
  5622   0000BE                     i2l152:
  5623                           
  5624                           ; BSR set to: 14
  5625                           ;../interrupts.c: 46:             LATHbits.LATH3=1;}
  5626   0000BE  8680               	bsf	128,3,c	;volatile
  5627   0000C0                     i2l146:
  5628                           
  5629                           ;../interrupts.c: 48:         PIR2bits.C1IF=0;
  5630   0000C0  010E               	movlb	14	; () banked
  5631   0000C2  9135               	bcf	53,0,b	;volatile
  5632   0000C4                     i2l153:
  5633                           
  5634                           ; BSR set to: 14
  5635   0000C4  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5636   0000C6  0011               	retfie		f
  5637   0000C8                     __end_of_HighISR:
  5638                           	callstack 0
  5639                           
  5640                           	psect	rparam
  5641   000000                     
  5642                           	psect	temp
  5643   00005F                     btemp:
  5644                           	callstack 0
  5645   00005F                     	ds	1
  5646   000000                     int$flags	set	btemp
  5647   000000                     wtemp8	set	btemp+1
  5648   000000                     ttemp5	set	btemp+1
  5649   000000                     ttemp6	set	btemp+4
  5650   000000                     ttemp7	set	btemp+8
  5651                           
  5652                           	psect	idloc
  5653                           
  5654                           ;Config register IDLOC0 @ 0x200000
  5655                           ;	unspecified, using default values
  5656   200000                     	org	2097152
  5657   200000  0FFF               	dw	4095
  5658                           
  5659                           ;Config register IDLOC1 @ 0x200002
  5660                           ;	unspecified, using default values
  5661   200002                     	org	2097154
  5662   200002  0FFF               	dw	4095
  5663                           
  5664                           ;Config register IDLOC2 @ 0x200004
  5665                           ;	unspecified, using default values
  5666   200004                     	org	2097156
  5667   200004  0FFF               	dw	4095
  5668                           
  5669                           ;Config register IDLOC3 @ 0x200006
  5670                           ;	unspecified, using default values
  5671   200006                     	org	2097158
  5672   200006  0FFF               	dw	4095
  5673                           
  5674                           ;Config register IDLOC4 @ 0x200008
  5675                           ;	unspecified, using default values
  5676   200008                     	org	2097160
  5677   200008  0FFF               	dw	4095
  5678                           
  5679                           ;Config register IDLOC5 @ 0x20000A
  5680                           ;	unspecified, using default values
  5681   20000A                     	org	2097162
  5682   20000A  0FFF               	dw	4095
  5683                           
  5684                           ;Config register IDLOC6 @ 0x20000C
  5685                           ;	unspecified, using default values
  5686   20000C                     	org	2097164
  5687   20000C  0FFF               	dw	4095
  5688                           
  5689                           ;Config register IDLOC7 @ 0x20000E
  5690                           ;	unspecified, using default values
  5691   20000E                     	org	2097166
  5692   20000E  0FFF               	dw	4095
  5693                           
  5694                           	psect	config
  5695                           
  5696                           ;Config register CONFIG1L @ 0x300000
  5697                           ;	External Oscillator mode Selection bits
  5698                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5699                           ;	Power-up default value for COSC bits
  5700                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5701   300000                     	org	3145728
  5702   300000  AA                 	db	170
  5703                           
  5704                           ;Config register CONFIG1H @ 0x300001
  5705                           ;	unspecified, using default values
  5706                           ;	Clock Out Enable bit
  5707                           ;	CLKOUTEN = 0x1, unprogrammed default
  5708                           ;	Clock Switch Enable bit
  5709                           ;	CSWEN = 0x1, unprogrammed default
  5710                           ;	Fail-Safe Clock Monitor Enable bit
  5711                           ;	FCMEN = 0x1, unprogrammed default
  5712   300001                     	org	3145729
  5713   300001  FF                 	db	255
  5714                           
  5715                           ;Config register CONFIG2L @ 0x300002
  5716                           ;	unspecified, using default values
  5717                           ;	Master Clear Enable bit
  5718                           ;	MCLRE = 0x1, unprogrammed default
  5719                           ;	Power-up Timer Enable bit
  5720                           ;	PWRTE = 0x1, unprogrammed default
  5721                           ;	Low-power BOR enable bit
  5722                           ;	LPBOREN = 0x1, unprogrammed default
  5723                           ;	Brown-out Reset Enable bits
  5724                           ;	BOREN = 0x3, unprogrammed default
  5725   300002                     	org	3145730
  5726   300002  FF                 	db	255
  5727                           
  5728                           ;Config register CONFIG2H @ 0x300003
  5729                           ;	unspecified, using default values
  5730                           ;	Brown Out Reset Voltage selection bits
  5731                           ;	BORV = 0x3, unprogrammed default
  5732                           ;	ZCD Disable bit
  5733                           ;	ZCD = 0x1, unprogrammed default
  5734                           ;	PPSLOCK bit One-Way Set Enable bit
  5735                           ;	PPS1WAY = 0x1, unprogrammed default
  5736                           ;	Stack Full/Underflow Reset Enable bit
  5737                           ;	STVREN = 0x1, unprogrammed default
  5738                           ;	Debugger Enable bit
  5739                           ;	DEBUG = 0x1, unprogrammed default
  5740                           ;	Extended Instruction Set Enable bit
  5741                           ;	XINST = 0x1, unprogrammed default
  5742   300003                     	org	3145731
  5743   300003  FF                 	db	255
  5744                           
  5745                           ;Config register CONFIG3L @ 0x300004
  5746                           ;	WDT Period Select bits
  5747                           ;	WDTCPS = 0x1F, unprogrammed default
  5748                           ;	WDT operating mode
  5749                           ;	WDTE = OFF, WDT Disabled
  5750   300004                     	org	3145732
  5751   300004  9F                 	db	159
  5752                           
  5753                           ;Config register CONFIG3H @ 0x300005
  5754                           ;	unspecified, using default values
  5755                           ;	WDT Window Select bits
  5756                           ;	WDTCWS = 0x7, unprogrammed default
  5757                           ;	WDT input clock selector
  5758                           ;	WDTCCS = 0x7, unprogrammed default
  5759   300005                     	org	3145733
  5760   300005  FF                 	db	255
  5761                           
  5762                           ;Config register CONFIG4L @ 0x300006
  5763                           ;	unspecified, using default values
  5764                           ;	Write Protection Block 0
  5765                           ;	WRT0 = 0x1, unprogrammed default
  5766                           ;	Write Protection Block 1
  5767                           ;	WRT1 = 0x1, unprogrammed default
  5768                           ;	Write Protection Block 2
  5769                           ;	WRT2 = 0x1, unprogrammed default
  5770                           ;	Write Protection Block 3
  5771                           ;	WRT3 = 0x1, unprogrammed default
  5772                           ;	Write Protection Block 3
  5773                           ;	WRT4 = 0x1, unprogrammed default
  5774                           ;	Write Protection Block 3
  5775                           ;	WRT5 = 0x1, unprogrammed default
  5776                           ;	Write Protection Block 3
  5777                           ;	WRT6 = 0x1, unprogrammed default
  5778                           ;	Write Protection Block 3
  5779                           ;	WRT7 = 0x1, unprogrammed default
  5780   300006                     	org	3145734
  5781   300006  FF                 	db	255
  5782                           
  5783                           ;Config register CONFIG4H @ 0x300007
  5784                           ;	unspecified, using default values
  5785                           ;	Configuration Register Write Protection bit
  5786                           ;	WRTC = 0x1, unprogrammed default
  5787                           ;	Boot Block Write Protection bit
  5788                           ;	WRTB = 0x1, unprogrammed default
  5789                           ;	Data EEPROM Write Protection bit
  5790                           ;	WRTD = 0x1, unprogrammed default
  5791                           ;	Scanner Enable bit
  5792                           ;	SCANE = 0x1, unprogrammed default
  5793                           ;	Low Voltage Programming Enable bit
  5794                           ;	LVP = 0x1, unprogrammed default
  5795   300007                     	org	3145735
  5796   300007  FF                 	db	255
  5797                           
  5798                           ;Config register CONFIG5L @ 0x300008
  5799                           ;	unspecified, using default values
  5800                           ;	UserNVM Program Memory Code Protection bit
  5801                           ;	CP = 0x1, unprogrammed default
  5802                           ;	DataNVM Memory Code Protection bit
  5803                           ;	CPD = 0x1, unprogrammed default
  5804   300008                     	org	3145736
  5805   300008  FF                 	db	255
  5806                           
  5807                           ;Config register CONFIG5H @ 0x300009
  5808                           ;	unspecified, using default values
  5809   300009                     	org	3145737
  5810   300009  FF                 	db	255
  5811                           
  5812                           ;Config register CONFIG6L @ 0x30000A
  5813                           ;	unspecified, using default values
  5814                           ;	Table Read Protection Block 0
  5815                           ;	EBTR0 = 0x1, unprogrammed default
  5816                           ;	Table Read Protection Block 1
  5817                           ;	EBTR1 = 0x1, unprogrammed default
  5818                           ;	Table Read Protection Block 2
  5819                           ;	EBTR2 = 0x1, unprogrammed default
  5820                           ;	Table Read Protection Block 3
  5821                           ;	EBTR3 = 0x1, unprogrammed default
  5822                           ;	Table Read Protection Block 4
  5823                           ;	EBTR4 = 0x1, unprogrammed default
  5824                           ;	Table Read Protection Block 5
  5825                           ;	EBTR5 = 0x1, unprogrammed default
  5826                           ;	Table Read Protection Block 6
  5827                           ;	EBTR6 = 0x1, unprogrammed default
  5828                           ;	Table Read Protection Block 7
  5829                           ;	EBTR7 = 0x1, unprogrammed default
  5830   30000A                     	org	3145738
  5831   30000A  FF                 	db	255
  5832                           
  5833                           ;Config register CONFIG6H @ 0x30000B
  5834                           ;	unspecified, using default values
  5835                           ;	Boot Block Table Read Protection bit
  5836                           ;	EBTRB = 0x1, unprogrammed default
  5837   30000B                     	org	3145739
  5838   30000B  FF                 	db	255
  5839                           tosu	equ	0xFFF
  5840                           tosh	equ	0xFFE
  5841                           tosl	equ	0xFFD
  5842                           stkptr	equ	0xFFC
  5843                           pclatu	equ	0xFFB
  5844                           pclath	equ	0xFFA
  5845                           pcl	equ	0xFF9
  5846                           tblptru	equ	0xFF8
  5847                           tblptrh	equ	0xFF7
  5848                           tblptrl	equ	0xFF6
  5849                           tablat	equ	0xFF5
  5850                           prodh	equ	0xFF4
  5851                           prodl	equ	0xFF3
  5852                           indf0	equ	0xFEF
  5853                           postinc0	equ	0xFEE
  5854                           postdec0	equ	0xFED
  5855                           preinc0	equ	0xFEC
  5856                           plusw0	equ	0xFEB
  5857                           fsr0h	equ	0xFEA
  5858                           fsr0l	equ	0xFE9
  5859                           wreg	equ	0xFE8
  5860                           indf1	equ	0xFE7
  5861                           postinc1	equ	0xFE6
  5862                           postdec1	equ	0xFE5
  5863                           preinc1	equ	0xFE4
  5864                           plusw1	equ	0xFE3
  5865                           fsr1h	equ	0xFE2
  5866                           fsr1l	equ	0xFE1
  5867                           bsr	equ	0xFE0
  5868                           indf2	equ	0xFDF
  5869                           postinc2	equ	0xFDE
  5870                           postdec2	equ	0xFDD
  5871                           preinc2	equ	0xFDC
  5872                           plusw2	equ	0xFDB
  5873                           fsr2h	equ	0xFDA
  5874                           fsr2l	equ	0xFD9
  5875                           status	equ	0xFD8

Data Sizes:
    Strings     38
    Constant    0
    Data        0
    BSS         57
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     91      94
    BANK0           160    109     131
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[12]), STR_3(CODE[18]), STR_2(CODE[8]), STR_1(CODE[8]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[12]), STR_3(CODE[18]), STR_2(CODE[8]), STR_1(CODE[8]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[12]), STR_3(CODE[18]), STR_2(CODE[8]), STR_1(CODE[8]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[12]), STR_3(CODE[18]), STR_2(CODE[8]), STR_1(CODE[8]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1849$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[12]), STR_3(CODE[18]), STR_2(CODE[8]), STR_1(CODE[8]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> main@yearstr(BANK0[20]), main@datestr(BANK0[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1796$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1796$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    LCD_sendstring@string	PTR unsigned char  size(2) Largest target is 50
		 -> main@yearstr(BANK0[20]), main@datestr(BANK0[50]), 

    check_month@year	PTR unsigned short  size(2) Largest target is 2
		 -> main@year(BANK0[2]), 

    check_month@month_day	PTR unsigned int  size(2) Largest target is 2
		 -> main@month_day(BANK0[2]), 

    check_month@month	PTR unsigned int  size(2) Largest target is 2
		 -> main@month(BANK0[2]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    _check_month->___lwmod
    ___lwmod->___wmul
    ___lwdiv->___wmul
    _LCD_setline->_LCD_sendbyte
    _LCD_sendstring->_LCD_sendbyte
    _LCD_clear->_LCD_sendbyte
    _LCD_Init->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                86    86      0   18285
                                             23 BANK0     86    86      0
                           _ADC_init
                         _Comp1_init
                    _Interrupts_init
                           _LCD_Init
                          _LCD_clear
                     _LCD_sendstring
                        _LCD_setline
                  _LEDarray_disp_bin
                      _LEDarray_init
                         _Light_init
                        _Timer0_init
                            ___lwdiv
                            ___lwmod
                             ___wmul
                        _check_month
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    15     10    8708
                                              0 BANK0     23    13     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7899
                                             83 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           24    18      6    7538
                                             62 COMRAM    21    15      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3867
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2195
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1083
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1992
                                              6 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     207
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              4     2      2     237
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1223
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _check_month                                         10     4      6    1572
                                             11 COMRAM    10     4      6
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                              6 COMRAM     5     1      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4    1074
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Light_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    2     0      2     426
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LCD_setline                                          1     1      0     958
                                              3 COMRAM     1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_sendstring                                       2     0      2    1111
                                              3 COMRAM     2     0      2
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_clear                                            1     1      0     914
                                              3 COMRAM     1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0    1002
                                              3 COMRAM     2     2      0
                       _LCD_sendbyte
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (2) _LCD_sendbyte                                         2     1      1     914
                                              1 COMRAM     2     1      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (3) _LCD_sendnibble                                       1     1      0      88
                                              0 COMRAM     1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (4) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comp1_init                                           0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Comp1_init
     _DAC_init
   _Interrupts_init
   _LCD_Init
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
     _LCD_sendnibble
   _LCD_clear
     _LCD_sendbyte
   _LCD_sendstring
     _LCD_sendbyte
   _LCD_setline
     _LCD_sendbyte
   _LEDarray_disp_bin
   _LEDarray_init
   _Light_init
   _Timer0_init
   ___lwdiv
     ___wmul (ARG)
   ___lwmod
     ___wmul (ARG)
   ___wmul
   _check_month
     ___lwmod
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
         _isdigit

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6D      83       5       81.9%
BITBIGSFRlhlhhh     84      0       0      40        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5B      5E       1      100.0%
BITBIGSFRllhhh      5C      0       0      44        0.0%
BITBIGSFRhhll       4A      0       0      34        0.0%
BITBIGSFRlll        3A      0       0      47        0.0%
BITBIGSFRlhll       21      0       0      43        0.0%
BITBIGSFRhhlhh      1B      0       0      33        0.0%
BITBIGSFRlhhhhl     14      0       0      37        0.0%
BITBIGSFRlhlhl      11      0       0      42        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRllhl        9      0       0      46        0.0%
BITBIGSFRlhlhhl      8      0       0      41        0.0%
BITBIGSFRlhhl        6      0       0      39        0.0%
BITBIGSFRlhhhl       3      0       0      38        0.0%
BITBIGSFRllhhl       1      0       0      45        0.0%
BITBIGSFRlhhhhl      1      0       0      36        0.0%
BITBIGSFRhl          1      0       0      35        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     101      48        0.0%
DATA                 0      0     101       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Nov 08 01:37:21 2022

                        l15 2700                          l50 20BC                          l42 26AC  
                        l51 20BE                          l60 212A                          l52 20D2  
                        l61 212C                          l53 20D4                          l62 2140  
                        l54 20E8                          l63 2142                          l55 20EA  
                        l64 2156                          l56 20FE                          l48 20A6  
                        l57 2100                          l49 20A8                          l66 2158  
                        l58 2114                          l59 2116                          l93 2732  
                        l96 2714                          l99 268A         ___wmul@multiplicand 0003  
         ??_Interrupts_init 0001                         l303 2580                         l233 26CC  
                       l321 2664                         l209 10A6                         l138 272C  
                       l309 25EA                         l254 160E                         l281 233A  
                       l257 160E                         l290 259A                         l283 2350  
                       l435 1D04                         l276 2722                         l292 25B6  
                       l285 2366                         l287 2374                         l279 2324  
                       l295 2298                         l448 1E68                         l298 26E6  
                       l812 2304                         l822 23D0                         l819 230C  
                       l829 23D8                         l999 242A                         _abs 2508  
                       _pad 215A                         wreg 000FE8                 main@changed 00C3  
               main@datestr 007B                        l1110 1FBE                        l1031 2202  
                      l2000 1C18                        l1040 19B2                        l1113 1FC6  
                      l2010 1C9A                        l2002 1C2C                        l1026 219E  
                      ?_abs 0013                        l2100 2718                        l1116 2616  
                      l1124 24C2                        l2020 1CE4                        l2012 1C9C  
                      l2004 1C3A                        l1029 21E0                        l1053 1B7C  
                      l1037 1964                        l2102 2720                        l2014 1CAE  
                      l2006 1C4C                        l2030 1D38                        l1150 2734  
                      l2110 190E                        l1039 196C                        l2200 2326  
                      l2008 1C7A                        l2016 1CB4                        l2040 1D90  
                      l2032 1D3C                        l2024 1D06                        l2120 1974  
                      l2112 192E                        l2104 18CA                        l1081 247C  
                      l2210 2360                        l2202 2334                        l2018 1CC4  
                      l2050 1E12                        l2042 1DA4                        l2034 1D4A  
                      l2026 1D0A                        l2130 19AE                        l2122 1984  
                      l2114 193C                        l2106 18EA                        l1139 2090  
                      l1147 2506                        l1075 18C8                        l2212 2368  
                      l2204 233C                        l2300 2398                        l2044 1DB2  
                      l2052 1E18                        l2036 1D6A                        l2028 1D18  
                      l2060 215A                        l2140 1A52                        l2132 19BA  
                      l2124 198A                        l2116 193E                        l2108 18FE  
                      l2220 1646                        l1085 253E                        l2214 236C  
                      l2206 234A                        l2302 23A6                        l2054 1E28  
                      l2046 1DE0                        l2038 1D88                        l2070 21AA  
                      l2062 2168                        l2150 1B0E                        l2142 1A58  
                      l2134 19C4                        l2126 199A                        l2118 1958  
                      l2230 1678                        l2222 1654                        l2310 242C  
                      l2320 26E8                        l2208 2352                        l2400 2276  
                      l2304 23BC                        l2056 1E48                        l2048 1E00  
                      l1088 2546                        l2080 2522                        l2072 21BE  
                      l2064 217C                        l2160 1B5C                        l2152 1B28  
                      l2136 19CA                        l2144 1ABC                        l2128 19A6  
                      l2240 16F6                        l2224 1658                        l2216 1610  
                      l2312 2438                        l2322 26F2                        l2402 2284  
                      l2410 2564                        l2330 268C                        l2306 23C4  
                      l2082 25EC                        l2090 2496                        l2170 1E82  
                      l2074 21C2                        l2066 218A                        l2146 1AD6  
                      l2154 1B36                        l2138 1A4C                        l2242 172C  
                      l2234 1684                        l2226 1664                        l2218 1638  
                      l2314 2454                        l2324 26FA                        l2404 228E  
                      l2412 2576                        l2340 20E2                        l2332 2092  
                      l2308 23CA                        l2500 15EE                        l2092 24B8  
                      l2180 1F22                        l2172 1EA2                        l2164 1E6A  
                      l2076 21EE                        l2068 2196                        l2156 1B46  
                      l2148 1AF4                        l2260 1804                        l2252 1778  
                      l2244 173C                        l2228 1666                        l2236 16BC  
                      l2316 2474                        l2420 23FC                        l2326 26FC  
                      l2430 25CE                        l2406 254A                        l2350 2150  
                      l2342 20F8                        l2334 20A0                        l2510 229A  
                      l2094 24BC                        l2086 247E                        l2190 1FA2  
                      l2174 1EDA                        l2166 1E7E                        l2078 2508  
                      l2158 1B4C                        l2262 185A                        l2254 17B4  
                      l2246 174A                        l2238 16CE                        l2270 189C  
                      l2422 2418                        l2414 23DA                        l2328 26FE  
                      l2280 2702                        l2360 267C                        l2432 25D2  
                      l2408 255A                        l2344 210E                        l2336 20B6  
                      l2352 272E                        l2520 22D2                        l2512 22A2  
                      l2440 1310                        l2088 2482                        l2176 1EE2  
                      l2256 17C4                        l2248 176A                        l2416 23EC  
                      l2600 0F34                        l2282 2708                        l2362 267E  
                      l2354 2666                        l2370 2724                        l2098 2716  
                      l2290 259C                        l2506 26CE                        l2426 25B8  
                      l2346 2124                        l2338 20CC                        l2530 22FE  
                      l2522 22D8                        l2514 22B4                        l2442 132C  
                      l2450 139C                        l2434 12DA                        l2186 1F5C  
                      l2178 1EEA                        l2266 188A                        l2258 17E4  
                      l2418 23F4                        l2610 0F76                        l2602 0F38  
                      l2284 2712                        l2364 2680                        l2356 2668  
                      l2196 2310                        l2292 25AE                        l2380 2204  
                      l2508 26D8                        l2428 25BC                        l2348 213A  
                      l2372 26AE                        l2524 22EE                        l2516 22BC  
                      l2460 1402                        l2452 13B8                        l2444 1348  
                      l2436 12DA                        l2188 1F90                        l2620 10BA  
                      l2612 0F8E                        l2604 0F54                        l2366 2682  
                      l2358 267A                        l2198 231E                        l2286 2584  
                      l2390 224C                        l2382 221C                        l2374 26B6  
                      l2526 22F6                        l2518 22C4                        l2294 2376  
                      l2470 1480                        l2454 13C8                        l2462 1410  
                      l2446 1364                        l2438 12F4                        l2630 1100  
                      l2622 10D0                        l2614 0FAA                        l2606 0F6A  
                      l2368 2686                        l2288 2594                        l2392 2256  
                      l2384 2234                        l2376 26C0                        l2528 22F8  
                      l2296 2388                        l2480 1512                        l2472 149C  
                      l2464 142C                        l2456 13D6                        l2448 1380  
                      l2640 113C                        l2632 1110                        l2624 10D2  
                      l2616 0FDA                        l2608 0F72                        l2394 225C  
                      l2386 223A                        l2378 26CA                        l2298 2390  
                      l2490 1582                        l2482 1540                        l2474 14AC  
                      l2466 1448                        l2458 13F2                        l2650 11A0  
                      l2642 1150                        l2634 1112                        l2626 10DA  
                      l2618 1040                        l2570 0E6A                        l2396 2266  
                      l2388 2246                        l2492 159E                        l2484 154C  
                      l2476 14BA                        l2468 1464                        l2660 11F0  
                      l2644 1162                        l2652 11A4                        l2628 10EE  
                      l2636 111C                        l2580 0EAE                        l2572 0E6E  
                      l2398 226C                        l2494 15AE                        l2486 1554  
                      l2478 14E4                        l2662 1206                        l2654 11B6  
                      l2670 1240                        l2646 1174                        l2638 1128  
                      l2590 0F08                        l2582 0EBA                        l2574 0E76  
                      l2566 0E28                        l2496 15C0                        l2488 1570  
                      l1960 2014                        l1952 1FC8                        l2736 16AE  
                      l2680 12A2                        l2672 1252                        l2664 121C  
                      l2656 11CA                        l2648 118A                        l2592 0F0C  
                      l2584 0EC0                        l2576 0E7A                        l2568 0E5A  
                      l2498 15DC                        l2738 1F0C                        l1962 204A  
                      l1954 1FDA                        l1970 24E2                        l2682 12B8  
                      l2674 1266                        l2666 122E                        l2658 11DE  
                      l2594 0F14                        l2586 0EE6                        l2578 0E80  
                      l1980 1B7E                        l1956 1FEC                        l1972 24E6  
                      l2684 12CA                        l2676 127A                        l2668 1234  
                      l2596 0F28                        l2588 0EF2                        l1974 2640  
                      l1990 1BC2                        l1982 1B82                        l1958 1FF6  
                      l1966 24C4                        l2678 128C                        l2598 0F30  
                      ?_pad 0011                        l1976 265C                        l1992 1BE2  
                      l1984 1B90                        l1968 24D0                        l1994 1BE6  
                      l1986 1BB0                        l1996 1BF2                        l1988 1BB4  
                      l1998 1C10                        STR_1 0E1F                        STR_2 0E1F  
                      STR_3 0E01                        STR_4 0E13                        u2000 20B6  
                      u2001 20B2                        u2010 20CC                        u2011 20C8  
                      u2100 25EA                        u2020 20E2                        u2101 25E6  
                      u2021 20DE                        u2030 20F8                        u2110 12F4  
                      u2031 20F4                        u2111 12F0                        u2040 210E  
                      u2200 142C                        u2120 1310                        u1400 1FEC  
                      u2041 210A                        u2201 1428                        u2121 130C  
                      u1401 1FE8                        u2050 2124                        u2210 1448  
                      u2130 132C                        u1410 2014                        u2051 2120  
                      u2211 1444                        u2131 1328                        u1411 2010  
                      u2060 213A                        u2300 159E                        u2220 1464  
                      u2140 1348                        u1500 1CC4                        u1420 204A  
                      u2061 2136                        u2301 159A                        u2221 1460  
                      u2141 1344                        u1501 1CC0                        u1421 2046  
                      u2070 2150                        u2310 15DC                        u2230 1480  
                      u2150 1364                        u1510 1D18                        u1430 2506  
                      u2071 214C                        u2311 15D8                        u2231 147C  
                      u2151 1360                        u1511 1D14                        u1431 2502  
                      u2080 255A                        u2320 15EE                        u2240 149C  
                      u2160 1380                        u1440 1B90                        u1520 1D4A  
                      u1600 21EE                        u2081 2556                        u2321 15EA  
                      u2241 1498                        u2161 137C                        u1441 1B8C  
                      u1521 1D46                        u1601 21EA                        u2090 2576  
                      u2330 160A                        u2250 14E4                        u2170 139C  
                      u1450 1BC2                        u1530 1D88                        u1610 2522  
                      u2091 2572                        u2331 1606                        u2251 14E0  
                      u2171 1398                        u1451 1BBE                        u1531 1D84  
                      u1611 251E                        u2340 22B4                        u2260 1512  
                      u2180 13B8                        u1620 2610                        u1540 1DB2  
                      u1700 1958                        u2500 0F8E                        u2341 22B0  
                      u2261 150E                        u2181 13B4                        u1621 260A  
                      u1461 1BEC                        u1541 1DAE                        u1701 1954  
                      u2501 0F8A                        u2350 22D2                        u2270 1540  
                      u2190 13F2                        u1630 2612                        u1470 1C10  
                      u1550 1DE0                        u1390 1FDA                        u1710 1984  
                      u2510 10BA                        u2351 22CE                        u2271 153C  
                      u2191 13EE                        u1471 1C0C                        u1551 1DDC  
                      u1391 1FD6                        u1711 1980                        u2511 10B6  
                      u2360 22EE                        u2280 1570                        u1640 2496  
                      u1800 1ED6                        u1480 1C3A                        u1560 1E28  
                      u1720 199A                        u2600 118A                        u2520 10D0  
                      u2361 22EA                        u2281 156C                        u1641 2492  
                      u1801 1ED2                        u1481 1C36                        u1561 1E24  
                      u1721 1996                        u2601 1186                        u2521 10CC  
                      u2290 1582                        u1650 24B8                        u1810 1F90  
                      u1490 1C7A                        u1570 2168                        u1730 1AD6  
                      u2610 11A0                        u2530 10EE                        u2291 157E  
                      u1651 24B4                        u1811 1F8C                        u1491 1C76  
                      u1571 2164                        u1731 1AD2                        u2611 119C  
                      u2531 10EA                        u1820 1FA2                        u1580 218A  
                      u1740 1AF4                        u1660 18FA                        u1900 173C  
                      u2700 1266                        u2620 11B6                        u2540 1100  
                      u1821 1F9E                        u1581 2186                        u1741 1AF0  
                      u1661 18F4                        u1901 1738                        u2701 1262  
                      u2621 11B2                        u2541 10FC                        u1830 231E  
                      u1590 21E0                        u1750 1B0E                        u1670 18FC  
                      u1910 17B4                        u2710 127A                        u2630 11CA  
                      u2550 1110                        u2470 0F08                        u1831 231A  
                      u1591 21DC                        u1751 1B0A                        u1911 17B0  
                      u2711 1276                        u2631 11C6                        u2551 110C  
                      u2471 0F04                        u1840 2334                        u1760 1B28  
                      u1680 190E                        u1920 17E4                        u2720 128C  
                      u2640 11DE                        u2560 113C                        u2480 0F28  
                      u1841 2330                        u1761 1B24                        u1681 190A  
                      u1921 17E0                        u2721 1288                        u2641 11DA  
                      u2561 1138                        u2481 0F24                        u1850 234A  
                      u1770 1B36                        u1690 193C                        u1930 1804  
                      u2730 12A2                        u2650 11F0                        u2570 1150  
                      u2490 0F6A                        u1851 2346                        u1771 1B32  
                      u1691 1938                        u1931 1800                        u2731 129E  
                      u2651 11EC                        u2571 114C                        u2491 0F66  
                      u1860 2360                        u1940 2594                        u1780 1B46  
                      u2740 12B8                        u2660 1206                        u2580 1162  
                      u1861 235C                        u1941 2590                        u1781 1B42  
                      u2741 12B4                        u2661 1202                        u2581 115E  
                      u1950 2388                        u1790 1EA2                        u1870 1638  
                      u2750 12CA                        u2670 121C                        u2590 1174  
                      u2807 2258                        u1951 2384                        u1791 1E9E  
                      u1871 1634                        u2751 12C6                        u2671 1218  
                      u2591 1170                        u1960 23A6                        u1880 16CE  
                      u2680 122E                        u2817 2268                        u1961 23A2  
                      u1881 16CA                        u2681 122A                        u1970 23BC  
                      u1890 16F6                        u2690 1252                        u2827 227C  
                      u1971 23B8                        u1891 16F2                        u2691 124E  
                      u1980 2474                        u2837 25B0                        u1981 2470  
                      u1990 20A0                        u2847 236E                        u2767 26DE  
                      u1991 209C                        u2857 271A                        u2777 2226  
                      u2787 223C                        u2797 2248                        abs@a 0013  
                      _dbuf 0100                        _atoi 1E6A                        _main 0E28  
                      _dtoa 18CA                        _hour 00E1                        _prec 005C  
                      pad@i 0018                        pad@p 0015                        fsr1h 000FE2  
                      fsr2h 000FDA                        indf2 000FDF                        fsr1l 000FE1  
                      pad@w 001A                        fsr2l 000FD9                        btemp 005F  
              ?_LCD_setline 0001                        prodh 000FF4                        prodl 000FF3  
               main@yearstr 00AD                        start 00C8            __end_of_ADC_init 2702  
          __end_of_DAC_init 2716             __end_of_HighISR 00C8                ___param_bank 000000  
                _Comp1_init 2666                       ??_abs 0015                       ??_pad 0017  
          __end_of_LCD_Init 229A             __end_of___aodiv 1D06                       ?_atoi 0007  
                     ?_main 0001                       ?_dtoa 001C             __end_of___aomod 1E6A  
                     _ADPCH 000F5F             __end_of___lwdiv 230E             __end_of___lwmod 23DA  
                     i2l150 00A6                       i2l151 00BC                       i2l152 00BE  
                     i2l145 005E                       i2l153 00C4                       i2l146 00C0  
              vfpfcnvrt@fmt 0041                       _TMR0H 000FD4                       _TMR0L 000FD3  
      check_month@leap_year 0014                       _flags 005E                       _fputc 1FC8  
                     _fputs 24C4             __end_of_isdigit 2618                       atoi@n 000E  
                     pad@fp 0011                       atoi@s 0007                       _width 00CD  
                     _putch 2734                       dtoa@d 001E                       dtoa@i 003C  
                     dtoa@n 0034                       dtoa@p 0030                       dtoa@s 003E  
                     dtoa@w 0032             __end_of_isspace 24C4               ?_LCD_sendbyte 0002  
                     tablat 000FF5                       ttemp5 0060                       ttemp6 0063  
                     ttemp7 0067                       status 000FD8                       wtemp8 0060  
           __end_of_sprintf 242C        check_month@month_day 000E             __initialization 2618  
              __end_of_atoi 1FC8                __end_of_main 12DA                __end_of_dtoa 1B7E  
                _Light_init 272E            _daylight_end_min 00D3           __end_of_LCD_E_TOG 2724  
                    ??_atoi 0009                      ??_main 0077                      ??_dtoa 0026  
             __activetblptr 000003           __end_of_LCD_clear 26E8                      ?_fputc 0001  
                    ?_fputs 000A                      _ADRESH 000F64              ??_LCD_sendbyte 0003  
                    ?_putch 0001                      i2l2550 0028                      i2l2560 007C  
                    i2l2552 002C                      i2l2544 000A                      i2l2562 0090  
                    i2l2554 003A                      i2l2546 001A                      i2l2564 00B6  
                    i2l2556 0048                      i2l2548 0022                      i2l2558 006C  
             vfpfcnvrt@done 0050                   ??_HighISR 0001                      _TMR0IE 00714D  
                    _TMR0IF 00719D           _LEDarray_disp_bin 2092          ?_LEDarray_disp_bin 0001  
             ??_Timer0_init 0001                vfprintf@cfmt 005A                   ??___aodiv 0011  
                 ??___aomod 0011                      ___wmul 2640                 ?_Comp1_init 0001  
                 ??___lwdiv 000B                   ??___lwmod 000B         ??_LEDarray_disp_bin 0003  
                    clear_0 261E                      clear_1 262A               main@month_day 00CB  
                    _minute 00DF                      isa$std 000001                      pad@buf 0013  
                    dtoa@fp 001C                      fputc@c 0001                      fputs@c 000E  
                    fputs@i 000F                      fputs@s 000A                   ??_isdigit 0003  
              __mediumconst 0000                   ??_isspace 0003                      tblptrh 000FF7  
                    tblptrl 000FF6                      tblptru 000FF8                   ?_ADC_init 0001  
                    putch@c 0001                   ?_DAC_init 0001            __end_of_vfprintf 247E  
                 ??_sprintf 005C             _current_day_min 00DB   __end_of_LEDarray_disp_bin 215A  
                __accesstop 0060     __end_of__initialization 2636                   ?_LCD_Init 0001  
           check_month@year 0010               ___rparam_used 000001               _LEDarray_init 268C  
           _Interrupts_init 2724              __pcstackCOMRAM 0001                 ?_Light_init 0001  
             __end_of_fputc 2092               __end_of_fputs 2508               __end_of_putch 2736  
       __end_of_Timer0_init 26CE           _daylight_end_hour 00D5                  ??_ADC_init 0001  
                ??_DAC_init 0001                     ??_fputc 0005                     ??_fputs 000E  
                   ??_putch 0001                  __pbssBANK0 00CD                  __pbssBANK1 0100  
                ??_LCD_Init 0004              _LCD_sendnibble 230E              ?_LEDarray_init 0001  
            _LCD_sendstring 25B8         _daylight_start_hour 00D9                     ?___wmul 0001  
      __end_of_LCD_sendbyte 25B8      __end_of_LCD_sendnibble 2376     __end_of_Interrupts_init 272E  
                   _HighISR 0008      __end_of_LCD_sendstring 25EC                   _ADREFbits 000F58  
                   __Hparam 0000                     __Lparam 0000                 _Timer0_init 26AE  
                   ___aodiv 1B7E                     ___aomod 1D06                     ___lwdiv 229A  
                   ___lwmod 2376                   ?_vfprintf 0054                __psmallconst 0E00  
                   __pcinit 2618                     __ramtop 0E00                     __ptext0 0E28  
                   __ptext1 23DA                     __ptext2 242C                     __ptext3 1610  
                   __ptext4 18CA                     __ptext5 215A                     __ptext6 24C4  
                   __ptext7 1FC8                     __ptext8 2734                     __ptext9 2508  
                   _isdigit 25EC               ??_check_month 0012                     _isspace 247E  
                 _LCD_E_TOG 2716             LCD_setline@line 0004                     atoi@neg 000C  
                   main@day 00C7                     _sprintf 23DA                   _LCD_clear 26CE  
      end_of_initialization 2636             ?_LCD_sendnibble 0001       main@OneAmToFiveAmFlag 00C1  
                   fputc@fp 0003             ??_LEDarray_init 0001                     fputs@fp 000C  
           ?_LCD_sendstring 0004           __end_of_vfpfcnvrt 18CA                     postdec2 000FDD  
              ??_Comp1_init 0001                     postinc0 000FEE                     postinc1 000FE6  
                   postinc2 000FDE            vfpfcnvrt@convarg 0048                  ??_vfprintf 005A  
          _current_day_hour 00DD                  ?_LCD_E_TOG 0001                   _TRISAbits 000F81  
                 _TRISBbits 000F82                   _TRISCbits 000F83                   _TRISEbits 000F85  
                 _TRISFbits 000F86                   _TRISGbits 000F87                   _TRISHbits 000F88  
_calculated_solar_noon_hour 00D1            check_month@month 000C                  ?_LCD_clear 0001  
       __end_of_check_month 1610          __end_of_Comp1_init 268C                 _CM1CON0bits 000ED0  
               _CM1CON1bits 000ED1            ?_Interrupts_init 0001                ??_Light_init 0001  
               vfpfcnvrt@ap 0043                 vfpfcnvrt@cp 0052                 vfpfcnvrt@fp 003F  
            __end_of___wmul 2666        LCD_sendnibble@number 0001         start_initialization 2618  
               __end_of_abs 2548                 __end_of_pad 2204          __end_of_Light_init 2734  
              _LCD_sendbyte 2582               ??_LCD_setline 0004                 vfprintf@fmt 0056  
      LCD_sendstring@string 0004                    ??___wmul 0005                 __pbssCOMRAM 005C  
               _check_month 12DA                 ??_LCD_E_TOG 0001               __pcstackBANK0 0060  
          ___aodiv@dividend 0001                 ??_LCD_clear 0004                    ?_HighISR 0001  
          ___lwdiv@dividend 0007                   _dtoa$1887 002E                ?_Timer0_init 0001  
        _daylight_start_min 00D7                   __pintcode 0008                    ?___aodiv 0001  
                  ?___aomod 0001            ___aodiv@quotient 0013         __end_of_LCD_setline 2582  
                  ?___lwdiv 0007                    ?___lwmod 0007                 __smallconst 0E00  
                  ?_isdigit 0001                    ?_isspace 0001            ??_LCD_sendnibble 0001  
                  _ADC_init 26E8                    _DAC_init 2702            ___lwdiv@quotient 000B  
          ??_LCD_sendstring 0006                    ?_sprintf 0060            LCD_sendbyte@Byte 0003  
                  _LCD_Init 2204            LCD_sendbyte@type 0002              ___wmul@product 0005  
                  _LATAbits 000F79                    _LATBbits 000F7A                    _LATCbits 000F7B  
                  _LATEbits 000F7D                    _LATFbits 000F7E                    _LATGbits 000F7F  
                  _LATHbits 000F80                    i2u240_40 001A                    i2u240_41 0016  
                  i2u241_40 003A                    i2u241_41 0036                    i2u242_40 0048  
                  i2u242_41 0044                    i2u243_40 006C                    i2u243_41 0068  
                  i2u244_40 0090                    i2u244_41 008C                    i2u245_40 00A6  
                  i2u245_41 00A2                    i2u246_40 00B6                    i2u246_41 00B2  
                  _PIR2bits 000E35                   _vfpfcnvrt 1610                  _ADCON0bits 000F60  
         ___wmul@multiplier 0001                   main@month 00C9                _isspace$1936 0005  
                _CM1NCHbits 000ED2                  _CM1PCHbits 000ED3       __end_of_LEDarray_init 26AE  
               _LCD_setline 2548                    __Hrparam 0000                  vfprintf@ap 0058  
                  __Lrparam 0000                  vfprintf@fp 0054                  ?_vfpfcnvrt 003F  
           ___aodiv@divisor 0009             ___aodiv@counter 0011                  _ANSELAbits 000E92  
                _ANSELFbits 000EB4                  sprintf@fmt 0062                  _T0CON0bits 000FD5  
                _T0CON1bits 000FD6             ___lwdiv@divisor 0009             ___lwdiv@counter 000D  
                  __ptext10 1D06                    __ptext11 1B7E                    __ptext20 272E  
                  __ptext12 1E6A                    __ptext21 268C                    __ptext13 247E  
                  __ptext30 2724                    __ptext22 2092                    __ptext14 25EC  
                  __ptext31 2666                    __ptext23 2548                    __ptext15 2640  
                  __ptext32 2702                    __ptext24 25B8                    __ptext16 12DA  
                  __ptext33 26E8                    __ptext25 26CE                    __ptext17 2376  
                  __ptext26 2204                    __ptext18 229A                    __ptext27 2582  
                  __ptext19 26AE                    __ptext28 230E                    __ptext29 2716  
   LEDarray_disp_bin@number 0001                    isa$xinst 000000                    int$flags 005F  
                  _vfprintf 242C                    main@year 00C5            ___aomod@dividend 0001  
                _INTCONbits 000FF2                ?_check_month 000C                    isdigit@c 0001  
                  intlevel2 0000                   sprintf@ap 006A                _DAC1CON0bits 000EC6  
              _DAC1CON1bits 000EC7            ___lwmod@dividend 0007                    isspace@c 0001  
           ___aomod@divisor 0009                 ??_vfpfcnvrt 0045             ___aomod@counter 0011  
                  sprintf@f 006C                    sprintf@s 0060   _calculated_solar_noon_min 00CF  
           ___lwmod@divisor 0009             ___lwmod@counter 000B                ___aodiv@sign 0012  
              ___aomod@sign 0012  

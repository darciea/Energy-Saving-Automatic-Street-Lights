

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Nov 07 18:13:13 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    26                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    28   000000                     
    29                           ; Version 2.35
    30                           ; Generated 05/05/2021 GMT
    31                           ; 
    32                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F67K40 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64   000000                     _T0CON0bits	set	4053
    65   000000                     _T0CON1bits	set	4054
    66   000000                     _CM1CON1bits	set	3793
    67   000000                     _LATHbits	set	3968
    68   000000                     _ANSELAbits	set	3730
    69   000000                     _TRISAbits	set	3969
    70   000000                     _TMR0IE	set	29005
    71   000000                     _TRISEbits	set	3973
    72   000000                     _TRISCbits	set	3971
    73   000000                     _TRISBbits	set	3970
    74   000000                     _TRISFbits	set	3974
    75   000000                     _TRISGbits	set	3975
    76   000000                     _ANSELFbits	set	3764
    77   000000                     _ADREFbits	set	3928
    78   000000                     _ADPCH	set	3935
    79   000000                     _ADRESH	set	3940
    80   000000                     _ADCON0bits	set	3936
    81   000000                     _LATAbits	set	3961
    82   000000                     _LATGbits	set	3967
    83   000000                     _TMR0L	set	4051
    84   000000                     _TMR0H	set	4052
    85   000000                     _INTCONbits	set	4082
    86   000000                     _TRISHbits	set	3976
    87   000000                     _LATEbits	set	3965
    88   000000                     _LATCbits	set	3963
    89   000000                     _LATBbits	set	3962
    90   000000                     _LATFbits	set	3966
    91   000000                     _DAC1CON0bits	set	3782
    92   000000                     _CM1CON0bits	set	3792
    93   000000                     _CM1NCHbits	set	3794
    94   000000                     _DAC1CON1bits	set	3783
    95   000000                     _CM1PCHbits	set	3795
    96   000000                     _TMR0IF	set	29085
    97   000000                     _PIR2bits	set	3637
    98                           
    99                           	psect	smallconst
   100   000E00                     __psmallconst:
   101                           	callstack 0
   102   000E00  00                 	db	0
   103   000E01                     
   104                           ; BSR set to: 14
   105   000E01  56                 	db	86	;'V'
   106   000E02  6F                 	db	111	;'o'
   107   000E03  6C                 	db	108	;'l'
   108   000E04  74                 	db	116	;'t'
   109   000E05  61                 	db	97	;'a'
   110   000E06  67                 	db	103	;'g'
   111   000E07  65                 	db	101	;'e'
   112   000E08  20                 	db	32
   113   000E09  3D                 	db	61	;'='
   114   000E0A  20                 	db	32
   115   000E0B  25                 	db	37
   116   000E0C  64                 	db	100	;'d'
   117   000E0D  2E                 	db	46
   118   000E0E  25                 	db	37
   119   000E0F  30                 	db	48	;'0'
   120   000E10  32                 	db	50	;'2'
   121   000E11  64                 	db	100	;'d'
   122   000E12  00                 	db	0
   123   000E13  00                 	db	0	; dummy byte at the end
   124   000000                     
   125                           ; #config settings
   126                           
   127                           	psect	cinit
   128   0016B4                     __pcinit:
   129                           	callstack 0
   130   0016B4                     start_initialization:
   131                           	callstack 0
   132   0016B4                     __initialization:
   133                           	callstack 0
   134                           
   135                           ; Clear objects allocated to COMRAM (20 bytes)
   136   0016B4  EE00  F026         	lfsr	0,__pbssCOMRAM
   137   0016B8  0E14               	movlw	20
   138   0016BA                     clear_0:
   139   0016BA  6AEE               	clrf	postinc0,c
   140   0016BC  06E8               	decf	wreg,f,c
   141   0016BE  E1FD               	bnz	clear_0
   142   0016C0                     end_of_initialization:
   143                           	callstack 0
   144   0016C0                     __end_of__initialization:
   145                           	callstack 0
   146   0016C0  903A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   147   0016C2  923A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   148   0016C4  0E00               	movlw	low (__Lsmallconst shr (0+16))
   149   0016C6  6EF8               	movwf	tblptru,c
   150   0016C8  0E0E               	movlw	high __Lsmallconst
   151   0016CA  6EF7               	movwf	tblptrh,c
   152   0016CC  0100               	movlb	0
   153   0016CE  EF0A  F007         	goto	_main	;jump to C main() function
   154                           
   155                           	psect	bssCOMRAM
   156   000026                     __pbssCOMRAM:
   157                           	callstack 0
   158   000026                     _calculated_solar_noon_min:
   159                           	callstack 0
   160   000026                     	ds	2
   161   000028                     _calculated_solar_noon_hour:
   162                           	callstack 0
   163   000028                     	ds	2
   164   00002A                     _daylight_end_min:
   165                           	callstack 0
   166   00002A                     	ds	2
   167   00002C                     _daylight_end_hour:
   168                           	callstack 0
   169   00002C                     	ds	2
   170   00002E                     _daylight_start_min:
   171                           	callstack 0
   172   00002E                     	ds	2
   173   000030                     _daylight_start_hour:
   174                           	callstack 0
   175   000030                     	ds	2
   176   000032                     _current_day_min:
   177                           	callstack 0
   178   000032                     	ds	2
   179   000034                     _current_day_hour:
   180                           	callstack 0
   181   000034                     	ds	2
   182   000036                     _minute:
   183                           	callstack 0
   184   000036                     	ds	2
   185   000038                     _hour:
   186                           	callstack 0
   187   000038                     	ds	2
   188                           
   189                           	psect	cstackCOMRAM
   190   000001                     __pcstackCOMRAM:
   191                           	callstack 0
   192   000001                     ?___wmul:
   193                           	callstack 0
   194   000001                     LEDarray_disp_bin@number:
   195                           	callstack 0
   196   000001                     ___wmul@multiplier:
   197                           	callstack 0
   198                           
   199                           ; 2 bytes @ 0x0
   200   000001                     	ds	2
   201   000003                     ___wmul@multiplicand:
   202                           	callstack 0
   203                           
   204                           ; 2 bytes @ 0x2
   205   000003                     	ds	2
   206   000005                     ___wmul@product:
   207                           	callstack 0
   208                           
   209                           ; 2 bytes @ 0x4
   210   000005                     	ds	2
   211   000007                     ?___lwdiv:
   212                           	callstack 0
   213   000007                     ?___lwmod:
   214                           	callstack 0
   215   000007                     ___lwdiv@dividend:
   216                           	callstack 0
   217   000007                     ___lwmod@dividend:
   218                           	callstack 0
   219                           
   220                           ; 2 bytes @ 0x6
   221   000007                     	ds	2
   222   000009                     ___lwdiv@divisor:
   223                           	callstack 0
   224   000009                     ___lwmod@divisor:
   225                           	callstack 0
   226                           
   227                           ; 2 bytes @ 0x8
   228   000009                     	ds	2
   229   00000B                     ___lwmod@counter:
   230                           	callstack 0
   231   00000B                     ___lwdiv@quotient:
   232                           	callstack 0
   233                           
   234                           ; 2 bytes @ 0xA
   235   00000B                     	ds	1
   236   00000C                     ?_check_month:
   237                           	callstack 0
   238   00000C                     check_month@month:
   239                           	callstack 0
   240                           
   241                           ; 2 bytes @ 0xB
   242   00000C                     	ds	1
   243   00000D                     ___lwdiv@counter:
   244                           	callstack 0
   245                           
   246                           ; 1 bytes @ 0xC
   247   00000D                     	ds	1
   248   00000E                     check_month@month_day:
   249                           	callstack 0
   250                           
   251                           ; 2 bytes @ 0xD
   252   00000E                     	ds	2
   253   000010                     check_month@year:
   254                           	callstack 0
   255                           
   256                           ; 2 bytes @ 0xF
   257   000010                     	ds	2
   258   000012                     ??_check_month:
   259                           
   260                           ; 1 bytes @ 0x11
   261   000012                     	ds	2
   262   000014                     check_month@leap_year:
   263                           	callstack 0
   264                           
   265                           ; 2 bytes @ 0x13
   266   000014                     	ds	2
   267   000016                     ??_main:
   268                           
   269                           ; 1 bytes @ 0x15
   270   000016                     	ds	4
   271   00001A                     main@year:
   272                           	callstack 0
   273                           
   274                           ; 2 bytes @ 0x19
   275   00001A                     	ds	2
   276   00001C                     main@OneAmToFiveAmFlag:
   277                           	callstack 0
   278                           
   279                           ; 2 bytes @ 0x1B
   280   00001C                     	ds	2
   281   00001E                     main@changed:
   282                           	callstack 0
   283                           
   284                           ; 2 bytes @ 0x1D
   285   00001E                     	ds	2
   286   000020                     main@month:
   287                           	callstack 0
   288                           
   289                           ; 2 bytes @ 0x1F
   290   000020                     	ds	2
   291   000022                     main@day:
   292                           	callstack 0
   293                           
   294                           ; 2 bytes @ 0x21
   295   000022                     	ds	2
   296   000024                     main@month_day:
   297                           	callstack 0
   298                           
   299                           ; 2 bytes @ 0x23
   300   000024                     	ds	2
   301                           
   302 ;;
   303 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   304 ;;
   305 ;; *************** function _main *****************
   306 ;; Defined at:
   307 ;;		line 22 in file "../main.c"
   308 ;; Parameters:    Size  Location     Type
   309 ;;		None
   310 ;; Auto vars:     Size  Location     Type
   311 ;;  month_day       2   35[COMRAM] unsigned int 
   312 ;;  day             2   33[COMRAM] unsigned int 
   313 ;;  month           2   31[COMRAM] unsigned int 
   314 ;;  changed         2   29[COMRAM] unsigned int 
   315 ;;  OneAmToFiveA    2   27[COMRAM] unsigned int 
   316 ;;  year            2   25[COMRAM] unsigned int 
   317 ;; Return value:  Size  Location     Type
   318 ;;                  1    wreg      void 
   319 ;; Registers used:
   320 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   321 ;; Tracked objects:
   322 ;;		On entry : 0/0
   323 ;;		On exit  : 0/0
   324 ;;		Unchanged: 0/0
   325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   327 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   328 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   329 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   330 ;;Total ram usage:       16 bytes
   331 ;; Hardware stack levels required when called: 3
   332 ;; This function calls:
   333 ;;		_ADC_init
   334 ;;		_Comp1_init
   335 ;;		_Interrupts_init
   336 ;;		_LEDarray_disp_bin
   337 ;;		_LEDarray_init
   338 ;;		_Light_init
   339 ;;		_Timer0_init
   340 ;;		___lwdiv
   341 ;;		___lwmod
   342 ;;		___wmul
   343 ;;		_check_month
   344 ;; This function is called by:
   345 ;;		Startup code after reset
   346 ;; This function uses a non-reentrant model
   347 ;;
   348                           
   349                           	psect	text0
   350   000E14                     __ptext0:
   351                           	callstack 0
   352   000E14                     _main:
   353                           	callstack 28
   354   000E14                     
   355                           ;../main.c: 25:     unsigned int day = 2;
   356   000E14  0E00               	movlw	0
   357   000E16  6E23               	movwf	(main@day+1)^0,c
   358   000E18  0E02               	movlw	2
   359   000E1A  6E22               	movwf	main@day^0,c
   360                           
   361                           ;../main.c: 26:     unsigned int month = 11;
   362   000E1C  0E00               	movlw	0
   363   000E1E  6E21               	movwf	(main@month+1)^0,c
   364   000E20  0E0B               	movlw	11
   365   000E22  6E20               	movwf	main@month^0,c
   366                           
   367                           ;../main.c: 27:     unsigned int month_day = 29;
   368   000E24  0E00               	movlw	0
   369   000E26  6E25               	movwf	(main@month_day+1)^0,c
   370   000E28  0E1D               	movlw	29
   371   000E2A  6E24               	movwf	main@month_day^0,c
   372                           
   373                           ;../main.c: 28:     unsigned int year = 2022;
   374   000E2C  0E07               	movlw	7
   375   000E2E  6E1B               	movwf	(main@year+1)^0,c
   376   000E30  0EE6               	movlw	230
   377   000E32  6E1A               	movwf	main@year^0,c
   378                           
   379                           ;../main.c: 29:     unsigned int changed = 0;
   380   000E34  0E00               	movlw	0
   381   000E36  6E1F               	movwf	(main@changed+1)^0,c
   382   000E38  0E00               	movlw	0
   383   000E3A  6E1E               	movwf	main@changed^0,c
   384                           
   385                           ;../main.c: 30:     unsigned int OneAmToFiveAmFlag = 0;
   386   000E3C  0E00               	movlw	0
   387   000E3E  6E1D               	movwf	(main@OneAmToFiveAmFlag+1)^0,c
   388   000E40  0E00               	movlw	0
   389   000E42  6E1C               	movwf	main@OneAmToFiveAmFlag^0,c
   390   000E44                     
   391                           ;../main.c: 33:     Timer0_init();
   392   000E44  EC4A  F00B         	call	_Timer0_init	;wreg free
   393                           
   394                           ;../main.c: 34:     LEDarray_init();
   395   000E48  EC39  F00B         	call	_LEDarray_init	;wreg free
   396                           
   397                           ;../main.c: 35:     Interrupts_init();
   398   000E4C  EC80  F00B         	call	_Interrupts_init	;wreg free
   399                           
   400                           ;../main.c: 36:     LEDarray_init();
   401   000E50  EC39  F00B         	call	_LEDarray_init	;wreg free
   402   000E54                     
   403                           ;../main.c: 37:     Comp1_init();
   404   000E54  EC26  F00B         	call	_Comp1_init	;wreg free
   405   000E58                     
   406                           ;../main.c: 38:     Light_init();
   407   000E58  EC85  F00B         	call	_Light_init	;wreg free
   408                           
   409                           ;../main.c: 39:     ADC_init();
   410   000E5C  EC69  F00B         	call	_ADC_init	;wreg free
   411   000E60                     l1569:
   412                           
   413                           ;../main.c: 43:         if (minute == 60) {
   414   000E60  0E3C               	movlw	60
   415   000E62  1836               	xorwf	_minute^0,w,c
   416   000E64  1037               	iorwf	(_minute+1)^0,w,c
   417   000E66  A4D8               	btfss	status,2,c
   418   000E68  EF38  F007         	goto	u1281
   419   000E6C  EF3A  F007         	goto	u1280
   420   000E70                     u1281:
   421   000E70  EF07  F008         	goto	l199
   422   000E74                     u1280:
   423   000E74                     
   424                           ;../main.c: 44:             hour++;
   425   000E74  4A38               	infsnz	_hour^0,f,c
   426   000E76  2A39               	incf	(_hour+1)^0,f,c
   427   000E78                     
   428                           ;../main.c: 45:             minute = 0;
   429   000E78  0E00               	movlw	0
   430   000E7A  6E37               	movwf	(_minute+1)^0,c
   431   000E7C  0E00               	movlw	0
   432   000E7E  6E36               	movwf	_minute^0,c
   433   000E80                     
   434                           ;../main.c: 46:             if (hour == 24){
   435   000E80  0E18               	movlw	24
   436   000E82  1838               	xorwf	_hour^0,w,c
   437   000E84  1039               	iorwf	(_hour+1)^0,w,c
   438   000E86  A4D8               	btfss	status,2,c
   439   000E88  EF48  F007         	goto	u1291
   440   000E8C  EF4A  F007         	goto	u1290
   441   000E90                     u1291:
   442   000E90  EF07  F008         	goto	l199
   443   000E94                     u1290:
   444   000E94                     
   445                           ;../main.c: 47:                 hour = 0;
   446   000E94  0E00               	movlw	0
   447   000E96  6E39               	movwf	(_hour+1)^0,c
   448   000E98  0E00               	movlw	0
   449   000E9A  6E38               	movwf	_hour^0,c
   450   000E9C                     
   451                           ;../main.c: 48:                 day++;
   452   000E9C  4A22               	infsnz	main@day^0,f,c
   453   000E9E  2A23               	incf	(main@day+1)^0,f,c
   454   000EA0                     
   455                           ;../main.c: 49:                 month_day++;
   456   000EA0  4A24               	infsnz	main@month_day^0,f,c
   457   000EA2  2A25               	incf	(main@month_day+1)^0,f,c
   458   000EA4                     
   459                           ;../main.c: 50:                 month, month_day = check_month(month, month_day, year);
   460   000EA4  C020  F00C         	movff	main@month,check_month@month
   461   000EA8  C021  F00D         	movff	main@month+1,check_month@month+1
   462   000EAC  C024  F00E         	movff	main@month_day,check_month@month_day
   463   000EB0  C025  F00F         	movff	main@month_day+1,check_month@month_day+1
   464   000EB4  C01A  F010         	movff	main@year,check_month@year
   465   000EB8  C01B  F011         	movff	main@year+1,check_month@year+1
   466   000EBC  EC1E  F009         	call	_check_month	;wreg free
   467   000EC0  C00C  F024         	movff	?_check_month,main@month_day
   468   000EC4  C00D  F025         	movff	?_check_month+1,main@month_day+1
   469   000EC8                     
   470                           ;../main.c: 51:                 if (day == 7){day = 0;}
   471   000EC8  0E07               	movlw	7
   472   000ECA  1822               	xorwf	main@day^0,w,c
   473   000ECC  1023               	iorwf	(main@day+1)^0,w,c
   474   000ECE  A4D8               	btfss	status,2,c
   475   000ED0  EF6C  F007         	goto	u1301
   476   000ED4  EF6E  F007         	goto	u1300
   477   000ED8                     u1301:
   478   000ED8  EF72  F007         	goto	l1589
   479   000EDC                     u1300:
   480   000EDC  0E00               	movlw	0
   481   000EDE  6E23               	movwf	(main@day+1)^0,c
   482   000EE0  0E00               	movlw	0
   483   000EE2  6E22               	movwf	main@day^0,c
   484   000EE4                     l1589:
   485                           
   486                           ;../main.c: 55:                 if (daylight_end_min >= daylight_start_min) {
   487   000EE4  502E               	movf	_daylight_start_min^0,w,c
   488   000EE6  5C2A               	subwf	_daylight_end_min^0,w,c
   489   000EE8  502F               	movf	(_daylight_start_min+1)^0,w,c
   490   000EEA  582B               	subwfb	(_daylight_end_min+1)^0,w,c
   491   000EEC  A0D8               	btfss	status,0,c
   492   000EEE  EF7B  F007         	goto	u1311
   493   000EF2  EF7D  F007         	goto	u1310
   494   000EF6                     u1311:
   495   000EF6  EF8B  F007         	goto	l1593
   496   000EFA                     u1310:
   497   000EFA                     
   498                           ;../main.c: 56:                     current_day_min = daylight_end_min - daylight_start_
      +                          min;
   499   000EFA  502E               	movf	_daylight_start_min^0,w,c
   500   000EFC  5C2A               	subwf	_daylight_end_min^0,w,c
   501   000EFE  6E32               	movwf	_current_day_min^0,c
   502   000F00  502F               	movf	(_daylight_start_min+1)^0,w,c
   503   000F02  582B               	subwfb	(_daylight_end_min+1)^0,w,c
   504   000F04  6E33               	movwf	(_current_day_min+1)^0,c
   505                           
   506                           ;../main.c: 57:                     current_day_hour = daylight_end_hour - daylight_star
      +                          t_hour;}
   507   000F06  5030               	movf	_daylight_start_hour^0,w,c
   508   000F08  5C2C               	subwf	_daylight_end_hour^0,w,c
   509   000F0A  6E34               	movwf	_current_day_hour^0,c
   510   000F0C  5031               	movf	(_daylight_start_hour+1)^0,w,c
   511   000F0E  582D               	subwfb	(_daylight_end_hour+1)^0,w,c
   512   000F10  6E35               	movwf	(_current_day_hour+1)^0,c
   513   000F12  EFA3  F007         	goto	l1595
   514   000F16                     l1593:
   515                           
   516                           ;../main.c: 59:                     current_day_min = daylight_end_min + (60-daylight_st
      +                          art_min);
   517   000F16  502E               	movf	_daylight_start_min^0,w,c
   518   000F18  5C2A               	subwf	_daylight_end_min^0,w,c
   519   000F1A  6E16               	movwf	??_main^0,c
   520   000F1C  502F               	movf	(_daylight_start_min+1)^0,w,c
   521   000F1E  582B               	subwfb	(_daylight_end_min+1)^0,w,c
   522   000F20  6E17               	movwf	(??_main+1)^0,c
   523   000F22  0E3C               	movlw	60
   524   000F24  2416               	addwf	??_main^0,w,c
   525   000F26  6E32               	movwf	_current_day_min^0,c
   526   000F28  0E00               	movlw	0
   527   000F2A  2017               	addwfc	(??_main+1)^0,w,c
   528   000F2C  6E33               	movwf	(_current_day_min+1)^0,c
   529                           
   530                           ;../main.c: 60:                     current_day_hour = daylight_end_hour - daylight_star
      +                          t_hour - 1;
   531   000F2E  5030               	movf	_daylight_start_hour^0,w,c
   532   000F30  5C2C               	subwf	_daylight_end_hour^0,w,c
   533   000F32  6E16               	movwf	??_main^0,c
   534   000F34  5031               	movf	(_daylight_start_hour+1)^0,w,c
   535   000F36  582D               	subwfb	(_daylight_end_hour+1)^0,w,c
   536   000F38  6E17               	movwf	(??_main+1)^0,c
   537   000F3A  0EFF               	movlw	255
   538   000F3C  2416               	addwf	??_main^0,w,c
   539   000F3E  6E34               	movwf	_current_day_hour^0,c
   540   000F40  0EFF               	movlw	255
   541   000F42  2017               	addwfc	(??_main+1)^0,w,c
   542   000F44  6E35               	movwf	(_current_day_hour+1)^0,c
   543   000F46                     l1595:
   544                           
   545                           ;../main.c: 63:                 calculated_solar_noon_hour = (daylight_start_hour*60 + d
      +                          aylight_start_min + current_day_hour*60 + current_day_min)/60;
   546   000F46  C030  F001         	movff	_daylight_start_hour,___wmul@multiplier
   547   000F4A  C031  F002         	movff	_daylight_start_hour+1,___wmul@multiplier+1
   548   000F4E  0E00               	movlw	0
   549   000F50  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   550   000F52  0E3C               	movlw	60
   551   000F54  6E03               	movwf	___wmul@multiplicand^0,c
   552   000F56  EC13  F00B         	call	___wmul	;wreg free
   553   000F5A  C001  F016         	movff	?___wmul,??_main
   554   000F5E  C002  F017         	movff	?___wmul+1,??_main+1
   555   000F62  C034  F001         	movff	_current_day_hour,___wmul@multiplier
   556   000F66  C035  F002         	movff	_current_day_hour+1,___wmul@multiplier+1
   557   000F6A  0E00               	movlw	0
   558   000F6C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   559   000F6E  0E3C               	movlw	60
   560   000F70  6E03               	movwf	___wmul@multiplicand^0,c
   561   000F72  EC13  F00B         	call	___wmul	;wreg free
   562   000F76  5001               	movf	?___wmul^0,w,c
   563   000F78  2416               	addwf	??_main^0,w,c
   564   000F7A  6E18               	movwf	(??_main+2)^0,c
   565   000F7C  5002               	movf	(?___wmul+1)^0,w,c
   566   000F7E  2017               	addwfc	(??_main+1)^0,w,c
   567   000F80  6E19               	movwf	(??_main+3)^0,c
   568   000F82  502E               	movf	_daylight_start_min^0,w,c
   569   000F84  2618               	addwf	(??_main+2)^0,f,c
   570   000F86  502F               	movf	(_daylight_start_min+1)^0,w,c
   571   000F88  2219               	addwfc	(??_main+3)^0,f,c
   572   000F8A  5032               	movf	_current_day_min^0,w,c
   573   000F8C  2418               	addwf	(??_main+2)^0,w,c
   574   000F8E  6E07               	movwf	___lwdiv@dividend^0,c
   575   000F90  5033               	movf	(_current_day_min+1)^0,w,c
   576   000F92  2019               	addwfc	(??_main+3)^0,w,c
   577   000F94  6E08               	movwf	(___lwdiv@dividend+1)^0,c
   578   000F96  0E00               	movlw	0
   579   000F98  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
   580   000F9A  0E3C               	movlw	60
   581   000F9C  6E09               	movwf	___lwdiv@divisor^0,c
   582   000F9E  ECA7  F00A         	call	___lwdiv	;wreg free
   583   000FA2  C007  F028         	movff	?___lwdiv,_calculated_solar_noon_hour
   584   000FA6  C008  F029         	movff	?___lwdiv+1,_calculated_solar_noon_hour+1
   585   000FAA                     
   586                           ;../main.c: 64:                 calculated_solar_noon_min = (daylight_start_hour*60 + da
      +                          ylight_start_min + current_day_hour*60 + current_day_min)%60;
   587   000FAA  C030  F001         	movff	_daylight_start_hour,___wmul@multiplier
   588   000FAE  C031  F002         	movff	_daylight_start_hour+1,___wmul@multiplier+1
   589   000FB2  0E00               	movlw	0
   590   000FB4  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   591   000FB6  0E3C               	movlw	60
   592   000FB8  6E03               	movwf	___wmul@multiplicand^0,c
   593   000FBA  EC13  F00B         	call	___wmul	;wreg free
   594   000FBE  C001  F016         	movff	?___wmul,??_main
   595   000FC2  C002  F017         	movff	?___wmul+1,??_main+1
   596   000FC6  C034  F001         	movff	_current_day_hour,___wmul@multiplier
   597   000FCA  C035  F002         	movff	_current_day_hour+1,___wmul@multiplier+1
   598   000FCE  0E00               	movlw	0
   599   000FD0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   600   000FD2  0E3C               	movlw	60
   601   000FD4  6E03               	movwf	___wmul@multiplicand^0,c
   602   000FD6  EC13  F00B         	call	___wmul	;wreg free
   603   000FDA  5001               	movf	?___wmul^0,w,c
   604   000FDC  2416               	addwf	??_main^0,w,c
   605   000FDE  6E18               	movwf	(??_main+2)^0,c
   606   000FE0  5002               	movf	(?___wmul+1)^0,w,c
   607   000FE2  2017               	addwfc	(??_main+1)^0,w,c
   608   000FE4  6E19               	movwf	(??_main+3)^0,c
   609   000FE6  502E               	movf	_daylight_start_min^0,w,c
   610   000FE8  2618               	addwf	(??_main+2)^0,f,c
   611   000FEA  502F               	movf	(_daylight_start_min+1)^0,w,c
   612   000FEC  2219               	addwfc	(??_main+3)^0,f,c
   613   000FEE  5032               	movf	_current_day_min^0,w,c
   614   000FF0  2418               	addwf	(??_main+2)^0,w,c
   615   000FF2  6E07               	movwf	___lwmod@dividend^0,c
   616   000FF4  5033               	movf	(_current_day_min+1)^0,w,c
   617   000FF6  2019               	addwfc	(??_main+3)^0,w,c
   618   000FF8  6E08               	movwf	(___lwmod@dividend+1)^0,c
   619   000FFA  0E00               	movlw	0
   620   000FFC  6E0A               	movwf	(___lwmod@divisor+1)^0,c
   621   000FFE  0E3C               	movlw	60
   622   001000  6E09               	movwf	___lwmod@divisor^0,c
   623   001002  ECE1  F00A         	call	___lwmod	;wreg free
   624   001006  C007  F026         	movff	?___lwmod,_calculated_solar_noon_min
   625   00100A  C008  F027         	movff	?___lwmod+1,_calculated_solar_noon_min+1
   626   00100E                     l199:
   627                           
   628                           ;../main.c: 70:         if (hour >= 1 && hour < 5){
   629   00100E  5038               	movf	_hour^0,w,c
   630   001010  1039               	iorwf	(_hour+1)^0,w,c
   631   001012  B4D8               	btfsc	status,2,c
   632   001014  EF0E  F008         	goto	u1321
   633   001018  EF10  F008         	goto	u1320
   634   00101C                     u1321:
   635   00101C  EF20  F008         	goto	l1605
   636   001020                     u1320:
   637   001020  5039               	movf	(_hour+1)^0,w,c
   638   001022  E107               	bnz	u1331
   639   001024  0E05               	movlw	5
   640   001026  5C38               	subwf	_hour^0,w,c
   641   001028  B0D8               	btfsc	status,0,c
   642   00102A  EF19  F008         	goto	u1331
   643   00102E  EF1B  F008         	goto	u1330
   644   001032                     u1331:
   645   001032  EF20  F008         	goto	l1605
   646   001036                     u1330:
   647   001036                     
   648                           ;../main.c: 71:             LATHbits.LATH3=0;
   649   001036  9680               	bcf	128,3,c	;volatile
   650   001038                     
   651                           ;../main.c: 72:             OneAmToFiveAmFlag = 1;}
   652   001038  0E00               	movlw	0
   653   00103A  6E1D               	movwf	(main@OneAmToFiveAmFlag+1)^0,c
   654   00103C  0E01               	movlw	1
   655   00103E  6E1C               	movwf	main@OneAmToFiveAmFlag^0,c
   656   001040                     l1605:
   657                           
   658                           ;../main.c: 73:         if (hour == 5 && OneAmToFiveAmFlag == 1 && CM1CON0bits.OUT == 1)
      +                          {
   659   001040  0E05               	movlw	5
   660   001042  1838               	xorwf	_hour^0,w,c
   661   001044  1039               	iorwf	(_hour+1)^0,w,c
   662   001046  A4D8               	btfss	status,2,c
   663   001048  EF28  F008         	goto	u1341
   664   00104C  EF2A  F008         	goto	u1340
   665   001050                     u1341:
   666   001050  EF40  F008         	goto	l1615
   667   001054                     u1340:
   668   001054  041C               	decf	main@OneAmToFiveAmFlag^0,w,c
   669   001056  101D               	iorwf	(main@OneAmToFiveAmFlag+1)^0,w,c
   670   001058  A4D8               	btfss	status,2,c
   671   00105A  EF31  F008         	goto	u1351
   672   00105E  EF33  F008         	goto	u1350
   673   001062                     u1351:
   674   001062  EF40  F008         	goto	l1615
   675   001066                     u1350:
   676   001066  010E               	movlb	14	; () banked
   677   001068  ADD0               	btfss	208,6,b	;volatile
   678   00106A  EF39  F008         	goto	u1361
   679   00106E  EF3B  F008         	goto	u1360
   680   001072                     u1361:
   681   001072  EF40  F008         	goto	l1615
   682   001076                     u1360:
   683   001076                     
   684                           ; BSR set to: 14
   685                           ;../main.c: 74:                 LATHbits.LATH3=1;
   686   001076  8680               	bsf	128,3,c	;volatile
   687   001078                     
   688                           ; BSR set to: 14
   689                           ;../main.c: 75:                 OneAmToFiveAmFlag = 0;}
   690   001078  0E00               	movlw	0
   691   00107A  6E1D               	movwf	(main@OneAmToFiveAmFlag+1)^0,c
   692   00107C  0E00               	movlw	0
   693   00107E  6E1C               	movwf	main@OneAmToFiveAmFlag^0,c
   694   001080                     l1615:
   695                           
   696                           ;../main.c: 77:         LEDarray_disp_bin(hour);
   697   001080  C038  F001         	movff	_hour,LEDarray_disp_bin@number
   698   001084  C039  F002         	movff	_hour+1,LEDarray_disp_bin@number+1
   699   001088  EC43  F00A         	call	_LEDarray_disp_bin	;wreg free
   700   00108C                     
   701                           ;../main.c: 81:         if (day == 0 && month == 3 && hour == 1 && minute == 0 && month_
      +                          day >=25 && month_day <= 31) {hour++;}
   702   00108C  5022               	movf	main@day^0,w,c
   703   00108E  1023               	iorwf	(main@day+1)^0,w,c
   704   001090  A4D8               	btfss	status,2,c
   705   001092  EF4D  F008         	goto	u1371
   706   001096  EF4F  F008         	goto	u1370
   707   00109A                     u1371:
   708   00109A  EF83  F008         	goto	l1631
   709   00109E                     u1370:
   710   00109E  0E03               	movlw	3
   711   0010A0  1820               	xorwf	main@month^0,w,c
   712   0010A2  1021               	iorwf	(main@month+1)^0,w,c
   713   0010A4  A4D8               	btfss	status,2,c
   714   0010A6  EF57  F008         	goto	u1381
   715   0010AA  EF59  F008         	goto	u1380
   716   0010AE                     u1381:
   717   0010AE  EF83  F008         	goto	l1631
   718   0010B2                     u1380:
   719   0010B2  0438               	decf	_hour^0,w,c
   720   0010B4  1039               	iorwf	(_hour+1)^0,w,c
   721   0010B6  A4D8               	btfss	status,2,c
   722   0010B8  EF60  F008         	goto	u1391
   723   0010BC  EF62  F008         	goto	u1390
   724   0010C0                     u1391:
   725   0010C0  EF83  F008         	goto	l1631
   726   0010C4                     u1390:
   727   0010C4  5036               	movf	_minute^0,w,c
   728   0010C6  1037               	iorwf	(_minute+1)^0,w,c
   729   0010C8  A4D8               	btfss	status,2,c
   730   0010CA  EF69  F008         	goto	u1401
   731   0010CE  EF6B  F008         	goto	u1400
   732   0010D2                     u1401:
   733   0010D2  EF83  F008         	goto	l1631
   734   0010D6                     u1400:
   735   0010D6  5025               	movf	(main@month_day+1)^0,w,c
   736   0010D8  E109               	bnz	u1410
   737   0010DA  0E19               	movlw	25
   738   0010DC  5C24               	subwf	main@month_day^0,w,c
   739   0010DE  A0D8               	btfss	status,0,c
   740   0010E0  EF74  F008         	goto	u1411
   741   0010E4  EF76  F008         	goto	u1410
   742   0010E8                     u1411:
   743   0010E8  EF83  F008         	goto	l1631
   744   0010EC                     u1410:
   745   0010EC  5025               	movf	(main@month_day+1)^0,w,c
   746   0010EE  E107               	bnz	u1421
   747   0010F0  0E20               	movlw	32
   748   0010F2  5C24               	subwf	main@month_day^0,w,c
   749   0010F4  B0D8               	btfsc	status,0,c
   750   0010F6  EF7F  F008         	goto	u1421
   751   0010FA  EF81  F008         	goto	u1420
   752   0010FE                     u1421:
   753   0010FE  EF83  F008         	goto	l1631
   754   001102                     u1420:
   755   001102  4A38               	infsnz	_hour^0,f,c
   756   001104  2A39               	incf	(_hour+1)^0,f,c
   757   001106                     l1631:
   758                           
   759                           ;../main.c: 83:         if (day == 0 && month == 10 && hour == 2 && minute == 0 && month
      +                          _day >=25 && month_day <= 31 && changed == 0) {
   760   001106  5022               	movf	main@day^0,w,c
   761   001108  1023               	iorwf	(main@day+1)^0,w,c
   762   00110A  A4D8               	btfss	status,2,c
   763   00110C  EF8A  F008         	goto	u1431
   764   001110  EF8C  F008         	goto	u1430
   765   001114                     u1431:
   766   001114  EFD1  F008         	goto	l1649
   767   001118                     u1430:
   768   001118  0E0A               	movlw	10
   769   00111A  1820               	xorwf	main@month^0,w,c
   770   00111C  1021               	iorwf	(main@month+1)^0,w,c
   771   00111E  A4D8               	btfss	status,2,c
   772   001120  EF94  F008         	goto	u1441
   773   001124  EF96  F008         	goto	u1440
   774   001128                     u1441:
   775   001128  EFD1  F008         	goto	l1649
   776   00112C                     u1440:
   777   00112C  0E02               	movlw	2
   778   00112E  1838               	xorwf	_hour^0,w,c
   779   001130  1039               	iorwf	(_hour+1)^0,w,c
   780   001132  A4D8               	btfss	status,2,c
   781   001134  EF9E  F008         	goto	u1451
   782   001138  EFA0  F008         	goto	u1450
   783   00113C                     u1451:
   784   00113C  EFD1  F008         	goto	l1649
   785   001140                     u1450:
   786   001140  5036               	movf	_minute^0,w,c
   787   001142  1037               	iorwf	(_minute+1)^0,w,c
   788   001144  A4D8               	btfss	status,2,c
   789   001146  EFA7  F008         	goto	u1461
   790   00114A  EFA9  F008         	goto	u1460
   791   00114E                     u1461:
   792   00114E  EFD1  F008         	goto	l1649
   793   001152                     u1460:
   794   001152  5025               	movf	(main@month_day+1)^0,w,c
   795   001154  E109               	bnz	u1470
   796   001156  0E19               	movlw	25
   797   001158  5C24               	subwf	main@month_day^0,w,c
   798   00115A  A0D8               	btfss	status,0,c
   799   00115C  EFB2  F008         	goto	u1471
   800   001160  EFB4  F008         	goto	u1470
   801   001164                     u1471:
   802   001164  EFD1  F008         	goto	l1649
   803   001168                     u1470:
   804   001168  5025               	movf	(main@month_day+1)^0,w,c
   805   00116A  E107               	bnz	u1481
   806   00116C  0E20               	movlw	32
   807   00116E  5C24               	subwf	main@month_day^0,w,c
   808   001170  B0D8               	btfsc	status,0,c
   809   001172  EFBD  F008         	goto	u1481
   810   001176  EFBF  F008         	goto	u1480
   811   00117A                     u1481:
   812   00117A  EFD1  F008         	goto	l1649
   813   00117E                     u1480:
   814   00117E  501E               	movf	main@changed^0,w,c
   815   001180  101F               	iorwf	(main@changed+1)^0,w,c
   816   001182  A4D8               	btfss	status,2,c
   817   001184  EFC6  F008         	goto	u1491
   818   001188  EFC8  F008         	goto	u1490
   819   00118C                     u1491:
   820   00118C  EFD1  F008         	goto	l1649
   821   001190                     u1490:
   822   001190                     
   823                           ;../main.c: 84:             hour--;
   824   001190  0638               	decf	_hour^0,f,c
   825   001192  A0D8               	btfss	status,0,c
   826   001194  0639               	decf	(_hour+1)^0,f,c
   827   001196                     
   828                           ;../main.c: 85:             changed = 1;
   829   001196  0E00               	movlw	0
   830   001198  6E1F               	movwf	(main@changed+1)^0,c
   831   00119A  0E01               	movlw	1
   832   00119C  6E1E               	movwf	main@changed^0,c
   833                           
   834                           ;../main.c: 86:         }
   835   00119E  EF30  F007         	goto	l1569
   836   0011A2                     l1649:
   837   0011A2  5022               	movf	main@day^0,w,c
   838   0011A4  1023               	iorwf	(main@day+1)^0,w,c
   839   0011A6  A4D8               	btfss	status,2,c
   840   0011A8  EFD8  F008         	goto	u1501
   841   0011AC  EFDA  F008         	goto	u1500
   842   0011B0                     u1501:
   843   0011B0  EF30  F007         	goto	l1569
   844   0011B4                     u1500:
   845   0011B4  0E0A               	movlw	10
   846   0011B6  1820               	xorwf	main@month^0,w,c
   847   0011B8  1021               	iorwf	(main@month+1)^0,w,c
   848   0011BA  A4D8               	btfss	status,2,c
   849   0011BC  EFE2  F008         	goto	u1511
   850   0011C0  EFE4  F008         	goto	u1510
   851   0011C4                     u1511:
   852   0011C4  EF30  F007         	goto	l1569
   853   0011C8                     u1510:
   854   0011C8  0E02               	movlw	2
   855   0011CA  1838               	xorwf	_hour^0,w,c
   856   0011CC  1039               	iorwf	(_hour+1)^0,w,c
   857   0011CE  A4D8               	btfss	status,2,c
   858   0011D0  EFEC  F008         	goto	u1521
   859   0011D4  EFEE  F008         	goto	u1520
   860   0011D8                     u1521:
   861   0011D8  EF30  F007         	goto	l1569
   862   0011DC                     u1520:
   863   0011DC  5036               	movf	_minute^0,w,c
   864   0011DE  1037               	iorwf	(_minute+1)^0,w,c
   865   0011E0  A4D8               	btfss	status,2,c
   866   0011E2  EFF5  F008         	goto	u1531
   867   0011E6  EFF7  F008         	goto	u1530
   868   0011EA                     u1531:
   869   0011EA  EF30  F007         	goto	l1569
   870   0011EE                     u1530:
   871   0011EE  5025               	movf	(main@month_day+1)^0,w,c
   872   0011F0  E109               	bnz	u1540
   873   0011F2  0E19               	movlw	25
   874   0011F4  5C24               	subwf	main@month_day^0,w,c
   875   0011F6  A0D8               	btfss	status,0,c
   876   0011F8  EF00  F009         	goto	u1541
   877   0011FC  EF02  F009         	goto	u1540
   878   001200                     u1541:
   879   001200  EF30  F007         	goto	l1569
   880   001204                     u1540:
   881   001204  5025               	movf	(main@month_day+1)^0,w,c
   882   001206  E107               	bnz	u1551
   883   001208  0E20               	movlw	32
   884   00120A  5C24               	subwf	main@month_day^0,w,c
   885   00120C  B0D8               	btfsc	status,0,c
   886   00120E  EF0B  F009         	goto	u1551
   887   001212  EF0D  F009         	goto	u1550
   888   001216                     u1551:
   889   001216  EF30  F007         	goto	l1569
   890   00121A                     u1550:
   891   00121A  041E               	decf	main@changed^0,w,c
   892   00121C  101F               	iorwf	(main@changed+1)^0,w,c
   893   00121E  A4D8               	btfss	status,2,c
   894   001220  EF14  F009         	goto	u1561
   895   001224  EF16  F009         	goto	u1560
   896   001228                     u1561:
   897   001228  EF30  F007         	goto	l1569
   898   00122C                     u1560:
   899   00122C  0E00               	movlw	0
   900   00122E  6E1F               	movwf	(main@changed+1)^0,c
   901   001230  0E00               	movlw	0
   902   001232  6E1E               	movwf	main@changed^0,c
   903   001234  EF30  F007         	goto	l1569
   904   001238  EF5F  F000         	goto	start
   905   00123C                     __end_of_main:
   906                           	callstack 0
   907                           
   908 ;; *************** function _check_month *****************
   909 ;; Defined at:
   910 ;;		line 12 in file "../MonthTracker.c"
   911 ;; Parameters:    Size  Location     Type
   912 ;;  month           2   11[COMRAM] unsigned int 
   913 ;;  month_day       2   13[COMRAM] unsigned int 
   914 ;;  year            2   15[COMRAM] unsigned int 
   915 ;; Auto vars:     Size  Location     Type
   916 ;;  leap_year       2   19[COMRAM] int 
   917 ;; Return value:  Size  Location     Type
   918 ;;                  2   11[COMRAM] unsigned int 
   919 ;; Registers used:
   920 ;;		wreg, status,2, status,0, cstack
   921 ;; Tracked objects:
   922 ;;		On entry : 0/0
   923 ;;		On exit  : 0/0
   924 ;;		Unchanged: 0/0
   925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   926 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   927 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   928 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   929 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   930 ;;Total ram usage:       10 bytes
   931 ;; Hardware stack levels used: 1
   932 ;; Hardware stack levels required when called: 2
   933 ;; This function calls:
   934 ;;		___lwmod
   935 ;; This function is called by:
   936 ;;		_main
   937 ;; This function uses a non-reentrant model
   938 ;;
   939                           
   940                           	psect	text1
   941   00123C                     __ptext1:
   942                           	callstack 0
   943   00123C                     _check_month:
   944                           	callstack 28
   945   00123C                     
   946                           ;../MonthTracker.c: 16:         if ((month == 1 || month == 3 || month == 5 || month == 
      +                          7 || month == 8|| month == 10 || month == 12) && month_day == 32){
   947   00123C  040C               	decf	check_month@month^0,w,c
   948   00123E  100D               	iorwf	(check_month@month+1)^0,w,c
   949   001240  B4D8               	btfsc	status,2,c
   950   001242  EF25  F009         	goto	u991
   951   001246  EF27  F009         	goto	u990
   952   00124A                     u991:
   953   00124A  EF63  F009         	goto	l1461
   954   00124E                     u990:
   955   00124E  0E03               	movlw	3
   956   001250  180C               	xorwf	check_month@month^0,w,c
   957   001252  100D               	iorwf	(check_month@month+1)^0,w,c
   958   001254  B4D8               	btfsc	status,2,c
   959   001256  EF2F  F009         	goto	u1001
   960   00125A  EF31  F009         	goto	u1000
   961   00125E                     u1001:
   962   00125E  EF63  F009         	goto	l1461
   963   001262                     u1000:
   964   001262  0E05               	movlw	5
   965   001264  180C               	xorwf	check_month@month^0,w,c
   966   001266  100D               	iorwf	(check_month@month+1)^0,w,c
   967   001268  B4D8               	btfsc	status,2,c
   968   00126A  EF39  F009         	goto	u1011
   969   00126E  EF3B  F009         	goto	u1010
   970   001272                     u1011:
   971   001272  EF63  F009         	goto	l1461
   972   001276                     u1010:
   973   001276  0E07               	movlw	7
   974   001278  180C               	xorwf	check_month@month^0,w,c
   975   00127A  100D               	iorwf	(check_month@month+1)^0,w,c
   976   00127C  B4D8               	btfsc	status,2,c
   977   00127E  EF43  F009         	goto	u1021
   978   001282  EF45  F009         	goto	u1020
   979   001286                     u1021:
   980   001286  EF63  F009         	goto	l1461
   981   00128A                     u1020:
   982   00128A  0E08               	movlw	8
   983   00128C  180C               	xorwf	check_month@month^0,w,c
   984   00128E  100D               	iorwf	(check_month@month+1)^0,w,c
   985   001290  B4D8               	btfsc	status,2,c
   986   001292  EF4D  F009         	goto	u1031
   987   001296  EF4F  F009         	goto	u1030
   988   00129A                     u1031:
   989   00129A  EF63  F009         	goto	l1461
   990   00129E                     u1030:
   991   00129E  0E0A               	movlw	10
   992   0012A0  180C               	xorwf	check_month@month^0,w,c
   993   0012A2  100D               	iorwf	(check_month@month+1)^0,w,c
   994   0012A4  B4D8               	btfsc	status,2,c
   995   0012A6  EF57  F009         	goto	u1041
   996   0012AA  EF59  F009         	goto	u1040
   997   0012AE                     u1041:
   998   0012AE  EF63  F009         	goto	l1461
   999   0012B2                     u1040:
  1000   0012B2  0E0C               	movlw	12
  1001   0012B4  180C               	xorwf	check_month@month^0,w,c
  1002   0012B6  100D               	iorwf	(check_month@month+1)^0,w,c
  1003   0012B8  A4D8               	btfss	status,2,c
  1004   0012BA  EF61  F009         	goto	u1051
  1005   0012BE  EF63  F009         	goto	u1050
  1006   0012C2                     u1051:
  1007   0012C2  EF83  F009         	goto	l1473
  1008   0012C6                     u1050:
  1009   0012C6                     l1461:
  1010   0012C6  0E20               	movlw	32
  1011   0012C8  180E               	xorwf	check_month@month_day^0,w,c
  1012   0012CA  100F               	iorwf	(check_month@month_day+1)^0,w,c
  1013   0012CC  A4D8               	btfss	status,2,c
  1014   0012CE  EF6B  F009         	goto	u1061
  1015   0012D2  EF6D  F009         	goto	u1060
  1016   0012D6                     u1061:
  1017   0012D6  EF83  F009         	goto	l1473
  1018   0012DA                     u1060:
  1019   0012DA                     
  1020                           ;../MonthTracker.c: 18:             month_day = 1;
  1021   0012DA  0E00               	movlw	0
  1022   0012DC  6E0F               	movwf	(check_month@month_day+1)^0,c
  1023   0012DE  0E01               	movlw	1
  1024   0012E0  6E0E               	movwf	check_month@month_day^0,c
  1025   0012E2                     
  1026                           ;../MonthTracker.c: 19:             month++;
  1027   0012E2  4A0C               	infsnz	check_month@month^0,f,c
  1028   0012E4  2A0D               	incf	(check_month@month+1)^0,f,c
  1029   0012E6                     
  1030                           ;../MonthTracker.c: 20:             if (month == 13){
  1031   0012E6  0E0D               	movlw	13
  1032   0012E8  180C               	xorwf	check_month@month^0,w,c
  1033   0012EA  100D               	iorwf	(check_month@month+1)^0,w,c
  1034   0012EC  A4D8               	btfss	status,2,c
  1035   0012EE  EF7B  F009         	goto	u1071
  1036   0012F2  EF7D  F009         	goto	u1070
  1037   0012F6                     u1071:
  1038   0012F6  EF83  F009         	goto	l1473
  1039   0012FA                     u1070:
  1040   0012FA                     
  1041                           ;../MonthTracker.c: 21:                 month = 1;
  1042   0012FA  0E00               	movlw	0
  1043   0012FC  6E0D               	movwf	(check_month@month+1)^0,c
  1044   0012FE  0E01               	movlw	1
  1045   001300  6E0C               	movwf	check_month@month^0,c
  1046   001302                     
  1047                           ;../MonthTracker.c: 22:                 year++;
  1048   001302  4A10               	infsnz	check_month@year^0,f,c
  1049   001304  2A11               	incf	(check_month@year+1)^0,f,c
  1050   001306                     l1473:
  1051                           
  1052                           ;../MonthTracker.c: 26:         if ((month == 4 || month == 6 || month == 9 || month == 
      +                          11) && month_day == 31){
  1053   001306  0E04               	movlw	4
  1054   001308  180C               	xorwf	check_month@month^0,w,c
  1055   00130A  100D               	iorwf	(check_month@month+1)^0,w,c
  1056   00130C  B4D8               	btfsc	status,2,c
  1057   00130E  EF8B  F009         	goto	u1081
  1058   001312  EF8D  F009         	goto	u1080
  1059   001316                     u1081:
  1060   001316  EFAB  F009         	goto	l1481
  1061   00131A                     u1080:
  1062   00131A  0E06               	movlw	6
  1063   00131C  180C               	xorwf	check_month@month^0,w,c
  1064   00131E  100D               	iorwf	(check_month@month+1)^0,w,c
  1065   001320  B4D8               	btfsc	status,2,c
  1066   001322  EF95  F009         	goto	u1091
  1067   001326  EF97  F009         	goto	u1090
  1068   00132A                     u1091:
  1069   00132A  EFAB  F009         	goto	l1481
  1070   00132E                     u1090:
  1071   00132E  0E09               	movlw	9
  1072   001330  180C               	xorwf	check_month@month^0,w,c
  1073   001332  100D               	iorwf	(check_month@month+1)^0,w,c
  1074   001334  B4D8               	btfsc	status,2,c
  1075   001336  EF9F  F009         	goto	u1101
  1076   00133A  EFA1  F009         	goto	u1100
  1077   00133E                     u1101:
  1078   00133E  EFAB  F009         	goto	l1481
  1079   001342                     u1100:
  1080   001342  0E0B               	movlw	11
  1081   001344  180C               	xorwf	check_month@month^0,w,c
  1082   001346  100D               	iorwf	(check_month@month+1)^0,w,c
  1083   001348  A4D8               	btfss	status,2,c
  1084   00134A  EFA9  F009         	goto	u1111
  1085   00134E  EFAB  F009         	goto	u1110
  1086   001352                     u1111:
  1087   001352  EFBB  F009         	goto	l1487
  1088   001356                     u1110:
  1089   001356                     l1481:
  1090   001356  0E1F               	movlw	31
  1091   001358  180E               	xorwf	check_month@month_day^0,w,c
  1092   00135A  100F               	iorwf	(check_month@month_day+1)^0,w,c
  1093   00135C  A4D8               	btfss	status,2,c
  1094   00135E  EFB3  F009         	goto	u1121
  1095   001362  EFB5  F009         	goto	u1120
  1096   001366                     u1121:
  1097   001366  EFBB  F009         	goto	l1487
  1098   00136A                     u1120:
  1099   00136A                     
  1100                           ;../MonthTracker.c: 28:             month_day = 1;
  1101   00136A  0E00               	movlw	0
  1102   00136C  6E0F               	movwf	(check_month@month_day+1)^0,c
  1103   00136E  0E01               	movlw	1
  1104   001370  6E0E               	movwf	check_month@month_day^0,c
  1105   001372                     
  1106                           ;../MonthTracker.c: 29:             month++;
  1107   001372  4A0C               	infsnz	check_month@month^0,f,c
  1108   001374  2A0D               	incf	(check_month@month+1)^0,f,c
  1109   001376                     l1487:
  1110                           
  1111                           ;../MonthTracker.c: 33:         if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 
      +                          0) {leap_year = 1;}
  1112   001376  0E03               	movlw	3
  1113   001378  1410               	andwf	check_month@year^0,w,c
  1114   00137A  6E12               	movwf	??_check_month^0,c
  1115   00137C  0E00               	movlw	0
  1116   00137E  1411               	andwf	(check_month@year+1)^0,w,c
  1117   001380  6E13               	movwf	(??_check_month+1)^0,c
  1118   001382  5012               	movf	??_check_month^0,w,c
  1119   001384  1013               	iorwf	(??_check_month+1)^0,w,c
  1120   001386  A4D8               	btfss	status,2,c
  1121   001388  EFC8  F009         	goto	u1131
  1122   00138C  EFCA  F009         	goto	u1130
  1123   001390                     u1131:
  1124   001390  EFDD  F009         	goto	l1491
  1125   001394                     u1130:
  1126   001394  C010  F007         	movff	check_month@year,___lwmod@dividend
  1127   001398  C011  F008         	movff	check_month@year+1,___lwmod@dividend+1
  1128   00139C  0E00               	movlw	0
  1129   00139E  6E0A               	movwf	(___lwmod@divisor+1)^0,c
  1130   0013A0  0E64               	movlw	100
  1131   0013A2  6E09               	movwf	___lwmod@divisor^0,c
  1132   0013A4  ECE1  F00A         	call	___lwmod	;wreg free
  1133   0013A8  5007               	movf	?___lwmod^0,w,c
  1134   0013AA  1008               	iorwf	(?___lwmod+1)^0,w,c
  1135   0013AC  A4D8               	btfss	status,2,c
  1136   0013AE  EFDB  F009         	goto	u1141
  1137   0013B2  EFDD  F009         	goto	u1140
  1138   0013B6                     u1141:
  1139   0013B6  EFF0  F009         	goto	l1493
  1140   0013BA                     u1140:
  1141   0013BA                     l1491:
  1142   0013BA  C010  F007         	movff	check_month@year,___lwmod@dividend
  1143   0013BE  C011  F008         	movff	check_month@year+1,___lwmod@dividend+1
  1144   0013C2  0E01               	movlw	1
  1145   0013C4  6E0A               	movwf	(___lwmod@divisor+1)^0,c
  1146   0013C6  0E90               	movlw	144
  1147   0013C8  6E09               	movwf	___lwmod@divisor^0,c
  1148   0013CA  ECE1  F00A         	call	___lwmod	;wreg free
  1149   0013CE  5007               	movf	?___lwmod^0,w,c
  1150   0013D0  1008               	iorwf	(?___lwmod+1)^0,w,c
  1151   0013D2  A4D8               	btfss	status,2,c
  1152   0013D4  EFEE  F009         	goto	u1151
  1153   0013D8  EFF0  F009         	goto	u1150
  1154   0013DC                     u1151:
  1155   0013DC  EFF6  F009         	goto	l1495
  1156   0013E0                     u1150:
  1157   0013E0                     l1493:
  1158   0013E0  0E00               	movlw	0
  1159   0013E2  6E15               	movwf	(check_month@leap_year+1)^0,c
  1160   0013E4  0E01               	movlw	1
  1161   0013E6  6E14               	movwf	check_month@leap_year^0,c
  1162   0013E8  EFFA  F009         	goto	l1497
  1163   0013EC                     l1495:
  1164   0013EC  0E00               	movlw	0
  1165   0013EE  6E15               	movwf	(check_month@leap_year+1)^0,c
  1166   0013F0  0E00               	movlw	0
  1167   0013F2  6E14               	movwf	check_month@leap_year^0,c
  1168   0013F4                     l1497:
  1169                           
  1170                           ;../MonthTracker.c: 36:         if (month == 2 && leap_year == 1){
  1171   0013F4  0E02               	movlw	2
  1172   0013F6  180C               	xorwf	check_month@month^0,w,c
  1173   0013F8  100D               	iorwf	(check_month@month+1)^0,w,c
  1174   0013FA  A4D8               	btfss	status,2,c
  1175   0013FC  EF02  F00A         	goto	u1161
  1176   001400  EF04  F00A         	goto	u1160
  1177   001404                     u1161:
  1178   001404  EF3E  F00A         	goto	l1517
  1179   001408                     u1160:
  1180   001408  0414               	decf	check_month@leap_year^0,w,c
  1181   00140A  1015               	iorwf	(check_month@leap_year+1)^0,w,c
  1182   00140C  A4D8               	btfss	status,2,c
  1183   00140E  EF0B  F00A         	goto	u1171
  1184   001412  EF0D  F00A         	goto	u1170
  1185   001416                     u1171:
  1186   001416  EF3E  F00A         	goto	l1517
  1187   00141A                     u1170:
  1188   00141A                     
  1189                           ;../MonthTracker.c: 38:             if (month_day == 30){
  1190   00141A  0E1E               	movlw	30
  1191   00141C  180E               	xorwf	check_month@month_day^0,w,c
  1192   00141E  100F               	iorwf	(check_month@month_day+1)^0,w,c
  1193   001420  A4D8               	btfss	status,2,c
  1194   001422  EF15  F00A         	goto	u1181
  1195   001426  EF17  F00A         	goto	u1180
  1196   00142A                     u1181:
  1197   00142A  EF1F  F00A         	goto	l1507
  1198   00142E                     u1180:
  1199   00142E                     l1503:
  1200                           
  1201                           ;../MonthTracker.c: 39:                 month_day = 1;
  1202   00142E  0E00               	movlw	0
  1203   001430  6E0F               	movwf	(check_month@month_day+1)^0,c
  1204   001432  0E01               	movlw	1
  1205   001434  6E0E               	movwf	check_month@month_day^0,c
  1206   001436                     
  1207                           ;../MonthTracker.c: 40:                 month++;
  1208   001436  4A0C               	infsnz	check_month@month^0,f,c
  1209   001438  2A0D               	incf	(check_month@month+1)^0,f,c
  1210                           
  1211                           ;../MonthTracker.c: 41:             }
  1212   00143A  EF3E  F00A         	goto	l1517
  1213   00143E                     l1507:
  1214   00143E  0E02               	movlw	2
  1215   001440  180C               	xorwf	check_month@month^0,w,c
  1216   001442  100D               	iorwf	(check_month@month+1)^0,w,c
  1217   001444  A4D8               	btfss	status,2,c
  1218   001446  EF27  F00A         	goto	u1191
  1219   00144A  EF29  F00A         	goto	u1190
  1220   00144E                     u1191:
  1221   00144E  EF3E  F00A         	goto	l1517
  1222   001452                     u1190:
  1223   001452  5014               	movf	check_month@leap_year^0,w,c
  1224   001454  1015               	iorwf	(check_month@leap_year+1)^0,w,c
  1225   001456  A4D8               	btfss	status,2,c
  1226   001458  EF30  F00A         	goto	u1201
  1227   00145C  EF32  F00A         	goto	u1200
  1228   001460                     u1201:
  1229   001460  EF3E  F00A         	goto	l1517
  1230   001464                     u1200:
  1231   001464                     
  1232                           ;../MonthTracker.c: 43:             if (month_day == 29){
  1233   001464  0E1D               	movlw	29
  1234   001466  180E               	xorwf	check_month@month_day^0,w,c
  1235   001468  100F               	iorwf	(check_month@month_day+1)^0,w,c
  1236   00146A  A4D8               	btfss	status,2,c
  1237   00146C  EF3A  F00A         	goto	u1211
  1238   001470  EF3C  F00A         	goto	u1210
  1239   001474                     u1211:
  1240   001474  EF3E  F00A         	goto	l299
  1241   001478                     u1210:
  1242   001478  EF17  F00A         	goto	l1503
  1243   00147C                     l299:
  1244   00147C                     l1517:
  1245                           
  1246                           ;../MonthTracker.c: 53:         return (month, month_day);
  1247   00147C  C00E  F00C         	movff	check_month@month_day,?_check_month
  1248   001480  C00F  F00D         	movff	check_month@month_day+1,?_check_month+1
  1249   001484  0012               	return		;funcret
  1250   001486                     __end_of_check_month:
  1251                           	callstack 0
  1252                           
  1253 ;; *************** function ___lwmod *****************
  1254 ;; Defined at:
  1255 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwmod.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;  dividend        2    6[COMRAM] unsigned int 
  1258 ;;  divisor         2    8[COMRAM] unsigned int 
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;  counter         1   10[COMRAM] unsigned char 
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  2    6[COMRAM] unsigned int 
  1263 ;; Registers used:
  1264 ;;		wreg, status,2, status,0
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1270 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1271 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1273 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1274 ;;Total ram usage:        5 bytes
  1275 ;; Hardware stack levels used: 1
  1276 ;; Hardware stack levels required when called: 1
  1277 ;; This function calls:
  1278 ;;		Nothing
  1279 ;; This function is called by:
  1280 ;;		_main
  1281 ;;		_check_month
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285                           	psect	text2
  1286   0015C2                     __ptext2:
  1287                           	callstack 0
  1288   0015C2                     ___lwmod:
  1289                           	callstack 28
  1290   0015C2  5009               	movf	___lwmod@divisor^0,w,c
  1291   0015C4  100A               	iorwf	(___lwmod@divisor+1)^0,w,c
  1292   0015C6  B4D8               	btfsc	status,2,c
  1293   0015C8  EFE8  F00A         	goto	u871
  1294   0015CC  EFEA  F00A         	goto	u870
  1295   0015D0                     u871:
  1296   0015D0  EF0E  F00B         	goto	l806
  1297   0015D4                     u870:
  1298   0015D4  0E01               	movlw	1
  1299   0015D6  6E0B               	movwf	___lwmod@counter^0,c
  1300   0015D8  EFF2  F00A         	goto	l1415
  1301   0015DC                     l1413:
  1302   0015DC  90D8               	bcf	status,0,c
  1303   0015DE  3609               	rlcf	___lwmod@divisor^0,f,c
  1304   0015E0  360A               	rlcf	(___lwmod@divisor+1)^0,f,c
  1305   0015E2  2A0B               	incf	___lwmod@counter^0,f,c
  1306   0015E4                     l1415:
  1307   0015E4  AE0A               	btfss	(___lwmod@divisor+1)^0,7,c
  1308   0015E6  EFF7  F00A         	goto	u881
  1309   0015EA  EFF9  F00A         	goto	u880
  1310   0015EE                     u881:
  1311   0015EE  EFEE  F00A         	goto	l1413
  1312   0015F2                     u880:
  1313   0015F2                     l1417:
  1314   0015F2  5009               	movf	___lwmod@divisor^0,w,c
  1315   0015F4  5C07               	subwf	___lwmod@dividend^0,w,c
  1316   0015F6  500A               	movf	(___lwmod@divisor+1)^0,w,c
  1317   0015F8  5808               	subwfb	(___lwmod@dividend+1)^0,w,c
  1318   0015FA  A0D8               	btfss	status,0,c
  1319   0015FC  EF02  F00B         	goto	u891
  1320   001600  EF04  F00B         	goto	u890
  1321   001604                     u891:
  1322   001604  EF08  F00B         	goto	l1421
  1323   001608                     u890:
  1324   001608  5009               	movf	___lwmod@divisor^0,w,c
  1325   00160A  5E07               	subwf	___lwmod@dividend^0,f,c
  1326   00160C  500A               	movf	(___lwmod@divisor+1)^0,w,c
  1327   00160E  5A08               	subwfb	(___lwmod@dividend+1)^0,f,c
  1328   001610                     l1421:
  1329   001610  90D8               	bcf	status,0,c
  1330   001612  320A               	rrcf	(___lwmod@divisor+1)^0,f,c
  1331   001614  3209               	rrcf	___lwmod@divisor^0,f,c
  1332   001616  2E0B               	decfsz	___lwmod@counter^0,f,c
  1333   001618  EFF9  F00A         	goto	l1417
  1334   00161C                     l806:
  1335   00161C  C007  F007         	movff	___lwmod@dividend,?___lwmod
  1336   001620  C008  F008         	movff	___lwmod@dividend+1,?___lwmod+1
  1337   001624  0012               	return		;funcret
  1338   001626                     __end_of___lwmod:
  1339                           	callstack 0
  1340                           
  1341 ;; *************** function ___wmul *****************
  1342 ;; Defined at:
  1343 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  1344 ;; Parameters:    Size  Location     Type
  1345 ;;  multiplier      2    0[COMRAM] unsigned int 
  1346 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1347 ;; Auto vars:     Size  Location     Type
  1348 ;;  product         2    4[COMRAM] unsigned int 
  1349 ;; Return value:  Size  Location     Type
  1350 ;;                  2    0[COMRAM] unsigned int 
  1351 ;; Registers used:
  1352 ;;		wreg, status,2, status,0, prodl, prodh
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1358 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1359 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1361 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1362 ;;Total ram usage:        6 bytes
  1363 ;; Hardware stack levels used: 1
  1364 ;; Hardware stack levels required when called: 1
  1365 ;; This function calls:
  1366 ;;		Nothing
  1367 ;; This function is called by:
  1368 ;;		_main
  1369 ;;		_ADC2String
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373                           	psect	text3
  1374   001626                     __ptext3:
  1375                           	callstack 0
  1376   001626                     ___wmul:
  1377                           	callstack 29
  1378   001626  5001               	movf	___wmul@multiplier^0,w,c
  1379   001628  0203               	mulwf	___wmul@multiplicand^0,c
  1380   00162A  CFF3 F005          	movff	prodl,___wmul@product
  1381   00162E  CFF4 F006          	movff	prodh,___wmul@product+1
  1382   001632  5001               	movf	___wmul@multiplier^0,w,c
  1383   001634  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  1384   001636  50F3               	movf	243,w,c
  1385   001638  2606               	addwf	(___wmul@product+1)^0,f,c
  1386   00163A  5002               	movf	(___wmul@multiplier+1)^0,w,c
  1387   00163C  0203               	mulwf	___wmul@multiplicand^0,c
  1388   00163E  50F3               	movf	243,w,c
  1389   001640  2606               	addwf	(___wmul@product+1)^0,f,c
  1390   001642  C005  F001         	movff	___wmul@product,?___wmul
  1391   001646  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1392   00164A  0012               	return		;funcret
  1393   00164C                     __end_of___wmul:
  1394                           	callstack 0
  1395                           
  1396 ;; *************** function ___lwdiv *****************
  1397 ;; Defined at:
  1398 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;  dividend        2    6[COMRAM] unsigned int 
  1401 ;;  divisor         2    8[COMRAM] unsigned int 
  1402 ;; Auto vars:     Size  Location     Type
  1403 ;;  quotient        2   10[COMRAM] unsigned int 
  1404 ;;  counter         1   12[COMRAM] unsigned char 
  1405 ;; Return value:  Size  Location     Type
  1406 ;;                  2    6[COMRAM] unsigned int 
  1407 ;; Registers used:
  1408 ;;		wreg, status,2, status,0
  1409 ;; Tracked objects:
  1410 ;;		On entry : 0/0
  1411 ;;		On exit  : 0/0
  1412 ;;		Unchanged: 0/0
  1413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1414 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1415 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1417 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1418 ;;Total ram usage:        7 bytes
  1419 ;; Hardware stack levels used: 1
  1420 ;; Hardware stack levels required when called: 1
  1421 ;; This function calls:
  1422 ;;		Nothing
  1423 ;; This function is called by:
  1424 ;;		_main
  1425 ;;		_LEDarray_disp_dec
  1426 ;;		_LEDarray_disp_PPM
  1427 ;;		_ADC2String
  1428 ;; This function uses a non-reentrant model
  1429 ;;
  1430                           
  1431                           	psect	text4
  1432   00154E                     __ptext4:
  1433                           	callstack 0
  1434   00154E                     ___lwdiv:
  1435                           	callstack 29
  1436   00154E  0E00               	movlw	0
  1437   001550  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  1438   001552  0E00               	movlw	0
  1439   001554  6E0B               	movwf	___lwdiv@quotient^0,c
  1440   001556  5009               	movf	___lwdiv@divisor^0,w,c
  1441   001558  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1442   00155A  B4D8               	btfsc	status,2,c
  1443   00155C  EFB2  F00A         	goto	u1221
  1444   001560  EFB4  F00A         	goto	u1220
  1445   001564                     u1221:
  1446   001564  EFDC  F00A         	goto	l796
  1447   001568                     u1220:
  1448   001568  0E01               	movlw	1
  1449   00156A  6E0D               	movwf	___lwdiv@counter^0,c
  1450   00156C  EFBC  F00A         	goto	l1535
  1451   001570                     l1533:
  1452   001570  90D8               	bcf	status,0,c
  1453   001572  3609               	rlcf	___lwdiv@divisor^0,f,c
  1454   001574  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1455   001576  2A0D               	incf	___lwdiv@counter^0,f,c
  1456   001578                     l1535:
  1457   001578  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  1458   00157A  EFC1  F00A         	goto	u1231
  1459   00157E  EFC3  F00A         	goto	u1230
  1460   001582                     u1231:
  1461   001582  EFB8  F00A         	goto	l1533
  1462   001586                     u1230:
  1463   001586                     l1537:
  1464   001586  90D8               	bcf	status,0,c
  1465   001588  360B               	rlcf	___lwdiv@quotient^0,f,c
  1466   00158A  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1467   00158C  5009               	movf	___lwdiv@divisor^0,w,c
  1468   00158E  5C07               	subwf	___lwdiv@dividend^0,w,c
  1469   001590  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  1470   001592  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1471   001594  A0D8               	btfss	status,0,c
  1472   001596  EFCF  F00A         	goto	u1241
  1473   00159A  EFD1  F00A         	goto	u1240
  1474   00159E                     u1241:
  1475   00159E  EFD6  F00A         	goto	l1545
  1476   0015A2                     u1240:
  1477   0015A2  5009               	movf	___lwdiv@divisor^0,w,c
  1478   0015A4  5E07               	subwf	___lwdiv@dividend^0,f,c
  1479   0015A6  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  1480   0015A8  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1481   0015AA  800B               	bsf	___lwdiv@quotient^0,0,c
  1482   0015AC                     l1545:
  1483   0015AC  90D8               	bcf	status,0,c
  1484   0015AE  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1485   0015B0  3209               	rrcf	___lwdiv@divisor^0,f,c
  1486   0015B2  2E0D               	decfsz	___lwdiv@counter^0,f,c
  1487   0015B4  EFC3  F00A         	goto	l1537
  1488   0015B8                     l796:
  1489   0015B8  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  1490   0015BC  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1491   0015C0  0012               	return		;funcret
  1492   0015C2                     __end_of___lwdiv:
  1493                           	callstack 0
  1494                           
  1495 ;; *************** function _Timer0_init *****************
  1496 ;; Defined at:
  1497 ;;		line 7 in file "../timers.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;		None
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;		None
  1502 ;; Return value:  Size  Location     Type
  1503 ;;                  1    wreg      void 
  1504 ;; Registers used:
  1505 ;;		wreg, status,2
  1506 ;; Tracked objects:
  1507 ;;		On entry : 0/0
  1508 ;;		On exit  : 0/0
  1509 ;;		Unchanged: 0/0
  1510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1515 ;;Total ram usage:        0 bytes
  1516 ;; Hardware stack levels used: 1
  1517 ;; Hardware stack levels required when called: 1
  1518 ;; This function calls:
  1519 ;;		Nothing
  1520 ;; This function is called by:
  1521 ;;		_main
  1522 ;; This function uses a non-reentrant model
  1523 ;;
  1524                           
  1525                           	psect	text5
  1526   001694                     __ptext5:
  1527                           	callstack 0
  1528   001694                     _Timer0_init:
  1529                           	callstack 29
  1530   001694                     
  1531                           ;../timers.c: 9:     T0CON1bits.T0CS=0b010;
  1532   001694  50D6               	movf	214,w,c	;volatile
  1533   001696  0B1F               	andlw	-225
  1534   001698  0940               	iorlw	64
  1535   00169A  6ED6               	movwf	214,c	;volatile
  1536   00169C                     
  1537                           ;../timers.c: 10:     T0CON1bits.T0ASYNC=1;
  1538   00169C  88D6               	bsf	214,4,c	;volatile
  1539                           
  1540                           ;../timers.c: 11:     T0CON1bits.T0CKPS=0b0010;
  1541   00169E  50D6               	movf	214,w,c	;volatile
  1542   0016A0  0BF0               	andlw	-16
  1543   0016A2  0902               	iorlw	2
  1544   0016A4  6ED6               	movwf	214,c	;volatile
  1545   0016A6                     
  1546                           ;../timers.c: 12:     T0CON0bits.T016BIT=1;
  1547   0016A6  88D5               	bsf	213,4,c	;volatile
  1548                           
  1549                           ;../timers.c: 15:     TMR0H=0b00001011;
  1550   0016A8  0E0B               	movlw	11
  1551   0016AA  6ED4               	movwf	212,c	;volatile
  1552                           
  1553                           ;../timers.c: 16:     TMR0L=0b00001011;
  1554   0016AC  0E0B               	movlw	11
  1555   0016AE  6ED3               	movwf	211,c	;volatile
  1556   0016B0                     
  1557                           ;../timers.c: 17:     T0CON0bits.T0EN=1;
  1558   0016B0  8ED5               	bsf	213,7,c	;volatile
  1559   0016B2  0012               	return		;funcret
  1560   0016B4                     __end_of_Timer0_init:
  1561                           	callstack 0
  1562                           
  1563 ;; *************** function _Light_init *****************
  1564 ;; Defined at:
  1565 ;;		line 8 in file "../comparator.c"
  1566 ;; Parameters:    Size  Location     Type
  1567 ;;		None
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;		None
  1570 ;; Return value:  Size  Location     Type
  1571 ;;                  1    wreg      void 
  1572 ;; Registers used:
  1573 ;;		None
  1574 ;; Tracked objects:
  1575 ;;		On entry : 0/0
  1576 ;;		On exit  : 0/0
  1577 ;;		Unchanged: 0/0
  1578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1583 ;;Total ram usage:        0 bytes
  1584 ;; Hardware stack levels used: 1
  1585 ;; Hardware stack levels required when called: 1
  1586 ;; This function calls:
  1587 ;;		Nothing
  1588 ;; This function is called by:
  1589 ;;		_main
  1590 ;; This function uses a non-reentrant model
  1591 ;;
  1592                           
  1593                           	psect	text6
  1594   00170A                     __ptext6:
  1595                           	callstack 0
  1596   00170A                     _Light_init:
  1597                           	callstack 29
  1598   00170A                     
  1599                           ;../comparator.c: 10:    LATHbits.LATH3=1;
  1600   00170A  8680               	bsf	128,3,c	;volatile
  1601                           
  1602                           ;../comparator.c: 11:    TRISHbits.TRISH3=0;
  1603   00170C  9688               	bcf	136,3,c	;volatile
  1604   00170E  0012               	return		;funcret
  1605   001710                     __end_of_Light_init:
  1606                           	callstack 0
  1607                           
  1608 ;; *************** function _LEDarray_init *****************
  1609 ;; Defined at:
  1610 ;;		line 8 in file "../LEDarray.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;		None
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;		None
  1615 ;; Return value:  Size  Location     Type
  1616 ;;                  1    wreg      void 
  1617 ;; Registers used:
  1618 ;;		None
  1619 ;; Tracked objects:
  1620 ;;		On entry : 0/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1628 ;;Total ram usage:        0 bytes
  1629 ;; Hardware stack levels used: 1
  1630 ;; Hardware stack levels required when called: 1
  1631 ;; This function calls:
  1632 ;;		Nothing
  1633 ;; This function is called by:
  1634 ;;		_main
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638                           	psect	text7
  1639   001672                     __ptext7:
  1640                           	callstack 0
  1641   001672                     _LEDarray_init:
  1642                           	callstack 29
  1643   001672                     
  1644                           ;../LEDarray.c: 9:     TRISGbits.TRISG0 = 0;
  1645   001672  9087               	bcf	135,0,c	;volatile
  1646                           
  1647                           ;../LEDarray.c: 10:     TRISGbits.TRISG1 = 0;
  1648   001674  9287               	bcf	135,1,c	;volatile
  1649                           
  1650                           ;../LEDarray.c: 11:     TRISAbits.TRISA2 = 0;
  1651   001676  9481               	bcf	129,2,c	;volatile
  1652                           
  1653                           ;../LEDarray.c: 12:     TRISFbits.TRISF6 = 0;
  1654   001678  9C86               	bcf	134,6,c	;volatile
  1655                           
  1656                           ;../LEDarray.c: 13:     TRISAbits.TRISA4 = 0;
  1657   00167A  9881               	bcf	129,4,c	;volatile
  1658                           
  1659                           ;../LEDarray.c: 14:     TRISAbits.TRISA5 = 0;
  1660   00167C  9A81               	bcf	129,5,c	;volatile
  1661                           
  1662                           ;../LEDarray.c: 15:     TRISFbits.TRISF0 = 0;
  1663   00167E  9086               	bcf	134,0,c	;volatile
  1664                           
  1665                           ;../LEDarray.c: 16:     TRISBbits.TRISB0 = 0;
  1666   001680  9082               	bcf	130,0,c	;volatile
  1667                           
  1668                           ;../LEDarray.c: 18:     LATGbits.LATG0 = 0;
  1669   001682  907F               	bcf	127,0,c	;volatile
  1670                           
  1671                           ;../LEDarray.c: 19:     LATGbits.LATG1 = 0;
  1672   001684  927F               	bcf	127,1,c	;volatile
  1673                           
  1674                           ;../LEDarray.c: 20:     LATAbits.LATA2 = 0;
  1675   001686  9479               	bcf	121,2,c	;volatile
  1676                           
  1677                           ;../LEDarray.c: 21:     LATFbits.LATF6 = 0;
  1678   001688  9C7E               	bcf	126,6,c	;volatile
  1679                           
  1680                           ;../LEDarray.c: 22:     LATAbits.LATA4 = 0;
  1681   00168A  9879               	bcf	121,4,c	;volatile
  1682                           
  1683                           ;../LEDarray.c: 23:     LATAbits.LATA5 = 0;
  1684   00168C  9A79               	bcf	121,5,c	;volatile
  1685                           
  1686                           ;../LEDarray.c: 24:     LATFbits.LATF0 = 0;
  1687   00168E  907E               	bcf	126,0,c	;volatile
  1688                           
  1689                           ;../LEDarray.c: 25:     LATBbits.LATB0 = 0;
  1690   001690  907A               	bcf	122,0,c	;volatile
  1691   001692  0012               	return		;funcret
  1692   001694                     __end_of_LEDarray_init:
  1693                           	callstack 0
  1694                           
  1695 ;; *************** function _LEDarray_disp_bin *****************
  1696 ;; Defined at:
  1697 ;;		line 37 in file "../LEDarray.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;  number          2    0[COMRAM] unsigned int 
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;		None
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  1    wreg      void 
  1704 ;; Registers used:
  1705 ;;		None
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1711 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1714 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1715 ;;Total ram usage:        2 bytes
  1716 ;; Hardware stack levels used: 1
  1717 ;; Hardware stack levels required when called: 1
  1718 ;; This function calls:
  1719 ;;		Nothing
  1720 ;; This function is called by:
  1721 ;;		_main
  1722 ;;		_LEDarray_disp_dec
  1723 ;;		_LEDarray_disp_PPM
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727                           	psect	text8
  1728   001486                     __ptext8:
  1729                           	callstack 0
  1730   001486                     _LEDarray_disp_bin:
  1731                           	callstack 29
  1732   001486                     
  1733                           ;../LEDarray.c: 38:     if (number & 0b000000001) {LATGbits.LATG0=1;} else {LATGbits.LAT
      +                          G0=0;}
  1734   001486  A001               	btfss	LEDarray_disp_bin@number^0,0,c
  1735   001488  EF48  F00A         	goto	u901
  1736   00148C  EF4A  F00A         	goto	u900
  1737   001490                     u901:
  1738   001490  EF4D  F00A         	goto	l48
  1739   001494                     u900:
  1740   001494  807F               	bsf	127,0,c	;volatile
  1741   001496  EF4E  F00A         	goto	l49
  1742   00149A                     l48:
  1743   00149A  907F               	bcf	127,0,c	;volatile
  1744   00149C                     l49:
  1745                           
  1746                           ;../LEDarray.c: 39:     if (number & 0b000000010) {LATGbits.LATG1=1;} else {LATGbits.LAT
      +                          G1=0;}
  1747   00149C  A201               	btfss	LEDarray_disp_bin@number^0,1,c
  1748   00149E  EF53  F00A         	goto	u911
  1749   0014A2  EF55  F00A         	goto	u910
  1750   0014A6                     u911:
  1751   0014A6  EF58  F00A         	goto	l50
  1752   0014AA                     u910:
  1753   0014AA  827F               	bsf	127,1,c	;volatile
  1754   0014AC  EF59  F00A         	goto	l51
  1755   0014B0                     l50:
  1756   0014B0  927F               	bcf	127,1,c	;volatile
  1757   0014B2                     l51:
  1758                           
  1759                           ;../LEDarray.c: 40:     if (number & 0b000000100) {LATAbits.LATA2=1;} else {LATAbits.LAT
      +                          A2=0;}
  1760   0014B2  A401               	btfss	LEDarray_disp_bin@number^0,2,c
  1761   0014B4  EF5E  F00A         	goto	u921
  1762   0014B8  EF60  F00A         	goto	u920
  1763   0014BC                     u921:
  1764   0014BC  EF63  F00A         	goto	l52
  1765   0014C0                     u920:
  1766   0014C0  8479               	bsf	121,2,c	;volatile
  1767   0014C2  EF64  F00A         	goto	l53
  1768   0014C6                     l52:
  1769   0014C6  9479               	bcf	121,2,c	;volatile
  1770   0014C8                     l53:
  1771                           
  1772                           ;../LEDarray.c: 41:     if (number & 0b000001000) {LATFbits.LATF6=1;} else {LATFbits.LAT
      +                          F6=0;}
  1773   0014C8  A601               	btfss	LEDarray_disp_bin@number^0,3,c
  1774   0014CA  EF69  F00A         	goto	u931
  1775   0014CE  EF6B  F00A         	goto	u930
  1776   0014D2                     u931:
  1777   0014D2  EF6E  F00A         	goto	l54
  1778   0014D6                     u930:
  1779   0014D6  8C7E               	bsf	126,6,c	;volatile
  1780   0014D8  EF6F  F00A         	goto	l55
  1781   0014DC                     l54:
  1782   0014DC  9C7E               	bcf	126,6,c	;volatile
  1783   0014DE                     l55:
  1784                           
  1785                           ;../LEDarray.c: 42:     if (number & 0b000010000) {LATAbits.LATA4=1;} else {LATAbits.LAT
      +                          A4=0;}
  1786   0014DE  A801               	btfss	LEDarray_disp_bin@number^0,4,c
  1787   0014E0  EF74  F00A         	goto	u941
  1788   0014E4  EF76  F00A         	goto	u940
  1789   0014E8                     u941:
  1790   0014E8  EF79  F00A         	goto	l56
  1791   0014EC                     u940:
  1792   0014EC  8879               	bsf	121,4,c	;volatile
  1793   0014EE  EF7A  F00A         	goto	l57
  1794   0014F2                     l56:
  1795   0014F2  9879               	bcf	121,4,c	;volatile
  1796   0014F4                     l57:
  1797                           
  1798                           ;../LEDarray.c: 43:     if (number & 0b000100000) {LATAbits.LATA5=1;} else {LATAbits.LAT
      +                          A5=0;}
  1799   0014F4  AA01               	btfss	LEDarray_disp_bin@number^0,5,c
  1800   0014F6  EF7F  F00A         	goto	u951
  1801   0014FA  EF81  F00A         	goto	u950
  1802   0014FE                     u951:
  1803   0014FE  EF84  F00A         	goto	l58
  1804   001502                     u950:
  1805   001502  8A79               	bsf	121,5,c	;volatile
  1806   001504  EF85  F00A         	goto	l59
  1807   001508                     l58:
  1808   001508  9A79               	bcf	121,5,c	;volatile
  1809   00150A                     l59:
  1810                           
  1811                           ;../LEDarray.c: 44:     if (number & 0b001000000) {LATFbits.LATF0=1;} else {LATFbits.LAT
      +                          F0=0;}
  1812   00150A  AC01               	btfss	LEDarray_disp_bin@number^0,6,c
  1813   00150C  EF8A  F00A         	goto	u961
  1814   001510  EF8C  F00A         	goto	u960
  1815   001514                     u961:
  1816   001514  EF8F  F00A         	goto	l60
  1817   001518                     u960:
  1818   001518  807E               	bsf	126,0,c	;volatile
  1819   00151A  EF90  F00A         	goto	l61
  1820   00151E                     l60:
  1821   00151E  907E               	bcf	126,0,c	;volatile
  1822   001520                     l61:
  1823                           
  1824                           ;../LEDarray.c: 45:     if (number & 0b010000000) {LATBbits.LATB0=1;} else {LATBbits.LAT
      +                          B0=0;}
  1825   001520  AE01               	btfss	LEDarray_disp_bin@number^0,7,c
  1826   001522  EF95  F00A         	goto	u971
  1827   001526  EF97  F00A         	goto	u970
  1828   00152A                     u971:
  1829   00152A  EF9A  F00A         	goto	l62
  1830   00152E                     u970:
  1831   00152E  807A               	bsf	122,0,c	;volatile
  1832   001530  EF9B  F00A         	goto	l63
  1833   001534                     l62:
  1834   001534  907A               	bcf	122,0,c	;volatile
  1835   001536                     l63:
  1836                           
  1837                           ;../LEDarray.c: 46:     if (number & 0b100000000) {LATBbits.LATB1=1;} else {LATBbits.LAT
      +                          B1=0;}
  1838   001536  A002               	btfss	(LEDarray_disp_bin@number+1)^0,0,c
  1839   001538  EFA0  F00A         	goto	u981
  1840   00153C  EFA2  F00A         	goto	u980
  1841   001540                     u981:
  1842   001540  EFA5  F00A         	goto	l64
  1843   001544                     u980:
  1844   001544  827A               	bsf	122,1,c	;volatile
  1845   001546  EFA6  F00A         	goto	l66
  1846   00154A                     l64:
  1847   00154A  927A               	bcf	122,1,c	;volatile
  1848   00154C                     l66:
  1849   00154C  0012               	return		;funcret
  1850   00154E                     __end_of_LEDarray_disp_bin:
  1851                           	callstack 0
  1852                           
  1853 ;; *************** function _Interrupts_init *****************
  1854 ;; Defined at:
  1855 ;;		line 11 in file "../interrupts.c"
  1856 ;; Parameters:    Size  Location     Type
  1857 ;;		None
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;		None
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  1    wreg      void 
  1862 ;; Registers used:
  1863 ;;		None
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1873 ;;Total ram usage:        0 bytes
  1874 ;; Hardware stack levels used: 1
  1875 ;; Hardware stack levels required when called: 1
  1876 ;; This function calls:
  1877 ;;		Nothing
  1878 ;; This function is called by:
  1879 ;;		_main
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883                           	psect	text9
  1884   001700                     __ptext9:
  1885                           	callstack 0
  1886   001700                     _Interrupts_init:
  1887                           	callstack 29
  1888   001700                     
  1889                           ;../interrupts.c: 14:     TMR0IE=1;
  1890   001700  010E               	movlb	14	; () banked
  1891   001702  8B29               	bsf	41,5,b	;volatile
  1892                           
  1893                           ;../interrupts.c: 15:     INTCONbits.GIEH=1;
  1894   001704  8EF2               	bsf	242,7,c	;volatile
  1895                           
  1896                           ;../interrupts.c: 16:     INTCONbits.GIEL = 1;
  1897   001706  8CF2               	bsf	242,6,c	;volatile
  1898   001708                     
  1899                           ; BSR set to: 14
  1900   001708  0012               	return		;funcret
  1901   00170A                     __end_of_Interrupts_init:
  1902                           	callstack 0
  1903                           
  1904 ;; *************** function _Comp1_init *****************
  1905 ;; Defined at:
  1906 ;;		line 29 in file "../comparator.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;		None
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;		None
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  1    wreg      void 
  1913 ;; Registers used:
  1914 ;;		wreg, status,2, cstack
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1924 ;;Total ram usage:        0 bytes
  1925 ;; Hardware stack levels used: 1
  1926 ;; Hardware stack levels required when called: 2
  1927 ;; This function calls:
  1928 ;;		_DAC_init
  1929 ;; This function is called by:
  1930 ;;		_main
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934                           	psect	text10
  1935   00164C                     __ptext10:
  1936                           	callstack 0
  1937   00164C                     _Comp1_init:
  1938                           	callstack 28
  1939   00164C                     
  1940                           ;../comparator.c: 31:     TRISAbits.TRISA3=1;
  1941   00164C  8681               	bsf	129,3,c	;volatile
  1942   00164E                     
  1943                           ;../comparator.c: 32:     CM1NCHbits.NCH=0b011;
  1944   00164E  010E               	movlb	14	; () banked
  1945   001650  51D2               	movf	210,w,b	;volatile
  1946   001652  0BF8               	andlw	-8
  1947   001654  0903               	iorlw	3
  1948   001656  6FD2               	movwf	210,b	;volatile
  1949                           
  1950                           ;../comparator.c: 33:     CM1PCHbits.PCH=0b101;
  1951   001658  51D3               	movf	211,w,b	;volatile
  1952   00165A  0BF8               	andlw	-8
  1953   00165C  0905               	iorlw	5
  1954   00165E  6FD3               	movwf	211,b	;volatile
  1955   001660                     
  1956                           ; BSR set to: 14
  1957                           ;../comparator.c: 34:     CM1CON0bits.HYS=1;
  1958   001660  83D0               	bsf	208,1,b	;volatile
  1959   001662                     
  1960                           ; BSR set to: 14
  1961                           ;../comparator.c: 35:     CM1CON0bits.POL=1;
  1962   001662  89D0               	bsf	208,4,b	;volatile
  1963   001664                     
  1964                           ; BSR set to: 14
  1965                           ;../comparator.c: 36:     CM1CON1bits.INTP=1;
  1966   001664  83D1               	bsf	209,1,b	;volatile
  1967   001666                     
  1968                           ; BSR set to: 14
  1969                           ;../comparator.c: 37:     CM1CON1bits.INTN=1;
  1970   001666  81D1               	bsf	209,0,b	;volatile
  1971   001668                     
  1972                           ; BSR set to: 14
  1973                           ;../comparator.c: 38:     DAC_init();
  1974   001668  EC76  F00B         	call	_DAC_init	;wreg free
  1975   00166C                     
  1976                           ;../comparator.c: 39:     CM1CON0bits.EN=1;
  1977   00166C  010E               	movlb	14	; () banked
  1978   00166E  8FD0               	bsf	208,7,b	;volatile
  1979   001670                     
  1980                           ; BSR set to: 14
  1981   001670  0012               	return		;funcret
  1982   001672                     __end_of_Comp1_init:
  1983                           	callstack 0
  1984                           
  1985 ;; *************** function _DAC_init *****************
  1986 ;; Defined at:
  1987 ;;		line 14 in file "../comparator.c"
  1988 ;; Parameters:    Size  Location     Type
  1989 ;;		None
  1990 ;; Auto vars:     Size  Location     Type
  1991 ;;		None
  1992 ;; Return value:  Size  Location     Type
  1993 ;;                  1    wreg      void 
  1994 ;; Registers used:
  1995 ;;		wreg, status,2
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2005 ;;Total ram usage:        0 bytes
  2006 ;; Hardware stack levels used: 1
  2007 ;; Hardware stack levels required when called: 1
  2008 ;; This function calls:
  2009 ;;		Nothing
  2010 ;; This function is called by:
  2011 ;;		_Comp1_init
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015                           	psect	text11
  2016   0016EC                     __ptext11:
  2017                           	callstack 0
  2018   0016EC                     _DAC_init:
  2019                           	callstack 28
  2020   0016EC                     
  2021                           ;../comparator.c: 16:     DAC1CON0bits.PSS=0b00;
  2022   0016EC  0EF3               	movlw	-13
  2023   0016EE  010E               	movlb	14	; () banked
  2024   0016F0  17C6               	andwf	198,f,b	;volatile
  2025   0016F2                     
  2026                           ; BSR set to: 14
  2027                           ;../comparator.c: 17:     DAC1CON0bits.NSS=0b0;
  2028   0016F2  91C6               	bcf	198,0,b	;volatile
  2029                           
  2030                           ;../comparator.c: 21:     DAC1CON1bits.DAC1R=27;
  2031   0016F4  51C7               	movf	199,w,b	;volatile
  2032   0016F6  0BE0               	andlw	-32
  2033   0016F8  091B               	iorlw	27
  2034   0016FA  6FC7               	movwf	199,b	;volatile
  2035   0016FC                     
  2036                           ; BSR set to: 14
  2037                           ;../comparator.c: 22:     DAC1CON0bits.DAC1EN=1;
  2038   0016FC  8FC6               	bsf	198,7,b	;volatile
  2039   0016FE                     
  2040                           ; BSR set to: 14
  2041   0016FE  0012               	return		;funcret
  2042   001700                     __end_of_DAC_init:
  2043                           	callstack 0
  2044                           
  2045 ;; *************** function _ADC_init *****************
  2046 ;; Defined at:
  2047 ;;		line 9 in file "../ADC.c"
  2048 ;; Parameters:    Size  Location     Type
  2049 ;;		None
  2050 ;; Auto vars:     Size  Location     Type
  2051 ;;		None
  2052 ;; Return value:  Size  Location     Type
  2053 ;;                  1    wreg      void 
  2054 ;; Registers used:
  2055 ;;		wreg, status,2
  2056 ;; Tracked objects:
  2057 ;;		On entry : 0/0
  2058 ;;		On exit  : 0/0
  2059 ;;		Unchanged: 0/0
  2060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2065 ;;Total ram usage:        0 bytes
  2066 ;; Hardware stack levels used: 1
  2067 ;; Hardware stack levels required when called: 1
  2068 ;; This function calls:
  2069 ;;		Nothing
  2070 ;; This function is called by:
  2071 ;;		_main
  2072 ;; This function uses a non-reentrant model
  2073 ;;
  2074                           
  2075                           	psect	text12
  2076   0016D2                     __ptext12:
  2077                           	callstack 0
  2078   0016D2                     _ADC_init:
  2079                           	callstack 29
  2080   0016D2                     
  2081                           ;../ADC.c: 11:     TRISAbits.TRISA3=1;
  2082   0016D2  8681               	bsf	129,3,c	;volatile
  2083                           
  2084                           ;../ADC.c: 12:     ANSELAbits.ANSELA3=1;
  2085   0016D4  010E               	movlb	14	; () banked
  2086   0016D6  8792               	bsf	146,3,b	;volatile
  2087                           
  2088                           ;../ADC.c: 15:     ADREFbits.ADNREF = 0;
  2089   0016D8  010F               	movlb	15	; () banked
  2090   0016DA  9958               	bcf	88,4,b	;volatile
  2091   0016DC                     
  2092                           ; BSR set to: 15
  2093                           ;../ADC.c: 16:     ADREFbits.ADPREF = 0b00;
  2094   0016DC  0EFC               	movlw	-4
  2095   0016DE  1758               	andwf	88,f,b	;volatile
  2096                           
  2097                           ;../ADC.c: 17:     ADPCH=0b11;
  2098   0016E0  0E03               	movlw	3
  2099   0016E2  6F5F               	movwf	95,b	;volatile
  2100   0016E4                     
  2101                           ; BSR set to: 15
  2102                           ;../ADC.c: 18:     ADCON0bits.ADFM = 0;
  2103   0016E4  9460               	bcf	96,2,c	;volatile
  2104   0016E6                     
  2105                           ; BSR set to: 15
  2106                           ;../ADC.c: 19:     ADCON0bits.ADCS = 1;
  2107   0016E6  8860               	bsf	96,4,c	;volatile
  2108   0016E8                     
  2109                           ; BSR set to: 15
  2110                           ;../ADC.c: 20:     ADCON0bits.ADON = 1;
  2111   0016E8  8E60               	bsf	96,7,c	;volatile
  2112   0016EA                     
  2113                           ; BSR set to: 15
  2114   0016EA  0012               	return		;funcret
  2115   0016EC                     __end_of_ADC_init:
  2116                           	callstack 0
  2117                           
  2118 ;; *************** function _HighISR *****************
  2119 ;; Defined at:
  2120 ;;		line 23 in file "../interrupts.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;		None
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;		None
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  1    wreg      void 
  2127 ;; Registers used:
  2128 ;;		wreg, status,2, status,0
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2138 ;;Total ram usage:        0 bytes
  2139 ;; Hardware stack levels used: 1
  2140 ;; This function calls:
  2141 ;;		Nothing
  2142 ;; This function is called by:
  2143 ;;		Interrupt level 2
  2144 ;; This function uses a non-reentrant model
  2145 ;;
  2146                           
  2147                           	psect	intcode
  2148   000008                     __pintcode:
  2149                           	callstack 0
  2150   000008                     _HighISR:
  2151                           	callstack 28
  2152                           
  2153                           ; BSR set to: 15
  2154                           ;incstack = 0
  2155   000008  823A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2156   00000A                     
  2157                           ;../interrupts.c: 27:     if (TMR0IF) {
  2158   00000A  010E               	movlb	14	; () banked
  2159   00000C  AB33               	btfss	51,5,b	;volatile
  2160   00000E  EF0B  F000         	goto	i2u48_41
  2161   000012  EF0D  F000         	goto	i2u48_40
  2162   000016                     i2u48_41:
  2163   000016  EF14  F000         	goto	i2l1233
  2164   00001A                     i2u48_40:
  2165   00001A                     
  2166                           ; BSR set to: 14
  2167                           ;../interrupts.c: 28:         TMR0H=0b00001011;
  2168   00001A  0E0B               	movlw	11
  2169   00001C  6ED4               	movwf	212,c	;volatile
  2170                           
  2171                           ;../interrupts.c: 29:         TMR0L=0b00001011;
  2172   00001E  0E0B               	movlw	11
  2173   000020  6ED3               	movwf	211,c	;volatile
  2174   000022                     
  2175                           ; BSR set to: 14
  2176                           ;../interrupts.c: 30:         minute += 1;
  2177   000022  4A36               	infsnz	_minute^0,f,c
  2178   000024  2A37               	incf	(_minute+1)^0,f,c
  2179   000026                     
  2180                           ; BSR set to: 14
  2181                           ;../interrupts.c: 31:         TMR0IF=0;
  2182   000026  9B33               	bcf	51,5,b	;volatile
  2183   000028                     i2l1233:
  2184                           
  2185                           ; BSR set to: 14
  2186                           ;../interrupts.c: 34:     if (PIR2bits.C1IF){
  2187   000028  A135               	btfss	53,0,b	;volatile
  2188   00002A  EF19  F000         	goto	i2u49_41
  2189   00002E  EF1B  F000         	goto	i2u49_40
  2190   000032                     i2u49_41:
  2191   000032  EF5D  F000         	goto	i2l153
  2192   000036                     i2u49_40:
  2193   000036                     
  2194                           ; BSR set to: 14
  2195                           ;../interrupts.c: 35:         if (CM1CON0bits.OUT == 0) {
  2196   000036  BDD0               	btfsc	208,6,b	;volatile
  2197   000038  EF20  F000         	goto	i2u50_41
  2198   00003C  EF22  F000         	goto	i2u50_40
  2199   000040                     i2u50_41:
  2200   000040  EF2D  F000         	goto	i2l145
  2201   000044                     i2u50_40:
  2202   000044                     
  2203                           ; BSR set to: 14
  2204                           ;../interrupts.c: 36:             daylight_start_hour = hour;
  2205   000044  C038  F030         	movff	_hour,_daylight_start_hour
  2206   000048  C039  F031         	movff	_hour+1,_daylight_start_hour+1
  2207                           
  2208                           ;../interrupts.c: 37:             daylight_start_min = minute;
  2209   00004C  C036  F02E         	movff	_minute,_daylight_start_min
  2210   000050  C037  F02F         	movff	_minute+1,_daylight_start_min+1
  2211                           
  2212                           ;../interrupts.c: 38:             LATHbits.LATH3=0;
  2213   000054  9680               	bcf	128,3,c	;volatile
  2214                           
  2215                           ;../interrupts.c: 39:             }
  2216   000056  EF5C  F000         	goto	i2l146
  2217   00005A                     i2l145:
  2218                           
  2219                           ; BSR set to: 14
  2220   00005A  ADD0               	btfss	208,6,b	;volatile
  2221   00005C  EF32  F000         	goto	i2u51_41
  2222   000060  EF34  F000         	goto	i2u51_40
  2223   000064                     i2u51_41:
  2224   000064  EF5C  F000         	goto	i2l146
  2225   000068                     i2u51_40:
  2226   000068                     
  2227                           ; BSR set to: 14
  2228                           ;../interrupts.c: 41:             daylight_end_hour = hour;
  2229   000068  C038  F02C         	movff	_hour,_daylight_end_hour
  2230   00006C  C039  F02D         	movff	_hour+1,_daylight_end_hour+1
  2231                           
  2232                           ;../interrupts.c: 42:             daylight_end_min = minute;
  2233   000070  C036  F02A         	movff	_minute,_daylight_end_min
  2234   000074  C037  F02B         	movff	_minute+1,_daylight_end_min+1
  2235   000078                     
  2236                           ; BSR set to: 14
  2237                           ;../interrupts.c: 43:         if (hour <1 || hour >=5){
  2238   000078  5038               	movf	_hour^0,w,c
  2239   00007A  1039               	iorwf	(_hour+1)^0,w,c
  2240   00007C  B4D8               	btfsc	status,2,c
  2241   00007E  EF43  F000         	goto	i2u52_41
  2242   000082  EF45  F000         	goto	i2u52_40
  2243   000086                     i2u52_41:
  2244   000086  EF50  F000         	goto	i2l150
  2245   00008A                     i2u52_40:
  2246   00008A                     
  2247                           ; BSR set to: 14
  2248   00008A  5039               	movf	(_hour+1)^0,w,c
  2249   00008C  E109               	bnz	i2u53_40
  2250   00008E  0E05               	movlw	5
  2251   000090  5C38               	subwf	_hour^0,w,c
  2252   000092  A0D8               	btfss	status,0,c
  2253   000094  EF4E  F000         	goto	i2u53_41
  2254   000098  EF50  F000         	goto	i2u53_40
  2255   00009C                     i2u53_41:
  2256   00009C  EF5C  F000         	goto	i2l146
  2257   0000A0                     i2u53_40:
  2258   0000A0                     i2l150:
  2259                           
  2260                           ; BSR set to: 14
  2261                           ;../interrupts.c: 44:             if (CM1CON0bits.OUT == 1) {LATHbits.LATH3=1;}
  2262   0000A0  ADD0               	btfss	208,6,b	;volatile
  2263   0000A2  EF55  F000         	goto	i2u54_41
  2264   0000A6  EF57  F000         	goto	i2u54_40
  2265   0000AA                     i2u54_41:
  2266   0000AA  EF5A  F000         	goto	i2l151
  2267   0000AE                     i2u54_40:
  2268   0000AE                     
  2269                           ; BSR set to: 14
  2270   0000AE  8680               	bsf	128,3,c	;volatile
  2271   0000B0  EF5B  F000         	goto	i2l152
  2272   0000B4                     i2l151:
  2273                           
  2274                           ; BSR set to: 14
  2275   0000B4  9680               	bcf	128,3,c	;volatile
  2276   0000B6                     i2l152:
  2277                           
  2278                           ; BSR set to: 14
  2279                           ;../interrupts.c: 46:             LATHbits.LATH3=1;}
  2280   0000B6  8680               	bsf	128,3,c	;volatile
  2281   0000B8                     i2l146:
  2282                           
  2283                           ; BSR set to: 14
  2284                           ;../interrupts.c: 48:         PIR2bits.C1IF=0;
  2285   0000B8  9135               	bcf	53,0,b	;volatile
  2286   0000BA                     i2l153:
  2287                           
  2288                           ; BSR set to: 14
  2289   0000BA  923A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2290   0000BC  0011               	retfie		f
  2291   0000BE                     __end_of_HighISR:
  2292                           	callstack 0
  2293                           
  2294                           	psect	rparam
  2295   000000                     
  2296                           	psect	temp
  2297   00003A                     btemp:
  2298                           	callstack 0
  2299   00003A                     	ds	1
  2300   000000                     int$flags	set	btemp
  2301   000000                     wtemp8	set	btemp+1
  2302   000000                     ttemp5	set	btemp+1
  2303   000000                     ttemp6	set	btemp+4
  2304   000000                     ttemp7	set	btemp+8
  2305                           
  2306                           	psect	idloc
  2307                           
  2308                           ;Config register IDLOC0 @ 0x200000
  2309                           ;	unspecified, using default values
  2310   200000                     	org	2097152
  2311   200000  0FFF               	dw	4095
  2312                           
  2313                           ;Config register IDLOC1 @ 0x200002
  2314                           ;	unspecified, using default values
  2315   200002                     	org	2097154
  2316   200002  0FFF               	dw	4095
  2317                           
  2318                           ;Config register IDLOC2 @ 0x200004
  2319                           ;	unspecified, using default values
  2320   200004                     	org	2097156
  2321   200004  0FFF               	dw	4095
  2322                           
  2323                           ;Config register IDLOC3 @ 0x200006
  2324                           ;	unspecified, using default values
  2325   200006                     	org	2097158
  2326   200006  0FFF               	dw	4095
  2327                           
  2328                           ;Config register IDLOC4 @ 0x200008
  2329                           ;	unspecified, using default values
  2330   200008                     	org	2097160
  2331   200008  0FFF               	dw	4095
  2332                           
  2333                           ;Config register IDLOC5 @ 0x20000A
  2334                           ;	unspecified, using default values
  2335   20000A                     	org	2097162
  2336   20000A  0FFF               	dw	4095
  2337                           
  2338                           ;Config register IDLOC6 @ 0x20000C
  2339                           ;	unspecified, using default values
  2340   20000C                     	org	2097164
  2341   20000C  0FFF               	dw	4095
  2342                           
  2343                           ;Config register IDLOC7 @ 0x20000E
  2344                           ;	unspecified, using default values
  2345   20000E                     	org	2097166
  2346   20000E  0FFF               	dw	4095
  2347                           
  2348                           	psect	config
  2349                           
  2350                           ;Config register CONFIG1L @ 0x300000
  2351                           ;	External Oscillator mode Selection bits
  2352                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  2353                           ;	Power-up default value for COSC bits
  2354                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  2355   300000                     	org	3145728
  2356   300000  AA                 	db	170
  2357                           
  2358                           ;Config register CONFIG1H @ 0x300001
  2359                           ;	unspecified, using default values
  2360                           ;	Clock Out Enable bit
  2361                           ;	CLKOUTEN = 0x1, unprogrammed default
  2362                           ;	Clock Switch Enable bit
  2363                           ;	CSWEN = 0x1, unprogrammed default
  2364                           ;	Fail-Safe Clock Monitor Enable bit
  2365                           ;	FCMEN = 0x1, unprogrammed default
  2366   300001                     	org	3145729
  2367   300001  FF                 	db	255
  2368                           
  2369                           ;Config register CONFIG2L @ 0x300002
  2370                           ;	unspecified, using default values
  2371                           ;	Master Clear Enable bit
  2372                           ;	MCLRE = 0x1, unprogrammed default
  2373                           ;	Power-up Timer Enable bit
  2374                           ;	PWRTE = 0x1, unprogrammed default
  2375                           ;	Low-power BOR enable bit
  2376                           ;	LPBOREN = 0x1, unprogrammed default
  2377                           ;	Brown-out Reset Enable bits
  2378                           ;	BOREN = 0x3, unprogrammed default
  2379   300002                     	org	3145730
  2380   300002  FF                 	db	255
  2381                           
  2382                           ;Config register CONFIG2H @ 0x300003
  2383                           ;	unspecified, using default values
  2384                           ;	Brown Out Reset Voltage selection bits
  2385                           ;	BORV = 0x3, unprogrammed default
  2386                           ;	ZCD Disable bit
  2387                           ;	ZCD = 0x1, unprogrammed default
  2388                           ;	PPSLOCK bit One-Way Set Enable bit
  2389                           ;	PPS1WAY = 0x1, unprogrammed default
  2390                           ;	Stack Full/Underflow Reset Enable bit
  2391                           ;	STVREN = 0x1, unprogrammed default
  2392                           ;	Debugger Enable bit
  2393                           ;	DEBUG = 0x1, unprogrammed default
  2394                           ;	Extended Instruction Set Enable bit
  2395                           ;	XINST = 0x1, unprogrammed default
  2396   300003                     	org	3145731
  2397   300003  FF                 	db	255
  2398                           
  2399                           ;Config register CONFIG3L @ 0x300004
  2400                           ;	WDT Period Select bits
  2401                           ;	WDTCPS = 0x1F, unprogrammed default
  2402                           ;	WDT operating mode
  2403                           ;	WDTE = OFF, WDT Disabled
  2404   300004                     	org	3145732
  2405   300004  9F                 	db	159
  2406                           
  2407                           ;Config register CONFIG3H @ 0x300005
  2408                           ;	unspecified, using default values
  2409                           ;	WDT Window Select bits
  2410                           ;	WDTCWS = 0x7, unprogrammed default
  2411                           ;	WDT input clock selector
  2412                           ;	WDTCCS = 0x7, unprogrammed default
  2413   300005                     	org	3145733
  2414   300005  FF                 	db	255
  2415                           
  2416                           ;Config register CONFIG4L @ 0x300006
  2417                           ;	unspecified, using default values
  2418                           ;	Write Protection Block 0
  2419                           ;	WRT0 = 0x1, unprogrammed default
  2420                           ;	Write Protection Block 1
  2421                           ;	WRT1 = 0x1, unprogrammed default
  2422                           ;	Write Protection Block 2
  2423                           ;	WRT2 = 0x1, unprogrammed default
  2424                           ;	Write Protection Block 3
  2425                           ;	WRT3 = 0x1, unprogrammed default
  2426                           ;	Write Protection Block 3
  2427                           ;	WRT4 = 0x1, unprogrammed default
  2428                           ;	Write Protection Block 3
  2429                           ;	WRT5 = 0x1, unprogrammed default
  2430                           ;	Write Protection Block 3
  2431                           ;	WRT6 = 0x1, unprogrammed default
  2432                           ;	Write Protection Block 3
  2433                           ;	WRT7 = 0x1, unprogrammed default
  2434   300006                     	org	3145734
  2435   300006  FF                 	db	255
  2436                           
  2437                           ;Config register CONFIG4H @ 0x300007
  2438                           ;	unspecified, using default values
  2439                           ;	Configuration Register Write Protection bit
  2440                           ;	WRTC = 0x1, unprogrammed default
  2441                           ;	Boot Block Write Protection bit
  2442                           ;	WRTB = 0x1, unprogrammed default
  2443                           ;	Data EEPROM Write Protection bit
  2444                           ;	WRTD = 0x1, unprogrammed default
  2445                           ;	Scanner Enable bit
  2446                           ;	SCANE = 0x1, unprogrammed default
  2447                           ;	Low Voltage Programming Enable bit
  2448                           ;	LVP = 0x1, unprogrammed default
  2449   300007                     	org	3145735
  2450   300007  FF                 	db	255
  2451                           
  2452                           ;Config register CONFIG5L @ 0x300008
  2453                           ;	unspecified, using default values
  2454                           ;	UserNVM Program Memory Code Protection bit
  2455                           ;	CP = 0x1, unprogrammed default
  2456                           ;	DataNVM Memory Code Protection bit
  2457                           ;	CPD = 0x1, unprogrammed default
  2458   300008                     	org	3145736
  2459   300008  FF                 	db	255
  2460                           
  2461                           ;Config register CONFIG5H @ 0x300009
  2462                           ;	unspecified, using default values
  2463   300009                     	org	3145737
  2464   300009  FF                 	db	255
  2465                           
  2466                           ;Config register CONFIG6L @ 0x30000A
  2467                           ;	unspecified, using default values
  2468                           ;	Table Read Protection Block 0
  2469                           ;	EBTR0 = 0x1, unprogrammed default
  2470                           ;	Table Read Protection Block 1
  2471                           ;	EBTR1 = 0x1, unprogrammed default
  2472                           ;	Table Read Protection Block 2
  2473                           ;	EBTR2 = 0x1, unprogrammed default
  2474                           ;	Table Read Protection Block 3
  2475                           ;	EBTR3 = 0x1, unprogrammed default
  2476                           ;	Table Read Protection Block 4
  2477                           ;	EBTR4 = 0x1, unprogrammed default
  2478                           ;	Table Read Protection Block 5
  2479                           ;	EBTR5 = 0x1, unprogrammed default
  2480                           ;	Table Read Protection Block 6
  2481                           ;	EBTR6 = 0x1, unprogrammed default
  2482                           ;	Table Read Protection Block 7
  2483                           ;	EBTR7 = 0x1, unprogrammed default
  2484   30000A                     	org	3145738
  2485   30000A  FF                 	db	255
  2486                           
  2487                           ;Config register CONFIG6H @ 0x30000B
  2488                           ;	unspecified, using default values
  2489                           ;	Boot Block Table Read Protection bit
  2490                           ;	EBTRB = 0x1, unprogrammed default
  2491   30000B                     	org	3145739
  2492   30000B  FF                 	db	255
  2493                           tosu	equ	0xFFF
  2494                           tosh	equ	0xFFE
  2495                           tosl	equ	0xFFD
  2496                           stkptr	equ	0xFFC
  2497                           pclatu	equ	0xFFB
  2498                           pclath	equ	0xFFA
  2499                           pcl	equ	0xFF9
  2500                           tblptru	equ	0xFF8
  2501                           tblptrh	equ	0xFF7
  2502                           tblptrl	equ	0xFF6
  2503                           tablat	equ	0xFF5
  2504                           prodh	equ	0xFF4
  2505                           prodl	equ	0xFF3
  2506                           indf0	equ	0xFEF
  2507                           postinc0	equ	0xFEE
  2508                           postdec0	equ	0xFED
  2509                           preinc0	equ	0xFEC
  2510                           plusw0	equ	0xFEB
  2511                           fsr0h	equ	0xFEA
  2512                           fsr0l	equ	0xFE9
  2513                           wreg	equ	0xFE8
  2514                           indf1	equ	0xFE7
  2515                           postinc1	equ	0xFE6
  2516                           postdec1	equ	0xFE5
  2517                           preinc1	equ	0xFE4
  2518                           plusw1	equ	0xFE3
  2519                           fsr1h	equ	0xFE2
  2520                           fsr1l	equ	0xFE1
  2521                           bsr	equ	0xFE0
  2522                           indf2	equ	0xFDF
  2523                           postinc2	equ	0xFDE
  2524                           postdec2	equ	0xFDD
  2525                           preinc2	equ	0xFDC
  2526                           plusw2	equ	0xFDB
  2527                           fsr2h	equ	0xFDA
  2528                           fsr2l	equ	0xFD9
  2529                           status	equ	0xFD8

Data Sizes:
    Strings     18
    Constant    0
    Data        0
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     37      57
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[18]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    S1768$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1768$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_check_month
    _check_month->___lwmod
    ___lwmod->___wmul
    ___lwdiv->___wmul

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0    5002
                                             21 COMRAM    16    16      0
                           _ADC_init
                         _Comp1_init
                    _Interrupts_init
                  _LEDarray_disp_bin
                      _LEDarray_init
                         _Light_init
                        _Timer0_init
                            ___lwdiv
                            ___lwmod
                             ___wmul
                        _check_month
 ---------------------------------------------------------------------------------
 (1) _check_month                                         10     4      6    1384
                                             11 COMRAM    10     4      6
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                              6 COMRAM     5     1      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    1071
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4    1074
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Light_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    2     0      2     426
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comp1_init                                           0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Comp1_init
     _DAC_init
   _Interrupts_init
   _LEDarray_disp_bin
   _LEDarray_init
   _Light_init
   _Timer0_init
   ___lwdiv
     ___wmul (ARG)
   ___lwmod
     ___wmul (ARG)
   ___wmul
   _check_month
     ___lwmod

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRlhlhhh     84      0       0      40        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     25      39       1       60.6%
BITBIGSFRllhhh      5C      0       0      44        0.0%
BITBIGSFRhhll       4A      0       0      34        0.0%
BITBIGSFRlll        3A      0       0      47        0.0%
BITBIGSFRlhll       21      0       0      43        0.0%
BITBIGSFRhhlhh      1B      0       0      33        0.0%
BITBIGSFRlhhhhl     14      0       0      37        0.0%
BITBIGSFRlhlhl      11      0       0      42        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRllhl        9      0       0      46        0.0%
BITBIGSFRlhlhhl      8      0       0      41        0.0%
BITBIGSFRlhhl        6      0       0      39        0.0%
BITBIGSFRlhhhl       3      0       0      38        0.0%
BITBIGSFRllhhl       1      0       0      45        0.0%
BITBIGSFRlhhhhl      1      0       0      36        0.0%
BITBIGSFRhl          1      0       0      35        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      39      48        0.0%
DATA                 0      0      39       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Nov 07 18:13:13 2022

                        l15 16EA                          l50 14B0                          l42 1692  
                        l51 14B2                          l60 151E                          l52 14C6  
                        l61 1520                          l53 14C8                          l62 1534  
                        l54 14DC                          l63 1536                          l55 14DE  
                        l64 154A                          l56 14F2                          l48 149A  
                        l57 14F4                          l49 149C                          l66 154C  
                        l58 1508                          l59 150A                          l93 170E  
                        l96 16FE                          l99 1670         ___wmul@multiplicand 0003  
         ??_Interrupts_init 0001                         l302 1484                         l223 16B2  
                       l305 164A                         l138 1708                         l199 100E  
                       l803 15C0                         l299 147C                         l813 1624  
                       l806 161C                         l796 15B8                         l991 16EC  
                       l993 16F2                         l995 16FC                         u900 1494  
                       u901 1490                         u910 14AA                         u911 14A6  
                       u920 14C0                         u921 14BC                         u930 14D6  
                       u931 14D2                         u940 14EC                         u941 14E8  
                       u950 1502                         u870 15D4                         u951 14FE  
                       u871 15D0                         u960 1518                         u880 15F2  
                       u961 1514                         u881 15EE                         u970 152E  
                       u890 1608                         u971 152A                         u891 1604  
                       u980 1544                         u981 1540                         u990 124E  
                       u991 124A                         wreg 000FE8                 main@changed 001E  
                      l1041 16E8                        l1033 16D2                        l1035 16DC  
                      l1043 1672                        l1037 16E4                        l1039 16E6  
                      l1071 1660                        l1081 166C                        l1073 1662  
                      l1065 170A                        l1075 1664                        l1067 164C  
                      l1083 1700                        l1091 16B0                        l1411 15D4  
                      l1077 1666                        l1069 164E                        l1085 1694  
                      l1421 1610                        l1413 15DC                        l1501 141A  
                      l1079 1668                        l1431 14C0                        l1087 169C  
                      l1423 1616                        l1415 15E4                        l1511 1464  
                      l1503 142E                        l1441 152E                        l1433 14D6  
                      l1425 1486                        l1089 16A6                        l1521 1626  
                      l1417 15F2                        l1409 15C2                        l1505 1436  
                      l1601 1036                        l1443 1544                        l1435 14EC  
                      l1427 1494                        l1531 1568                        l1523 1642  
                      l1419 1608                        l1507 143E                        l1451 1262  
                      l1611 1076                        l1603 1038                        l1437 1502  
                      l1429 14AA                        l1541 15A2                        l1533 1570  
                      l1509 1452                        l1517 147C                        l1453 1276  
                      l1461 12C6                        l1445 123C                        l1621 10B2  
                      l1613 1078                        l1605 1040                        l1439 1518  
                      l1543 15AA                        l1535 1578                        l1527 154E  
                      l1471 1302                        l1463 12DA                        l1455 128A  
                      l1447 123C                        l1623 10C4                        l1631 1106  
                      l1607 1054                        l1615 1080                        l1545 15AC  
                      l1537 1586                        l1529 1556                        l1481 1356  
                      l1465 12E2                        l1473 1306                        l1457 129E  
                      l1449 124E                        l1641 1168                        l1633 1118  
                      l1625 10D6                        l1617 108C                        l1609 1066  
                      l1561 0E14                        l1547 15B2                        l1539 158C  
                      l1491 13BA                        l1483 136A                        l1475 131A  
                      l1467 12E6                        l1459 12B2                        l1651 11B4  
                      l1643 117E                        l1635 112C                        l1627 10EC  
                      l1619 109E                        l1571 0E74                        l1563 0E44  
                      l1493 13E0                        l1485 1372                        l1477 132E  
                      l1469 12FA                        l1661 121A                        l1653 11C8  
                      l1645 1190                        l1637 1140                        l1629 1102  
                      l1581 0EA0                        l1573 0E78                        l1565 0E54  
                      l1495 13EC                        l1487 1376                        l1479 1342  
                      l1663 122C                        l1655 11DC                        l1647 1196  
                      l1639 1152                        l1591 0EFA                        l1583 0EA4  
                      l1575 0E80                        l1567 0E58                        l1497 13F4  
                      l1489 1394                        l1657 11EE                        l1649 11A2  
                      l1593 0F16                        l1585 0EC8                        l1577 0E94  
                      l1569 0E60                        l1499 1408                        l1659 1204  
                      l1595 0F46                        l1587 0EDC                        l1579 0E9C  
                      l1597 0FAA                        l1589 0EE4                        l1599 1020  
                      STR_1 0E01                        u1000 1262                        u1001 125E  
                      u1010 1276                        u1011 1272                        u1100 1342  
                      u1020 128A                        u1101 133E                        u1021 1286  
                      u1110 1356                        u1030 129E                        u1111 1352  
                      u1031 129A                        u1200 1464                        u1120 136A  
                      u1040 12B2                        u1201 1460                        u1121 1366  
                      u1041 12AE                        u1210 1478                        u1130 1394  
                      u1050 12C6                        u1211 1474                        u1131 1390  
                      u1051 12C2                        u1220 1568                        u1140 13BA  
                      u1060 12DA                        u1300 0EDC                        u1221 1564  
                      u1141 13B6                        u1061 12D6                        u1301 0ED8  
                      u1230 1586                        u1150 13E0                        u1070 12FA  
                      u1310 0EFA                        u1231 1582                        u1151 13DC  
                      u1071 12F6                        u1311 0EF6                        u1240 15A2  
                      u1160 1408                        u1080 131A                        u1400 10D6  
                      u1320 1020                        u1241 159E                        u1161 1404  
                      u1081 1316                        u1401 10D2                        u1321 101C  
                      u1170 141A                        u1090 132E                        u1410 10EC  
                      u1330 1036                        u1171 1416                        u1091 132A  
                      u1411 10E8                        u1331 1032                        u1180 142E  
                      u1500 11B4                        u1420 1102                        u1340 1054  
                      u1181 142A                        u1501 11B0                        u1421 10FE  
                      u1341 1050                        u1190 1452                        u1510 11C8  
                      u1430 1118                        u1350 1066                        u1191 144E  
                      u1511 11C4                        u1431 1114                        u1351 1062  
                      u1520 11DC                        u1440 112C                        u1360 1076  
                      u1280 0E74                        u1521 11D8                        u1441 1128  
                      u1361 1072                        u1281 0E70                        u1530 11EE  
                      u1450 1140                        u1370 109E                        u1290 0E94  
                      u1531 11EA                        u1451 113C                        u1371 109A  
                      u1291 0E90                        u1540 1204                        u1460 1152  
                      u1380 10B2                        u1541 1200                        u1461 114E  
                      u1381 10AE                        u1550 121A                        u1470 1168  
                      u1390 10C4                        u1551 1216                        u1471 1164  
                      u1391 10C0                        u1560 122C                        u1480 117E  
                      u1561 1228                        u1481 117A                        u1490 1190  
                      u1491 118C                        _main 0E14                        _hour 0038  
                      btemp 003A                        prodh 000FF4                        prodl 000FF3  
                      start 00BE            __end_of_ADC_init 16EC            __end_of_DAC_init 1700  
           __end_of_HighISR 00BE                ___param_bank 000000                  _Comp1_init 164C  
                     ?_main 0001                       _ADPCH 000F5F             __end_of___lwdiv 15C2  
           __end_of___lwmod 1626                       i2l150 00A0                       i2l151 00B4  
                     i2l152 00B6                       i2l145 005A                       i2l153 00BA  
                     i2l146 00B8                       _TMR0H 000FD4                       _TMR0L 000FD3  
      check_month@leap_year 0014                       ttemp5 003B                       ttemp6 003E  
                     ttemp7 0042                       status 000FD8                       wtemp8 003B  
      check_month@month_day 000E             __initialization 16B4                __end_of_main 123C  
                _Light_init 170A            _daylight_end_min 002A                      ??_main 0016  
             __activetblptr 000001                      _ADRESH 000F64                      i2l1231 0026  
                    i2l1241 0078                      i2l1233 0028                      i2l1225 000A  
                    i2l1243 008A                      i2l1235 0036                      i2l1227 001A  
                    i2l1245 00AE                      i2l1237 0044                      i2l1229 0022  
                    i2l1239 0068                   ??_HighISR 0001                      _TMR0IE 00714D  
                    _TMR0IF 00719D           _LEDarray_disp_bin 1486          ?_LEDarray_disp_bin 0001  
             ??_Timer0_init 0001                      ___wmul 1626                 ?_Comp1_init 0001  
                 ??___lwdiv 000B                   ??___lwmod 000B         ??_LEDarray_disp_bin 0003  
                    clear_0 16BA               main@month_day 0024                      _minute 0036  
                    isa$std 000001                __mediumconst 0000                      tblptrh 000FF7  
                    tblptru 000FF8                   ?_ADC_init 0001                   ?_DAC_init 0001  
           _current_day_min 0032   __end_of_LEDarray_disp_bin 154E                  __accesstop 0060  
   __end_of__initialization 16C0             check_month@year 0010               ___rparam_used 000001  
             _LEDarray_init 1672             _Interrupts_init 1700              __pcstackCOMRAM 0001  
               ?_Light_init 0001         __end_of_Timer0_init 16B4           _daylight_end_hour 002C  
                ??_ADC_init 0001                  ??_DAC_init 0001              ?_LEDarray_init 0001  
       _daylight_start_hour 0030                     ?___wmul 0001                     i2u50_40 0044  
                   i2u50_41 0040                     i2u51_40 0068                     i2u51_41 0064  
                   i2u52_40 008A                     i2u52_41 0086                     i2u53_40 00A0  
                   i2u53_41 009C                     i2u54_40 00AE                     i2u54_41 00AA  
                   i2u48_40 001A                     i2u48_41 0016                     i2u49_40 0036  
                   i2u49_41 0032     __end_of_Interrupts_init 170A                     _HighISR 0008  
                 _ADREFbits 000F58                     __Hparam 0000                     __Lparam 0000  
               _Timer0_init 1694                     ___lwdiv 154E                     ___lwmod 15C2  
              __psmallconst 0E00                     __pcinit 16B4                     __ramtop 0E00  
                   __ptext0 0E14                     __ptext1 123C                     __ptext2 15C2  
                   __ptext3 1626                     __ptext4 154E                     __ptext5 1694  
                   __ptext6 170A                     __ptext7 1672                     __ptext8 1486  
                   __ptext9 1700               ??_check_month 0012                     main@day 0022  
      end_of_initialization 16C0       main@OneAmToFiveAmFlag 001C             ??_LEDarray_init 0001  
              ??_Comp1_init 0001                     postinc0 000FEE            _current_day_hour 0034  
                 _TRISAbits 000F81                   _TRISBbits 000F82                   _TRISCbits 000F83  
                 _TRISEbits 000F85                   _TRISFbits 000F86                   _TRISGbits 000F87  
                 _TRISHbits 000F88  _calculated_solar_noon_hour 0028            check_month@month 000C  
       __end_of_check_month 1486          __end_of_Comp1_init 1672                 _CM1CON0bits 000ED0  
               _CM1CON1bits 000ED1            ?_Interrupts_init 0001                ??_Light_init 0001  
            __end_of___wmul 164C         start_initialization 16B4          __end_of_Light_init 1710  
                  ??___wmul 0005                 __pbssCOMRAM 0026                 _check_month 123C  
                  ?_HighISR 0001            ___lwdiv@dividend 0007                ?_Timer0_init 0001  
        _daylight_start_min 002E                   __pintcode 0008                    ?___lwdiv 0007  
                  ?___lwmod 0007                 __smallconst 0E00                    _ADC_init 16D2  
                  _DAC_init 16EC            ___lwdiv@quotient 000B              ___wmul@product 0005  
                  _LATAbits 000F79                    _LATBbits 000F7A                    _LATCbits 000F7B  
                  _LATEbits 000F7D                    _LATFbits 000F7E                    _LATGbits 000F7F  
                  _LATHbits 000F80                    _PIR2bits 000E35                  _ADCON0bits 000F60  
         ___wmul@multiplier 0001                   main@month 0020                  _CM1NCHbits 000ED2  
                _CM1PCHbits 000ED3       __end_of_LEDarray_init 1694                    __Hrparam 0000  
                  __Lrparam 0000                __Lsmallconst 0E00                  _ANSELAbits 000E92  
                _ANSELFbits 000EB4                  _T0CON0bits 000FD5                  _T0CON1bits 000FD6  
           ___lwdiv@divisor 0009             ___lwdiv@counter 000D                    __ptext10 164C  
                  __ptext11 16EC                    __ptext12 16D2     LEDarray_disp_bin@number 0001  
                  isa$xinst 000000                    int$flags 003A                    main@year 001A  
                _INTCONbits 000FF2                ?_check_month 000C                    intlevel2 0000  
              _DAC1CON0bits 000EC6                _DAC1CON1bits 000EC7            ___lwmod@dividend 0007  
 _calculated_solar_noon_min 0026             ___lwmod@divisor 0009             ___lwmod@counter 000B  

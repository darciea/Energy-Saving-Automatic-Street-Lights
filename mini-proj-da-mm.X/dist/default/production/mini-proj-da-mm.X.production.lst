

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Nov 09 19:32:02 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    49                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    51   000000                     
    52                           ; Version 2.35
    53                           ; Generated 05/05/2021 GMT
    54                           ; 
    55                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution. Publication is not required when
    69                           ;        this file is used in an embedded application.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC18F67K40 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87   000000                     _TRISEbits	set	3973
    88   000000                     _TRISCbits	set	3971
    89   000000                     _LATEbits	set	3965
    90   000000                     _LATCbits	set	3963
    91   000000                     _T0CON0bits	set	4053
    92   000000                     _T0CON1bits	set	4054
    93   000000                     _CM1CON1bits	set	3793
    94   000000                     _TRISDbits	set	3972
    95   000000                     _LATDbits	set	3964
    96   000000                     _LATHbits	set	3968
    97   000000                     _LATBbits	set	3962
    98   000000                     _LATFbits	set	3966
    99   000000                     _TRISBbits	set	3970
   100   000000                     _TRISFbits	set	3974
   101   000000                     _TRISGbits	set	3975
   102   000000                     _ANSELAbits	set	3730
   103   000000                     _TRISAbits	set	3969
   104   000000                     _TMR0IE	set	29005
   105   000000                     _ANSELFbits	set	3764
   106   000000                     _ADREFbits	set	3928
   107   000000                     _ADPCH	set	3935
   108   000000                     _ADRESH	set	3940
   109   000000                     _ADCON0bits	set	3936
   110   000000                     _LATAbits	set	3961
   111   000000                     _LATGbits	set	3967
   112   000000                     _TMR0L	set	4051
   113   000000                     _TMR0H	set	4052
   114   000000                     _INTCONbits	set	4082
   115   000000                     _TRISHbits	set	3976
   116   000000                     _DAC1CON0bits	set	3782
   117   000000                     _CM1CON0bits	set	3792
   118   000000                     _CM1NCHbits	set	3794
   119   000000                     _DAC1CON1bits	set	3783
   120   000000                     _CM1PCHbits	set	3795
   121   000000                     _TMR0IF	set	29085
   122   000000                     _PIR2bits	set	3637
   123                           
   124                           	psect	smallconst
   125   000E00                     __psmallconst:
   126                           	callstack 0
   127   000E00  00                 	db	0
   128   000E01                     
   129                           ; BSR set to: 14
   130   000E01  56                 	db	86	;'V'
   131   000E02  6F                 	db	111	;'o'
   132   000E03  6C                 	db	108	;'l'
   133   000E04  74                 	db	116	;'t'
   134   000E05  61                 	db	97	;'a'
   135   000E06  67                 	db	103	;'g'
   136   000E07  65                 	db	101	;'e'
   137   000E08  20                 	db	32
   138   000E09  3D                 	db	61	;'='
   139   000E0A  20                 	db	32
   140   000E0B  25                 	db	37
   141   000E0C  64                 	db	100	;'d'
   142   000E0D  2E                 	db	46
   143   000E0E  25                 	db	37
   144   000E0F  30                 	db	48	;'0'
   145   000E10  32                 	db	50	;'2'
   146   000E11  64                 	db	100	;'d'
   147   000E12  00                 	db	0
   148   000E13                     STR_1:
   149                           
   150                           ; BSR set to: 14
   151   000E13  25                 	db	37
   152   000E14  64                 	db	100	;'d'
   153   000E15  2D                 	db	45
   154   000E16  25                 	db	37
   155   000E17  64                 	db	100	;'d'
   156   000E18  2D                 	db	45
   157   000E19  25                 	db	37
   158   000E1A  64                 	db	100	;'d'
   159   000E1B  20                 	db	32
   160   000E1C  20                 	db	32
   161   000E1D  20                 	db	32
   162   000E1E  20                 	db	32
   163   000E1F  20                 	db	32
   164   000E20  25                 	db	37
   165   000E21  64                 	db	100	;'d'
   166   000E22  00                 	db	0
   167   000E23                     
   168                           ; BSR set to: 14
   169   000E23  67                 	db	103	;'g'
   170   000E24  65                 	db	101	;'e'
   171   000E25  74                 	db	116	;'t'
   172   000E26  76                 	db	118	;'v'
   173   000E27  61                 	db	97	;'a'
   174   000E28  6C                 	db	108	;'l'
   175   000E29  20                 	db	32
   176   000E2A  3D                 	db	61	;'='
   177   000E2B  20                 	db	32
   178   000E2C  25                 	db	37
   179   000E2D  64                 	db	100	;'d'
   180   000E2E  00                 	db	0
   181   000E2F                     STR_2:
   182                           
   183                           ; BSR set to: 14
   184   000E2F  25                 	db	37
   185   000E30  64                 	db	100	;'d'
   186   000E31  3A                 	db	58	;':'
   187   000E32  25                 	db	37
   188   000E33  64                 	db	100	;'d'
   189   000E34  00                 	db	0
   190   000E35  00                 	db	0	; dummy byte at the end
   191   000000                     
   192                           ; #config settings
   193                           
   194                           	psect	cinit
   195   002772                     __pcinit:
   196                           	callstack 0
   197   002772                     start_initialization:
   198                           	callstack 0
   199   002772                     __initialization:
   200                           	callstack 0
   201                           
   202                           ; Clear objects allocated to BANK1 (32 bytes)
   203   002772  EE01  F000         	lfsr	0,__pbssBANK1
   204   002776  0E20               	movlw	32
   205   002778                     clear_0:
   206   002778  6AEE               	clrf	postinc0,c
   207   00277A  06E8               	decf	wreg,f,c
   208   00277C  E1FD               	bnz	clear_0
   209                           
   210                           ; Clear objects allocated to BANK0 (22 bytes)
   211   00277E  EE00  F0D3         	lfsr	0,__pbssBANK0
   212   002782  0E16               	movlw	22
   213   002784                     clear_1:
   214   002784  6AEE               	clrf	postinc0,c
   215   002786  06E8               	decf	wreg,f,c
   216   002788  E1FD               	bnz	clear_1
   217                           
   218                           ; Clear objects allocated to COMRAM (3 bytes)
   219   00278A  6A5E               	clrf	(__pbssCOMRAM+2)& (0+255),c
   220   00278C  6A5D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   221   00278E  6A5C               	clrf	__pbssCOMRAM& (0+255),c
   222   002790                     end_of_initialization:
   223                           	callstack 0
   224   002790                     __end_of__initialization:
   225                           	callstack 0
   226   002790  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   227   002792  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   228   002794  0100               	movlb	0
   229   002796  EF1B  F007         	goto	_main	;jump to C main() function
   230                           
   231                           	psect	bssCOMRAM
   232   00005C                     __pbssCOMRAM:
   233                           	callstack 0
   234   00005C                     _prec:
   235                           	callstack 0
   236   00005C                     	ds	2
   237   00005E                     _flags:
   238                           	callstack 0
   239   00005E                     	ds	1
   240                           
   241                           	psect	bssBANK0
   242   0000D3                     __pbssBANK0:
   243                           	callstack 0
   244   0000D3                     _width:
   245                           	callstack 0
   246   0000D3                     	ds	2
   247   0000D5                     _calculated_solar_noon_min:
   248                           	callstack 0
   249   0000D5                     	ds	2
   250   0000D7                     _calculated_solar_noon_hour:
   251                           	callstack 0
   252   0000D7                     	ds	2
   253   0000D9                     _daylight_end_min:
   254                           	callstack 0
   255   0000D9                     	ds	2
   256   0000DB                     _daylight_end_hour:
   257                           	callstack 0
   258   0000DB                     	ds	2
   259   0000DD                     _daylight_start_min:
   260                           	callstack 0
   261   0000DD                     	ds	2
   262   0000DF                     _daylight_start_hour:
   263                           	callstack 0
   264   0000DF                     	ds	2
   265   0000E1                     _current_day_min:
   266                           	callstack 0
   267   0000E1                     	ds	2
   268   0000E3                     _current_day_hour:
   269                           	callstack 0
   270   0000E3                     	ds	2
   271   0000E5                     _minute:
   272                           	callstack 0
   273   0000E5                     	ds	2
   274   0000E7                     _hour:
   275                           	callstack 0
   276   0000E7                     	ds	2
   277                           
   278                           	psect	bssBANK1
   279   000100                     __pbssBANK1:
   280                           	callstack 0
   281   000100                     _dbuf:
   282                           	callstack 0
   283   000100                     	ds	32
   284                           
   285                           	psect	cstackBANK0
   286   000060                     __pcstackBANK0:
   287                           	callstack 0
   288   000060                     ?_sprintf:
   289                           	callstack 0
   290   000060                     sprintf@s:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0x0
   294   000060                     	ds	2
   295   000062                     sprintf@fmt:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0x2
   299   000062                     	ds	10
   300   00006C                     sprintf@ap:
   301                           	callstack 0
   302                           
   303                           ; 2 bytes @ 0xC
   304   00006C                     	ds	2
   305   00006E                     sprintf@f:
   306                           	callstack 0
   307                           
   308                           ; 11 bytes @ 0xE
   309   00006E                     	ds	11
   310   000079                     ??_main:
   311                           
   312                           ; 1 bytes @ 0x19
   313   000079                     	ds	4
   314   00007D                     main@datestr:
   315                           	callstack 0
   316                           
   317                           ; 50 bytes @ 0x1D
   318   00007D                     	ds	50
   319   0000AF                     main@yearstr:
   320                           	callstack 0
   321                           
   322                           ; 20 bytes @ 0x4F
   323   0000AF                     	ds	20
   324   0000C3                     main@OneAmToFiveAmFlag:
   325                           	callstack 0
   326                           
   327                           ; 2 bytes @ 0x63
   328   0000C3                     	ds	2
   329   0000C5                     main@changed:
   330                           	callstack 0
   331                           
   332                           ; 2 bytes @ 0x65
   333   0000C5                     	ds	2
   334   0000C7                     main@year:
   335                           	callstack 0
   336                           
   337                           ; 2 bytes @ 0x67
   338   0000C7                     	ds	2
   339   0000C9                     main@daily_correction:
   340                           	callstack 0
   341                           
   342                           ; 2 bytes @ 0x69
   343   0000C9                     	ds	2
   344   0000CB                     main@isDST:
   345                           	callstack 0
   346                           
   347                           ; 2 bytes @ 0x6B
   348   0000CB                     	ds	2
   349   0000CD                     main@day:
   350                           	callstack 0
   351                           
   352                           ; 2 bytes @ 0x6D
   353   0000CD                     	ds	2
   354   0000CF                     main@month:
   355                           	callstack 0
   356                           
   357                           ; 2 bytes @ 0x6F
   358   0000CF                     	ds	2
   359   0000D1                     main@month_day:
   360                           	callstack 0
   361                           
   362                           ; 2 bytes @ 0x71
   363   0000D1                     	ds	2
   364                           
   365                           	psect	cstackCOMRAM
   366   000001                     __pcstackCOMRAM:
   367                           	callstack 0
   368   000001                     ?_isdigit:
   369                           	callstack 0
   370   000001                     ?_isspace:
   371                           	callstack 0
   372   000001                     ?___wmul:
   373                           	callstack 0
   374   000001                     ?___aodiv:
   375                           	callstack 0
   376   000001                     ?___aomod:
   377                           	callstack 0
   378   000001                     LCD_sendnibble@number:
   379                           	callstack 0
   380   000001                     LEDarray_disp_bin@number:
   381                           	callstack 0
   382   000001                     ___wmul@multiplier:
   383                           	callstack 0
   384   000001                     isdigit@c:
   385                           	callstack 0
   386   000001                     isspace@c:
   387                           	callstack 0
   388   000001                     fputc@c:
   389                           	callstack 0
   390   000001                     ___aodiv@dividend:
   391                           	callstack 0
   392   000001                     ___aomod@dividend:
   393                           	callstack 0
   394                           
   395                           ; 8 bytes @ 0x0
   396   000001                     	ds	1
   397   000002                     LCD_sendbyte@type:
   398                           	callstack 0
   399                           
   400                           ; 1 bytes @ 0x1
   401   000002                     	ds	1
   402   000003                     ??_isdigit:
   403   000003                     ??_isspace:
   404   000003                     LCD_sendbyte@Byte:
   405                           	callstack 0
   406   000003                     ___wmul@multiplicand:
   407                           	callstack 0
   408   000003                     fputc@fp:
   409                           	callstack 0
   410                           
   411                           ; 2 bytes @ 0x2
   412   000003                     	ds	1
   413   000004                     ??_LCD_Init:
   414   000004                     ??_LCD_clear:
   415   000004                     LCD_setline@line:
   416                           	callstack 0
   417   000004                     LCD_sendstring@string:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x3
   421   000004                     	ds	1
   422   000005                     ??_fputc:
   423   000005                     _isspace$2013:
   424                           	callstack 0
   425   000005                     ___wmul@product:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0x4
   429   000005                     	ds	1
   430   000006                     
   431                           ; 1 bytes @ 0x5
   432   000006                     	ds	1
   433   000007                     ?_atoi:
   434                           	callstack 0
   435   000007                     ?___lwdiv:
   436                           	callstack 0
   437   000007                     ?___lwmod:
   438                           	callstack 0
   439   000007                     ___lwdiv@dividend:
   440                           	callstack 0
   441   000007                     ___lwmod@dividend:
   442                           	callstack 0
   443   000007                     atoi@s:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x6
   447   000007                     	ds	2
   448   000009                     ??_atoi:
   449   000009                     ___lwdiv@divisor:
   450                           	callstack 0
   451   000009                     ___lwmod@divisor:
   452                           	callstack 0
   453   000009                     ___aodiv@divisor:
   454                           	callstack 0
   455   000009                     ___aomod@divisor:
   456                           	callstack 0
   457                           
   458                           ; 8 bytes @ 0x8
   459   000009                     	ds	1
   460   00000A                     fputs@s:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0x9
   464   00000A                     	ds	1
   465   00000B                     ___lwmod@counter:
   466                           	callstack 0
   467   00000B                     ___lwdiv@quotient:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0xA
   471   00000B                     	ds	1
   472   00000C                     check_month@month:
   473                           	callstack 0
   474   00000C                     atoi@neg:
   475                           	callstack 0
   476   00000C                     fputs@fp:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0xB
   480   00000C                     	ds	1
   481   00000D                     ___lwdiv@counter:
   482                           	callstack 0
   483                           
   484                           ; 1 bytes @ 0xC
   485   00000D                     	ds	1
   486   00000E                     fputs@c:
   487                           	callstack 0
   488   00000E                     check_month@month_day:
   489                           	callstack 0
   490   00000E                     atoi@n:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0xD
   494   00000E                     	ds	1
   495   00000F                     fputs@i:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0xE
   499   00000F                     	ds	1
   500   000010                     check_month@year:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0xF
   504   000010                     	ds	1
   505   000011                     ___aodiv@counter:
   506                           	callstack 0
   507   000011                     ___aomod@counter:
   508                           	callstack 0
   509   000011                     pad@fp:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0x10
   513   000011                     	ds	1
   514   000012                     ??_check_month:
   515   000012                     ___aodiv@sign:
   516                           	callstack 0
   517   000012                     ___aomod@sign:
   518                           	callstack 0
   519                           
   520                           ; 1 bytes @ 0x11
   521   000012                     	ds	1
   522   000013                     ?_abs:
   523                           	callstack 0
   524   000013                     pad@buf:
   525                           	callstack 0
   526   000013                     abs@a:
   527                           	callstack 0
   528   000013                     ___aodiv@quotient:
   529                           	callstack 0
   530                           
   531                           ; 8 bytes @ 0x12
   532   000013                     	ds	1
   533   000014                     check_month@leap_year:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x13
   537   000014                     	ds	1
   538   000015                     ??_abs:
   539   000015                     pad@p:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0x14
   543   000015                     	ds	2
   544   000017                     ??_pad:
   545                           
   546                           ; 1 bytes @ 0x16
   547   000017                     	ds	1
   548   000018                     pad@i:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x17
   552   000018                     	ds	2
   553   00001A                     pad@w:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x19
   557   00001A                     	ds	2
   558   00001C                     dtoa@fp:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x1B
   562   00001C                     	ds	2
   563   00001E                     dtoa@d:
   564                           	callstack 0
   565                           
   566                           ; 8 bytes @ 0x1D
   567   00001E                     	ds	8
   568   000026                     ??_dtoa:
   569                           
   570                           ; 1 bytes @ 0x25
   571   000026                     	ds	8
   572   00002E                     _dtoa$1964:
   573                           	callstack 0
   574                           
   575                           ; 2 bytes @ 0x2D
   576   00002E                     	ds	2
   577   000030                     dtoa@p:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x2F
   581   000030                     	ds	2
   582   000032                     dtoa@w:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x31
   586   000032                     	ds	2
   587   000034                     dtoa@n:
   588                           	callstack 0
   589                           
   590                           ; 8 bytes @ 0x33
   591   000034                     	ds	8
   592   00003C                     dtoa@i:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0x3B
   596   00003C                     	ds	2
   597   00003E                     dtoa@s:
   598                           	callstack 0
   599                           
   600                           ; 1 bytes @ 0x3D
   601   00003E                     	ds	1
   602   00003F                     vfpfcnvrt@fp:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x3E
   606   00003F                     	ds	2
   607   000041                     vfpfcnvrt@fmt:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x40
   611   000041                     	ds	2
   612   000043                     vfpfcnvrt@ap:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0x42
   616   000043                     	ds	2
   617   000045                     ??_vfpfcnvrt:
   618                           
   619                           ; 1 bytes @ 0x44
   620   000045                     	ds	3
   621   000048                     vfpfcnvrt@convarg:
   622                           	callstack 0
   623                           
   624                           ; 8 bytes @ 0x47
   625   000048                     	ds	8
   626   000050                     vfpfcnvrt@done:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0x4F
   630   000050                     	ds	2
   631   000052                     vfpfcnvrt@cp:
   632                           	callstack 0
   633                           
   634                           ; 2 bytes @ 0x51
   635   000052                     	ds	2
   636   000054                     ?_vfprintf:
   637                           	callstack 0
   638   000054                     vfprintf@fp:
   639                           	callstack 0
   640                           
   641                           ; 2 bytes @ 0x53
   642   000054                     	ds	2
   643   000056                     vfprintf@fmt:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x55
   647   000056                     	ds	2
   648   000058                     vfprintf@ap:
   649                           	callstack 0
   650                           
   651                           ; 2 bytes @ 0x57
   652   000058                     	ds	2
   653   00005A                     vfprintf@cfmt:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x59
   657   00005A                     	ds	2
   658   00005C                     
   659                           ; 1 bytes @ 0x5B
   660 ;;
   661 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   662 ;;
   663 ;; *************** function _main *****************
   664 ;; Defined at:
   665 ;;		line 24 in file "../main.c"
   666 ;; Parameters:    Size  Location     Type
   667 ;;		None
   668 ;; Auto vars:     Size  Location     Type
   669 ;;  datestr        50   29[BANK0 ] unsigned char [50]
   670 ;;  yearstr        20   79[BANK0 ] unsigned char [20]
   671 ;;  month_day       2  113[BANK0 ] unsigned int 
   672 ;;  month           2  111[BANK0 ] unsigned int 
   673 ;;  day             2  109[BANK0 ] unsigned int 
   674 ;;  isDST           2  107[BANK0 ] unsigned int 
   675 ;;  daily_correc    2  105[BANK0 ] unsigned int 
   676 ;;  year            2  103[BANK0 ] unsigned short 
   677 ;;  changed         2  101[BANK0 ] unsigned int 
   678 ;;  OneAmToFiveA    2   99[BANK0 ] unsigned int 
   679 ;; Return value:  Size  Location     Type
   680 ;;                  1    wreg      void 
   681 ;; Registers used:
   682 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   683 ;; Tracked objects:
   684 ;;		On entry : 0/0
   685 ;;		On exit  : 0/0
   686 ;;		Unchanged: 0/0
   687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   689 ;;      Locals:         0      86       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   690 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   691 ;;      Totals:         0      90       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   692 ;;Total ram usage:       90 bytes
   693 ;; Hardware stack levels required when called: 9
   694 ;; This function calls:
   695 ;;		_Comp1_init
   696 ;;		_Interrupts_init
   697 ;;		_LCD_Init
   698 ;;		_LCD_clear
   699 ;;		_LCD_sendstring
   700 ;;		_LCD_setline
   701 ;;		_LEDarray_disp_bin
   702 ;;		_LEDarray_init
   703 ;;		_Light_init
   704 ;;		_Timer0_init
   705 ;;		___lwdiv
   706 ;;		___lwmod
   707 ;;		___wmul
   708 ;;		_check_month
   709 ;;		_sprintf
   710 ;; This function is called by:
   711 ;;		Startup code after reset
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           	psect	text0
   716   000E36                     __ptext0:
   717                           	callstack 0
   718   000E36                     _main:
   719                           	callstack 22
   720   000E36                     
   721                           ;../main.c: 27:     unsigned int day = 4;
   722   000E36  0E00               	movlw	0
   723   000E38  0100               	movlb	0	; () banked
   724   000E3A  6FCE               	movwf	(main@day+1)& (0+255),b
   725   000E3C  0E04               	movlw	4
   726   000E3E  6FCD               	movwf	main@day& (0+255),b
   727                           
   728                           ;../main.c: 28:     unsigned int month = 10;
   729   000E40  0E00               	movlw	0
   730   000E42  6FD0               	movwf	(main@month+1)& (0+255),b
   731   000E44  0E0A               	movlw	10
   732   000E46  6FCF               	movwf	main@month& (0+255),b
   733                           
   734                           ;../main.c: 29:     unsigned int month_day = 27;
   735   000E48  0E00               	movlw	0
   736   000E4A  6FD2               	movwf	(main@month_day+1)& (0+255),b
   737   000E4C  0E1B               	movlw	27
   738   000E4E  6FD1               	movwf	main@month_day& (0+255),b
   739                           
   740                           ;../main.c: 30:     unsigned short year = 2022;
   741   000E50  0E07               	movlw	7
   742   000E52  6FC8               	movwf	(main@year+1)& (0+255),b
   743   000E54  0EE6               	movlw	230
   744   000E56  6FC7               	movwf	main@year& (0+255),b
   745                           
   746                           ;../main.c: 31:     unsigned int isDST = 1;
   747   000E58  0E00               	movlw	0
   748   000E5A  6FCC               	movwf	(main@isDST+1)& (0+255),b
   749   000E5C  0E01               	movlw	1
   750   000E5E  6FCB               	movwf	main@isDST& (0+255),b
   751                           
   752                           ;../main.c: 34:     unsigned int changed = 0;
   753   000E60  0E00               	movlw	0
   754   000E62  6FC6               	movwf	(main@changed+1)& (0+255),b
   755   000E64  0E00               	movlw	0
   756   000E66  6FC5               	movwf	main@changed& (0+255),b
   757                           
   758                           ;../main.c: 35:     unsigned int OneAmToFiveAmFlag = 0;
   759   000E68  0E00               	movlw	0
   760   000E6A  6FC4               	movwf	(main@OneAmToFiveAmFlag+1)& (0+255),b
   761   000E6C  0E00               	movlw	0
   762   000E6E  6FC3               	movwf	main@OneAmToFiveAmFlag& (0+255),b
   763                           
   764                           ;../main.c: 36:     unsigned int daily_correction = 0;
   765   000E70  0E00               	movlw	0
   766   000E72  6FCA               	movwf	(main@daily_correction+1)& (0+255),b
   767   000E74  0E00               	movlw	0
   768   000E76  6FC9               	movwf	main@daily_correction& (0+255),b
   769   000E78                     
   770                           ; BSR set to: 0
   771                           ;../main.c: 39:     char datestr[50];;../main.c: 40:     char yearstr[20];;../main.c: 43
      +                          :     Timer0_init();
   772   000E78  EC04  F014         	call	_Timer0_init	;wreg free
   773                           
   774                           ;../main.c: 44:     LEDarray_init();
   775   000E7C  ECF3  F013         	call	_LEDarray_init	;wreg free
   776                           
   777                           ;../main.c: 45:     Interrupts_init();
   778   000E80  EC37  F014         	call	_Interrupts_init	;wreg free
   779                           
   780                           ;../main.c: 46:     LEDarray_init();
   781   000E84  ECF3  F013         	call	_LEDarray_init	;wreg free
   782   000E88                     
   783                           ;../main.c: 47:     Comp1_init();
   784   000E88  ECE0  F013         	call	_Comp1_init	;wreg free
   785   000E8C                     
   786                           ;../main.c: 48:     Light_init();
   787   000E8C  EC32  F014         	call	_Light_init	;wreg free
   788   000E90                     
   789                           ;../main.c: 50:     LCD_Init();
   790   000E90  ECAF  F011         	call	_LCD_Init	;wreg free
   791   000E94                     l2604:
   792                           
   793                           ;../main.c: 55:         LCD_setline(1);
   794   000E94  0E01               	movlw	1
   795   000E96  EC51  F013         	call	_LCD_setline
   796   000E9A                     
   797                           ;../main.c: 56:         sprintf(datestr, "%d-%d-%d     %d", month_day, month, year, day)
      +                          ;
   798   000E9A  0E7D               	movlw	low main@datestr
   799   000E9C  0100               	movlb	0	; () banked
   800   000E9E  6F60               	movwf	sprintf@s& (0+255),b
   801   000EA0  0E00               	movlw	high main@datestr
   802   000EA2  6F61               	movwf	(sprintf@s+1)& (0+255),b
   803   000EA4  0E13               	movlw	low STR_1
   804   000EA6  6F62               	movwf	sprintf@fmt& (0+255),b
   805   000EA8  0E0E               	movlw	high STR_1
   806   000EAA  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   807   000EAC  C0D1  F064         	movff	main@month_day,?_sprintf+4
   808   000EB0  C0D2  F065         	movff	main@month_day+1,?_sprintf+5
   809   000EB4  C0CF  F066         	movff	main@month,?_sprintf+6
   810   000EB8  C0D0  F067         	movff	main@month+1,?_sprintf+7
   811   000EBC  C0C7  F068         	movff	main@year,?_sprintf+8
   812   000EC0  C0C8  F069         	movff	main@year+1,?_sprintf+9
   813   000EC4  C0CD  F06A         	movff	main@day,?_sprintf+10
   814   000EC8  C0CE  F06B         	movff	main@day+1,?_sprintf+11
   815   000ECC  EC9A  F012         	call	_sprintf	;wreg free
   816   000ED0                     
   817                           ;../main.c: 57:         LCD_sendstring(datestr);
   818   000ED0  0E7D               	movlw	low main@datestr
   819   000ED2  6E04               	movwf	LCD_sendstring@string^0,c
   820   000ED4  0E00               	movlw	high main@datestr
   821   000ED6  6E05               	movwf	(LCD_sendstring@string+1)^0,c
   822   000ED8  EC89  F013         	call	_LCD_sendstring	;wreg free
   823   000EDC                     
   824                           ;../main.c: 58:         LCD_setline(2);
   825   000EDC  0E02               	movlw	2
   826   000EDE  EC51  F013         	call	_LCD_setline
   827   000EE2                     
   828                           ;../main.c: 59:         sprintf(yearstr, "%d:%d", hour, minute);
   829   000EE2  0EAF               	movlw	low main@yearstr
   830   000EE4  0100               	movlb	0	; () banked
   831   000EE6  6F60               	movwf	sprintf@s& (0+255),b
   832   000EE8  0E00               	movlw	high main@yearstr
   833   000EEA  6F61               	movwf	(sprintf@s+1)& (0+255),b
   834   000EEC  0E2F               	movlw	low STR_2
   835   000EEE  6F62               	movwf	sprintf@fmt& (0+255),b
   836   000EF0  0E0E               	movlw	high STR_2
   837   000EF2  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   838   000EF4  C0E7  F064         	movff	_hour,?_sprintf+4
   839   000EF8  C0E8  F065         	movff	_hour+1,?_sprintf+5
   840   000EFC  C0E5  F066         	movff	_minute,?_sprintf+6
   841   000F00  C0E6  F067         	movff	_minute+1,?_sprintf+7
   842   000F04  EC9A  F012         	call	_sprintf	;wreg free
   843   000F08                     
   844                           ;../main.c: 60:         LCD_sendstring(yearstr);
   845   000F08  0EAF               	movlw	low main@yearstr
   846   000F0A  6E04               	movwf	LCD_sendstring@string^0,c
   847   000F0C  0E00               	movlw	high main@yearstr
   848   000F0E  6E05               	movwf	(LCD_sendstring@string+1)^0,c
   849   000F10  EC89  F013         	call	_LCD_sendstring	;wreg free
   850   000F14                     
   851                           ;../main.c: 61:         LEDarray_disp_bin(hour);
   852   000F14  C0E7  F001         	movff	_hour,LEDarray_disp_bin@number
   853   000F18  C0E8  F002         	movff	_hour+1,LEDarray_disp_bin@number+1
   854   000F1C  ECF6  F010         	call	_LEDarray_disp_bin	;wreg free
   855   000F20                     
   856                           ;../main.c: 63:         if (minute == 60) {
   857   000F20  0E3C               	movlw	60
   858   000F22  0100               	movlb	0	; () banked
   859   000F24  19E5               	xorwf	_minute& (0+255),w,b
   860   000F26  11E6               	iorwf	(_minute+1)& (0+255),w,b
   861   000F28  A4D8               	btfss	status,2,c
   862   000F2A  EF99  F007         	goto	u2541
   863   000F2E  EF9B  F007         	goto	u2540
   864   000F32                     u2541:
   865   000F32  EFFE  F008         	goto	l2674
   866   000F36                     u2540:
   867   000F36                     
   868                           ; BSR set to: 0
   869                           ;../main.c: 64:             hour++;
   870   000F36  4BE7               	infsnz	_hour& (0+255),f,b
   871   000F38  2BE8               	incf	(_hour+1)& (0+255),f,b
   872   000F3A                     
   873                           ; BSR set to: 0
   874                           ;../main.c: 65:             LEDarray_disp_bin(hour);
   875   000F3A  C0E7  F001         	movff	_hour,LEDarray_disp_bin@number
   876   000F3E  C0E8  F002         	movff	_hour+1,LEDarray_disp_bin@number+1
   877   000F42  ECF6  F010         	call	_LEDarray_disp_bin	;wreg free
   878   000F46                     
   879                           ;../main.c: 66:             minute = 0;
   880   000F46  0E00               	movlw	0
   881   000F48  0100               	movlb	0	; () banked
   882   000F4A  6FE6               	movwf	(_minute+1)& (0+255),b
   883   000F4C  0E00               	movlw	0
   884   000F4E  6FE5               	movwf	_minute& (0+255),b
   885   000F50                     
   886                           ; BSR set to: 0
   887                           ;../main.c: 67:             if (hour == 24){
   888   000F50  0E18               	movlw	24
   889   000F52  19E7               	xorwf	_hour& (0+255),w,b
   890   000F54  11E8               	iorwf	(_hour+1)& (0+255),w,b
   891   000F56  A4D8               	btfss	status,2,c
   892   000F58  EFB0  F007         	goto	u2551
   893   000F5C  EFB2  F007         	goto	u2550
   894   000F60                     u2551:
   895   000F60  EFF8  F008         	goto	l2672
   896   000F64                     u2550:
   897   000F64                     
   898                           ; BSR set to: 0
   899                           ;../main.c: 68:                 hour = 0;
   900   000F64  0E00               	movlw	0
   901   000F66  6FE8               	movwf	(_hour+1)& (0+255),b
   902   000F68  0E00               	movlw	0
   903   000F6A  6FE7               	movwf	_hour& (0+255),b
   904   000F6C                     
   905                           ; BSR set to: 0
   906                           ;../main.c: 71:                 if (daylight_end_min >= daylight_start_min) {
   907   000F6C  51DD               	movf	_daylight_start_min& (0+255),w,b
   908   000F6E  5DD9               	subwf	_daylight_end_min& (0+255),w,b
   909   000F70  51DE               	movf	(_daylight_start_min+1)& (0+255),w,b
   910   000F72  59DA               	subwfb	(_daylight_end_min+1)& (0+255),w,b
   911   000F74  A0D8               	btfss	status,0,c
   912   000F76  EFBF  F007         	goto	u2561
   913   000F7A  EFC1  F007         	goto	u2560
   914   000F7E                     u2561:
   915   000F7E  EFCF  F007         	goto	l2634
   916   000F82                     u2560:
   917   000F82                     
   918                           ; BSR set to: 0
   919                           ;../main.c: 72:                     current_day_min = daylight_end_min - daylight_start_
      +                          min;
   920   000F82  51DD               	movf	_daylight_start_min& (0+255),w,b
   921   000F84  5DD9               	subwf	_daylight_end_min& (0+255),w,b
   922   000F86  6FE1               	movwf	_current_day_min& (0+255),b
   923   000F88  51DE               	movf	(_daylight_start_min+1)& (0+255),w,b
   924   000F8A  59DA               	subwfb	(_daylight_end_min+1)& (0+255),w,b
   925   000F8C  6FE2               	movwf	(_current_day_min+1)& (0+255),b
   926                           
   927                           ;../main.c: 73:                     current_day_hour = daylight_end_hour - daylight_star
      +                          t_hour;}
   928   000F8E  51DF               	movf	_daylight_start_hour& (0+255),w,b
   929   000F90  5DDB               	subwf	_daylight_end_hour& (0+255),w,b
   930   000F92  6FE3               	movwf	_current_day_hour& (0+255),b
   931   000F94  51E0               	movf	(_daylight_start_hour+1)& (0+255),w,b
   932   000F96  59DC               	subwfb	(_daylight_end_hour+1)& (0+255),w,b
   933   000F98  6FE4               	movwf	(_current_day_hour+1)& (0+255),b
   934   000F9A  EFE7  F007         	goto	l2636
   935   000F9E                     l2634:
   936                           
   937                           ; BSR set to: 0
   938                           ;../main.c: 75:                     current_day_min = daylight_end_min + (60-daylight_st
      +                          art_min);
   939   000F9E  51DD               	movf	_daylight_start_min& (0+255),w,b
   940   000FA0  5DD9               	subwf	_daylight_end_min& (0+255),w,b
   941   000FA2  6F79               	movwf	??_main& (0+255),b
   942   000FA4  51DE               	movf	(_daylight_start_min+1)& (0+255),w,b
   943   000FA6  59DA               	subwfb	(_daylight_end_min+1)& (0+255),w,b
   944   000FA8  6F7A               	movwf	(??_main+1)& (0+255),b
   945   000FAA  0E3C               	movlw	60
   946   000FAC  2579               	addwf	??_main& (0+255),w,b
   947   000FAE  6FE1               	movwf	_current_day_min& (0+255),b
   948   000FB0  0E00               	movlw	0
   949   000FB2  217A               	addwfc	(??_main+1)& (0+255),w,b
   950   000FB4  6FE2               	movwf	(_current_day_min+1)& (0+255),b
   951                           
   952                           ;../main.c: 76:                     current_day_hour = daylight_end_hour - daylight_star
      +                          t_hour - 1;}
   953   000FB6  51DF               	movf	_daylight_start_hour& (0+255),w,b
   954   000FB8  5DDB               	subwf	_daylight_end_hour& (0+255),w,b
   955   000FBA  6F79               	movwf	??_main& (0+255),b
   956   000FBC  51E0               	movf	(_daylight_start_hour+1)& (0+255),w,b
   957   000FBE  59DC               	subwfb	(_daylight_end_hour+1)& (0+255),w,b
   958   000FC0  6F7A               	movwf	(??_main+1)& (0+255),b
   959   000FC2  0EFF               	movlw	255
   960   000FC4  2579               	addwf	??_main& (0+255),w,b
   961   000FC6  6FE3               	movwf	_current_day_hour& (0+255),b
   962   000FC8  0EFF               	movlw	255
   963   000FCA  217A               	addwfc	(??_main+1)& (0+255),w,b
   964   000FCC  6FE4               	movwf	(_current_day_hour+1)& (0+255),b
   965   000FCE                     l2636:
   966                           
   967                           ; BSR set to: 0
   968                           ;../main.c: 79:                 calculated_solar_noon_hour = (daylight_start_hour*60 + d
      +                          aylight_start_min + (current_day_hour*60 + current_day_min)/2)/60;
   969   000FCE  C0E3  F001         	movff	_current_day_hour,___wmul@multiplier
   970   000FD2  C0E4  F002         	movff	_current_day_hour+1,___wmul@multiplier+1
   971   000FD6  0E00               	movlw	0
   972   000FD8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   973   000FDA  0E3C               	movlw	60
   974   000FDC  6E03               	movwf	___wmul@multiplicand^0,c
   975   000FDE  ECCD  F013         	call	___wmul	;wreg free
   976   000FE2  0100               	movlb	0	; () banked
   977   000FE4  51E1               	movf	_current_day_min& (0+255),w,b
   978   000FE6  2601               	addwf	?___wmul^0,f,c
   979   000FE8  51E2               	movf	(_current_day_min+1)& (0+255),w,b
   980   000FEA  2202               	addwfc	(?___wmul+1)^0,f,c
   981   000FEC  90D8               	bcf	status,0,c
   982   000FEE  3002               	rrcf	(?___wmul+1)^0,w,c
   983   000FF0  6F7A               	movwf	(??_main+1)& (0+255),b
   984   000FF2  3001               	rrcf	?___wmul^0,w,c
   985   000FF4  6F79               	movwf	??_main& (0+255),b
   986   000FF6  C0DF  F001         	movff	_daylight_start_hour,___wmul@multiplier
   987   000FFA  C0E0  F002         	movff	_daylight_start_hour+1,___wmul@multiplier+1
   988   000FFE  0E00               	movlw	0
   989   001000  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   990   001002  0E3C               	movlw	60
   991   001004  6E03               	movwf	___wmul@multiplicand^0,c
   992   001006  ECCD  F013         	call	___wmul	;wreg free
   993   00100A  0100               	movlb	0	; () banked
   994   00100C  5179               	movf	??_main& (0+255),w,b
   995   00100E  2401               	addwf	?___wmul^0,w,c
   996   001010  6F7B               	movwf	(??_main+2)& (0+255),b
   997   001012  517A               	movf	(??_main+1)& (0+255),w,b
   998   001014  2002               	addwfc	(?___wmul+1)^0,w,c
   999   001016  6F7C               	movwf	(??_main+3)& (0+255),b
  1000   001018  51DD               	movf	_daylight_start_min& (0+255),w,b
  1001   00101A  257B               	addwf	(??_main+2)& (0+255),w,b
  1002   00101C  6E07               	movwf	___lwdiv@dividend^0,c
  1003   00101E  51DE               	movf	(_daylight_start_min+1)& (0+255),w,b
  1004   001020  217C               	addwfc	(??_main+3)& (0+255),w,b
  1005   001022  6E08               	movwf	(___lwdiv@dividend+1)^0,c
  1006   001024  0E00               	movlw	0
  1007   001026  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  1008   001028  0E3C               	movlw	60
  1009   00102A  6E09               	movwf	___lwdiv@divisor^0,c
  1010   00102C  ECFA  F011         	call	___lwdiv	;wreg free
  1011   001030  C007  F0D7         	movff	?___lwdiv,_calculated_solar_noon_hour
  1012   001034  C008  F0D8         	movff	?___lwdiv+1,_calculated_solar_noon_hour+1
  1013   001038                     
  1014                           ;../main.c: 80:                 calculated_solar_noon_min = (daylight_start_hour*60 + da
      +                          ylight_start_min + (current_day_hour*60 + current_day_min)/2)%60;
  1015   001038  C0E3  F001         	movff	_current_day_hour,___wmul@multiplier
  1016   00103C  C0E4  F002         	movff	_current_day_hour+1,___wmul@multiplier+1
  1017   001040  0E00               	movlw	0
  1018   001042  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1019   001044  0E3C               	movlw	60
  1020   001046  6E03               	movwf	___wmul@multiplicand^0,c
  1021   001048  ECCD  F013         	call	___wmul	;wreg free
  1022   00104C  0100               	movlb	0	; () banked
  1023   00104E  51E1               	movf	_current_day_min& (0+255),w,b
  1024   001050  2601               	addwf	?___wmul^0,f,c
  1025   001052  51E2               	movf	(_current_day_min+1)& (0+255),w,b
  1026   001054  2202               	addwfc	(?___wmul+1)^0,f,c
  1027   001056  90D8               	bcf	status,0,c
  1028   001058  3002               	rrcf	(?___wmul+1)^0,w,c
  1029   00105A  6F7A               	movwf	(??_main+1)& (0+255),b
  1030   00105C  3001               	rrcf	?___wmul^0,w,c
  1031   00105E  6F79               	movwf	??_main& (0+255),b
  1032   001060  C0DF  F001         	movff	_daylight_start_hour,___wmul@multiplier
  1033   001064  C0E0  F002         	movff	_daylight_start_hour+1,___wmul@multiplier+1
  1034   001068  0E00               	movlw	0
  1035   00106A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1036   00106C  0E3C               	movlw	60
  1037   00106E  6E03               	movwf	___wmul@multiplicand^0,c
  1038   001070  ECCD  F013         	call	___wmul	;wreg free
  1039   001074  0100               	movlb	0	; () banked
  1040   001076  5179               	movf	??_main& (0+255),w,b
  1041   001078  2401               	addwf	?___wmul^0,w,c
  1042   00107A  6F7B               	movwf	(??_main+2)& (0+255),b
  1043   00107C  517A               	movf	(??_main+1)& (0+255),w,b
  1044   00107E  2002               	addwfc	(?___wmul+1)^0,w,c
  1045   001080  6F7C               	movwf	(??_main+3)& (0+255),b
  1046   001082  51DD               	movf	_daylight_start_min& (0+255),w,b
  1047   001084  257B               	addwf	(??_main+2)& (0+255),w,b
  1048   001086  6E07               	movwf	___lwmod@dividend^0,c
  1049   001088  51DE               	movf	(_daylight_start_min+1)& (0+255),w,b
  1050   00108A  217C               	addwfc	(??_main+3)& (0+255),w,b
  1051   00108C  6E08               	movwf	(___lwmod@dividend+1)^0,c
  1052   00108E  0E00               	movlw	0
  1053   001090  6E0A               	movwf	(___lwmod@divisor+1)^0,c
  1054   001092  0E3C               	movlw	60
  1055   001094  6E09               	movwf	___lwmod@divisor^0,c
  1056   001096  EC68  F012         	call	___lwmod	;wreg free
  1057   00109A  C007  F0D5         	movff	?___lwmod,_calculated_solar_noon_min
  1058   00109E  C008  F0D6         	movff	?___lwmod+1,_calculated_solar_noon_min+1
  1059                           
  1060                           ;../main.c: 83:                 if (calculated_solar_noon_hour >= (12 + isDST) && calcul
      +                          ated_solar_noon_min != 0 && daily_correction == 0) {
  1061   0010A2  0E0C               	movlw	12
  1062   0010A4  0100               	movlb	0	; () banked
  1063   0010A6  25CB               	addwf	main@isDST& (0+255),w,b
  1064   0010A8  6F79               	movwf	??_main& (0+255),b
  1065   0010AA  0E00               	movlw	0
  1066   0010AC  21CC               	addwfc	(main@isDST+1)& (0+255),w,b
  1067   0010AE  6F7A               	movwf	(??_main+1)& (0+255),b
  1068   0010B0  5179               	movf	??_main& (0+255),w,b
  1069   0010B2  5DD7               	subwf	_calculated_solar_noon_hour& (0+255),w,b
  1070   0010B4  517A               	movf	(??_main+1)& (0+255),w,b
  1071   0010B6  59D8               	subwfb	(_calculated_solar_noon_hour+1)& (0+255),w,b
  1072   0010B8  A0D8               	btfss	status,0,c
  1073   0010BA  EF61  F008         	goto	u2571
  1074   0010BE  EF63  F008         	goto	u2570
  1075   0010C2                     u2571:
  1076   0010C2  EF8F  F008         	goto	l2650
  1077   0010C6                     u2570:
  1078   0010C6                     
  1079                           ; BSR set to: 0
  1080   0010C6  51D5               	movf	_calculated_solar_noon_min& (0+255),w,b
  1081   0010C8  11D6               	iorwf	(_calculated_solar_noon_min+1)& (0+255),w,b
  1082   0010CA  B4D8               	btfsc	status,2,c
  1083   0010CC  EF6A  F008         	goto	u2581
  1084   0010D0  EF6C  F008         	goto	u2580
  1085   0010D4                     u2581:
  1086   0010D4  EF8F  F008         	goto	l2650
  1087   0010D8                     u2580:
  1088   0010D8                     
  1089                           ; BSR set to: 0
  1090   0010D8  51C9               	movf	main@daily_correction& (0+255),w,b
  1091   0010DA  11CA               	iorwf	(main@daily_correction+1)& (0+255),w,b
  1092   0010DC  A4D8               	btfss	status,2,c
  1093   0010DE  EF73  F008         	goto	u2591
  1094   0010E2  EF75  F008         	goto	u2590
  1095   0010E6                     u2591:
  1096   0010E6  EF8F  F008         	goto	l2650
  1097   0010EA                     u2590:
  1098   0010EA                     
  1099                           ; BSR set to: 0
  1100                           ;../main.c: 84:                     daily_correction = 1;
  1101   0010EA  0E00               	movlw	0
  1102   0010EC  6FCA               	movwf	(main@daily_correction+1)& (0+255),b
  1103   0010EE  0E01               	movlw	1
  1104   0010F0  6FC9               	movwf	main@daily_correction& (0+255),b
  1105   0010F2                     
  1106                           ; BSR set to: 0
  1107                           ;../main.c: 86:                     hour = 23 - (calculated_solar_noon_hour - 12 - isDST
      +                          );
  1108   0010F2  51D7               	movf	_calculated_solar_noon_hour& (0+255),w,b
  1109   0010F4  5DCB               	subwf	main@isDST& (0+255),w,b
  1110   0010F6  6F79               	movwf	??_main& (0+255),b
  1111   0010F8  51D8               	movf	(_calculated_solar_noon_hour+1)& (0+255),w,b
  1112   0010FA  59CC               	subwfb	(main@isDST+1)& (0+255),w,b
  1113   0010FC  6F7A               	movwf	(??_main+1)& (0+255),b
  1114   0010FE  0E23               	movlw	35
  1115   001100  2579               	addwf	??_main& (0+255),w,b
  1116   001102  6FE7               	movwf	_hour& (0+255),b
  1117   001104  0E00               	movlw	0
  1118   001106  217A               	addwfc	(??_main+1)& (0+255),w,b
  1119   001108  6FE8               	movwf	(_hour+1)& (0+255),b
  1120   00110A                     
  1121                           ; BSR set to: 0
  1122                           ;../main.c: 87:                     minute = 60 - calculated_solar_noon_min;
  1123   00110A  51D5               	movf	_calculated_solar_noon_min& (0+255),w,b
  1124   00110C  083C               	sublw	60
  1125   00110E  6FE5               	movwf	_minute& (0+255),b
  1126   001110  51D6               	movf	(_calculated_solar_noon_min+1)& (0+255),w,b
  1127   001112  A0D8               	btfss	status,0,c
  1128   001114  2AE8               	incf	wreg,f,c
  1129   001116  0800               	sublw	0
  1130   001118  6FE6               	movwf	(_minute+1)& (0+255),b
  1131                           
  1132                           ;../main.c: 88:                 }
  1133   00111A  EFCC  F008         	goto	l2660
  1134   00111E                     l2650:
  1135                           
  1136                           ; BSR set to: 0
  1137   00111E  0E0C               	movlw	12
  1138   001120  25CB               	addwf	main@isDST& (0+255),w,b
  1139   001122  6F79               	movwf	??_main& (0+255),b
  1140   001124  0E00               	movlw	0
  1141   001126  21CC               	addwfc	(main@isDST+1)& (0+255),w,b
  1142   001128  6F7A               	movwf	(??_main+1)& (0+255),b
  1143   00112A  5179               	movf	??_main& (0+255),w,b
  1144   00112C  5DD7               	subwf	_calculated_solar_noon_hour& (0+255),w,b
  1145   00112E  517A               	movf	(??_main+1)& (0+255),w,b
  1146   001130  59D8               	subwfb	(_calculated_solar_noon_hour+1)& (0+255),w,b
  1147   001132  B0D8               	btfsc	status,0,c
  1148   001134  EF9E  F008         	goto	u2601
  1149   001138  EFA0  F008         	goto	u2600
  1150   00113C                     u2601:
  1151   00113C  EFB6  F008         	goto	l2654
  1152   001140                     u2600:
  1153   001140                     
  1154                           ; BSR set to: 0
  1155                           ;../main.c: 90:                    hour = 11 + isDST - calculated_solar_noon_hour;
  1156   001140  51D7               	movf	_calculated_solar_noon_hour& (0+255),w,b
  1157   001142  5DCB               	subwf	main@isDST& (0+255),w,b
  1158   001144  6F79               	movwf	??_main& (0+255),b
  1159   001146  51D8               	movf	(_calculated_solar_noon_hour+1)& (0+255),w,b
  1160   001148  59CC               	subwfb	(main@isDST+1)& (0+255),w,b
  1161   00114A  6F7A               	movwf	(??_main+1)& (0+255),b
  1162   00114C  0E0B               	movlw	11
  1163   00114E  2579               	addwf	??_main& (0+255),w,b
  1164   001150  6FE7               	movwf	_hour& (0+255),b
  1165   001152  0E00               	movlw	0
  1166   001154  217A               	addwfc	(??_main+1)& (0+255),w,b
  1167   001156  6FE8               	movwf	(_hour+1)& (0+255),b
  1168                           
  1169                           ;../main.c: 91:                    minute = 60 - calculated_solar_noon_min;
  1170   001158  51D5               	movf	_calculated_solar_noon_min& (0+255),w,b
  1171   00115A  083C               	sublw	60
  1172   00115C  6FE5               	movwf	_minute& (0+255),b
  1173   00115E  51D6               	movf	(_calculated_solar_noon_min+1)& (0+255),w,b
  1174   001160  A0D8               	btfss	status,0,c
  1175   001162  2AE8               	incf	wreg,f,c
  1176   001164  0800               	sublw	0
  1177   001166  6FE6               	movwf	(_minute+1)& (0+255),b
  1178                           
  1179                           ;../main.c: 92:                 }
  1180   001168  EFCC  F008         	goto	l2660
  1181   00116C                     l2654:
  1182                           
  1183                           ; BSR set to: 0
  1184   00116C  51E7               	movf	_hour& (0+255),w,b
  1185   00116E  11E8               	iorwf	(_hour+1)& (0+255),w,b
  1186   001170  A4D8               	btfss	status,2,c
  1187   001172  EFBD  F008         	goto	u2611
  1188   001176  EFBF  F008         	goto	u2610
  1189   00117A                     u2611:
  1190   00117A  EFCC  F008         	goto	l2660
  1191   00117E                     u2610:
  1192   00117E                     
  1193                           ; BSR set to: 0
  1194   00117E  05C9               	decf	main@daily_correction& (0+255),w,b
  1195   001180  11CA               	iorwf	(main@daily_correction+1)& (0+255),w,b
  1196   001182  A4D8               	btfss	status,2,c
  1197   001184  EFC6  F008         	goto	u2621
  1198   001188  EFC8  F008         	goto	u2620
  1199   00118C                     u2621:
  1200   00118C  EFCC  F008         	goto	l2660
  1201   001190                     u2620:
  1202   001190                     
  1203                           ; BSR set to: 0
  1204   001190  0E00               	movlw	0
  1205   001192  6FCA               	movwf	(main@daily_correction+1)& (0+255),b
  1206   001194  0E00               	movlw	0
  1207   001196  6FC9               	movwf	main@daily_correction& (0+255),b
  1208   001198                     l2660:
  1209                           
  1210                           ; BSR set to: 0
  1211                           ;../main.c: 96:                 if (daily_correction != 1){
  1212   001198  05C9               	decf	main@daily_correction& (0+255),w,b
  1213   00119A  11CA               	iorwf	(main@daily_correction+1)& (0+255),w,b
  1214   00119C  B4D8               	btfsc	status,2,c
  1215   00119E  EFD3  F008         	goto	u2631
  1216   0011A2  EFD5  F008         	goto	u2630
  1217   0011A6                     u2631:
  1218   0011A6  EFF6  F008         	goto	l2670
  1219   0011AA                     u2630:
  1220   0011AA                     
  1221                           ; BSR set to: 0
  1222                           ;../main.c: 97:                 day++;
  1223   0011AA  4BCD               	infsnz	main@day& (0+255),f,b
  1224   0011AC  2BCE               	incf	(main@day+1)& (0+255),f,b
  1225                           
  1226                           ;../main.c: 98:                 month_day++;
  1227   0011AE  4BD1               	infsnz	main@month_day& (0+255),f,b
  1228   0011B0  2BD2               	incf	(main@month_day+1)& (0+255),f,b
  1229   0011B2                     
  1230                           ; BSR set to: 0
  1231                           ;../main.c: 99:                 check_month(&month, &month_day, &year);
  1232   0011B2  0ECF               	movlw	low main@month
  1233   0011B4  6E0C               	movwf	check_month@month^0,c
  1234   0011B6  0E00               	movlw	high main@month
  1235   0011B8  6E0D               	movwf	(check_month@month+1)^0,c
  1236   0011BA  0ED1               	movlw	low main@month_day
  1237   0011BC  6E0E               	movwf	check_month@month_day^0,c
  1238   0011BE  0E00               	movlw	high main@month_day
  1239   0011C0  6E0F               	movwf	(check_month@month_day+1)^0,c
  1240   0011C2  0EC7               	movlw	low main@year
  1241   0011C4  6E10               	movwf	check_month@year^0,c
  1242   0011C6  0E00               	movlw	high main@year
  1243   0011C8  6E11               	movwf	(check_month@year+1)^0,c
  1244   0011CA  EC1A  F00A         	call	_check_month	;wreg free
  1245   0011CE                     
  1246                           ;../main.c: 100:                 if (day == 7){day = 0;}
  1247   0011CE  0E07               	movlw	7
  1248   0011D0  0100               	movlb	0	; () banked
  1249   0011D2  19CD               	xorwf	main@day& (0+255),w,b
  1250   0011D4  11CE               	iorwf	(main@day+1)& (0+255),w,b
  1251   0011D6  A4D8               	btfss	status,2,c
  1252   0011D8  EFF0  F008         	goto	u2641
  1253   0011DC  EFF2  F008         	goto	u2640
  1254   0011E0                     u2641:
  1255   0011E0  EFF6  F008         	goto	l2670
  1256   0011E4                     u2640:
  1257   0011E4                     
  1258                           ; BSR set to: 0
  1259   0011E4  0E00               	movlw	0
  1260   0011E6  6FCE               	movwf	(main@day+1)& (0+255),b
  1261   0011E8  0E00               	movlw	0
  1262   0011EA  6FCD               	movwf	main@day& (0+255),b
  1263   0011EC                     l2670:
  1264                           
  1265                           ; BSR set to: 0
  1266                           ;../main.c: 102:                 LCD_clear();
  1267   0011EC  EC14  F014         	call	_LCD_clear	;wreg free
  1268   0011F0                     l2672:
  1269                           
  1270                           ;../main.c: 105:             LEDarray_disp_bin(hour);
  1271   0011F0  C0E7  F001         	movff	_hour,LEDarray_disp_bin@number
  1272   0011F4  C0E8  F002         	movff	_hour+1,LEDarray_disp_bin@number+1
  1273   0011F8  ECF6  F010         	call	_LEDarray_disp_bin	;wreg free
  1274   0011FC                     l2674:
  1275                           
  1276                           ;../main.c: 108:         if (hour >= 1 && hour < 5){
  1277   0011FC  0100               	movlb	0	; () banked
  1278   0011FE  51E7               	movf	_hour& (0+255),w,b
  1279   001200  11E8               	iorwf	(_hour+1)& (0+255),w,b
  1280   001202  B4D8               	btfsc	status,2,c
  1281   001204  EF06  F009         	goto	u2651
  1282   001208  EF08  F009         	goto	u2650
  1283   00120C                     u2651:
  1284   00120C  EF18  F009         	goto	l2682
  1285   001210                     u2650:
  1286   001210                     
  1287                           ; BSR set to: 0
  1288   001210  51E8               	movf	(_hour+1)& (0+255),w,b
  1289   001212  E107               	bnz	u2661
  1290   001214  0E05               	movlw	5
  1291   001216  5DE7               	subwf	_hour& (0+255),w,b
  1292   001218  B0D8               	btfsc	status,0,c
  1293   00121A  EF11  F009         	goto	u2661
  1294   00121E  EF13  F009         	goto	u2660
  1295   001222                     u2661:
  1296   001222  EF18  F009         	goto	l2682
  1297   001226                     u2660:
  1298   001226                     
  1299                           ; BSR set to: 0
  1300                           ;../main.c: 109:             LATHbits.LATH3=0;
  1301   001226  9680               	bcf	128,3,c	;volatile
  1302   001228                     
  1303                           ; BSR set to: 0
  1304                           ;../main.c: 110:             OneAmToFiveAmFlag = 1;}
  1305   001228  0E00               	movlw	0
  1306   00122A  6FC4               	movwf	(main@OneAmToFiveAmFlag+1)& (0+255),b
  1307   00122C  0E01               	movlw	1
  1308   00122E  6FC3               	movwf	main@OneAmToFiveAmFlag& (0+255),b
  1309   001230                     l2682:
  1310                           
  1311                           ; BSR set to: 0
  1312                           ;../main.c: 111:         if (hour == 5 && OneAmToFiveAmFlag == 1 && CM1CON0bits.OUT == 1
      +                          ){
  1313   001230  0E05               	movlw	5
  1314   001232  19E7               	xorwf	_hour& (0+255),w,b
  1315   001234  11E8               	iorwf	(_hour+1)& (0+255),w,b
  1316   001236  A4D8               	btfss	status,2,c
  1317   001238  EF20  F009         	goto	u2671
  1318   00123C  EF22  F009         	goto	u2670
  1319   001240                     u2671:
  1320   001240  EF39  F009         	goto	l2692
  1321   001244                     u2670:
  1322   001244                     
  1323                           ; BSR set to: 0
  1324   001244  05C3               	decf	main@OneAmToFiveAmFlag& (0+255),w,b
  1325   001246  11C4               	iorwf	(main@OneAmToFiveAmFlag+1)& (0+255),w,b
  1326   001248  A4D8               	btfss	status,2,c
  1327   00124A  EF29  F009         	goto	u2681
  1328   00124E  EF2B  F009         	goto	u2680
  1329   001252                     u2681:
  1330   001252  EF39  F009         	goto	l2692
  1331   001256                     u2680:
  1332   001256                     
  1333                           ; BSR set to: 0
  1334   001256  010E               	movlb	14	; () banked
  1335   001258  ADD0               	btfss	208,6,b	;volatile
  1336   00125A  EF31  F009         	goto	u2691
  1337   00125E  EF33  F009         	goto	u2690
  1338   001262                     u2691:
  1339   001262  EF39  F009         	goto	l2692
  1340   001266                     u2690:
  1341   001266                     
  1342                           ; BSR set to: 14
  1343                           ;../main.c: 112:                 LATHbits.LATH3=1;
  1344   001266  8680               	bsf	128,3,c	;volatile
  1345   001268                     
  1346                           ; BSR set to: 14
  1347                           ;../main.c: 113:                 OneAmToFiveAmFlag = 0;}
  1348   001268  0E00               	movlw	0
  1349   00126A  0100               	movlb	0	; () banked
  1350   00126C  6FC4               	movwf	(main@OneAmToFiveAmFlag+1)& (0+255),b
  1351   00126E  0E00               	movlw	0
  1352   001270  6FC3               	movwf	main@OneAmToFiveAmFlag& (0+255),b
  1353   001272                     l2692:
  1354                           
  1355                           ;../main.c: 115:         if (day == 0 && month == 3 && hour == 1 && minute == 0 && month
      +                          _day >=25 && month_day <= 31) {hour++; isDST = 1;}
  1356   001272  0100               	movlb	0	; () banked
  1357   001274  51CD               	movf	main@day& (0+255),w,b
  1358   001276  11CE               	iorwf	(main@day+1)& (0+255),w,b
  1359   001278  A4D8               	btfss	status,2,c
  1360   00127A  EF41  F009         	goto	u2701
  1361   00127E  EF43  F009         	goto	u2700
  1362   001282                     u2701:
  1363   001282  EF7B  F009         	goto	l2708
  1364   001286                     u2700:
  1365   001286                     
  1366                           ; BSR set to: 0
  1367   001286  0E03               	movlw	3
  1368   001288  19CF               	xorwf	main@month& (0+255),w,b
  1369   00128A  11D0               	iorwf	(main@month+1)& (0+255),w,b
  1370   00128C  A4D8               	btfss	status,2,c
  1371   00128E  EF4B  F009         	goto	u2711
  1372   001292  EF4D  F009         	goto	u2710
  1373   001296                     u2711:
  1374   001296  EF7B  F009         	goto	l2708
  1375   00129A                     u2710:
  1376   00129A                     
  1377                           ; BSR set to: 0
  1378   00129A  05E7               	decf	_hour& (0+255),w,b
  1379   00129C  11E8               	iorwf	(_hour+1)& (0+255),w,b
  1380   00129E  A4D8               	btfss	status,2,c
  1381   0012A0  EF54  F009         	goto	u2721
  1382   0012A4  EF56  F009         	goto	u2720
  1383   0012A8                     u2721:
  1384   0012A8  EF7B  F009         	goto	l2708
  1385   0012AC                     u2720:
  1386   0012AC                     
  1387                           ; BSR set to: 0
  1388   0012AC  51E5               	movf	_minute& (0+255),w,b
  1389   0012AE  11E6               	iorwf	(_minute+1)& (0+255),w,b
  1390   0012B0  A4D8               	btfss	status,2,c
  1391   0012B2  EF5D  F009         	goto	u2731
  1392   0012B6  EF5F  F009         	goto	u2730
  1393   0012BA                     u2731:
  1394   0012BA  EF7B  F009         	goto	l2708
  1395   0012BE                     u2730:
  1396   0012BE                     
  1397                           ; BSR set to: 0
  1398   0012BE  51D2               	movf	(main@month_day+1)& (0+255),w,b
  1399   0012C0  E109               	bnz	u2740
  1400   0012C2  0E19               	movlw	25
  1401   0012C4  5DD1               	subwf	main@month_day& (0+255),w,b
  1402   0012C6  A0D8               	btfss	status,0,c
  1403   0012C8  EF68  F009         	goto	u2741
  1404   0012CC  EF6A  F009         	goto	u2740
  1405   0012D0                     u2741:
  1406   0012D0  EF7B  F009         	goto	l2708
  1407   0012D4                     u2740:
  1408   0012D4                     
  1409                           ; BSR set to: 0
  1410   0012D4  51D2               	movf	(main@month_day+1)& (0+255),w,b
  1411   0012D6  E107               	bnz	u2751
  1412   0012D8  0E20               	movlw	32
  1413   0012DA  5DD1               	subwf	main@month_day& (0+255),w,b
  1414   0012DC  B0D8               	btfsc	status,0,c
  1415   0012DE  EF73  F009         	goto	u2751
  1416   0012E2  EF75  F009         	goto	u2750
  1417   0012E6                     u2751:
  1418   0012E6  EF7B  F009         	goto	l2708
  1419   0012EA                     u2750:
  1420   0012EA                     
  1421                           ; BSR set to: 0
  1422   0012EA  4BE7               	infsnz	_hour& (0+255),f,b
  1423   0012EC  2BE8               	incf	(_hour+1)& (0+255),f,b
  1424   0012EE                     
  1425                           ; BSR set to: 0
  1426   0012EE  0E00               	movlw	0
  1427   0012F0  6FCC               	movwf	(main@isDST+1)& (0+255),b
  1428   0012F2  0E01               	movlw	1
  1429   0012F4  6FCB               	movwf	main@isDST& (0+255),b
  1430   0012F6                     l2708:
  1431                           
  1432                           ; BSR set to: 0
  1433                           ;../main.c: 117:         if (day == 0 && month == 10 && hour == 2 && minute == 0 && mont
      +                          h_day >=25 && month_day <= 31 && changed == 0) {
  1434   0012F6  51CD               	movf	main@day& (0+255),w,b
  1435   0012F8  11CE               	iorwf	(main@day+1)& (0+255),w,b
  1436   0012FA  A4D8               	btfss	status,2,c
  1437   0012FC  EF82  F009         	goto	u2761
  1438   001300  EF84  F009         	goto	u2760
  1439   001304                     u2761:
  1440   001304  EFCD  F009         	goto	l2728
  1441   001308                     u2760:
  1442   001308                     
  1443                           ; BSR set to: 0
  1444   001308  0E0A               	movlw	10
  1445   00130A  19CF               	xorwf	main@month& (0+255),w,b
  1446   00130C  11D0               	iorwf	(main@month+1)& (0+255),w,b
  1447   00130E  A4D8               	btfss	status,2,c
  1448   001310  EF8C  F009         	goto	u2771
  1449   001314  EF8E  F009         	goto	u2770
  1450   001318                     u2771:
  1451   001318  EFCD  F009         	goto	l2728
  1452   00131C                     u2770:
  1453   00131C                     
  1454                           ; BSR set to: 0
  1455   00131C  0E02               	movlw	2
  1456   00131E  19E7               	xorwf	_hour& (0+255),w,b
  1457   001320  11E8               	iorwf	(_hour+1)& (0+255),w,b
  1458   001322  A4D8               	btfss	status,2,c
  1459   001324  EF96  F009         	goto	u2781
  1460   001328  EF98  F009         	goto	u2780
  1461   00132C                     u2781:
  1462   00132C  EFCD  F009         	goto	l2728
  1463   001330                     u2780:
  1464   001330                     
  1465                           ; BSR set to: 0
  1466   001330  51E5               	movf	_minute& (0+255),w,b
  1467   001332  11E6               	iorwf	(_minute+1)& (0+255),w,b
  1468   001334  A4D8               	btfss	status,2,c
  1469   001336  EF9F  F009         	goto	u2791
  1470   00133A  EFA1  F009         	goto	u2790
  1471   00133E                     u2791:
  1472   00133E  EFCD  F009         	goto	l2728
  1473   001342                     u2790:
  1474   001342                     
  1475                           ; BSR set to: 0
  1476   001342  51D2               	movf	(main@month_day+1)& (0+255),w,b
  1477   001344  E109               	bnz	u2800
  1478   001346  0E19               	movlw	25
  1479   001348  5DD1               	subwf	main@month_day& (0+255),w,b
  1480   00134A  A0D8               	btfss	status,0,c
  1481   00134C  EFAA  F009         	goto	u2801
  1482   001350  EFAC  F009         	goto	u2800
  1483   001354                     u2801:
  1484   001354  EFCD  F009         	goto	l2728
  1485   001358                     u2800:
  1486   001358                     
  1487                           ; BSR set to: 0
  1488   001358  51D2               	movf	(main@month_day+1)& (0+255),w,b
  1489   00135A  E107               	bnz	u2811
  1490   00135C  0E20               	movlw	32
  1491   00135E  5DD1               	subwf	main@month_day& (0+255),w,b
  1492   001360  B0D8               	btfsc	status,0,c
  1493   001362  EFB5  F009         	goto	u2811
  1494   001366  EFB7  F009         	goto	u2810
  1495   00136A                     u2811:
  1496   00136A  EFCD  F009         	goto	l2728
  1497   00136E                     u2810:
  1498   00136E                     
  1499                           ; BSR set to: 0
  1500   00136E  51C5               	movf	main@changed& (0+255),w,b
  1501   001370  11C6               	iorwf	(main@changed+1)& (0+255),w,b
  1502   001372  A4D8               	btfss	status,2,c
  1503   001374  EFBE  F009         	goto	u2821
  1504   001378  EFC0  F009         	goto	u2820
  1505   00137C                     u2821:
  1506   00137C  EFCD  F009         	goto	l2728
  1507   001380                     u2820:
  1508   001380                     
  1509                           ; BSR set to: 0
  1510                           ;../main.c: 118:             hour--;
  1511   001380  07E7               	decf	_hour& (0+255),f,b
  1512   001382  A0D8               	btfss	status,0,c
  1513   001384  07E8               	decf	(_hour+1)& (0+255),f,b
  1514   001386                     
  1515                           ; BSR set to: 0
  1516                           ;../main.c: 119:             changed = 1;
  1517   001386  0E00               	movlw	0
  1518   001388  6FC6               	movwf	(main@changed+1)& (0+255),b
  1519   00138A  0E01               	movlw	1
  1520   00138C  6FC5               	movwf	main@changed& (0+255),b
  1521   00138E                     
  1522                           ; BSR set to: 0
  1523                           ;../main.c: 120:             isDST = 0;
  1524   00138E  0E00               	movlw	0
  1525   001390  6FCC               	movwf	(main@isDST+1)& (0+255),b
  1526   001392  0E00               	movlw	0
  1527   001394  6FCB               	movwf	main@isDST& (0+255),b
  1528                           
  1529                           ;../main.c: 121:         }
  1530   001396  EF4A  F007         	goto	l2604
  1531   00139A                     l2728:
  1532                           
  1533                           ; BSR set to: 0
  1534   00139A  51CD               	movf	main@day& (0+255),w,b
  1535   00139C  11CE               	iorwf	(main@day+1)& (0+255),w,b
  1536   00139E  A4D8               	btfss	status,2,c
  1537   0013A0  EFD4  F009         	goto	u2831
  1538   0013A4  EFD6  F009         	goto	u2830
  1539   0013A8                     u2831:
  1540   0013A8  EF4A  F007         	goto	l2604
  1541   0013AC                     u2830:
  1542   0013AC                     
  1543                           ; BSR set to: 0
  1544   0013AC  0E0A               	movlw	10
  1545   0013AE  19CF               	xorwf	main@month& (0+255),w,b
  1546   0013B0  11D0               	iorwf	(main@month+1)& (0+255),w,b
  1547   0013B2  A4D8               	btfss	status,2,c
  1548   0013B4  EFDE  F009         	goto	u2841
  1549   0013B8  EFE0  F009         	goto	u2840
  1550   0013BC                     u2841:
  1551   0013BC  EF4A  F007         	goto	l2604
  1552   0013C0                     u2840:
  1553   0013C0                     
  1554                           ; BSR set to: 0
  1555   0013C0  0E04               	movlw	4
  1556   0013C2  19E7               	xorwf	_hour& (0+255),w,b
  1557   0013C4  11E8               	iorwf	(_hour+1)& (0+255),w,b
  1558   0013C6  A4D8               	btfss	status,2,c
  1559   0013C8  EFE8  F009         	goto	u2851
  1560   0013CC  EFEA  F009         	goto	u2850
  1561   0013D0                     u2851:
  1562   0013D0  EF4A  F007         	goto	l2604
  1563   0013D4                     u2850:
  1564   0013D4                     
  1565                           ; BSR set to: 0
  1566   0013D4  51E5               	movf	_minute& (0+255),w,b
  1567   0013D6  11E6               	iorwf	(_minute+1)& (0+255),w,b
  1568   0013D8  A4D8               	btfss	status,2,c
  1569   0013DA  EFF1  F009         	goto	u2861
  1570   0013DE  EFF3  F009         	goto	u2860
  1571   0013E2                     u2861:
  1572   0013E2  EF4A  F007         	goto	l2604
  1573   0013E6                     u2860:
  1574   0013E6                     
  1575                           ; BSR set to: 0
  1576   0013E6  51D2               	movf	(main@month_day+1)& (0+255),w,b
  1577   0013E8  E109               	bnz	u2870
  1578   0013EA  0E19               	movlw	25
  1579   0013EC  5DD1               	subwf	main@month_day& (0+255),w,b
  1580   0013EE  A0D8               	btfss	status,0,c
  1581   0013F0  EFFC  F009         	goto	u2871
  1582   0013F4  EFFE  F009         	goto	u2870
  1583   0013F8                     u2871:
  1584   0013F8  EF4A  F007         	goto	l2604
  1585   0013FC                     u2870:
  1586   0013FC                     
  1587                           ; BSR set to: 0
  1588   0013FC  51D2               	movf	(main@month_day+1)& (0+255),w,b
  1589   0013FE  E107               	bnz	u2881
  1590   001400  0E20               	movlw	32
  1591   001402  5DD1               	subwf	main@month_day& (0+255),w,b
  1592   001404  B0D8               	btfsc	status,0,c
  1593   001406  EF07  F00A         	goto	u2881
  1594   00140A  EF09  F00A         	goto	u2880
  1595   00140E                     u2881:
  1596   00140E  EF4A  F007         	goto	l2604
  1597   001412                     u2880:
  1598   001412                     
  1599                           ; BSR set to: 0
  1600   001412  05C5               	decf	main@changed& (0+255),w,b
  1601   001414  11C6               	iorwf	(main@changed+1)& (0+255),w,b
  1602   001416  A4D8               	btfss	status,2,c
  1603   001418  EF10  F00A         	goto	u2891
  1604   00141C  EF12  F00A         	goto	u2890
  1605   001420                     u2891:
  1606   001420  EF4A  F007         	goto	l2604
  1607   001424                     u2890:
  1608   001424                     
  1609                           ; BSR set to: 0
  1610   001424  0E00               	movlw	0
  1611   001426  6FC6               	movwf	(main@changed+1)& (0+255),b
  1612   001428  0E00               	movlw	0
  1613   00142A  6FC5               	movwf	main@changed& (0+255),b
  1614   00142C  EF4A  F007         	goto	l2604
  1615   001430  EF63  F000         	goto	start
  1616   001434                     __end_of_main:
  1617                           	callstack 0
  1618                           
  1619 ;; *************** function _sprintf *****************
  1620 ;; Defined at:
  1621 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1624 ;;		 -> main@yearstr(20), main@datestr(50), 
  1625 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1626 ;;		 -> STR_4(12), STR_3(18), STR_2(6), STR_1(16), 
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;  f              11   14[BANK0 ] struct _IO_FILE
  1629 ;;  ap              2   12[BANK0 ] PTR void [1]
  1630 ;;		 -> ?_sprintf(2), 
  1631 ;;  ret             2    0        int 
  1632 ;; Return value:  Size  Location     Type
  1633 ;;                  2    0[BANK0 ] int 
  1634 ;; Registers used:
  1635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1641 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1642 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1644 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1645 ;;Total ram usage:       25 bytes
  1646 ;; Hardware stack levels used: 1
  1647 ;; Hardware stack levels required when called: 8
  1648 ;; This function calls:
  1649 ;;		_vfprintf
  1650 ;; This function is called by:
  1651 ;;		_main
  1652 ;;		_ADC2String
  1653 ;;		_LDR2String
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657                           	psect	text1
  1658   002534                     __ptext1:
  1659                           	callstack 0
  1660   002534                     _sprintf:
  1661                           	callstack 22
  1662   002534  0E64               	movlw	low (?_sprintf+4)
  1663   002536  0100               	movlb	0	; () banked
  1664   002538  6F6C               	movwf	sprintf@ap& (0+255),b
  1665   00253A  0E00               	movlw	high (?_sprintf+4)
  1666   00253C  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  1667   00253E  C060  F06E         	movff	sprintf@s,sprintf@f
  1668   002542  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  1669   002546                     
  1670                           ; BSR set to: 0
  1671   002546  0E00               	movlw	0
  1672   002548  6F72               	movwf	(sprintf@f+4)& (0+255),b
  1673   00254A  0E00               	movlw	0
  1674   00254C  6F71               	movwf	(sprintf@f+3)& (0+255),b
  1675   00254E                     
  1676                           ; BSR set to: 0
  1677   00254E  0E00               	movlw	0
  1678   002550  6F78               	movwf	(sprintf@f+10)& (0+255),b
  1679   002552  0E00               	movlw	0
  1680   002554  6F77               	movwf	(sprintf@f+9)& (0+255),b
  1681   002556                     
  1682                           ; BSR set to: 0
  1683   002556  0E6E               	movlw	low sprintf@f
  1684   002558  6E54               	movwf	vfprintf@fp^0,c
  1685   00255A  0E00               	movlw	high sprintf@f
  1686   00255C  6E55               	movwf	(vfprintf@fp+1)^0,c
  1687   00255E  C062  F056         	movff	sprintf@fmt,vfprintf@fmt
  1688   002562  C063  F057         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1689   002566  0E6C               	movlw	low sprintf@ap
  1690   002568  6E58               	movwf	vfprintf@ap^0,c
  1691   00256A  0E00               	movlw	high sprintf@ap
  1692   00256C  6E59               	movwf	(vfprintf@ap+1)^0,c
  1693   00256E  ECC3  F012         	call	_vfprintf	;wreg free
  1694   002572  0100               	movlb	0	; () banked
  1695   002574  5171               	movf	(sprintf@f+3)& (0+255),w,b
  1696   002576  2560               	addwf	sprintf@s& (0+255),w,b
  1697   002578  6ED9               	movwf	fsr2l,c
  1698   00257A  5172               	movf	(sprintf@f+4)& (0+255),w,b
  1699   00257C  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  1700   00257E  6EDA               	movwf	fsr2h,c
  1701   002580  0E00               	movlw	0
  1702   002582  6EDF               	movwf	indf2,c
  1703   002584                     
  1704                           ; BSR set to: 0
  1705   002584  0012               	return		;funcret
  1706   002586                     __end_of_sprintf:
  1707                           	callstack 0
  1708                           
  1709 ;; *************** function _vfprintf *****************
  1710 ;; Defined at:
  1711 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;  fp              2   83[COMRAM] PTR struct _IO_FILE
  1714 ;;		 -> sprintf@f(11), 
  1715 ;;  fmt             2   85[COMRAM] PTR const unsigned char 
  1716 ;;		 -> STR_4(12), STR_3(18), STR_2(6), STR_1(16), 
  1717 ;;  ap              2   87[COMRAM] PTR PTR void 
  1718 ;;		 -> sprintf@ap(2), 
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;  cfmt            2   89[COMRAM] PTR unsigned char 
  1721 ;;		 -> STR_4(12), STR_3(18), STR_2(6), STR_1(16), 
  1722 ;; Return value:  Size  Location     Type
  1723 ;;                  2   83[COMRAM] int 
  1724 ;; Registers used:
  1725 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1726 ;; Tracked objects:
  1727 ;;		On entry : 0/0
  1728 ;;		On exit  : 0/0
  1729 ;;		Unchanged: 0/0
  1730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1731 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1732 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1734 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1735 ;;Total ram usage:        8 bytes
  1736 ;; Hardware stack levels used: 1
  1737 ;; Hardware stack levels required when called: 7
  1738 ;; This function calls:
  1739 ;;		_vfpfcnvrt
  1740 ;; This function is called by:
  1741 ;;		_sprintf
  1742 ;; This function uses a non-reentrant model
  1743 ;;
  1744                           
  1745                           	psect	text2
  1746   002586                     __ptext2:
  1747                           	callstack 0
  1748   002586                     _vfprintf:
  1749                           	callstack 22
  1750   002586                     
  1751                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1752   002586  C056  F05A         	movff	vfprintf@fmt,vfprintf@cfmt
  1753   00258A  C057  F05B         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1754                           
  1755                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1756   00258E  EFD7  F012         	goto	l2352
  1757   002592                     l2350:
  1758                           
  1759                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1760   002592  C054  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  1761   002596  C055  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1762   00259A  0E5A               	movlw	low vfprintf@cfmt
  1763   00259C  6E41               	movwf	vfpfcnvrt@fmt^0,c
  1764   00259E  0E00               	movlw	high vfprintf@cfmt
  1765   0025A0  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1766   0025A2  C058  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  1767   0025A6  C059  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1768   0025AA  ECB5  F00B         	call	_vfpfcnvrt	;wreg free
  1769   0025AE                     l2352:
  1770                           
  1771                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1772   0025AE  C05A  FFF6         	movff	vfprintf@cfmt,tblptrl
  1773   0025B2  C05B  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1774   0025B6                     	if	0	;tblptru may be non-zero
  1775   0025B6                     	endif
  1776   0025B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1777   0025B6  0E00               	movlw	low (__mediumconst shr (0+16))
  1778   0025B8  6EF8               	movwf	tblptru,c
  1779   0025BA                     	endif
  1780   0025BA  0008               	tblrd		*
  1781   0025BC  50F5               	movf	tablat,w,c
  1782   0025BE  0900               	iorlw	0
  1783   0025C0  A4D8               	btfss	status,2,c
  1784   0025C2  EFE5  F012         	goto	u2051
  1785   0025C6  EFE7  F012         	goto	u2050
  1786   0025CA                     u2051:
  1787   0025CA  EFC9  F012         	goto	l2350
  1788   0025CE                     u2050:
  1789   0025CE                     
  1790                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1791   0025CE  0E00               	movlw	0
  1792   0025D0  6E55               	movwf	(?_vfprintf+1)^0,c
  1793   0025D2  0E00               	movlw	0
  1794   0025D4  6E54               	movwf	?_vfprintf^0,c
  1795   0025D6  0012               	return		;funcret
  1796   0025D8                     __end_of_vfprintf:
  1797                           	callstack 0
  1798                           
  1799 ;; *************** function _vfpfcnvrt *****************
  1800 ;; Defined at:
  1801 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  1804 ;;		 -> sprintf@f(11), 
  1805 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  1806 ;;		 -> vfprintf@cfmt(2), 
  1807 ;;  ap              2   66[COMRAM] PTR PTR void 
  1808 ;;		 -> sprintf@ap(2), 
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;  convarg         8   71[COMRAM] struct .
  1811 ;;  cp              2   81[COMRAM] PTR unsigned char 
  1812 ;;		 -> STR_4(12), STR_3(18), STR_2(6), STR_1(16), 
  1813 ;;  done            2   79[COMRAM] int 
  1814 ;;  i               2    0        int 
  1815 ;;  c               1    0        unsigned char 
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  1    wreg      void 
  1818 ;; Registers used:
  1819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1825 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1826 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1827 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1828 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1829 ;;Total ram usage:       21 bytes
  1830 ;; Hardware stack levels used: 1
  1831 ;; Hardware stack levels required when called: 6
  1832 ;; This function calls:
  1833 ;;		_atoi
  1834 ;;		_dtoa
  1835 ;;		_fputc
  1836 ;;		_isdigit
  1837 ;; This function is called by:
  1838 ;;		_vfprintf
  1839 ;; This function uses a non-reentrant model
  1840 ;;
  1841                           
  1842                           	psect	text3
  1843   00176A                     __ptext3:
  1844                           	callstack 0
  1845   00176A                     _vfpfcnvrt:
  1846                           	callstack 22
  1847   00176A                     
  1848                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1849   00176A  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1850   00176E  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1851   001772  CFDE FFF6          	movff	postinc2,tblptrl
  1852   001776  CFDD FFF7          	movff	postdec2,tblptrh
  1853   00177A                     	if	0	;tblptru may be non-zero
  1854   00177A                     	endif
  1855   00177A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1856   00177A  0E00               	movlw	low (__mediumconst shr (0+16))
  1857   00177C  6EF8               	movwf	tblptru,c
  1858   00177E                     	endif
  1859   00177E  0008               	tblrd		*
  1860   001780  50F5               	movf	tablat,w,c
  1861   001782  0A25               	xorlw	37
  1862   001784  A4D8               	btfss	status,2,c
  1863   001786  EFC7  F00B         	goto	u1941
  1864   00178A  EFC9  F00B         	goto	u1940
  1865   00178E                     u1941:
  1866   00178E  EFFB  F00C         	goto	l2308
  1867   001792                     u1940:
  1868   001792                     
  1869                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1870   001792  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1871   001796  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1872   00179A  2ADE               	incf	postinc2,f,c
  1873   00179C  0E00               	movlw	0
  1874   00179E  22DD               	addwfc	postdec2,f,c
  1875   0017A0                     
  1876                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1877   0017A0  0E00               	movlw	0
  1878   0017A2  0100               	movlb	0	; () banked
  1879   0017A4  6FD4               	movwf	(_width+1)& (0+255),b
  1880   0017A6  0E00               	movlw	0
  1881   0017A8  6FD3               	movwf	_width& (0+255),b
  1882   0017AA  C0D3  F05E         	movff	_width,_flags
  1883   0017AE                     
  1884                           ; BSR set to: 0
  1885                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1886   0017AE  685C               	setf	_prec^0,c
  1887   0017B0  685D               	setf	(_prec+1)^0,c
  1888   0017B2                     
  1889                           ; BSR set to: 0
  1890                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  1891   0017B2  0E00               	movlw	0
  1892   0017B4  6E51               	movwf	(vfpfcnvrt@done+1)^0,c
  1893   0017B6  0E00               	movlw	0
  1894   0017B8  6E50               	movwf	vfpfcnvrt@done^0,c
  1895                           
  1896                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  1897   0017BA  EF0B  F00C         	goto	l2274
  1898   0017BE                     l2264:
  1899                           
  1900                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  1901   0017BE  825E               	bsf	_flags^0,1,c
  1902   0017C0                     
  1903                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  1904   0017C0  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1905   0017C4  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1906   0017C8  2ADE               	incf	postinc2,f,c
  1907   0017CA  0E00               	movlw	0
  1908   0017CC  22DD               	addwfc	postdec2,f,c
  1909                           
  1910                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  1911   0017CE  EF0B  F00C         	goto	l2274
  1912   0017D2                     l2268:
  1913                           
  1914                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  1915   0017D2  0E00               	movlw	0
  1916   0017D4  6E51               	movwf	(vfpfcnvrt@done+1)^0,c
  1917   0017D6  0E01               	movlw	1
  1918   0017D8  6E50               	movwf	vfpfcnvrt@done^0,c
  1919                           
  1920                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  1921   0017DA  EF0B  F00C         	goto	l2274
  1922   0017DE                     l2272:
  1923   0017DE  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1924   0017E2  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1925   0017E6  CFDE FFF6          	movff	postinc2,tblptrl
  1926   0017EA  CFDD FFF7          	movff	postdec2,tblptrh
  1927   0017EE                     	if	0	;tblptru may be non-zero
  1928   0017EE                     	endif
  1929   0017EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1930   0017EE  0E00               	movlw	low (__mediumconst shr (0+16))
  1931   0017F0  6EF8               	movwf	tblptru,c
  1932   0017F2                     	endif
  1933   0017F2  0008               	tblrd		*
  1934   0017F4  50F5               	movf	tablat,w,c
  1935   0017F6  6E45               	movwf	??_vfpfcnvrt^0,c
  1936   0017F8  6A46               	clrf	(??_vfpfcnvrt+1)^0,c
  1937                           
  1938                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1939                           ; Switch size 1, requested type "simple"
  1940                           ; Number of cases is 1, Range of values is 0 to 0
  1941                           ; switch strategies available:
  1942                           ; Name         Instructions Cycles
  1943                           ; simple_byte            4     3 (average)
  1944                           ;	Chosen strategy is simple_byte
  1945   0017FA  5046               	movf	(??_vfpfcnvrt+1)^0,w,c
  1946   0017FC  0A00               	xorlw	0	; case 0
  1947   0017FE  B4D8               	btfsc	status,2,c
  1948   001800  EF04  F00C         	goto	l2794
  1949   001804  EFE9  F00B         	goto	l2268
  1950   001808                     l2794:
  1951                           
  1952                           ; Switch size 1, requested type "simple"
  1953                           ; Number of cases is 1, Range of values is 48 to 48
  1954                           ; switch strategies available:
  1955                           ; Name         Instructions Cycles
  1956                           ; simple_byte            4     3 (average)
  1957                           ;	Chosen strategy is simple_byte
  1958   001808  5045               	movf	??_vfpfcnvrt^0,w,c
  1959   00180A  0A30               	xorlw	48	; case 48
  1960   00180C  B4D8               	btfsc	status,2,c
  1961   00180E  EFDF  F00B         	goto	l2264
  1962   001812  EFE9  F00B         	goto	l2268
  1963   001816                     l2274:
  1964                           
  1965                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  1966   001816  5050               	movf	vfpfcnvrt@done^0,w,c
  1967   001818  1051               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  1968   00181A  B4D8               	btfsc	status,2,c
  1969   00181C  EF12  F00C         	goto	u1951
  1970   001820  EF14  F00C         	goto	u1950
  1971   001824                     u1951:
  1972   001824  EFEF  F00B         	goto	l2272
  1973   001828                     u1950:
  1974   001828                     
  1975                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1074:         if 
      +                          ((*fmt)[0] == '*') {
  1976   001828  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1977   00182C  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1978   001830  CFDE FFF6          	movff	postinc2,tblptrl
  1979   001834  CFDD FFF7          	movff	postdec2,tblptrh
  1980   001838                     	if	0	;tblptru may be non-zero
  1981   001838                     	endif
  1982   001838                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1983   001838  0E00               	movlw	low (__mediumconst shr (0+16))
  1984   00183A  6EF8               	movwf	tblptru,c
  1985   00183C                     	endif
  1986   00183C  0008               	tblrd		*
  1987   00183E  50F5               	movf	tablat,w,c
  1988   001840  0A2A               	xorlw	42
  1989   001842  A4D8               	btfss	status,2,c
  1990   001844  EF26  F00C         	goto	u1961
  1991   001848  EF28  F00C         	goto	u1960
  1992   00184C                     u1961:
  1993   00184C  EF52  F00C         	goto	l2284
  1994   001850                     u1960:
  1995   001850                     
  1996                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1075:            
      +                           ++*fmt;
  1997   001850  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1998   001854  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1999   001858  2ADE               	incf	postinc2,f,c
  2000   00185A  0E00               	movlw	0
  2001   00185C  22DD               	addwfc	postdec2,f,c
  2002                           
  2003                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1076:            
      +                           width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2004   00185E  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2005   001862  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2006   001866  CFDF F045          	movff	indf2,??_vfpfcnvrt
  2007   00186A  0E02               	movlw	2
  2008   00186C  26DE               	addwf	postinc2,f,c
  2009   00186E  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  2010   001872  0E00               	movlw	0
  2011   001874  22DD               	addwfc	postdec2,f,c
  2012   001876  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2013   00187A  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2014   00187E  CFDE F0D3          	movff	postinc2,_width
  2015   001882  CFDD F0D4          	movff	postdec2,_width+1
  2016   001886                     
  2017                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1077:            
      +                           if (width < 0) {
  2018   001886  0100               	movlb	0	; () banked
  2019   001888  BFD4               	btfsc	(_width+1)& (0+255),7,b
  2020   00188A  EF4B  F00C         	goto	u1970
  2021   00188E  EF49  F00C         	goto	u1971
  2022   001892                     u1971:
  2023   001892  EF87  F00C         	goto	l2292
  2024   001896                     u1970:
  2025   001896                     
  2026                           ; BSR set to: 0
  2027                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1078:            
      +                               flags |= (1 << 0);
  2028   001896  805E               	bsf	_flags^0,0,c
  2029                           
  2030                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1079:            
      +                               width = -width;
  2031   001898  6DD3               	negf	_width& (0+255),b
  2032   00189A  1FD4               	comf	(_width+1)& (0+255),f,b
  2033   00189C  B0D8               	btfsc	status,0,c
  2034   00189E  2BD4               	incf	(_width+1)& (0+255),f,b
  2035   0018A0  EF87  F00C         	goto	l2292
  2036   0018A4                     l2284:
  2037                           
  2038                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1082:            
      +                           width = atoi(*fmt);
  2039   0018A4  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2040   0018A8  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2041   0018AC  CFDE F007          	movff	postinc2,atoi@s
  2042   0018B0  CFDD F008          	movff	postdec2,atoi@s+1
  2043   0018B4  ECE2  F00F         	call	_atoi	;wreg free
  2044   0018B8  C007  F0D3         	movff	?_atoi,_width
  2045   0018BC  C008  F0D4         	movff	?_atoi+1,_width+1
  2046                           
  2047                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1083:            
      +                           while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2048   0018C0  EF69  F00C         	goto	l2290
  2049   0018C4                     l2286:
  2050                           
  2051                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1084:            
      +                               ++*fmt;
  2052   0018C4  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2053   0018C8  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2054   0018CC  2ADE               	incf	postinc2,f,c
  2055   0018CE  0E00               	movlw	0
  2056   0018D0  22DD               	addwfc	postdec2,f,c
  2057   0018D2                     l2290:
  2058   0018D2  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2059   0018D6  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2060   0018DA  CFDE FFF6          	movff	postinc2,tblptrl
  2061   0018DE  CFDD FFF7          	movff	postdec2,tblptrh
  2062   0018E2                     	if	0	;tblptru may be non-zero
  2063   0018E2                     	endif
  2064   0018E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2065   0018E2  0E00               	movlw	low (__mediumconst shr (0+16))
  2066   0018E4  6EF8               	movwf	tblptru,c
  2067   0018E6                     	endif
  2068   0018E6  0008               	tblrd		*
  2069   0018E8  CFF5 F045          	movff	tablat,??_vfpfcnvrt
  2070   0018EC  0ED0               	movlw	208
  2071   0018EE  2445               	addwf	??_vfpfcnvrt^0,w,c
  2072   0018F0  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  2073   0018F2  6A47               	clrf	(??_vfpfcnvrt+2)^0,c
  2074   0018F4  0EFF               	movlw	255
  2075   0018F6  2247               	addwfc	(??_vfpfcnvrt+2)^0,f,c
  2076   0018F8  5047               	movf	(??_vfpfcnvrt+2)^0,w,c
  2077   0018FA  E109               	bnz	u1980
  2078   0018FC  0E0A               	movlw	10
  2079   0018FE  5C46               	subwf	(??_vfpfcnvrt+1)^0,w,c
  2080   001900  A0D8               	btfss	status,0,c
  2081   001902  EF85  F00C         	goto	u1981
  2082   001906  EF87  F00C         	goto	u1980
  2083   00190A                     u1981:
  2084   00190A  EF62  F00C         	goto	l2286
  2085   00190E                     u1980:
  2086   00190E                     l2292:
  2087                           
  2088                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2089   00190E  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2090   001912  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2091   001916  CFDE F052          	movff	postinc2,vfpfcnvrt@cp
  2092   00191A  CFDD F053          	movff	postdec2,vfpfcnvrt@cp+1
  2093   00191E                     
  2094                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2095   00191E  C052  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2096   001922  C053  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2097   001926                     	if	0	;tblptru may be non-zero
  2098   001926                     	endif
  2099   001926                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2100   001926  0E00               	movlw	low (__mediumconst shr (0+16))
  2101   001928  6EF8               	movwf	tblptru,c
  2102   00192A                     	endif
  2103   00192A  0008               	tblrd		*
  2104   00192C  50F5               	movf	tablat,w,c
  2105   00192E  0A64               	xorlw	100
  2106   001930  B4D8               	btfsc	status,2,c
  2107   001932  EF9D  F00C         	goto	u1991
  2108   001936  EF9F  F00C         	goto	u1990
  2109   00193A                     u1991:
  2110   00193A  EFAF  F00C         	goto	l2298
  2111   00193E                     u1990:
  2112   00193E  C052  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2113   001942  C053  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2114   001946                     	if	0	;tblptru may be non-zero
  2115   001946                     	endif
  2116   001946                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2117   001946  0E00               	movlw	low (__mediumconst shr (0+16))
  2118   001948  6EF8               	movwf	tblptru,c
  2119   00194A                     	endif
  2120   00194A  0008               	tblrd		*
  2121   00194C  50F5               	movf	tablat,w,c
  2122   00194E  0A69               	xorlw	105
  2123   001950  A4D8               	btfss	status,2,c
  2124   001952  EFAD  F00C         	goto	u2001
  2125   001956  EFAF  F00C         	goto	u2000
  2126   00195A                     u2001:
  2127   00195A  EFF2  F00C         	goto	l2304
  2128   00195E                     u2000:
  2129   00195E                     l2298:
  2130                           
  2131                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2132   00195E  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2133   001962  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2134   001966  CFDF F045          	movff	indf2,??_vfpfcnvrt
  2135   00196A  0E02               	movlw	2
  2136   00196C  26DE               	addwf	postinc2,f,c
  2137   00196E  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  2138   001972  0E00               	movlw	0
  2139   001974  22DD               	addwfc	postdec2,f,c
  2140   001976  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2141   00197A  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2142   00197E  CFDE F048          	movff	postinc2,vfpfcnvrt@convarg
  2143   001982  CFDD F049          	movff	postdec2,vfpfcnvrt@convarg+1
  2144   001986  0E00               	movlw	0
  2145   001988  BE49               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2146   00198A  0EFF               	movlw	-1
  2147   00198C  6E4A               	movwf	(vfpfcnvrt@convarg+2)^0,c
  2148   00198E  6E4B               	movwf	(vfpfcnvrt@convarg+3)^0,c
  2149   001990  6E4C               	movwf	(vfpfcnvrt@convarg+4)^0,c
  2150   001992  6E4D               	movwf	(vfpfcnvrt@convarg+5)^0,c
  2151   001994  6E4E               	movwf	(vfpfcnvrt@convarg+6)^0,c
  2152   001996  6E4F               	movwf	(vfpfcnvrt@convarg+7)^0,c
  2153                           
  2154                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2155   001998  0E01               	movlw	1
  2156   00199A  2452               	addwf	vfpfcnvrt@cp^0,w,c
  2157   00199C  6E45               	movwf	??_vfpfcnvrt^0,c
  2158   00199E  0E00               	movlw	0
  2159   0019A0  2053               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2160   0019A2  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  2161   0019A4  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2162   0019A8  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2163   0019AC  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  2164   0019B0  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2165   0019B4                     
  2166                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2167   0019B4  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2168   0019B8  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2169   0019BC  C048  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2170   0019C0  C049  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2171   0019C4  C04A  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2172   0019C8  C04B  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2173   0019CC  C04C  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2174   0019D0  C04D  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2175   0019D4  C04E  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2176   0019D8  C04F  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2177   0019DC  EC12  F00D         	call	_dtoa	;wreg free
  2178   0019E0  EF11  F00D         	goto	l1083
  2179   0019E4                     l2304:
  2180                           
  2181                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2182   0019E4  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2183   0019E8  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2184   0019EC  2ADE               	incf	postinc2,f,c
  2185   0019EE  0E00               	movlw	0
  2186   0019F0  22DD               	addwfc	postdec2,f,c
  2187   0019F2  EF11  F00D         	goto	l1083
  2188   0019F6                     l2308:
  2189                           
  2190                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2191   0019F6  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2192   0019FA  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2193   0019FE  CFDE FFF6          	movff	postinc2,tblptrl
  2194   001A02  CFDD FFF7          	movff	postdec2,tblptrh
  2195   001A06                     	if	0	;tblptru may be non-zero
  2196   001A06                     	endif
  2197   001A06                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2198   001A06  0E00               	movlw	low (__mediumconst shr (0+16))
  2199   001A08  6EF8               	movwf	tblptru,c
  2200   001A0A                     	endif
  2201   001A0A  0008               	tblrd		*
  2202   001A0C  50F5               	movf	tablat,w,c
  2203   001A0E  6E01               	movwf	fputc@c^0,c
  2204   001A10  6A02               	clrf	(fputc@c+1)^0,c
  2205   001A12  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2206   001A16  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2207   001A1A  EC91  F010         	call	_fputc	;wreg free
  2208   001A1E  EFF2  F00C         	goto	l2304
  2209   001A22                     l1083:
  2210   001A22  0012               	return		;funcret
  2211   001A24                     __end_of_vfpfcnvrt:
  2212                           	callstack 0
  2213                           
  2214 ;; *************** function _dtoa *****************
  2215 ;; Defined at:
  2216 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2217 ;; Parameters:    Size  Location     Type
  2218 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2219 ;;		 -> sprintf@f(11), 
  2220 ;;  d               8   29[COMRAM] long long 
  2221 ;; Auto vars:     Size  Location     Type
  2222 ;;  n               8   51[COMRAM] long long 
  2223 ;;  i               2   59[COMRAM] int 
  2224 ;;  w               2   49[COMRAM] int 
  2225 ;;  p               2   47[COMRAM] int 
  2226 ;;  s               1   61[COMRAM] unsigned char 
  2227 ;; Return value:  Size  Location     Type
  2228 ;;                  1    wreg      void 
  2229 ;; Registers used:
  2230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2236 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2237 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2238 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2239 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2240 ;;Total ram usage:       35 bytes
  2241 ;; Hardware stack levels used: 1
  2242 ;; Hardware stack levels required when called: 5
  2243 ;; This function calls:
  2244 ;;		___aodiv
  2245 ;;		___aomod
  2246 ;;		_abs
  2247 ;;		_pad
  2248 ;; This function is called by:
  2249 ;;		_vfpfcnvrt
  2250 ;; This function uses a non-reentrant model
  2251 ;;
  2252                           
  2253                           	psect	text4
  2254   001A24                     __ptext4:
  2255                           	callstack 0
  2256   001A24                     _dtoa:
  2257                           	callstack 22
  2258   001A24                     
  2259                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  2260   001A24  C01E  F034         	movff	dtoa@d,dtoa@n
  2261   001A28  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  2262   001A2C  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  2263   001A30  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  2264   001A34  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  2265   001A38  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  2266   001A3C  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  2267   001A40  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  2268   001A44                     
  2269                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  2270   001A44  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  2271   001A46  EF27  F00D         	goto	u1731
  2272   001A4A  EF2A  F00D         	goto	u1730
  2273   001A4E                     u1731:
  2274   001A4E  0E01               	movlw	1
  2275   001A50  EF2B  F00D         	goto	u1740
  2276   001A54                     u1730:
  2277   001A54  0E00               	movlw	0
  2278   001A56                     u1740:
  2279   001A56  6E3E               	movwf	dtoa@s^0,c
  2280   001A58                     
  2281                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  2282   001A58  503E               	movf	dtoa@s^0,w,c
  2283   001A5A  B4D8               	btfsc	status,2,c
  2284   001A5C  EF32  F00D         	goto	u1751
  2285   001A60  EF34  F00D         	goto	u1750
  2286   001A64                     u1751:
  2287   001A64  EF44  F00D         	goto	l2150
  2288   001A68                     u1750:
  2289   001A68                     
  2290                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  2291   001A68  1E3B               	comf	(dtoa@n+7)^0,f,c
  2292   001A6A  1E3A               	comf	(dtoa@n+6)^0,f,c
  2293   001A6C  1E39               	comf	(dtoa@n+5)^0,f,c
  2294   001A6E  1E38               	comf	(dtoa@n+4)^0,f,c
  2295   001A70  1E37               	comf	(dtoa@n+3)^0,f,c
  2296   001A72  1E36               	comf	(dtoa@n+2)^0,f,c
  2297   001A74  1E35               	comf	(dtoa@n+1)^0,f,c
  2298   001A76  6C34               	negf	dtoa@n^0,c
  2299   001A78  0E00               	movlw	0
  2300   001A7A  2235               	addwfc	(dtoa@n+1)^0,f,c
  2301   001A7C  2236               	addwfc	(dtoa@n+2)^0,f,c
  2302   001A7E  2237               	addwfc	(dtoa@n+3)^0,f,c
  2303   001A80  2238               	addwfc	(dtoa@n+4)^0,f,c
  2304   001A82  2239               	addwfc	(dtoa@n+5)^0,f,c
  2305   001A84  223A               	addwfc	(dtoa@n+6)^0,f,c
  2306   001A86  223B               	addwfc	(dtoa@n+7)^0,f,c
  2307   001A88                     l2150:
  2308                           
  2309                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 458:     if (!(pr
      +                          ec < 0)) {
  2310   001A88  BE5D               	btfsc	(_prec+1)^0,7,c
  2311   001A8A  EF49  F00D         	goto	u1761
  2312   001A8E  EF4B  F00D         	goto	u1760
  2313   001A92                     u1761:
  2314   001A92  EF4C  F00D         	goto	l2154
  2315   001A96                     u1760:
  2316   001A96                     
  2317                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 459:         flag
      +                          s &= ~(1 << 1);
  2318   001A96  925E               	bcf	_flags^0,1,c
  2319   001A98                     l2154:
  2320                           
  2321                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  2322   001A98  BE5D               	btfsc	(_prec+1)^0,7,c
  2323   001A9A  EF59  F00D         	goto	u1770
  2324   001A9E  505D               	movf	(_prec+1)^0,w,c
  2325   001AA0  E106               	bnz	u1771
  2326   001AA2  045C               	decf	_prec^0,w,c
  2327   001AA4  B0D8               	btfsc	status,0,c
  2328   001AA6  EF57  F00D         	goto	u1771
  2329   001AAA  EF59  F00D         	goto	u1770
  2330   001AAE                     u1771:
  2331   001AAE  EF5F  F00D         	goto	l1045
  2332   001AB2                     u1770:
  2333   001AB2  0E00               	movlw	0
  2334   001AB4  6E31               	movwf	(dtoa@p+1)^0,c
  2335   001AB6  0E01               	movlw	1
  2336   001AB8  6E30               	movwf	dtoa@p^0,c
  2337   001ABA  EF63  F00D         	goto	l1047
  2338   001ABE                     l1045:
  2339   001ABE  C05C  F030         	movff	_prec,dtoa@p
  2340   001AC2  C05D  F031         	movff	_prec+1,dtoa@p+1
  2341   001AC6                     l1047:
  2342                           
  2343                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  2344   001AC6  C0D3  F032         	movff	_width,dtoa@w
  2345   001ACA  C0D4  F033         	movff	_width+1,dtoa@w+1
  2346   001ACE                     
  2347                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  2348   001ACE  503E               	movf	dtoa@s^0,w,c
  2349   001AD0  B4D8               	btfsc	status,2,c
  2350   001AD2  EF6D  F00D         	goto	u1781
  2351   001AD6  EF6F  F00D         	goto	u1780
  2352   001ADA                     u1781:
  2353   001ADA  EF86  F00D         	goto	l1048
  2354   001ADE                     u1780:
  2355   001ADE                     
  2356                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  2357   001ADE  0632               	decf	dtoa@w^0,f,c
  2358   001AE0  A0D8               	btfss	status,0,c
  2359   001AE2  0633               	decf	(dtoa@w+1)^0,f,c
  2360   001AE4                     
  2361                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  2362   001AE4  503E               	movf	dtoa@s^0,w,c
  2363   001AE6  A4D8               	btfss	status,2,c
  2364   001AE8  EF78  F00D         	goto	u1791
  2365   001AEC  EF7A  F00D         	goto	u1790
  2366   001AF0                     u1791:
  2367   001AF0  EF80  F00D         	goto	l2166
  2368   001AF4                     u1790:
  2369   001AF4  0E00               	movlw	0
  2370   001AF6  6E2F               	movwf	(_dtoa$1964+1)^0,c
  2371   001AF8  0E2B               	movlw	43
  2372   001AFA  6E2E               	movwf	_dtoa$1964^0,c
  2373   001AFC  EF84  F00D         	goto	l2168
  2374   001B00                     l2166:
  2375   001B00  0E00               	movlw	0
  2376   001B02  6E2F               	movwf	(_dtoa$1964+1)^0,c
  2377   001B04  0E2D               	movlw	45
  2378   001B06  6E2E               	movwf	_dtoa$1964^0,c
  2379   001B08                     l2168:
  2380   001B08  C02E  F03E         	movff	_dtoa$1964,dtoa@s
  2381   001B0C                     l1048:
  2382                           
  2383                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  2384   001B0C  0E00               	movlw	0
  2385   001B0E  6E3D               	movwf	(dtoa@i+1)^0,c
  2386   001B10  0E1F               	movlw	31
  2387   001B12  6E3C               	movwf	dtoa@i^0,c
  2388   001B14                     
  2389                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  2390   001B14  0E00               	movlw	0
  2391   001B16  0101               	movlb	1	; () banked
  2392   001B18  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2393                           
  2394                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2395   001B1A  EF0B  F00E         	goto	l2182
  2396   001B1E                     l2172:
  2397                           
  2398                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  2399   001B1E  063C               	decf	dtoa@i^0,f,c
  2400   001B20  A0D8               	btfss	status,0,c
  2401   001B22  063D               	decf	(dtoa@i+1)^0,f,c
  2402   001B24                     
  2403                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2404   001B24  0E00               	movlw	low _dbuf
  2405   001B26  243C               	addwf	dtoa@i^0,w,c
  2406   001B28  6ED9               	movwf	fsr2l,c
  2407   001B2A  0E01               	movlw	high _dbuf
  2408   001B2C  203D               	addwfc	(dtoa@i+1)^0,w,c
  2409   001B2E  6EDA               	movwf	fsr2h,c
  2410   001B30  C034  F001         	movff	dtoa@n,___aomod@dividend
  2411   001B34  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2412   001B38  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2413   001B3C  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2414   001B40  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2415   001B44  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2416   001B48  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2417   001B4C  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2418   001B50  0E0A               	movlw	10
  2419   001B52  6E09               	movwf	___aomod@divisor^0,c
  2420   001B54  0E00               	movlw	0
  2421   001B56  6E0A               	movwf	(___aomod@divisor+1)^0,c
  2422   001B58  0E00               	movlw	0
  2423   001B5A  6E0B               	movwf	(___aomod@divisor+2)^0,c
  2424   001B5C  0E00               	movlw	0
  2425   001B5E  6E0C               	movwf	(___aomod@divisor+3)^0,c
  2426   001B60  0E00               	movlw	0
  2427   001B62  6E0D               	movwf	(___aomod@divisor+4)^0,c
  2428   001B64  0E00               	movlw	0
  2429   001B66  6E0E               	movwf	(___aomod@divisor+5)^0,c
  2430   001B68  0E00               	movlw	0
  2431   001B6A  6E0F               	movwf	(___aomod@divisor+6)^0,c
  2432   001B6C  0E00               	movlw	0
  2433   001B6E  6E10               	movwf	(___aomod@divisor+7)^0,c
  2434   001B70  EC30  F00F         	call	___aomod	;wreg free
  2435   001B74  C001  F026         	movff	?___aomod,??_dtoa
  2436   001B78  C002  F027         	movff	?___aomod+1,??_dtoa+1
  2437   001B7C  C003  F028         	movff	?___aomod+2,??_dtoa+2
  2438   001B80  C004  F029         	movff	?___aomod+3,??_dtoa+3
  2439   001B84  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  2440   001B88  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  2441   001B8C  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  2442   001B90  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  2443   001B94  C026  F013         	movff	??_dtoa,abs@a
  2444   001B98  C027  F014         	movff	??_dtoa+1,abs@a+1
  2445   001B9C  EC31  F013         	call	_abs	;wreg free
  2446   001BA0  5013               	movf	?_abs^0,w,c
  2447   001BA2  0F30               	addlw	48
  2448   001BA4  6EDF               	movwf	indf2,c
  2449   001BA6                     
  2450                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  2451   001BA6  0630               	decf	dtoa@p^0,f,c
  2452   001BA8  A0D8               	btfss	status,0,c
  2453   001BAA  0631               	decf	(dtoa@p+1)^0,f,c
  2454   001BAC                     
  2455                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  2456   001BAC  0632               	decf	dtoa@w^0,f,c
  2457   001BAE  A0D8               	btfss	status,0,c
  2458   001BB0  0633               	decf	(dtoa@w+1)^0,f,c
  2459   001BB2                     
  2460                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  2461   001BB2  C034  F001         	movff	dtoa@n,___aodiv@dividend
  2462   001BB6  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2463   001BBA  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2464   001BBE  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2465   001BC2  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2466   001BC6  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2467   001BCA  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2468   001BCE  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2469   001BD2  0E0A               	movlw	10
  2470   001BD4  6E09               	movwf	___aodiv@divisor^0,c
  2471   001BD6  0E00               	movlw	0
  2472   001BD8  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2473   001BDA  0E00               	movlw	0
  2474   001BDC  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2475   001BDE  0E00               	movlw	0
  2476   001BE0  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2477   001BE2  0E00               	movlw	0
  2478   001BE4  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2479   001BE6  0E00               	movlw	0
  2480   001BE8  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2481   001BEA  0E00               	movlw	0
  2482   001BEC  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2483   001BEE  0E00               	movlw	0
  2484   001BF0  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2485   001BF2  EC6C  F00E         	call	___aodiv	;wreg free
  2486   001BF6  C001  F034         	movff	?___aodiv,dtoa@n
  2487   001BFA  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  2488   001BFE  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  2489   001C02  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  2490   001C06  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  2491   001C0A  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  2492   001C0E  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  2493   001C12  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  2494   001C16                     l2182:
  2495                           
  2496                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2497   001C16  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  2498   001C18  EF16  F00E         	goto	u1801
  2499   001C1C  503D               	movf	(dtoa@i+1)^0,w,c
  2500   001C1E  E108               	bnz	u1800
  2501   001C20  043C               	decf	dtoa@i^0,w,c
  2502   001C22  A0D8               	btfss	status,0,c
  2503   001C24  EF16  F00E         	goto	u1801
  2504   001C28  EF18  F00E         	goto	u1800
  2505   001C2C                     u1801:
  2506   001C2C  EF48  F00E         	goto	l2192
  2507   001C30                     u1800:
  2508   001C30  5034               	movf	dtoa@n^0,w,c
  2509   001C32  1035               	iorwf	(dtoa@n+1)^0,w,c
  2510   001C34  1036               	iorwf	(dtoa@n+2)^0,w,c
  2511   001C36  1037               	iorwf	(dtoa@n+3)^0,w,c
  2512   001C38  1038               	iorwf	(dtoa@n+4)^0,w,c
  2513   001C3A  1039               	iorwf	(dtoa@n+5)^0,w,c
  2514   001C3C  103A               	iorwf	(dtoa@n+6)^0,w,c
  2515   001C3E  103B               	iorwf	(dtoa@n+7)^0,w,c
  2516   001C40  A4D8               	btfss	status,2,c
  2517   001C42  EF25  F00E         	goto	u1811
  2518   001C46  EF27  F00E         	goto	u1810
  2519   001C4A                     u1811:
  2520   001C4A  EF8F  F00D         	goto	l2172
  2521   001C4E                     u1810:
  2522   001C4E  BE31               	btfsc	(dtoa@p+1)^0,7,c
  2523   001C50  EF34  F00E         	goto	u1820
  2524   001C54  5031               	movf	(dtoa@p+1)^0,w,c
  2525   001C56  E106               	bnz	u1821
  2526   001C58  0430               	decf	dtoa@p^0,w,c
  2527   001C5A  B0D8               	btfsc	status,0,c
  2528   001C5C  EF32  F00E         	goto	u1821
  2529   001C60  EF34  F00E         	goto	u1820
  2530   001C64                     u1821:
  2531   001C64  EF8F  F00D         	goto	l2172
  2532   001C68                     u1820:
  2533   001C68  BE33               	btfsc	(dtoa@w+1)^0,7,c
  2534   001C6A  EF3F  F00E         	goto	u1831
  2535   001C6E  5033               	movf	(dtoa@w+1)^0,w,c
  2536   001C70  E108               	bnz	u1830
  2537   001C72  0432               	decf	dtoa@w^0,w,c
  2538   001C74  A0D8               	btfss	status,0,c
  2539   001C76  EF3F  F00E         	goto	u1831
  2540   001C7A  EF41  F00E         	goto	u1830
  2541   001C7E                     u1831:
  2542   001C7E  EF48  F00E         	goto	l2192
  2543   001C82                     u1830:
  2544   001C82  B25E               	btfsc	_flags^0,1,c
  2545   001C84  EF46  F00E         	goto	u1841
  2546   001C88  EF48  F00E         	goto	u1840
  2547   001C8C                     u1841:
  2548   001C8C  EF8F  F00D         	goto	l2172
  2549   001C90                     u1840:
  2550   001C90                     l2192:
  2551                           
  2552                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  2553   001C90  503E               	movf	dtoa@s^0,w,c
  2554   001C92  B4D8               	btfsc	status,2,c
  2555   001C94  EF4E  F00E         	goto	u1851
  2556   001C98  EF50  F00E         	goto	u1850
  2557   001C9C                     u1851:
  2558   001C9C  EF5B  F00E         	goto	l2198
  2559   001CA0                     u1850:
  2560   001CA0                     
  2561                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  2562   001CA0  063C               	decf	dtoa@i^0,f,c
  2563   001CA2  A0D8               	btfss	status,0,c
  2564   001CA4  063D               	decf	(dtoa@i+1)^0,f,c
  2565   001CA6                     
  2566                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  2567   001CA6  0E00               	movlw	low _dbuf
  2568   001CA8  243C               	addwf	dtoa@i^0,w,c
  2569   001CAA  6ED9               	movwf	fsr2l,c
  2570   001CAC  0E01               	movlw	high _dbuf
  2571   001CAE  203D               	addwfc	(dtoa@i+1)^0,w,c
  2572   001CB0  6EDA               	movwf	fsr2h,c
  2573   001CB2  C03E  FFDF         	movff	dtoa@s,indf2
  2574   001CB6                     l2198:
  2575                           
  2576                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2577   001CB6  C01C  F011         	movff	dtoa@fp,pad@fp
  2578   001CBA  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2579   001CBE  0E00               	movlw	low _dbuf
  2580   001CC0  243C               	addwf	dtoa@i^0,w,c
  2581   001CC2  6E13               	movwf	pad@buf^0,c
  2582   001CC4  0E01               	movlw	high _dbuf
  2583   001CC6  203D               	addwfc	(dtoa@i+1)^0,w,c
  2584   001CC8  6E14               	movwf	(pad@buf+1)^0,c
  2585   001CCA  C032  F015         	movff	dtoa@w,pad@p
  2586   001CCE  C033  F016         	movff	dtoa@w+1,pad@p+1
  2587   001CD2  EC5A  F011         	call	_pad	;wreg free
  2588   001CD6  0012               	return		;funcret
  2589   001CD8                     __end_of_dtoa:
  2590                           	callstack 0
  2591                           
  2592 ;; *************** function _pad *****************
  2593 ;; Defined at:
  2594 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2595 ;; Parameters:    Size  Location     Type
  2596 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2597 ;;		 -> sprintf@f(11), 
  2598 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2599 ;;		 -> dbuf(32), 
  2600 ;;  p               2   20[COMRAM] int 
  2601 ;; Auto vars:     Size  Location     Type
  2602 ;;  w               2   25[COMRAM] int 
  2603 ;;  i               2   23[COMRAM] int 
  2604 ;; Return value:  Size  Location     Type
  2605 ;;                  1    wreg      void 
  2606 ;; Registers used:
  2607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2608 ;; Tracked objects:
  2609 ;;		On entry : 0/0
  2610 ;;		On exit  : 0/0
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2613 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2614 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2615 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2616 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2617 ;;Total ram usage:       11 bytes
  2618 ;; Hardware stack levels used: 1
  2619 ;; Hardware stack levels required when called: 4
  2620 ;; This function calls:
  2621 ;;		_fputc
  2622 ;;		_fputs
  2623 ;; This function is called by:
  2624 ;;		_dtoa
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628                           	psect	text5
  2629   0022B4                     __ptext5:
  2630                           	callstack 0
  2631   0022B4                     _pad:
  2632                           	callstack 22
  2633   0022B4                     
  2634                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 139:     if (flags & (1 << 0)) {
  2635   0022B4  A05E               	btfss	_flags^0,0,c
  2636   0022B6  EF5F  F011         	goto	u1641
  2637   0022BA  EF61  F011         	goto	u1640
  2638   0022BE                     u1641:
  2639   0022BE  EF6B  F011         	goto	l2102
  2640   0022C2                     u1640:
  2641   0022C2                     
  2642                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 140:         fput
      +                          s((const char *)buf, fp);
  2643   0022C2  C013  F00A         	movff	pad@buf,fputs@s
  2644   0022C6  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2645   0022CA  C011  F00C         	movff	pad@fp,fputs@fp
  2646   0022CE  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2647   0022D2  EC0F  F013         	call	_fputs	;wreg free
  2648   0022D6                     l2102:
  2649                           
  2650                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 145:     w = (p <
      +                           0) ? 0 : p;
  2651   0022D6  BE16               	btfsc	(pad@p+1)^0,7,c
  2652   0022D8  EF70  F011         	goto	u1651
  2653   0022DC  EF72  F011         	goto	u1650
  2654   0022E0                     u1651:
  2655   0022E0  EF78  F011         	goto	l2106
  2656   0022E4                     u1650:
  2657   0022E4  C015  F01A         	movff	pad@p,pad@w
  2658   0022E8  C016  F01B         	movff	pad@p+1,pad@w+1
  2659   0022EC  EF7C  F011         	goto	l1034
  2660   0022F0                     l2106:
  2661   0022F0  0E00               	movlw	0
  2662   0022F2  6E1B               	movwf	(pad@w+1)^0,c
  2663   0022F4  0E00               	movlw	0
  2664   0022F6  6E1A               	movwf	pad@w^0,c
  2665   0022F8                     l1034:
  2666                           
  2667                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2668   0022F8  0E00               	movlw	0
  2669   0022FA  6E19               	movwf	(pad@i+1)^0,c
  2670   0022FC  0E00               	movlw	0
  2671   0022FE  6E18               	movwf	pad@i^0,c
  2672                           
  2673                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2674   002300  EF8E  F011         	goto	l2112
  2675   002304                     l2108:
  2676                           
  2677                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2678   002304  0E00               	movlw	0
  2679   002306  6E02               	movwf	(fputc@c+1)^0,c
  2680   002308  0E20               	movlw	32
  2681   00230A  6E01               	movwf	fputc@c^0,c
  2682   00230C  C011  F003         	movff	pad@fp,fputc@fp
  2683   002310  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2684   002314  EC91  F010         	call	_fputc	;wreg free
  2685   002318                     
  2686                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2687   002318  4A18               	infsnz	pad@i^0,f,c
  2688   00231A  2A19               	incf	(pad@i+1)^0,f,c
  2689   00231C                     l2112:
  2690                           
  2691                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2692   00231C  501A               	movf	pad@w^0,w,c
  2693   00231E  5C18               	subwf	pad@i^0,w,c
  2694   002320  5019               	movf	(pad@i+1)^0,w,c
  2695   002322  0A80               	xorlw	128
  2696   002324  6E17               	movwf	??_pad^0,c
  2697   002326  501B               	movf	(pad@w+1)^0,w,c
  2698   002328  0A80               	xorlw	128
  2699   00232A  5817               	subwfb	??_pad^0,w,c
  2700   00232C  A0D8               	btfss	status,0,c
  2701   00232E  EF9B  F011         	goto	u1661
  2702   002332  EF9D  F011         	goto	u1660
  2703   002336                     u1661:
  2704   002336  EF82  F011         	goto	l2108
  2705   00233A                     u1660:
  2706   00233A                     
  2707                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 154:     if (!(fl
      +                          ags & (1 << 0))) {
  2708   00233A  B05E               	btfsc	_flags^0,0,c
  2709   00233C  EFA2  F011         	goto	u1671
  2710   002340  EFA4  F011         	goto	u1670
  2711   002344                     u1671:
  2712   002344  EFAE  F011         	goto	l1039
  2713   002348                     u1670:
  2714   002348                     
  2715                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2716   002348  C013  F00A         	movff	pad@buf,fputs@s
  2717   00234C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2718   002350  C011  F00C         	movff	pad@fp,fputs@fp
  2719   002354  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2720   002358  EC0F  F013         	call	_fputs	;wreg free
  2721   00235C                     l1039:
  2722   00235C  0012               	return		;funcret
  2723   00235E                     __end_of_pad:
  2724                           	callstack 0
  2725                           
  2726 ;; *************** function _fputs *****************
  2727 ;; Defined at:
  2728 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2729 ;; Parameters:    Size  Location     Type
  2730 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2731 ;;		 -> dbuf(32), 
  2732 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2733 ;;		 -> sprintf@f(11), 
  2734 ;; Auto vars:     Size  Location     Type
  2735 ;;  i               2   14[COMRAM] int 
  2736 ;;  c               1   13[COMRAM] unsigned char 
  2737 ;; Return value:  Size  Location     Type
  2738 ;;                  2    9[COMRAM] int 
  2739 ;; Registers used:
  2740 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2741 ;; Tracked objects:
  2742 ;;		On entry : 0/0
  2743 ;;		On exit  : 0/0
  2744 ;;		Unchanged: 0/0
  2745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2746 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2747 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2749 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2750 ;;Total ram usage:        7 bytes
  2751 ;; Hardware stack levels used: 1
  2752 ;; Hardware stack levels required when called: 3
  2753 ;; This function calls:
  2754 ;;		_fputc
  2755 ;; This function is called by:
  2756 ;;		_pad
  2757 ;; This function uses a non-reentrant model
  2758 ;;
  2759                           
  2760                           	psect	text6
  2761   00261E                     __ptext6:
  2762                           	callstack 0
  2763   00261E                     _fputs:
  2764                           	callstack 22
  2765   00261E  0E00               	movlw	0
  2766   002620  6E10               	movwf	(fputs@i+1)^0,c
  2767   002622  0E00               	movlw	0
  2768   002624  6E0F               	movwf	fputs@i^0,c
  2769   002626  EF20  F013         	goto	l2010
  2770   00262A                     l2006:
  2771   00262A  C00E  F001         	movff	fputs@c,fputc@c
  2772   00262E  6A02               	clrf	(fputc@c+1)^0,c
  2773   002630  C00C  F003         	movff	fputs@fp,fputc@fp
  2774   002634  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2775   002638  EC91  F010         	call	_fputc	;wreg free
  2776   00263C  4A0F               	infsnz	fputs@i^0,f,c
  2777   00263E  2A10               	incf	(fputs@i+1)^0,f,c
  2778   002640                     l2010:
  2779   002640  500F               	movf	fputs@i^0,w,c
  2780   002642  240A               	addwf	fputs@s^0,w,c
  2781   002644  6ED9               	movwf	fsr2l,c
  2782   002646  5010               	movf	(fputs@i+1)^0,w,c
  2783   002648  200B               	addwfc	(fputs@s+1)^0,w,c
  2784   00264A  6EDA               	movwf	fsr2h,c
  2785   00264C  50DF               	movf	indf2,w,c
  2786   00264E  6E0E               	movwf	fputs@c^0,c
  2787   002650  500E               	movf	fputs@c^0,w,c
  2788   002652  A4D8               	btfss	status,2,c
  2789   002654  EF2E  F013         	goto	u1501
  2790   002658  EF30  F013         	goto	u1500
  2791   00265C                     u1501:
  2792   00265C  EF15  F013         	goto	l2006
  2793   002660                     u1500:
  2794   002660  0012               	return		;funcret
  2795   002662                     __end_of_fputs:
  2796                           	callstack 0
  2797                           
  2798 ;; *************** function _fputc *****************
  2799 ;; Defined at:
  2800 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2801 ;; Parameters:    Size  Location     Type
  2802 ;;  c               2    0[COMRAM] int 
  2803 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2804 ;;		 -> sprintf@f(11), 
  2805 ;; Auto vars:     Size  Location     Type
  2806 ;;		None
  2807 ;; Return value:  Size  Location     Type
  2808 ;;                  2    0[COMRAM] int 
  2809 ;; Registers used:
  2810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2811 ;; Tracked objects:
  2812 ;;		On entry : 0/0
  2813 ;;		On exit  : 0/0
  2814 ;;		Unchanged: 0/0
  2815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2816 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2818 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2819 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2820 ;;Total ram usage:        9 bytes
  2821 ;; Hardware stack levels used: 1
  2822 ;; Hardware stack levels required when called: 2
  2823 ;; This function calls:
  2824 ;;		_putch
  2825 ;; This function is called by:
  2826 ;;		_pad
  2827 ;;		_vfpfcnvrt
  2828 ;;		_fputs
  2829 ;; This function uses a non-reentrant model
  2830 ;;
  2831                           
  2832                           	psect	text7
  2833   002122                     __ptext7:
  2834                           	callstack 0
  2835   002122                     _fputc:
  2836                           	callstack 25
  2837   002122  5003               	movf	fputc@fp^0,w,c
  2838   002124  1004               	iorwf	(fputc@fp+1)^0,w,c
  2839   002126  B4D8               	btfsc	status,2,c
  2840   002128  EF98  F010         	goto	u1461
  2841   00212C  EF9A  F010         	goto	u1460
  2842   002130                     u1461:
  2843   002130  EFA3  F010         	goto	l1994
  2844   002134                     u1460:
  2845   002134  5003               	movf	fputc@fp^0,w,c
  2846   002136  1004               	iorwf	(fputc@fp+1)^0,w,c
  2847   002138  A4D8               	btfss	status,2,c
  2848   00213A  EFA1  F010         	goto	u1471
  2849   00213E  EFA3  F010         	goto	u1470
  2850   002142                     u1471:
  2851   002142  EFA8  F010         	goto	l1996
  2852   002146                     u1470:
  2853   002146                     l1994:
  2854   002146  5001               	movf	fputc@c^0,w,c
  2855   002148  EC3C  F014         	call	_putch
  2856   00214C  EFF5  F010         	goto	l1147
  2857   002150                     l1996:
  2858   002150  EE20 F009          	lfsr	2,9
  2859   002154  5003               	movf	fputc@fp^0,w,c
  2860   002156  26D9               	addwf	fsr2l,f,c
  2861   002158  5004               	movf	(fputc@fp+1)^0,w,c
  2862   00215A  22DA               	addwfc	fsr2h,f,c
  2863   00215C  50DE               	movf	postinc2,w,c
  2864   00215E  10DE               	iorwf	postinc2,w,c
  2865   002160  B4D8               	btfsc	status,2,c
  2866   002162  EFB5  F010         	goto	u1481
  2867   002166  EFB7  F010         	goto	u1480
  2868   00216A                     u1481:
  2869   00216A  EFD2  F010         	goto	l2000
  2870   00216E                     u1480:
  2871   00216E  EE20 F009          	lfsr	2,9
  2872   002172  5003               	movf	fputc@fp^0,w,c
  2873   002174  26D9               	addwf	fsr2l,f,c
  2874   002176  5004               	movf	(fputc@fp+1)^0,w,c
  2875   002178  22DA               	addwfc	fsr2h,f,c
  2876   00217A  EE10 F003          	lfsr	1,3
  2877   00217E  5003               	movf	fputc@fp^0,w,c
  2878   002180  26E1               	addwf	fsr1l,f,c
  2879   002182  5004               	movf	(fputc@fp+1)^0,w,c
  2880   002184  22E2               	addwfc	fsr1h,f,c
  2881   002186  50DE               	movf	postinc2,w,c
  2882   002188  5CE6               	subwf	postinc1,w,c
  2883   00218A  50E6               	movf	postinc1,w,c
  2884   00218C  0A80               	xorlw	128
  2885   00218E  6E09               	movwf	(??_fputc+4)^0,c
  2886   002190  50DE               	movf	postinc2,w,c
  2887   002192  0A80               	xorlw	128
  2888   002194  5809               	subwfb	(??_fputc+4)^0,w,c
  2889   002196  B0D8               	btfsc	status,0,c
  2890   002198  EFD0  F010         	goto	u1491
  2891   00219C  EFD2  F010         	goto	u1490
  2892   0021A0                     u1491:
  2893   0021A0  EFF5  F010         	goto	l1147
  2894   0021A4                     u1490:
  2895   0021A4                     l2000:
  2896   0021A4  EE20 F003          	lfsr	2,3
  2897   0021A8  5003               	movf	fputc@fp^0,w,c
  2898   0021AA  26D9               	addwf	fsr2l,f,c
  2899   0021AC  5004               	movf	(fputc@fp+1)^0,w,c
  2900   0021AE  22DA               	addwfc	fsr2h,f,c
  2901   0021B0  CFDE F005          	movff	postinc2,??_fputc
  2902   0021B4  CFDD F006          	movff	postdec2,??_fputc+1
  2903   0021B8  C003  FFD9         	movff	fputc@fp,fsr2l
  2904   0021BC  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2905   0021C0  CFDE F007          	movff	postinc2,??_fputc+2
  2906   0021C4  CFDD F008          	movff	postdec2,??_fputc+3
  2907   0021C8  5005               	movf	??_fputc^0,w,c
  2908   0021CA  2407               	addwf	(??_fputc+2)^0,w,c
  2909   0021CC  6ED9               	movwf	fsr2l,c
  2910   0021CE  5006               	movf	(??_fputc+1)^0,w,c
  2911   0021D0  2008               	addwfc	(??_fputc+3)^0,w,c
  2912   0021D2  6EDA               	movwf	fsr2h,c
  2913   0021D4  C001  FFDF         	movff	fputc@c,indf2
  2914   0021D8  EE20 F003          	lfsr	2,3
  2915   0021DC  5003               	movf	fputc@fp^0,w,c
  2916   0021DE  26D9               	addwf	fsr2l,f,c
  2917   0021E0  5004               	movf	(fputc@fp+1)^0,w,c
  2918   0021E2  22DA               	addwfc	fsr2h,f,c
  2919   0021E4  2ADE               	incf	postinc2,f,c
  2920   0021E6  0E00               	movlw	0
  2921   0021E8  22DD               	addwfc	postdec2,f,c
  2922   0021EA                     l1147:
  2923   0021EA  0012               	return		;funcret
  2924   0021EC                     __end_of_fputc:
  2925                           	callstack 0
  2926                           
  2927 ;; *************** function _putch *****************
  2928 ;; Defined at:
  2929 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;  c               1    wreg     unsigned char 
  2932 ;; Auto vars:     Size  Location     Type
  2933 ;;  c               1    0[COMRAM] unsigned char 
  2934 ;; Return value:  Size  Location     Type
  2935 ;;                  1    wreg      void 
  2936 ;; Registers used:
  2937 ;;		wreg
  2938 ;; Tracked objects:
  2939 ;;		On entry : 0/0
  2940 ;;		On exit  : 0/0
  2941 ;;		Unchanged: 0/0
  2942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2947 ;;Total ram usage:        0 bytes
  2948 ;; Hardware stack levels used: 1
  2949 ;; Hardware stack levels required when called: 1
  2950 ;; This function calls:
  2951 ;;		Nothing
  2952 ;; This function is called by:
  2953 ;;		_fputc
  2954 ;; This function uses a non-reentrant model
  2955 ;;
  2956                           
  2957                           	psect	text8
  2958   002878                     __ptext8:
  2959                           	callstack 0
  2960   002878                     _putch:
  2961                           	callstack 25
  2962   002878  0012               	return		;funcret
  2963   00287A                     __end_of_putch:
  2964                           	callstack 0
  2965                           
  2966 ;; *************** function _abs *****************
  2967 ;; Defined at:
  2968 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;  a               2   18[COMRAM] int 
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;		None
  2973 ;; Return value:  Size  Location     Type
  2974 ;;                  2   18[COMRAM] int 
  2975 ;; Registers used:
  2976 ;;		wreg, status,2, status,0
  2977 ;; Tracked objects:
  2978 ;;		On entry : 0/0
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2982 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2984 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2985 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2986 ;;Total ram usage:        4 bytes
  2987 ;; Hardware stack levels used: 1
  2988 ;; Hardware stack levels required when called: 1
  2989 ;; This function calls:
  2990 ;;		Nothing
  2991 ;; This function is called by:
  2992 ;;		_dtoa
  2993 ;; This function uses a non-reentrant model
  2994 ;;
  2995                           
  2996                           	psect	text9
  2997   002662                     __ptext9:
  2998                           	callstack 0
  2999   002662                     _abs:
  3000                           	callstack 25
  3001   002662  BE14               	btfsc	(abs@a+1)^0,7,c
  3002   002664  EF3E  F013         	goto	u1680
  3003   002668  5014               	movf	(abs@a+1)^0,w,c
  3004   00266A  E106               	bnz	u1681
  3005   00266C  0413               	decf	abs@a^0,w,c
  3006   00266E  B0D8               	btfsc	status,0,c
  3007   002670  EF3C  F013         	goto	u1681
  3008   002674  EF3E  F013         	goto	u1680
  3009   002678                     u1681:
  3010   002678  EF4C  F013         	goto	l1093
  3011   00267C                     u1680:
  3012   00267C  C013  F015         	movff	abs@a,??_abs
  3013   002680  C014  F016         	movff	abs@a+1,??_abs+1
  3014   002684  1E15               	comf	??_abs^0,f,c
  3015   002686  1E16               	comf	(??_abs+1)^0,f,c
  3016   002688  4A15               	infsnz	??_abs^0,f,c
  3017   00268A  2A16               	incf	(??_abs+1)^0,f,c
  3018   00268C  C015  F013         	movff	??_abs,?_abs
  3019   002690  C016  F014         	movff	??_abs+1,?_abs+1
  3020   002694  EF50  F013         	goto	l1096
  3021   002698                     l1093:
  3022   002698  C013  F013         	movff	abs@a,?_abs
  3023   00269C  C014  F014         	movff	abs@a+1,?_abs+1
  3024   0026A0                     l1096:
  3025   0026A0  0012               	return		;funcret
  3026   0026A2                     __end_of_abs:
  3027                           	callstack 0
  3028                           
  3029 ;; *************** function ___aomod *****************
  3030 ;; Defined at:
  3031 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;  dividend        8    0[COMRAM] long long 
  3034 ;;  divisor         8    8[COMRAM] long long 
  3035 ;; Auto vars:     Size  Location     Type
  3036 ;;  sign            1   17[COMRAM] unsigned char 
  3037 ;;  counter         1   16[COMRAM] unsigned char 
  3038 ;; Return value:  Size  Location     Type
  3039 ;;                  8    0[COMRAM] long long 
  3040 ;; Registers used:
  3041 ;;		wreg, status,2, status,0
  3042 ;; Tracked objects:
  3043 ;;		On entry : 0/0
  3044 ;;		On exit  : 0/0
  3045 ;;		Unchanged: 0/0
  3046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3047 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3048 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3050 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3051 ;;Total ram usage:       18 bytes
  3052 ;; Hardware stack levels used: 1
  3053 ;; Hardware stack levels required when called: 1
  3054 ;; This function calls:
  3055 ;;		Nothing
  3056 ;; This function is called by:
  3057 ;;		_dtoa
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061                           	psect	text10
  3062   001E60                     __ptext10:
  3063                           	callstack 0
  3064   001E60                     ___aomod:
  3065                           	callstack 25
  3066   001E60  0E00               	movlw	0
  3067   001E62  6E12               	movwf	___aomod@sign^0,c
  3068   001E64  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  3069   001E66  EF39  F00F         	goto	u1580
  3070   001E6A  EF37  F00F         	goto	u1581
  3071   001E6E                     u1581:
  3072   001E6E  EF4B  F00F         	goto	l2070
  3073   001E72                     u1580:
  3074   001E72  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3075   001E74  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3076   001E76  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3077   001E78  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3078   001E7A  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3079   001E7C  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3080   001E7E  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3081   001E80  6C01               	negf	___aomod@dividend^0,c
  3082   001E82  0E00               	movlw	0
  3083   001E84  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3084   001E86  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3085   001E88  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3086   001E8A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3087   001E8C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3088   001E8E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3089   001E90  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3090   001E92  0E01               	movlw	1
  3091   001E94  6E12               	movwf	___aomod@sign^0,c
  3092   001E96                     l2070:
  3093   001E96  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  3094   001E98  EF52  F00F         	goto	u1590
  3095   001E9C  EF50  F00F         	goto	u1591
  3096   001EA0                     u1591:
  3097   001EA0  EF62  F00F         	goto	l2074
  3098   001EA4                     u1590:
  3099   001EA4  1E10               	comf	(___aomod@divisor+7)^0,f,c
  3100   001EA6  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  3101   001EA8  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  3102   001EAA  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  3103   001EAC  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  3104   001EAE  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  3105   001EB0  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  3106   001EB2  6C09               	negf	___aomod@divisor^0,c
  3107   001EB4  0E00               	movlw	0
  3108   001EB6  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  3109   001EB8  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  3110   001EBA  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  3111   001EBC  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  3112   001EBE  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  3113   001EC0  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  3114   001EC2  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  3115   001EC4                     l2074:
  3116   001EC4  5009               	movf	___aomod@divisor^0,w,c
  3117   001EC6  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  3118   001EC8  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  3119   001ECA  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  3120   001ECC  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  3121   001ECE  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  3122   001ED0  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  3123   001ED2  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  3124   001ED4  B4D8               	btfsc	status,2,c
  3125   001ED6  EF6F  F00F         	goto	u1601
  3126   001EDA  EF71  F00F         	goto	u1600
  3127   001EDE                     u1601:
  3128   001EDE  EFB9  F00F         	goto	l2090
  3129   001EE2                     u1600:
  3130   001EE2  0E01               	movlw	1
  3131   001EE4  6E11               	movwf	___aomod@counter^0,c
  3132   001EE6  EF7F  F00F         	goto	l2080
  3133   001EEA                     l2078:
  3134   001EEA  90D8               	bcf	status,0,c
  3135   001EEC  3609               	rlcf	___aomod@divisor^0,f,c
  3136   001EEE  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  3137   001EF0  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  3138   001EF2  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  3139   001EF4  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  3140   001EF6  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  3141   001EF8  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  3142   001EFA  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  3143   001EFC  2A11               	incf	___aomod@counter^0,f,c
  3144   001EFE                     l2080:
  3145   001EFE  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  3146   001F00  EF84  F00F         	goto	u1611
  3147   001F04  EF86  F00F         	goto	u1610
  3148   001F08                     u1611:
  3149   001F08  EF75  F00F         	goto	l2078
  3150   001F0C                     u1610:
  3151   001F0C                     l2082:
  3152   001F0C  5009               	movf	___aomod@divisor^0,w,c
  3153   001F0E  5C01               	subwf	___aomod@dividend^0,w,c
  3154   001F10  500A               	movf	(___aomod@divisor+1)^0,w,c
  3155   001F12  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  3156   001F14  500B               	movf	(___aomod@divisor+2)^0,w,c
  3157   001F16  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  3158   001F18  500C               	movf	(___aomod@divisor+3)^0,w,c
  3159   001F1A  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  3160   001F1C  500D               	movf	(___aomod@divisor+4)^0,w,c
  3161   001F1E  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  3162   001F20  500E               	movf	(___aomod@divisor+5)^0,w,c
  3163   001F22  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  3164   001F24  500F               	movf	(___aomod@divisor+6)^0,w,c
  3165   001F26  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  3166   001F28  5010               	movf	(___aomod@divisor+7)^0,w,c
  3167   001F2A  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  3168   001F2C  A0D8               	btfss	status,0,c
  3169   001F2E  EF9B  F00F         	goto	u1621
  3170   001F32  EF9D  F00F         	goto	u1620
  3171   001F36                     u1621:
  3172   001F36  EFAD  F00F         	goto	l2086
  3173   001F3A                     u1620:
  3174   001F3A  5009               	movf	___aomod@divisor^0,w,c
  3175   001F3C  5E01               	subwf	___aomod@dividend^0,f,c
  3176   001F3E  500A               	movf	(___aomod@divisor+1)^0,w,c
  3177   001F40  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  3178   001F42  500B               	movf	(___aomod@divisor+2)^0,w,c
  3179   001F44  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  3180   001F46  500C               	movf	(___aomod@divisor+3)^0,w,c
  3181   001F48  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  3182   001F4A  500D               	movf	(___aomod@divisor+4)^0,w,c
  3183   001F4C  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  3184   001F4E  500E               	movf	(___aomod@divisor+5)^0,w,c
  3185   001F50  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  3186   001F52  500F               	movf	(___aomod@divisor+6)^0,w,c
  3187   001F54  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  3188   001F56  5010               	movf	(___aomod@divisor+7)^0,w,c
  3189   001F58  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  3190   001F5A                     l2086:
  3191   001F5A  90D8               	bcf	status,0,c
  3192   001F5C  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  3193   001F5E  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  3194   001F60  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  3195   001F62  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  3196   001F64  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  3197   001F66  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  3198   001F68  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  3199   001F6A  3209               	rrcf	___aomod@divisor^0,f,c
  3200   001F6C  2E11               	decfsz	___aomod@counter^0,f,c
  3201   001F6E  EF86  F00F         	goto	l2082
  3202   001F72                     l2090:
  3203   001F72  5012               	movf	___aomod@sign^0,w,c
  3204   001F74  B4D8               	btfsc	status,2,c
  3205   001F76  EFBF  F00F         	goto	u1631
  3206   001F7A  EFC1  F00F         	goto	u1630
  3207   001F7E                     u1631:
  3208   001F7E  EFD1  F00F         	goto	l2094
  3209   001F82                     u1630:
  3210   001F82  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3211   001F84  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3212   001F86  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3213   001F88  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3214   001F8A  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3215   001F8C  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3216   001F8E  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3217   001F90  6C01               	negf	___aomod@dividend^0,c
  3218   001F92  0E00               	movlw	0
  3219   001F94  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3220   001F96  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3221   001F98  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3222   001F9A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3223   001F9C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3224   001F9E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3225   001FA0  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3226   001FA2                     l2094:
  3227   001FA2  C001  F001         	movff	___aomod@dividend,?___aomod
  3228   001FA6  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3229   001FAA  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3230   001FAE  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3231   001FB2  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3232   001FB6  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3233   001FBA  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3234   001FBE  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3235   001FC2  0012               	return		;funcret
  3236   001FC4                     __end_of___aomod:
  3237                           	callstack 0
  3238                           
  3239 ;; *************** function ___aodiv *****************
  3240 ;; Defined at:
  3241 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  3242 ;; Parameters:    Size  Location     Type
  3243 ;;  dividend        8    0[COMRAM] long long 
  3244 ;;  divisor         8    8[COMRAM] long long 
  3245 ;; Auto vars:     Size  Location     Type
  3246 ;;  quotient        8   18[COMRAM] long long 
  3247 ;;  sign            1   17[COMRAM] unsigned char 
  3248 ;;  counter         1   16[COMRAM] unsigned char 
  3249 ;; Return value:  Size  Location     Type
  3250 ;;                  8    0[COMRAM] long long 
  3251 ;; Registers used:
  3252 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3253 ;; Tracked objects:
  3254 ;;		On entry : 0/0
  3255 ;;		On exit  : 0/0
  3256 ;;		Unchanged: 0/0
  3257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3258 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3259 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3261 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3262 ;;Total ram usage:       26 bytes
  3263 ;; Hardware stack levels used: 1
  3264 ;; Hardware stack levels required when called: 1
  3265 ;; This function calls:
  3266 ;;		Nothing
  3267 ;; This function is called by:
  3268 ;;		_dtoa
  3269 ;; This function uses a non-reentrant model
  3270 ;;
  3271                           
  3272                           	psect	text11
  3273   001CD8                     __ptext11:
  3274                           	callstack 0
  3275   001CD8                     ___aodiv:
  3276                           	callstack 25
  3277   001CD8  0E00               	movlw	0
  3278   001CDA  6E12               	movwf	___aodiv@sign^0,c
  3279   001CDC  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3280   001CDE  EF75  F00E         	goto	u1510
  3281   001CE2  EF73  F00E         	goto	u1511
  3282   001CE6                     u1511:
  3283   001CE6  EF87  F00E         	goto	l2026
  3284   001CEA                     u1510:
  3285   001CEA  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3286   001CEC  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3287   001CEE  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3288   001CF0  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3289   001CF2  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3290   001CF4  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3291   001CF6  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3292   001CF8  6C09               	negf	___aodiv@divisor^0,c
  3293   001CFA  0E00               	movlw	0
  3294   001CFC  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3295   001CFE  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3296   001D00  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3297   001D02  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3298   001D04  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3299   001D06  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3300   001D08  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3301   001D0A  0E01               	movlw	1
  3302   001D0C  6E12               	movwf	___aodiv@sign^0,c
  3303   001D0E                     l2026:
  3304   001D0E  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3305   001D10  EF8E  F00E         	goto	u1520
  3306   001D14  EF8C  F00E         	goto	u1521
  3307   001D18                     u1521:
  3308   001D18  EFA0  F00E         	goto	l2032
  3309   001D1C                     u1520:
  3310   001D1C  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3311   001D1E  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3312   001D20  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3313   001D22  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3314   001D24  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3315   001D26  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3316   001D28  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3317   001D2A  6C01               	negf	___aodiv@dividend^0,c
  3318   001D2C  0E00               	movlw	0
  3319   001D2E  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3320   001D30  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3321   001D32  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3322   001D34  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3323   001D36  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3324   001D38  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3325   001D3A  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3326   001D3C  0E01               	movlw	1
  3327   001D3E  1A12               	xorwf	___aodiv@sign^0,f,c
  3328   001D40                     l2032:
  3329   001D40  EE20  F013         	lfsr	2,___aodiv@quotient
  3330   001D44  0E07               	movlw	7
  3331   001D46                     u1531:
  3332   001D46  6ADE               	clrf	postinc2,c
  3333   001D48  06E8               	decf	wreg,f,c
  3334   001D4A  E2FD               	bc	u1531
  3335   001D4C  5009               	movf	___aodiv@divisor^0,w,c
  3336   001D4E  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3337   001D50  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3338   001D52  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3339   001D54  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3340   001D56  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3341   001D58  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3342   001D5A  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3343   001D5C  B4D8               	btfsc	status,2,c
  3344   001D5E  EFB3  F00E         	goto	u1541
  3345   001D62  EFB5  F00E         	goto	u1540
  3346   001D66                     u1541:
  3347   001D66  EF07  F00F         	goto	l2054
  3348   001D6A                     u1540:
  3349   001D6A  0E01               	movlw	1
  3350   001D6C  6E11               	movwf	___aodiv@counter^0,c
  3351   001D6E  EFC3  F00E         	goto	l2040
  3352   001D72                     l2038:
  3353   001D72  90D8               	bcf	status,0,c
  3354   001D74  3609               	rlcf	___aodiv@divisor^0,f,c
  3355   001D76  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3356   001D78  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3357   001D7A  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3358   001D7C  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3359   001D7E  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3360   001D80  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3361   001D82  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3362   001D84  2A11               	incf	___aodiv@counter^0,f,c
  3363   001D86                     l2040:
  3364   001D86  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3365   001D88  EFC8  F00E         	goto	u1551
  3366   001D8C  EFCA  F00E         	goto	u1550
  3367   001D90                     u1551:
  3368   001D90  EFB9  F00E         	goto	l2038
  3369   001D94                     u1550:
  3370   001D94                     l2042:
  3371   001D94  90D8               	bcf	status,0,c
  3372   001D96  3613               	rlcf	___aodiv@quotient^0,f,c
  3373   001D98  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3374   001D9A  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3375   001D9C  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3376   001D9E  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3377   001DA0  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3378   001DA2  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3379   001DA4  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3380   001DA6  5009               	movf	___aodiv@divisor^0,w,c
  3381   001DA8  5C01               	subwf	___aodiv@dividend^0,w,c
  3382   001DAA  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3383   001DAC  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3384   001DAE  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3385   001DB0  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3386   001DB2  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3387   001DB4  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3388   001DB6  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3389   001DB8  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3390   001DBA  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3391   001DBC  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3392   001DBE  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3393   001DC0  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3394   001DC2  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3395   001DC4  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3396   001DC6  A0D8               	btfss	status,0,c
  3397   001DC8  EFE8  F00E         	goto	u1561
  3398   001DCC  EFEA  F00E         	goto	u1560
  3399   001DD0                     u1561:
  3400   001DD0  EFFB  F00E         	goto	l2050
  3401   001DD4                     u1560:
  3402   001DD4  5009               	movf	___aodiv@divisor^0,w,c
  3403   001DD6  5E01               	subwf	___aodiv@dividend^0,f,c
  3404   001DD8  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3405   001DDA  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3406   001DDC  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3407   001DDE  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3408   001DE0  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3409   001DE2  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3410   001DE4  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3411   001DE6  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3412   001DE8  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3413   001DEA  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3414   001DEC  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3415   001DEE  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3416   001DF0  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3417   001DF2  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3418   001DF4  8013               	bsf	___aodiv@quotient^0,0,c
  3419   001DF6                     l2050:
  3420   001DF6  90D8               	bcf	status,0,c
  3421   001DF8  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3422   001DFA  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3423   001DFC  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3424   001DFE  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3425   001E00  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3426   001E02  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3427   001E04  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3428   001E06  3209               	rrcf	___aodiv@divisor^0,f,c
  3429   001E08  2E11               	decfsz	___aodiv@counter^0,f,c
  3430   001E0A  EFCA  F00E         	goto	l2042
  3431   001E0E                     l2054:
  3432   001E0E  5012               	movf	___aodiv@sign^0,w,c
  3433   001E10  B4D8               	btfsc	status,2,c
  3434   001E12  EF0D  F00F         	goto	u1571
  3435   001E16  EF0F  F00F         	goto	u1570
  3436   001E1A                     u1571:
  3437   001E1A  EF1F  F00F         	goto	l2058
  3438   001E1E                     u1570:
  3439   001E1E  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3440   001E20  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3441   001E22  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3442   001E24  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3443   001E26  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3444   001E28  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3445   001E2A  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3446   001E2C  6C13               	negf	___aodiv@quotient^0,c
  3447   001E2E  0E00               	movlw	0
  3448   001E30  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3449   001E32  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3450   001E34  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3451   001E36  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3452   001E38  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3453   001E3A  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3454   001E3C  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3455   001E3E                     l2058:
  3456   001E3E  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3457   001E42  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3458   001E46  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3459   001E4A  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3460   001E4E  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3461   001E52  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3462   001E56  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3463   001E5A  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3464   001E5E  0012               	return		;funcret
  3465   001E60                     __end_of___aodiv:
  3466                           	callstack 0
  3467                           
  3468 ;; *************** function _atoi *****************
  3469 ;; Defined at:
  3470 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  3471 ;; Parameters:    Size  Location     Type
  3472 ;;  s               2    6[COMRAM] PTR const unsigned char 
  3473 ;;		 -> STR_4(12), STR_3(18), STR_2(6), STR_1(16), 
  3474 ;; Auto vars:     Size  Location     Type
  3475 ;;  n               2   13[COMRAM] int 
  3476 ;;  neg             2   11[COMRAM] int 
  3477 ;; Return value:  Size  Location     Type
  3478 ;;                  2    6[COMRAM] int 
  3479 ;; Registers used:
  3480 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3481 ;; Tracked objects:
  3482 ;;		On entry : 0/0
  3483 ;;		On exit  : 0/0
  3484 ;;		Unchanged: 0/0
  3485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3486 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3487 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3488 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3489 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3490 ;;Total ram usage:        9 bytes
  3491 ;; Hardware stack levels used: 1
  3492 ;; Hardware stack levels required when called: 2
  3493 ;; This function calls:
  3494 ;;		___wmul
  3495 ;;		_isdigit
  3496 ;;		_isspace
  3497 ;; This function is called by:
  3498 ;;		_vfpfcnvrt
  3499 ;; This function uses a non-reentrant model
  3500 ;;
  3501                           
  3502                           	psect	text12
  3503   001FC4                     __ptext12:
  3504                           	callstack 0
  3505   001FC4                     _atoi:
  3506                           	callstack 25
  3507   001FC4  0E00               	movlw	0
  3508   001FC6  6E0F               	movwf	(atoi@n+1)^0,c
  3509   001FC8  0E00               	movlw	0
  3510   001FCA  6E0E               	movwf	atoi@n^0,c
  3511   001FCC  0E00               	movlw	0
  3512   001FCE  6E0D               	movwf	(atoi@neg+1)^0,c
  3513   001FD0  0E00               	movlw	0
  3514   001FD2  6E0C               	movwf	atoi@neg^0,c
  3515   001FD4  EFEE  F00F         	goto	l2208
  3516   001FD8                     l2204:
  3517   001FD8  4A07               	infsnz	atoi@s^0,f,c
  3518   001FDA  2A08               	incf	(atoi@s+1)^0,f,c
  3519   001FDC                     l2208:
  3520   001FDC  C007  FFF6         	movff	atoi@s,tblptrl
  3521   001FE0  C008  FFF7         	movff	atoi@s+1,tblptrh
  3522   001FE4                     	if	0	;tblptru may be non-zero
  3523   001FE4                     	endif
  3524   001FE4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3525   001FE4  0E00               	movlw	low (__mediumconst shr (0+16))
  3526   001FE6  6EF8               	movwf	tblptru,c
  3527   001FE8                     	endif
  3528   001FE8  0008               	tblrd		*
  3529   001FEA  50F5               	movf	tablat,w,c
  3530   001FEC  0A20               	xorlw	32
  3531   001FEE  B4D8               	btfsc	status,2,c
  3532   001FF0  EFFC  F00F         	goto	u1861
  3533   001FF4  EFFE  F00F         	goto	u1860
  3534   001FF8                     u1861:
  3535   001FF8  EFEC  F00F         	goto	l2204
  3536   001FFC                     u1860:
  3537   001FFC  C007  FFF6         	movff	atoi@s,tblptrl
  3538   002000  C008  FFF7         	movff	atoi@s+1,tblptrh
  3539   002004                     	if	0	;tblptru may be non-zero
  3540   002004                     	endif
  3541   002004                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3542   002004  0E00               	movlw	low (__mediumconst shr (0+16))
  3543   002006  6EF8               	movwf	tblptru,c
  3544   002008                     	endif
  3545   002008  0008               	tblrd		*
  3546   00200A  CFF5 F009          	movff	tablat,??_atoi
  3547   00200E  0EF7               	movlw	247
  3548   002010  2409               	addwf	??_atoi^0,w,c
  3549   002012  6E0A               	movwf	(??_atoi+1)^0,c
  3550   002014  6A0B               	clrf	(??_atoi+2)^0,c
  3551   002016  0EFF               	movlw	255
  3552   002018  220B               	addwfc	(??_atoi+2)^0,f,c
  3553   00201A  500B               	movf	(??_atoi+2)^0,w,c
  3554   00201C  E109               	bnz	u1870
  3555   00201E  0E05               	movlw	5
  3556   002020  5C0A               	subwf	(??_atoi+1)^0,w,c
  3557   002022  A0D8               	btfss	status,0,c
  3558   002024  EF16  F010         	goto	u1871
  3559   002028  EF18  F010         	goto	u1870
  3560   00202C                     u1871:
  3561   00202C  EFEC  F00F         	goto	l2204
  3562   002030                     u1870:
  3563   002030  EF22  F010         	goto	l2216
  3564   002034                     l2212:
  3565   002034  0E00               	movlw	0
  3566   002036  6E0D               	movwf	(atoi@neg+1)^0,c
  3567   002038  0E01               	movlw	1
  3568   00203A  6E0C               	movwf	atoi@neg^0,c
  3569   00203C                     l2214:
  3570   00203C  4A07               	infsnz	atoi@s^0,f,c
  3571   00203E  2A08               	incf	(atoi@s+1)^0,f,c
  3572   002040  EF5B  F010         	goto	l2224
  3573   002044                     l2216:
  3574   002044  C007  FFF6         	movff	atoi@s,tblptrl
  3575   002048  C008  FFF7         	movff	atoi@s+1,tblptrh
  3576   00204C                     	if	0	;tblptru may be non-zero
  3577   00204C                     	endif
  3578   00204C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3579   00204C  0E00               	movlw	low (__mediumconst shr (0+16))
  3580   00204E  6EF8               	movwf	tblptru,c
  3581   002050                     	endif
  3582   002050  0008               	tblrd		*
  3583   002052  50F5               	movf	tablat,w,c
  3584   002054  6E09               	movwf	??_atoi^0,c
  3585   002056  6A0A               	clrf	(??_atoi+1)^0,c
  3586                           
  3587                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3588                           ; Switch size 1, requested type "simple"
  3589                           ; Number of cases is 1, Range of values is 0 to 0
  3590                           ; switch strategies available:
  3591                           ; Name         Instructions Cycles
  3592                           ; simple_byte            4     3 (average)
  3593                           ;	Chosen strategy is simple_byte
  3594   002058  500A               	movf	(??_atoi+1)^0,w,c
  3595   00205A  0A00               	xorlw	0	; case 0
  3596   00205C  B4D8               	btfsc	status,2,c
  3597   00205E  EF33  F010         	goto	l2796
  3598   002062  EF5B  F010         	goto	l2224
  3599   002066                     l2796:
  3600                           
  3601                           ; Switch size 1, requested type "simple"
  3602                           ; Number of cases is 2, Range of values is 43 to 45
  3603                           ; switch strategies available:
  3604                           ; Name         Instructions Cycles
  3605                           ; simple_byte            7     4 (average)
  3606                           ;	Chosen strategy is simple_byte
  3607   002066  5009               	movf	??_atoi^0,w,c
  3608   002068  0A2B               	xorlw	43	; case 43
  3609   00206A  B4D8               	btfsc	status,2,c
  3610   00206C  EF1E  F010         	goto	l2214
  3611   002070  0A06               	xorlw	6	; case 45
  3612   002072  B4D8               	btfsc	status,2,c
  3613   002074  EF1A  F010         	goto	l2212
  3614   002078  EF5B  F010         	goto	l2224
  3615   00207C                     l2218:
  3616   00207C  C00E  F001         	movff	atoi@n,___wmul@multiplier
  3617   002080  C00F  F002         	movff	atoi@n+1,___wmul@multiplier+1
  3618   002084  0E00               	movlw	0
  3619   002086  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3620   002088  0E0A               	movlw	10
  3621   00208A  6E03               	movwf	___wmul@multiplicand^0,c
  3622   00208C  ECCD  F013         	call	___wmul	;wreg free
  3623   002090  C007  FFF6         	movff	atoi@s,tblptrl
  3624   002094  C008  FFF7         	movff	atoi@s+1,tblptrh
  3625   002098                     	if	0	;tblptru may be non-zero
  3626   002098                     	endif
  3627   002098                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3628   002098  0E00               	movlw	low (__mediumconst shr (0+16))
  3629   00209A  6EF8               	movwf	tblptru,c
  3630   00209C                     	endif
  3631   00209C  0008               	tblrd		*
  3632   00209E  50F5               	movf	tablat,w,c
  3633   0020A0  5E01               	subwf	?___wmul^0,f,c
  3634   0020A2  0E00               	movlw	0
  3635   0020A4  5A02               	subwfb	(?___wmul+1)^0,f,c
  3636   0020A6  0E30               	movlw	48
  3637   0020A8  2401               	addwf	?___wmul^0,w,c
  3638   0020AA  6E0E               	movwf	atoi@n^0,c
  3639   0020AC  0E00               	movlw	0
  3640   0020AE  2002               	addwfc	(?___wmul+1)^0,w,c
  3641   0020B0  6E0F               	movwf	(atoi@n+1)^0,c
  3642   0020B2  EF1E  F010         	goto	l2214
  3643   0020B6                     l2224:
  3644   0020B6  C007  FFF6         	movff	atoi@s,tblptrl
  3645   0020BA  C008  FFF7         	movff	atoi@s+1,tblptrh
  3646   0020BE                     	if	0	;tblptru may be non-zero
  3647   0020BE                     	endif
  3648   0020BE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3649   0020BE  0E00               	movlw	low (__mediumconst shr (0+16))
  3650   0020C0  6EF8               	movwf	tblptru,c
  3651   0020C2                     	endif
  3652   0020C2  0008               	tblrd		*
  3653   0020C4  CFF5 F009          	movff	tablat,??_atoi
  3654   0020C8  0ED0               	movlw	208
  3655   0020CA  2409               	addwf	??_atoi^0,w,c
  3656   0020CC  6E0A               	movwf	(??_atoi+1)^0,c
  3657   0020CE  6A0B               	clrf	(??_atoi+2)^0,c
  3658   0020D0  0EFF               	movlw	255
  3659   0020D2  220B               	addwfc	(??_atoi+2)^0,f,c
  3660   0020D4  500B               	movf	(??_atoi+2)^0,w,c
  3661   0020D6  E109               	bnz	u1880
  3662   0020D8  0E0A               	movlw	10
  3663   0020DA  5C0A               	subwf	(??_atoi+1)^0,w,c
  3664   0020DC  A0D8               	btfss	status,0,c
  3665   0020DE  EF73  F010         	goto	u1881
  3666   0020E2  EF75  F010         	goto	u1880
  3667   0020E6                     u1881:
  3668   0020E6  EF3E  F010         	goto	l2218
  3669   0020EA                     u1880:
  3670   0020EA  500C               	movf	atoi@neg^0,w,c
  3671   0020EC  100D               	iorwf	(atoi@neg+1)^0,w,c
  3672   0020EE  A4D8               	btfss	status,2,c
  3673   0020F0  EF7C  F010         	goto	u1891
  3674   0020F4  EF7E  F010         	goto	u1890
  3675   0020F8                     u1891:
  3676   0020F8  EF8C  F010         	goto	l1118
  3677   0020FC                     u1890:
  3678   0020FC  C00E  F009         	movff	atoi@n,??_atoi
  3679   002100  C00F  F00A         	movff	atoi@n+1,??_atoi+1
  3680   002104  1E09               	comf	??_atoi^0,f,c
  3681   002106  1E0A               	comf	(??_atoi+1)^0,f,c
  3682   002108  4A09               	infsnz	??_atoi^0,f,c
  3683   00210A  2A0A               	incf	(??_atoi+1)^0,f,c
  3684   00210C  C009  F007         	movff	??_atoi,?_atoi
  3685   002110  C00A  F008         	movff	??_atoi+1,?_atoi+1
  3686   002114  EF90  F010         	goto	l1121
  3687   002118                     l1118:
  3688   002118  C00E  F007         	movff	atoi@n,?_atoi
  3689   00211C  C00F  F008         	movff	atoi@n+1,?_atoi+1
  3690   002120                     l1121:
  3691   002120  0012               	return		;funcret
  3692   002122                     __end_of_atoi:
  3693                           	callstack 0
  3694                           
  3695 ;; *************** function _isspace *****************
  3696 ;; Defined at:
  3697 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;  c               2    0[COMRAM] int 
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;		None
  3702 ;; Return value:  Size  Location     Type
  3703 ;;                  2    0[COMRAM] int 
  3704 ;; Registers used:
  3705 ;;		wreg, status,2, status,0
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3711 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3712 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3713 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3714 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3715 ;;Total ram usage:        5 bytes
  3716 ;; Hardware stack levels used: 1
  3717 ;; Hardware stack levels required when called: 1
  3718 ;; This function calls:
  3719 ;;		Nothing
  3720 ;; This function is called by:
  3721 ;;		_atoi
  3722 ;; This function uses a non-reentrant model
  3723 ;;
  3724                           
  3725                           	psect	text13
  3726   0025D8                     __ptext13:
  3727                           	callstack 0
  3728   0025D8                     _isspace:
  3729                           	callstack 25
  3730   0025D8  0E01               	movlw	1
  3731   0025DA  6E05               	movwf	_isspace$2013^0,c
  3732   0025DC  0E20               	movlw	32
  3733   0025DE  1801               	xorwf	isspace@c^0,w,c
  3734   0025E0  1002               	iorwf	(isspace@c+1)^0,w,c
  3735   0025E2  B4D8               	btfsc	status,2,c
  3736   0025E4  EFF6  F012         	goto	u1711
  3737   0025E8  EFF8  F012         	goto	u1710
  3738   0025EC                     u1711:
  3739   0025EC  EF0B  F013         	goto	l2132
  3740   0025F0                     u1710:
  3741   0025F0  0EF7               	movlw	247
  3742   0025F2  2401               	addwf	isspace@c^0,w,c
  3743   0025F4  6E03               	movwf	??_isspace^0,c
  3744   0025F6  0EFF               	movlw	255
  3745   0025F8  2002               	addwfc	(isspace@c+1)^0,w,c
  3746   0025FA  6E04               	movwf	(??_isspace+1)^0,c
  3747   0025FC  5004               	movf	(??_isspace+1)^0,w,c
  3748   0025FE  E109               	bnz	u1720
  3749   002600  0E05               	movlw	5
  3750   002602  5C03               	subwf	??_isspace^0,w,c
  3751   002604  A0D8               	btfss	status,0,c
  3752   002606  EF07  F013         	goto	u1721
  3753   00260A  EF09  F013         	goto	u1720
  3754   00260E                     u1721:
  3755   00260E  EF0B  F013         	goto	l2132
  3756   002612                     u1720:
  3757   002612  0E00               	movlw	0
  3758   002614  6E05               	movwf	_isspace$2013^0,c
  3759   002616                     l2132:
  3760   002616  C005  F001         	movff	_isspace$2013,?_isspace
  3761   00261A  6A02               	clrf	(?_isspace+1)^0,c
  3762   00261C  0012               	return		;funcret
  3763   00261E                     __end_of_isspace:
  3764                           	callstack 0
  3765                           
  3766 ;; *************** function _isdigit *****************
  3767 ;; Defined at:
  3768 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;  c               2    0[COMRAM] int 
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;		None
  3773 ;; Return value:  Size  Location     Type
  3774 ;;                  2    0[COMRAM] int 
  3775 ;; Registers used:
  3776 ;;		wreg, status,2, status,0
  3777 ;; Tracked objects:
  3778 ;;		On entry : 0/0
  3779 ;;		On exit  : 0/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3782 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3784 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3785 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3786 ;;Total ram usage:        4 bytes
  3787 ;; Hardware stack levels used: 1
  3788 ;; Hardware stack levels required when called: 1
  3789 ;; This function calls:
  3790 ;;		Nothing
  3791 ;; This function is called by:
  3792 ;;		_vfpfcnvrt
  3793 ;;		_atoi
  3794 ;; This function uses a non-reentrant model
  3795 ;;
  3796                           
  3797                           	psect	text14
  3798   002746                     __ptext14:
  3799                           	callstack 0
  3800   002746                     _isdigit:
  3801                           	callstack 26
  3802   002746  0ED0               	movlw	208
  3803   002748  2401               	addwf	isdigit@c^0,w,c
  3804   00274A  6E03               	movwf	??_isdigit^0,c
  3805   00274C  0EFF               	movlw	255
  3806   00274E  2002               	addwfc	(isdigit@c+1)^0,w,c
  3807   002750  6E04               	movwf	(??_isdigit+1)^0,c
  3808   002752  5004               	movf	(??_isdigit+1)^0,w,c
  3809   002754  E10A               	bnz	u1690
  3810   002756  0E0A               	movlw	10
  3811   002758  5C03               	subwf	??_isdigit^0,w,c
  3812   00275A  A0D8               	btfss	status,0,c
  3813   00275C  EFB2  F013         	goto	u1691
  3814   002760  EFB5  F013         	goto	u1690
  3815   002764                     u1691:
  3816   002764  0E01               	movlw	1
  3817   002766  EFB6  F013         	goto	u1700
  3818   00276A                     u1690:
  3819   00276A  0E00               	movlw	0
  3820   00276C                     u1700:
  3821   00276C  6E01               	movwf	?_isdigit^0,c
  3822   00276E  6A02               	clrf	(?_isdigit+1)^0,c
  3823   002770  0012               	return		;funcret
  3824   002772                     __end_of_isdigit:
  3825                           	callstack 0
  3826                           
  3827 ;; *************** function ___wmul *****************
  3828 ;; Defined at:
  3829 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;  multiplier      2    0[COMRAM] unsigned int 
  3832 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;  product         2    4[COMRAM] unsigned int 
  3835 ;; Return value:  Size  Location     Type
  3836 ;;                  2    0[COMRAM] unsigned int 
  3837 ;; Registers used:
  3838 ;;		wreg, status,2, status,0, prodl, prodh
  3839 ;; Tracked objects:
  3840 ;;		On entry : 0/0
  3841 ;;		On exit  : 0/0
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3844 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3845 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3847 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3848 ;;Total ram usage:        6 bytes
  3849 ;; Hardware stack levels used: 1
  3850 ;; Hardware stack levels required when called: 1
  3851 ;; This function calls:
  3852 ;;		Nothing
  3853 ;; This function is called by:
  3854 ;;		_main
  3855 ;;		_atoi
  3856 ;;		_ADC2String
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           
  3860                           	psect	text15
  3861   00279A                     __ptext15:
  3862                           	callstack 0
  3863   00279A                     ___wmul:
  3864                           	callstack 25
  3865   00279A  5001               	movf	___wmul@multiplier^0,w,c
  3866   00279C  0203               	mulwf	___wmul@multiplicand^0,c
  3867   00279E  CFF3 F005          	movff	prodl,___wmul@product
  3868   0027A2  CFF4 F006          	movff	prodh,___wmul@product+1
  3869   0027A6  5001               	movf	___wmul@multiplier^0,w,c
  3870   0027A8  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3871   0027AA  50F3               	movf	243,w,c
  3872   0027AC  2606               	addwf	(___wmul@product+1)^0,f,c
  3873   0027AE  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3874   0027B0  0203               	mulwf	___wmul@multiplicand^0,c
  3875   0027B2  50F3               	movf	243,w,c
  3876   0027B4  2606               	addwf	(___wmul@product+1)^0,f,c
  3877   0027B6  C005  F001         	movff	___wmul@product,?___wmul
  3878   0027BA  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3879   0027BE  0012               	return		;funcret
  3880   0027C0                     __end_of___wmul:
  3881                           	callstack 0
  3882                           
  3883 ;; *************** function _check_month *****************
  3884 ;; Defined at:
  3885 ;;		line 12 in file "../MonthTracker.c"
  3886 ;; Parameters:    Size  Location     Type
  3887 ;;  month           2   11[COMRAM] PTR unsigned int 
  3888 ;;		 -> main@month(2), 
  3889 ;;  month_day       2   13[COMRAM] PTR unsigned int 
  3890 ;;		 -> main@month_day(2), 
  3891 ;;  year            2   15[COMRAM] PTR unsigned short 
  3892 ;;		 -> main@year(2), 
  3893 ;; Auto vars:     Size  Location     Type
  3894 ;;  leap_year       2   19[COMRAM] int 
  3895 ;; Return value:  Size  Location     Type
  3896 ;;                  1    wreg      void 
  3897 ;; Registers used:
  3898 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3899 ;; Tracked objects:
  3900 ;;		On entry : 0/0
  3901 ;;		On exit  : 0/0
  3902 ;;		Unchanged: 0/0
  3903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3904 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3905 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3906 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3907 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3908 ;;Total ram usage:       10 bytes
  3909 ;; Hardware stack levels used: 1
  3910 ;; Hardware stack levels required when called: 2
  3911 ;; This function calls:
  3912 ;;		___lwmod
  3913 ;; This function is called by:
  3914 ;;		_main
  3915 ;; This function uses a non-reentrant model
  3916 ;;
  3917                           
  3918                           	psect	text16
  3919   001434                     __ptext16:
  3920                           	callstack 0
  3921   001434                     _check_month:
  3922                           	callstack 28
  3923   001434                     
  3924                           ;../MonthTracker.c: 16:         if ((*month == 1 || *month == 3 || *month == 5 || *month
      +                           == 7 || *month == 8|| *month == 10 || *month == 12) && *month_day == 32){
  3925   001434  C00C  FFD9         	movff	check_month@month,fsr2l
  3926   001438  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3927   00143C  04DE               	decf	postinc2,w,c
  3928   00143E  10DE               	iorwf	postinc2,w,c
  3929   001440  B4D8               	btfsc	status,2,c
  3930   001442  EF25  F00A         	goto	u2181
  3931   001446  EF27  F00A         	goto	u2180
  3932   00144A                     u2181:
  3933   00144A  EF7B  F00A         	goto	l2478
  3934   00144E                     u2180:
  3935   00144E  C00C  FFD9         	movff	check_month@month,fsr2l
  3936   001452  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3937   001456  0E03               	movlw	3
  3938   001458  18DE               	xorwf	postinc2,w,c
  3939   00145A  10DE               	iorwf	postinc2,w,c
  3940   00145C  B4D8               	btfsc	status,2,c
  3941   00145E  EF33  F00A         	goto	u2191
  3942   001462  EF35  F00A         	goto	u2190
  3943   001466                     u2191:
  3944   001466  EF7B  F00A         	goto	l2478
  3945   00146A                     u2190:
  3946   00146A  C00C  FFD9         	movff	check_month@month,fsr2l
  3947   00146E  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3948   001472  0E05               	movlw	5
  3949   001474  18DE               	xorwf	postinc2,w,c
  3950   001476  10DE               	iorwf	postinc2,w,c
  3951   001478  B4D8               	btfsc	status,2,c
  3952   00147A  EF41  F00A         	goto	u2201
  3953   00147E  EF43  F00A         	goto	u2200
  3954   001482                     u2201:
  3955   001482  EF7B  F00A         	goto	l2478
  3956   001486                     u2200:
  3957   001486  C00C  FFD9         	movff	check_month@month,fsr2l
  3958   00148A  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3959   00148E  0E07               	movlw	7
  3960   001490  18DE               	xorwf	postinc2,w,c
  3961   001492  10DE               	iorwf	postinc2,w,c
  3962   001494  B4D8               	btfsc	status,2,c
  3963   001496  EF4F  F00A         	goto	u2211
  3964   00149A  EF51  F00A         	goto	u2210
  3965   00149E                     u2211:
  3966   00149E  EF7B  F00A         	goto	l2478
  3967   0014A2                     u2210:
  3968   0014A2  C00C  FFD9         	movff	check_month@month,fsr2l
  3969   0014A6  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3970   0014AA  0E08               	movlw	8
  3971   0014AC  18DE               	xorwf	postinc2,w,c
  3972   0014AE  10DE               	iorwf	postinc2,w,c
  3973   0014B0  B4D8               	btfsc	status,2,c
  3974   0014B2  EF5D  F00A         	goto	u2221
  3975   0014B6  EF5F  F00A         	goto	u2220
  3976   0014BA                     u2221:
  3977   0014BA  EF7B  F00A         	goto	l2478
  3978   0014BE                     u2220:
  3979   0014BE  C00C  FFD9         	movff	check_month@month,fsr2l
  3980   0014C2  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3981   0014C6  0E0A               	movlw	10
  3982   0014C8  18DE               	xorwf	postinc2,w,c
  3983   0014CA  10DE               	iorwf	postinc2,w,c
  3984   0014CC  B4D8               	btfsc	status,2,c
  3985   0014CE  EF6B  F00A         	goto	u2231
  3986   0014D2  EF6D  F00A         	goto	u2230
  3987   0014D6                     u2231:
  3988   0014D6  EF7B  F00A         	goto	l2478
  3989   0014DA                     u2230:
  3990   0014DA  C00C  FFD9         	movff	check_month@month,fsr2l
  3991   0014DE  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3992   0014E2  0E0C               	movlw	12
  3993   0014E4  18DE               	xorwf	postinc2,w,c
  3994   0014E6  10DE               	iorwf	postinc2,w,c
  3995   0014E8  A4D8               	btfss	status,2,c
  3996   0014EA  EF79  F00A         	goto	u2241
  3997   0014EE  EF7B  F00A         	goto	u2240
  3998   0014F2                     u2241:
  3999   0014F2  EFB5  F00A         	goto	l2490
  4000   0014F6                     u2240:
  4001   0014F6                     l2478:
  4002   0014F6  C00E  FFD9         	movff	check_month@month_day,fsr2l
  4003   0014FA  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  4004   0014FE  0E20               	movlw	32
  4005   001500  18DE               	xorwf	postinc2,w,c
  4006   001502  10DE               	iorwf	postinc2,w,c
  4007   001504  A4D8               	btfss	status,2,c
  4008   001506  EF87  F00A         	goto	u2251
  4009   00150A  EF89  F00A         	goto	u2250
  4010   00150E                     u2251:
  4011   00150E  EFB5  F00A         	goto	l2490
  4012   001512                     u2250:
  4013   001512                     
  4014                           ;../MonthTracker.c: 18:             *month_day = 1;
  4015   001512  C00E  FFD9         	movff	check_month@month_day,fsr2l
  4016   001516  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  4017   00151A  0E01               	movlw	1
  4018   00151C  6EDE               	movwf	postinc2,c
  4019   00151E  0E00               	movlw	0
  4020   001520  6EDD               	movwf	postdec2,c
  4021   001522                     
  4022                           ;../MonthTracker.c: 19:             (*month)++;
  4023   001522  C00C  FFD9         	movff	check_month@month,fsr2l
  4024   001526  C00D  FFDA         	movff	check_month@month+1,fsr2h
  4025   00152A  2ADE               	incf	postinc2,f,c
  4026   00152C  0E00               	movlw	0
  4027   00152E  22DD               	addwfc	postdec2,f,c
  4028   001530                     
  4029                           ;../MonthTracker.c: 20:             if (*month == 13){
  4030   001530  C00C  FFD9         	movff	check_month@month,fsr2l
  4031   001534  C00D  FFDA         	movff	check_month@month+1,fsr2h
  4032   001538  0E0D               	movlw	13
  4033   00153A  18DE               	xorwf	postinc2,w,c
  4034   00153C  10DE               	iorwf	postinc2,w,c
  4035   00153E  A4D8               	btfss	status,2,c
  4036   001540  EFA4  F00A         	goto	u2261
  4037   001544  EFA6  F00A         	goto	u2260
  4038   001548                     u2261:
  4039   001548  EFB5  F00A         	goto	l2490
  4040   00154C                     u2260:
  4041   00154C                     
  4042                           ;../MonthTracker.c: 21:                 *month = 1;
  4043   00154C  C00C  FFD9         	movff	check_month@month,fsr2l
  4044   001550  C00D  FFDA         	movff	check_month@month+1,fsr2h
  4045   001554  0E01               	movlw	1
  4046   001556  6EDE               	movwf	postinc2,c
  4047   001558  0E00               	movlw	0
  4048   00155A  6EDD               	movwf	postdec2,c
  4049   00155C                     
  4050                           ;../MonthTracker.c: 22:                 (*year)++;
  4051   00155C  C010  FFD9         	movff	check_month@year,fsr2l
  4052   001560  C011  FFDA         	movff	check_month@year+1,fsr2h
  4053   001564  2ADE               	incf	postinc2,f,c
  4054   001566  0E00               	movlw	0
  4055   001568  22DD               	addwfc	postdec2,f,c
  4056   00156A                     l2490:
  4057                           
  4058                           ;../MonthTracker.c: 26:         if ((*month == 4 || *month == 6 || *month == 9 || *month
      +                           == 11) && *month_day == 31){
  4059   00156A  C00C  FFD9         	movff	check_month@month,fsr2l
  4060   00156E  C00D  FFDA         	movff	check_month@month+1,fsr2h
  4061   001572  0E04               	movlw	4
  4062   001574  18DE               	xorwf	postinc2,w,c
  4063   001576  10DE               	iorwf	postinc2,w,c
  4064   001578  B4D8               	btfsc	status,2,c
  4065   00157A  EFC1  F00A         	goto	u2271
  4066   00157E  EFC3  F00A         	goto	u2270
  4067   001582                     u2271:
  4068   001582  EFED  F00A         	goto	l2498
  4069   001586                     u2270:
  4070   001586  C00C  FFD9         	movff	check_month@month,fsr2l
  4071   00158A  C00D  FFDA         	movff	check_month@month+1,fsr2h
  4072   00158E  0E06               	movlw	6
  4073   001590  18DE               	xorwf	postinc2,w,c
  4074   001592  10DE               	iorwf	postinc2,w,c
  4075   001594  B4D8               	btfsc	status,2,c
  4076   001596  EFCF  F00A         	goto	u2281
  4077   00159A  EFD1  F00A         	goto	u2280
  4078   00159E                     u2281:
  4079   00159E  EFED  F00A         	goto	l2498
  4080   0015A2                     u2280:
  4081   0015A2  C00C  FFD9         	movff	check_month@month,fsr2l
  4082   0015A6  C00D  FFDA         	movff	check_month@month+1,fsr2h
  4083   0015AA  0E09               	movlw	9
  4084   0015AC  18DE               	xorwf	postinc2,w,c
  4085   0015AE  10DE               	iorwf	postinc2,w,c
  4086   0015B0  B4D8               	btfsc	status,2,c
  4087   0015B2  EFDD  F00A         	goto	u2291
  4088   0015B6  EFDF  F00A         	goto	u2290
  4089   0015BA                     u2291:
  4090   0015BA  EFED  F00A         	goto	l2498
  4091   0015BE                     u2290:
  4092   0015BE  C00C  FFD9         	movff	check_month@month,fsr2l
  4093   0015C2  C00D  FFDA         	movff	check_month@month+1,fsr2h
  4094   0015C6  0E0B               	movlw	11
  4095   0015C8  18DE               	xorwf	postinc2,w,c
  4096   0015CA  10DE               	iorwf	postinc2,w,c
  4097   0015CC  A4D8               	btfss	status,2,c
  4098   0015CE  EFEB  F00A         	goto	u2301
  4099   0015D2  EFED  F00A         	goto	u2300
  4100   0015D6                     u2301:
  4101   0015D6  EF0A  F00B         	goto	l2504
  4102   0015DA                     u2300:
  4103   0015DA                     l2498:
  4104   0015DA  C00E  FFD9         	movff	check_month@month_day,fsr2l
  4105   0015DE  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  4106   0015E2  0E1F               	movlw	31
  4107   0015E4  18DE               	xorwf	postinc2,w,c
  4108   0015E6  10DE               	iorwf	postinc2,w,c
  4109   0015E8  A4D8               	btfss	status,2,c
  4110   0015EA  EFF9  F00A         	goto	u2311
  4111   0015EE  EFFB  F00A         	goto	u2310
  4112   0015F2                     u2311:
  4113   0015F2  EF0A  F00B         	goto	l2504
  4114   0015F6                     u2310:
  4115   0015F6                     
  4116                           ;../MonthTracker.c: 28:             *month_day = 1;
  4117   0015F6  C00E  FFD9         	movff	check_month@month_day,fsr2l
  4118   0015FA  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  4119   0015FE  0E01               	movlw	1
  4120   001600  6EDE               	movwf	postinc2,c
  4121   001602  0E00               	movlw	0
  4122   001604  6EDD               	movwf	postdec2,c
  4123   001606                     
  4124                           ;../MonthTracker.c: 29:             (*month)++;
  4125   001606  C00C  FFD9         	movff	check_month@month,fsr2l
  4126   00160A  C00D  FFDA         	movff	check_month@month+1,fsr2h
  4127   00160E  2ADE               	incf	postinc2,f,c
  4128   001610  0E00               	movlw	0
  4129   001612  22DD               	addwfc	postdec2,f,c
  4130   001614                     l2504:
  4131                           
  4132                           ;../MonthTracker.c: 33:         if ((*year % 4 == 0 && *year % 100 != 0) || *year % 400 
      +                          == 0) {leap_year = 1;}
  4133   001614  C010  FFD9         	movff	check_month@year,fsr2l
  4134   001618  C011  FFDA         	movff	check_month@year+1,fsr2h
  4135   00161C  CFDE F012          	movff	postinc2,??_check_month
  4136   001620  CFDD F013          	movff	postdec2,??_check_month+1
  4137   001624  0E03               	movlw	3
  4138   001626  1612               	andwf	??_check_month^0,f,c
  4139   001628  0E00               	movlw	0
  4140   00162A  1613               	andwf	(??_check_month+1)^0,f,c
  4141   00162C  5012               	movf	??_check_month^0,w,c
  4142   00162E  1013               	iorwf	(??_check_month+1)^0,w,c
  4143   001630  A4D8               	btfss	status,2,c
  4144   001632  EF1D  F00B         	goto	u2321
  4145   001636  EF1F  F00B         	goto	u2320
  4146   00163A                     u2321:
  4147   00163A  EF36  F00B         	goto	l2508
  4148   00163E                     u2320:
  4149   00163E  C010  FFD9         	movff	check_month@year,fsr2l
  4150   001642  C011  FFDA         	movff	check_month@year+1,fsr2h
  4151   001646  CFDE F007          	movff	postinc2,___lwmod@dividend
  4152   00164A  CFDD F008          	movff	postdec2,___lwmod@dividend+1
  4153   00164E  0E00               	movlw	0
  4154   001650  6E0A               	movwf	(___lwmod@divisor+1)^0,c
  4155   001652  0E64               	movlw	100
  4156   001654  6E09               	movwf	___lwmod@divisor^0,c
  4157   001656  EC68  F012         	call	___lwmod	;wreg free
  4158   00165A  5007               	movf	?___lwmod^0,w,c
  4159   00165C  1008               	iorwf	(?___lwmod+1)^0,w,c
  4160   00165E  A4D8               	btfss	status,2,c
  4161   001660  EF34  F00B         	goto	u2331
  4162   001664  EF36  F00B         	goto	u2330
  4163   001668                     u2331:
  4164   001668  EF4D  F00B         	goto	l2510
  4165   00166C                     u2330:
  4166   00166C                     l2508:
  4167   00166C  C010  FFD9         	movff	check_month@year,fsr2l
  4168   001670  C011  FFDA         	movff	check_month@year+1,fsr2h
  4169   001674  CFDE F007          	movff	postinc2,___lwmod@dividend
  4170   001678  CFDD F008          	movff	postdec2,___lwmod@dividend+1
  4171   00167C  0E01               	movlw	1
  4172   00167E  6E0A               	movwf	(___lwmod@divisor+1)^0,c
  4173   001680  0E90               	movlw	144
  4174   001682  6E09               	movwf	___lwmod@divisor^0,c
  4175   001684  EC68  F012         	call	___lwmod	;wreg free
  4176   001688  5007               	movf	?___lwmod^0,w,c
  4177   00168A  1008               	iorwf	(?___lwmod+1)^0,w,c
  4178   00168C  A4D8               	btfss	status,2,c
  4179   00168E  EF4B  F00B         	goto	u2341
  4180   001692  EF4D  F00B         	goto	u2340
  4181   001696                     u2341:
  4182   001696  EF53  F00B         	goto	l2512
  4183   00169A                     u2340:
  4184   00169A                     l2510:
  4185   00169A  0E00               	movlw	0
  4186   00169C  6E15               	movwf	(check_month@leap_year+1)^0,c
  4187   00169E  0E01               	movlw	1
  4188   0016A0  6E14               	movwf	check_month@leap_year^0,c
  4189   0016A2  EF57  F00B         	goto	l2514
  4190   0016A6                     l2512:
  4191   0016A6  0E00               	movlw	0
  4192   0016A8  6E15               	movwf	(check_month@leap_year+1)^0,c
  4193   0016AA  0E00               	movlw	0
  4194   0016AC  6E14               	movwf	check_month@leap_year^0,c
  4195   0016AE                     l2514:
  4196                           
  4197                           ;../MonthTracker.c: 36:         if (*month == 2 && leap_year == 1){
  4198   0016AE  C00C  FFD9         	movff	check_month@month,fsr2l
  4199   0016B2  C00D  FFDA         	movff	check_month@month+1,fsr2h
  4200   0016B6  0E02               	movlw	2
  4201   0016B8  18DE               	xorwf	postinc2,w,c
  4202   0016BA  10DE               	iorwf	postinc2,w,c
  4203   0016BC  A4D8               	btfss	status,2,c
  4204   0016BE  EF63  F00B         	goto	u2351
  4205   0016C2  EF65  F00B         	goto	u2350
  4206   0016C6                     u2351:
  4207   0016C6  EF8D  F00B         	goto	l2524
  4208   0016CA                     u2350:
  4209   0016CA  0414               	decf	check_month@leap_year^0,w,c
  4210   0016CC  1015               	iorwf	(check_month@leap_year+1)^0,w,c
  4211   0016CE  A4D8               	btfss	status,2,c
  4212   0016D0  EF6C  F00B         	goto	u2361
  4213   0016D4  EF6E  F00B         	goto	u2360
  4214   0016D8                     u2361:
  4215   0016D8  EF8D  F00B         	goto	l2524
  4216   0016DC                     u2360:
  4217   0016DC                     
  4218                           ;../MonthTracker.c: 38:             if (*month_day == 30){
  4219   0016DC  C00E  FFD9         	movff	check_month@month_day,fsr2l
  4220   0016E0  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  4221   0016E4  0E1E               	movlw	30
  4222   0016E6  18DE               	xorwf	postinc2,w,c
  4223   0016E8  10DE               	iorwf	postinc2,w,c
  4224   0016EA  A4D8               	btfss	status,2,c
  4225   0016EC  EF7A  F00B         	goto	u2371
  4226   0016F0  EF7C  F00B         	goto	u2370
  4227   0016F4                     u2371:
  4228   0016F4  EFB4  F00B         	goto	l265
  4229   0016F8                     u2370:
  4230   0016F8                     l2520:
  4231                           
  4232                           ;../MonthTracker.c: 39:                 *month_day = 1;
  4233   0016F8  C00E  FFD9         	movff	check_month@month_day,fsr2l
  4234   0016FC  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  4235   001700  0E01               	movlw	1
  4236   001702  6EDE               	movwf	postinc2,c
  4237   001704  0E00               	movlw	0
  4238   001706  6EDD               	movwf	postdec2,c
  4239   001708                     
  4240                           ;../MonthTracker.c: 40:                 (*month)++;
  4241   001708  C00C  FFD9         	movff	check_month@month,fsr2l
  4242   00170C  C00D  FFDA         	movff	check_month@month+1,fsr2h
  4243   001710  2ADE               	incf	postinc2,f,c
  4244   001712  0E00               	movlw	0
  4245   001714  22DD               	addwfc	postdec2,f,c
  4246   001716  EFB4  F00B         	goto	l265
  4247   00171A                     l2524:
  4248   00171A  C00C  FFD9         	movff	check_month@month,fsr2l
  4249   00171E  C00D  FFDA         	movff	check_month@month+1,fsr2h
  4250   001722  0E02               	movlw	2
  4251   001724  18DE               	xorwf	postinc2,w,c
  4252   001726  10DE               	iorwf	postinc2,w,c
  4253   001728  A4D8               	btfss	status,2,c
  4254   00172A  EF99  F00B         	goto	u2381
  4255   00172E  EF9B  F00B         	goto	u2380
  4256   001732                     u2381:
  4257   001732  EFB4  F00B         	goto	l265
  4258   001736                     u2380:
  4259   001736  5014               	movf	check_month@leap_year^0,w,c
  4260   001738  1015               	iorwf	(check_month@leap_year+1)^0,w,c
  4261   00173A  A4D8               	btfss	status,2,c
  4262   00173C  EFA2  F00B         	goto	u2391
  4263   001740  EFA4  F00B         	goto	u2390
  4264   001744                     u2391:
  4265   001744  EFB4  F00B         	goto	l265
  4266   001748                     u2390:
  4267   001748                     
  4268                           ;../MonthTracker.c: 44:             if (*month_day == 29){
  4269   001748  C00E  FFD9         	movff	check_month@month_day,fsr2l
  4270   00174C  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  4271   001750  0E1D               	movlw	29
  4272   001752  18DE               	xorwf	postinc2,w,c
  4273   001754  10DE               	iorwf	postinc2,w,c
  4274   001756  A4D8               	btfss	status,2,c
  4275   001758  EFB0  F00B         	goto	u2401
  4276   00175C  EFB2  F00B         	goto	u2400
  4277   001760                     u2401:
  4278   001760  EFB4  F00B         	goto	l265
  4279   001764                     u2400:
  4280   001764  EF7C  F00B         	goto	l2520
  4281   001768                     l265:
  4282   001768  0012               	return		;funcret
  4283   00176A                     __end_of_check_month:
  4284                           	callstack 0
  4285                           
  4286 ;; *************** function ___lwmod *****************
  4287 ;; Defined at:
  4288 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwmod.c"
  4289 ;; Parameters:    Size  Location     Type
  4290 ;;  dividend        2    6[COMRAM] unsigned int 
  4291 ;;  divisor         2    8[COMRAM] unsigned int 
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;  counter         1   10[COMRAM] unsigned char 
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  2    6[COMRAM] unsigned int 
  4296 ;; Registers used:
  4297 ;;		wreg, status,2, status,0
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 0/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4303 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4304 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4306 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4307 ;;Total ram usage:        5 bytes
  4308 ;; Hardware stack levels used: 1
  4309 ;; Hardware stack levels required when called: 1
  4310 ;; This function calls:
  4311 ;;		Nothing
  4312 ;; This function is called by:
  4313 ;;		_main
  4314 ;;		_check_month
  4315 ;; This function uses a non-reentrant model
  4316 ;;
  4317                           
  4318                           	psect	text17
  4319   0024D0                     __ptext17:
  4320                           	callstack 0
  4321   0024D0                     ___lwmod:
  4322                           	callstack 28
  4323   0024D0  5009               	movf	___lwmod@divisor^0,w,c
  4324   0024D2  100A               	iorwf	(___lwmod@divisor+1)^0,w,c
  4325   0024D4  B4D8               	btfsc	status,2,c
  4326   0024D6  EF6F  F012         	goto	u2021
  4327   0024DA  EF71  F012         	goto	u2020
  4328   0024DE                     u2021:
  4329   0024DE  EF95  F012         	goto	l830
  4330   0024E2                     u2020:
  4331   0024E2  0E01               	movlw	1
  4332   0024E4  6E0B               	movwf	___lwmod@counter^0,c
  4333   0024E6  EF79  F012         	goto	l2338
  4334   0024EA                     l2336:
  4335   0024EA  90D8               	bcf	status,0,c
  4336   0024EC  3609               	rlcf	___lwmod@divisor^0,f,c
  4337   0024EE  360A               	rlcf	(___lwmod@divisor+1)^0,f,c
  4338   0024F0  2A0B               	incf	___lwmod@counter^0,f,c
  4339   0024F2                     l2338:
  4340   0024F2  AE0A               	btfss	(___lwmod@divisor+1)^0,7,c
  4341   0024F4  EF7E  F012         	goto	u2031
  4342   0024F8  EF80  F012         	goto	u2030
  4343   0024FC                     u2031:
  4344   0024FC  EF75  F012         	goto	l2336
  4345   002500                     u2030:
  4346   002500                     l2340:
  4347   002500  5009               	movf	___lwmod@divisor^0,w,c
  4348   002502  5C07               	subwf	___lwmod@dividend^0,w,c
  4349   002504  500A               	movf	(___lwmod@divisor+1)^0,w,c
  4350   002506  5808               	subwfb	(___lwmod@dividend+1)^0,w,c
  4351   002508  A0D8               	btfss	status,0,c
  4352   00250A  EF89  F012         	goto	u2041
  4353   00250E  EF8B  F012         	goto	u2040
  4354   002512                     u2041:
  4355   002512  EF8F  F012         	goto	l2344
  4356   002516                     u2040:
  4357   002516  5009               	movf	___lwmod@divisor^0,w,c
  4358   002518  5E07               	subwf	___lwmod@dividend^0,f,c
  4359   00251A  500A               	movf	(___lwmod@divisor+1)^0,w,c
  4360   00251C  5A08               	subwfb	(___lwmod@dividend+1)^0,f,c
  4361   00251E                     l2344:
  4362   00251E  90D8               	bcf	status,0,c
  4363   002520  320A               	rrcf	(___lwmod@divisor+1)^0,f,c
  4364   002522  3209               	rrcf	___lwmod@divisor^0,f,c
  4365   002524  2E0B               	decfsz	___lwmod@counter^0,f,c
  4366   002526  EF80  F012         	goto	l2340
  4367   00252A                     l830:
  4368   00252A  C007  F007         	movff	___lwmod@dividend,?___lwmod
  4369   00252E  C008  F008         	movff	___lwmod@dividend+1,?___lwmod+1
  4370   002532  0012               	return		;funcret
  4371   002534                     __end_of___lwmod:
  4372                           	callstack 0
  4373                           
  4374 ;; *************** function ___lwdiv *****************
  4375 ;; Defined at:
  4376 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  4377 ;; Parameters:    Size  Location     Type
  4378 ;;  dividend        2    6[COMRAM] unsigned int 
  4379 ;;  divisor         2    8[COMRAM] unsigned int 
  4380 ;; Auto vars:     Size  Location     Type
  4381 ;;  quotient        2   10[COMRAM] unsigned int 
  4382 ;;  counter         1   12[COMRAM] unsigned char 
  4383 ;; Return value:  Size  Location     Type
  4384 ;;                  2    6[COMRAM] unsigned int 
  4385 ;; Registers used:
  4386 ;;		wreg, status,2, status,0
  4387 ;; Tracked objects:
  4388 ;;		On entry : 0/0
  4389 ;;		On exit  : 0/0
  4390 ;;		Unchanged: 0/0
  4391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4392 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4393 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4395 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4396 ;;Total ram usage:        7 bytes
  4397 ;; Hardware stack levels used: 1
  4398 ;; Hardware stack levels required when called: 1
  4399 ;; This function calls:
  4400 ;;		Nothing
  4401 ;; This function is called by:
  4402 ;;		_main
  4403 ;;		_LEDarray_disp_dec
  4404 ;;		_LEDarray_disp_PPM
  4405 ;;		_ADC2String
  4406 ;; This function uses a non-reentrant model
  4407 ;;
  4408                           
  4409                           	psect	text18
  4410   0023F4                     __ptext18:
  4411                           	callstack 0
  4412   0023F4                     ___lwdiv:
  4413                           	callstack 29
  4414   0023F4  0E00               	movlw	0
  4415   0023F6  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  4416   0023F8  0E00               	movlw	0
  4417   0023FA  6E0B               	movwf	___lwdiv@quotient^0,c
  4418   0023FC  5009               	movf	___lwdiv@divisor^0,w,c
  4419   0023FE  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4420   002400  B4D8               	btfsc	status,2,c
  4421   002402  EF05  F012         	goto	u2411
  4422   002406  EF07  F012         	goto	u2410
  4423   00240A                     u2411:
  4424   00240A  EF2F  F012         	goto	l820
  4425   00240E                     u2410:
  4426   00240E  0E01               	movlw	1
  4427   002410  6E0D               	movwf	___lwdiv@counter^0,c
  4428   002412  EF0F  F012         	goto	l2546
  4429   002416                     l2544:
  4430   002416  90D8               	bcf	status,0,c
  4431   002418  3609               	rlcf	___lwdiv@divisor^0,f,c
  4432   00241A  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4433   00241C  2A0D               	incf	___lwdiv@counter^0,f,c
  4434   00241E                     l2546:
  4435   00241E  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  4436   002420  EF14  F012         	goto	u2421
  4437   002424  EF16  F012         	goto	u2420
  4438   002428                     u2421:
  4439   002428  EF0B  F012         	goto	l2544
  4440   00242C                     u2420:
  4441   00242C                     l2548:
  4442   00242C  90D8               	bcf	status,0,c
  4443   00242E  360B               	rlcf	___lwdiv@quotient^0,f,c
  4444   002430  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4445   002432  5009               	movf	___lwdiv@divisor^0,w,c
  4446   002434  5C07               	subwf	___lwdiv@dividend^0,w,c
  4447   002436  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  4448   002438  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4449   00243A  A0D8               	btfss	status,0,c
  4450   00243C  EF22  F012         	goto	u2431
  4451   002440  EF24  F012         	goto	u2430
  4452   002444                     u2431:
  4453   002444  EF29  F012         	goto	l2556
  4454   002448                     u2430:
  4455   002448  5009               	movf	___lwdiv@divisor^0,w,c
  4456   00244A  5E07               	subwf	___lwdiv@dividend^0,f,c
  4457   00244C  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  4458   00244E  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4459   002450  800B               	bsf	___lwdiv@quotient^0,0,c
  4460   002452                     l2556:
  4461   002452  90D8               	bcf	status,0,c
  4462   002454  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4463   002456  3209               	rrcf	___lwdiv@divisor^0,f,c
  4464   002458  2E0D               	decfsz	___lwdiv@counter^0,f,c
  4465   00245A  EF16  F012         	goto	l2548
  4466   00245E                     l820:
  4467   00245E  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  4468   002462  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4469   002466  0012               	return		;funcret
  4470   002468                     __end_of___lwdiv:
  4471                           	callstack 0
  4472                           
  4473 ;; *************** function _Timer0_init *****************
  4474 ;; Defined at:
  4475 ;;		line 7 in file "../timers.c"
  4476 ;; Parameters:    Size  Location     Type
  4477 ;;		None
  4478 ;; Auto vars:     Size  Location     Type
  4479 ;;		None
  4480 ;; Return value:  Size  Location     Type
  4481 ;;                  1    wreg      void 
  4482 ;; Registers used:
  4483 ;;		wreg, status,2
  4484 ;; Tracked objects:
  4485 ;;		On entry : 0/0
  4486 ;;		On exit  : 0/0
  4487 ;;		Unchanged: 0/0
  4488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4493 ;;Total ram usage:        0 bytes
  4494 ;; Hardware stack levels used: 1
  4495 ;; Hardware stack levels required when called: 1
  4496 ;; This function calls:
  4497 ;;		Nothing
  4498 ;; This function is called by:
  4499 ;;		_main
  4500 ;; This function uses a non-reentrant model
  4501 ;;
  4502                           
  4503                           	psect	text19
  4504   002808                     __ptext19:
  4505                           	callstack 0
  4506   002808                     _Timer0_init:
  4507                           	callstack 29
  4508   002808                     
  4509                           ;../timers.c: 9:     T0CON1bits.T0CS=0b010;
  4510   002808  50D6               	movf	214,w,c	;volatile
  4511   00280A  0B1F               	andlw	-225
  4512   00280C  0940               	iorlw	64
  4513   00280E  6ED6               	movwf	214,c	;volatile
  4514   002810                     
  4515                           ;../timers.c: 10:     T0CON1bits.T0ASYNC=1;
  4516   002810  88D6               	bsf	214,4,c	;volatile
  4517                           
  4518                           ;../timers.c: 11:     T0CON1bits.T0CKPS=0b0010;
  4519   002812  50D6               	movf	214,w,c	;volatile
  4520   002814  0BF0               	andlw	-16
  4521   002816  0902               	iorlw	2
  4522   002818  6ED6               	movwf	214,c	;volatile
  4523   00281A                     
  4524                           ;../timers.c: 12:     T0CON0bits.T016BIT=1;
  4525   00281A  88D5               	bsf	213,4,c	;volatile
  4526                           
  4527                           ;../timers.c: 16:     TMR0H=0b00001011;
  4528   00281C  0E0B               	movlw	11
  4529   00281E  6ED4               	movwf	212,c	;volatile
  4530                           
  4531                           ;../timers.c: 17:     TMR0L=0b00001011;
  4532   002820  0E0B               	movlw	11
  4533   002822  6ED3               	movwf	211,c	;volatile
  4534   002824                     
  4535                           ;../timers.c: 22:     T0CON0bits.T0EN=1;
  4536   002824  8ED5               	bsf	213,7,c	;volatile
  4537   002826  0012               	return		;funcret
  4538   002828                     __end_of_Timer0_init:
  4539                           	callstack 0
  4540                           
  4541 ;; *************** function _Light_init *****************
  4542 ;; Defined at:
  4543 ;;		line 8 in file "../comparator.c"
  4544 ;; Parameters:    Size  Location     Type
  4545 ;;		None
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;		None
  4548 ;; Return value:  Size  Location     Type
  4549 ;;                  1    wreg      void 
  4550 ;; Registers used:
  4551 ;;		None
  4552 ;; Tracked objects:
  4553 ;;		On entry : 0/0
  4554 ;;		On exit  : 0/0
  4555 ;;		Unchanged: 0/0
  4556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4561 ;;Total ram usage:        0 bytes
  4562 ;; Hardware stack levels used: 1
  4563 ;; Hardware stack levels required when called: 1
  4564 ;; This function calls:
  4565 ;;		Nothing
  4566 ;; This function is called by:
  4567 ;;		_main
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570                           
  4571                           	psect	text20
  4572   002864                     __ptext20:
  4573                           	callstack 0
  4574   002864                     _Light_init:
  4575                           	callstack 29
  4576   002864                     
  4577                           ;../comparator.c: 10:    LATHbits.LATH3=1;
  4578   002864  8680               	bsf	128,3,c	;volatile
  4579                           
  4580                           ;../comparator.c: 11:    TRISHbits.TRISH3=0;
  4581   002866  9688               	bcf	136,3,c	;volatile
  4582                           
  4583                           ;../comparator.c: 12:    LATDbits.LATD7=0;
  4584   002868  9E7C               	bcf	124,7,c	;volatile
  4585                           
  4586                           ;../comparator.c: 13:    TRISDbits.TRISD7=0;
  4587   00286A  9E84               	bcf	132,7,c	;volatile
  4588   00286C  0012               	return		;funcret
  4589   00286E                     __end_of_Light_init:
  4590                           	callstack 0
  4591                           
  4592 ;; *************** function _LEDarray_init *****************
  4593 ;; Defined at:
  4594 ;;		line 8 in file "../LEDarray.c"
  4595 ;; Parameters:    Size  Location     Type
  4596 ;;		None
  4597 ;; Auto vars:     Size  Location     Type
  4598 ;;		None
  4599 ;; Return value:  Size  Location     Type
  4600 ;;                  1    wreg      void 
  4601 ;; Registers used:
  4602 ;;		None
  4603 ;; Tracked objects:
  4604 ;;		On entry : 0/0
  4605 ;;		On exit  : 0/0
  4606 ;;		Unchanged: 0/0
  4607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4612 ;;Total ram usage:        0 bytes
  4613 ;; Hardware stack levels used: 1
  4614 ;; Hardware stack levels required when called: 1
  4615 ;; This function calls:
  4616 ;;		Nothing
  4617 ;; This function is called by:
  4618 ;;		_main
  4619 ;; This function uses a non-reentrant model
  4620 ;;
  4621                           
  4622                           	psect	text21
  4623   0027E6                     __ptext21:
  4624                           	callstack 0
  4625   0027E6                     _LEDarray_init:
  4626                           	callstack 29
  4627   0027E6                     
  4628                           ;../LEDarray.c: 9:     TRISGbits.TRISG0 = 0;
  4629   0027E6  9087               	bcf	135,0,c	;volatile
  4630                           
  4631                           ;../LEDarray.c: 10:     TRISGbits.TRISG1 = 0;
  4632   0027E8  9287               	bcf	135,1,c	;volatile
  4633                           
  4634                           ;../LEDarray.c: 11:     TRISAbits.TRISA2 = 0;
  4635   0027EA  9481               	bcf	129,2,c	;volatile
  4636                           
  4637                           ;../LEDarray.c: 12:     TRISFbits.TRISF6 = 0;
  4638   0027EC  9C86               	bcf	134,6,c	;volatile
  4639                           
  4640                           ;../LEDarray.c: 13:     TRISAbits.TRISA4 = 0;
  4641   0027EE  9881               	bcf	129,4,c	;volatile
  4642                           
  4643                           ;../LEDarray.c: 14:     TRISAbits.TRISA5 = 0;
  4644   0027F0  9A81               	bcf	129,5,c	;volatile
  4645                           
  4646                           ;../LEDarray.c: 15:     TRISFbits.TRISF0 = 0;
  4647   0027F2  9086               	bcf	134,0,c	;volatile
  4648                           
  4649                           ;../LEDarray.c: 16:     TRISBbits.TRISB0 = 0;
  4650   0027F4  9082               	bcf	130,0,c	;volatile
  4651                           
  4652                           ;../LEDarray.c: 18:     LATGbits.LATG0 = 0;
  4653   0027F6  907F               	bcf	127,0,c	;volatile
  4654                           
  4655                           ;../LEDarray.c: 19:     LATGbits.LATG1 = 0;
  4656   0027F8  927F               	bcf	127,1,c	;volatile
  4657                           
  4658                           ;../LEDarray.c: 20:     LATAbits.LATA2 = 0;
  4659   0027FA  9479               	bcf	121,2,c	;volatile
  4660                           
  4661                           ;../LEDarray.c: 21:     LATFbits.LATF6 = 0;
  4662   0027FC  9C7E               	bcf	126,6,c	;volatile
  4663                           
  4664                           ;../LEDarray.c: 22:     LATAbits.LATA4 = 0;
  4665   0027FE  9879               	bcf	121,4,c	;volatile
  4666                           
  4667                           ;../LEDarray.c: 23:     LATAbits.LATA5 = 0;
  4668   002800  9A79               	bcf	121,5,c	;volatile
  4669                           
  4670                           ;../LEDarray.c: 24:     LATFbits.LATF0 = 0;
  4671   002802  907E               	bcf	126,0,c	;volatile
  4672                           
  4673                           ;../LEDarray.c: 25:     LATBbits.LATB0 = 0;
  4674   002804  907A               	bcf	122,0,c	;volatile
  4675   002806  0012               	return		;funcret
  4676   002808                     __end_of_LEDarray_init:
  4677                           	callstack 0
  4678                           
  4679 ;; *************** function _LEDarray_disp_bin *****************
  4680 ;; Defined at:
  4681 ;;		line 37 in file "../LEDarray.c"
  4682 ;; Parameters:    Size  Location     Type
  4683 ;;  number          2    0[COMRAM] unsigned int 
  4684 ;; Auto vars:     Size  Location     Type
  4685 ;;		None
  4686 ;; Return value:  Size  Location     Type
  4687 ;;                  1    wreg      void 
  4688 ;; Registers used:
  4689 ;;		None
  4690 ;; Tracked objects:
  4691 ;;		On entry : 0/0
  4692 ;;		On exit  : 0/0
  4693 ;;		Unchanged: 0/0
  4694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4695 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4698 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4699 ;;Total ram usage:        2 bytes
  4700 ;; Hardware stack levels used: 1
  4701 ;; Hardware stack levels required when called: 1
  4702 ;; This function calls:
  4703 ;;		Nothing
  4704 ;; This function is called by:
  4705 ;;		_main
  4706 ;;		_LEDarray_disp_dec
  4707 ;;		_LEDarray_disp_PPM
  4708 ;; This function uses a non-reentrant model
  4709 ;;
  4710                           
  4711                           	psect	text22
  4712   0021EC                     __ptext22:
  4713                           	callstack 0
  4714   0021EC                     _LEDarray_disp_bin:
  4715                           	callstack 29
  4716   0021EC                     
  4717                           ;../LEDarray.c: 38:     if (number & 0b000000001) {LATGbits.LATG0=1;} else {LATGbits.LAT
      +                          G0=0;}
  4718   0021EC  A001               	btfss	LEDarray_disp_bin@number^0,0,c
  4719   0021EE  EFFB  F010         	goto	u2061
  4720   0021F2  EFFD  F010         	goto	u2060
  4721   0021F6                     u2061:
  4722   0021F6  EF00  F011         	goto	l48
  4723   0021FA                     u2060:
  4724   0021FA  807F               	bsf	127,0,c	;volatile
  4725   0021FC  EF01  F011         	goto	l49
  4726   002200                     l48:
  4727   002200  907F               	bcf	127,0,c	;volatile
  4728   002202                     l49:
  4729                           
  4730                           ;../LEDarray.c: 39:     if (number & 0b000000010) {LATGbits.LATG1=1;} else {LATGbits.LAT
      +                          G1=0;}
  4731   002202  A201               	btfss	LEDarray_disp_bin@number^0,1,c
  4732   002204  EF06  F011         	goto	u2071
  4733   002208  EF08  F011         	goto	u2070
  4734   00220C                     u2071:
  4735   00220C  EF0B  F011         	goto	l50
  4736   002210                     u2070:
  4737   002210  827F               	bsf	127,1,c	;volatile
  4738   002212  EF0C  F011         	goto	l51
  4739   002216                     l50:
  4740   002216  927F               	bcf	127,1,c	;volatile
  4741   002218                     l51:
  4742                           
  4743                           ;../LEDarray.c: 40:     if (number & 0b000000100) {LATAbits.LATA2=1;} else {LATAbits.LAT
      +                          A2=0;}
  4744   002218  A401               	btfss	LEDarray_disp_bin@number^0,2,c
  4745   00221A  EF11  F011         	goto	u2081
  4746   00221E  EF13  F011         	goto	u2080
  4747   002222                     u2081:
  4748   002222  EF16  F011         	goto	l52
  4749   002226                     u2080:
  4750   002226  8479               	bsf	121,2,c	;volatile
  4751   002228  EF17  F011         	goto	l53
  4752   00222C                     l52:
  4753   00222C  9479               	bcf	121,2,c	;volatile
  4754   00222E                     l53:
  4755                           
  4756                           ;../LEDarray.c: 41:     if (number & 0b000001000) {LATFbits.LATF6=1;} else {LATFbits.LAT
      +                          F6=0;}
  4757   00222E  A601               	btfss	LEDarray_disp_bin@number^0,3,c
  4758   002230  EF1C  F011         	goto	u2091
  4759   002234  EF1E  F011         	goto	u2090
  4760   002238                     u2091:
  4761   002238  EF21  F011         	goto	l54
  4762   00223C                     u2090:
  4763   00223C  8C7E               	bsf	126,6,c	;volatile
  4764   00223E  EF22  F011         	goto	l55
  4765   002242                     l54:
  4766   002242  9C7E               	bcf	126,6,c	;volatile
  4767   002244                     l55:
  4768                           
  4769                           ;../LEDarray.c: 42:     if (number & 0b000010000) {LATAbits.LATA4=1;} else {LATAbits.LAT
      +                          A4=0;}
  4770   002244  A801               	btfss	LEDarray_disp_bin@number^0,4,c
  4771   002246  EF27  F011         	goto	u2101
  4772   00224A  EF29  F011         	goto	u2100
  4773   00224E                     u2101:
  4774   00224E  EF2C  F011         	goto	l56
  4775   002252                     u2100:
  4776   002252  8879               	bsf	121,4,c	;volatile
  4777   002254  EF2D  F011         	goto	l57
  4778   002258                     l56:
  4779   002258  9879               	bcf	121,4,c	;volatile
  4780   00225A                     l57:
  4781                           
  4782                           ;../LEDarray.c: 43:     if (number & 0b000100000) {LATAbits.LATA5=1;} else {LATAbits.LAT
      +                          A5=0;}
  4783   00225A  AA01               	btfss	LEDarray_disp_bin@number^0,5,c
  4784   00225C  EF32  F011         	goto	u2111
  4785   002260  EF34  F011         	goto	u2110
  4786   002264                     u2111:
  4787   002264  EF37  F011         	goto	l58
  4788   002268                     u2110:
  4789   002268  8A79               	bsf	121,5,c	;volatile
  4790   00226A  EF38  F011         	goto	l59
  4791   00226E                     l58:
  4792   00226E  9A79               	bcf	121,5,c	;volatile
  4793   002270                     l59:
  4794                           
  4795                           ;../LEDarray.c: 44:     if (number & 0b001000000) {LATFbits.LATF0=1;} else {LATFbits.LAT
      +                          F0=0;}
  4796   002270  AC01               	btfss	LEDarray_disp_bin@number^0,6,c
  4797   002272  EF3D  F011         	goto	u2121
  4798   002276  EF3F  F011         	goto	u2120
  4799   00227A                     u2121:
  4800   00227A  EF42  F011         	goto	l60
  4801   00227E                     u2120:
  4802   00227E  807E               	bsf	126,0,c	;volatile
  4803   002280  EF43  F011         	goto	l61
  4804   002284                     l60:
  4805   002284  907E               	bcf	126,0,c	;volatile
  4806   002286                     l61:
  4807                           
  4808                           ;../LEDarray.c: 45:     if (number & 0b010000000) {LATBbits.LATB0=1;} else {LATBbits.LAT
      +                          B0=0;}
  4809   002286  AE01               	btfss	LEDarray_disp_bin@number^0,7,c
  4810   002288  EF48  F011         	goto	u2131
  4811   00228C  EF4A  F011         	goto	u2130
  4812   002290                     u2131:
  4813   002290  EF4D  F011         	goto	l62
  4814   002294                     u2130:
  4815   002294  807A               	bsf	122,0,c	;volatile
  4816   002296  EF4E  F011         	goto	l63
  4817   00229A                     l62:
  4818   00229A  907A               	bcf	122,0,c	;volatile
  4819   00229C                     l63:
  4820                           
  4821                           ;../LEDarray.c: 46:     if (number & 0b100000000) {LATBbits.LATB1=1;} else {LATBbits.LAT
      +                          B1=0;}
  4822   00229C  A002               	btfss	(LEDarray_disp_bin@number+1)^0,0,c
  4823   00229E  EF53  F011         	goto	u2141
  4824   0022A2  EF55  F011         	goto	u2140
  4825   0022A6                     u2141:
  4826   0022A6  EF58  F011         	goto	l64
  4827   0022AA                     u2140:
  4828   0022AA  827A               	bsf	122,1,c	;volatile
  4829   0022AC  EF59  F011         	goto	l66
  4830   0022B0                     l64:
  4831   0022B0  927A               	bcf	122,1,c	;volatile
  4832   0022B2                     l66:
  4833   0022B2  0012               	return		;funcret
  4834   0022B4                     __end_of_LEDarray_disp_bin:
  4835                           	callstack 0
  4836                           
  4837 ;; *************** function _LCD_setline *****************
  4838 ;; Defined at:
  4839 ;;		line 96 in file "../LCD.c"
  4840 ;; Parameters:    Size  Location     Type
  4841 ;;  line            1    wreg     unsigned char 
  4842 ;; Auto vars:     Size  Location     Type
  4843 ;;  line            1    3[COMRAM] unsigned char 
  4844 ;; Return value:  Size  Location     Type
  4845 ;;                  1    wreg      void 
  4846 ;; Registers used:
  4847 ;;		wreg, status,2, status,0, cstack
  4848 ;; Tracked objects:
  4849 ;;		On entry : 0/0
  4850 ;;		On exit  : 0/0
  4851 ;;		Unchanged: 0/0
  4852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4854 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4856 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4857 ;;Total ram usage:        1 bytes
  4858 ;; Hardware stack levels used: 1
  4859 ;; Hardware stack levels required when called: 4
  4860 ;; This function calls:
  4861 ;;		_LCD_sendbyte
  4862 ;; This function is called by:
  4863 ;;		_main
  4864 ;; This function uses a non-reentrant model
  4865 ;;
  4866                           
  4867                           	psect	text23
  4868   0026A2                     __ptext23:
  4869                           	callstack 0
  4870   0026A2                     _LCD_setline:
  4871                           	callstack 26
  4872                           
  4873                           ;incstack = 0
  4874                           ;LCD_setline@line stored from wreg
  4875   0026A2  6E04               	movwf	LCD_setline@line^0,c
  4876   0026A4                     
  4877                           ;../LCD.c: 96: void LCD_setline (char line);../LCD.c: 97: {;../LCD.c: 98:     if (line =
      +                          = 1) {LCD_sendbyte(0x80,0);};
  4878   0026A4  0404               	decf	LCD_setline@line^0,w,c
  4879   0026A6  A4D8               	btfss	status,2,c
  4880   0026A8  EF58  F013         	goto	u2151
  4881   0026AC  EF5A  F013         	goto	u2150
  4882   0026B0                     u2151:
  4883   0026B0  EF5F  F013         	goto	l2438
  4884   0026B4                     u2150:
  4885   0026B4  0E00               	movlw	0
  4886   0026B6  6E02               	movwf	LCD_sendbyte@type^0,c
  4887   0026B8  0E80               	movlw	128
  4888   0026BA  EC6E  F013         	call	_LCD_sendbyte
  4889   0026BE                     l2438:
  4890                           
  4891                           ;../LCD.c: 99:     if (line == 2) {LCD_sendbyte(0xC0,0);}
  4892   0026BE  0E02               	movlw	2
  4893   0026C0  1804               	xorwf	LCD_setline@line^0,w,c
  4894   0026C2  A4D8               	btfss	status,2,c
  4895   0026C4  EF66  F013         	goto	u2161
  4896   0026C8  EF68  F013         	goto	u2160
  4897   0026CC                     u2161:
  4898   0026CC  EF6D  F013         	goto	l311
  4899   0026D0                     u2160:
  4900   0026D0  0E00               	movlw	0
  4901   0026D2  6E02               	movwf	LCD_sendbyte@type^0,c
  4902   0026D4  0EC0               	movlw	192
  4903   0026D6  EC6E  F013         	call	_LCD_sendbyte
  4904   0026DA                     l311:
  4905   0026DA  0012               	return		;funcret
  4906   0026DC                     __end_of_LCD_setline:
  4907                           	callstack 0
  4908                           
  4909 ;; *************** function _LCD_sendstring *****************
  4910 ;; Defined at:
  4911 ;;		line 105 in file "../LCD.c"
  4912 ;; Parameters:    Size  Location     Type
  4913 ;;  string          2    3[COMRAM] PTR unsigned char 
  4914 ;;		 -> main@yearstr(20), main@datestr(50), 
  4915 ;; Auto vars:     Size  Location     Type
  4916 ;;		None
  4917 ;; Return value:  Size  Location     Type
  4918 ;;                  1    wreg      void 
  4919 ;; Registers used:
  4920 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4921 ;; Tracked objects:
  4922 ;;		On entry : 0/0
  4923 ;;		On exit  : 0/0
  4924 ;;		Unchanged: 0/0
  4925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4926 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4929 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4930 ;;Total ram usage:        2 bytes
  4931 ;; Hardware stack levels used: 1
  4932 ;; Hardware stack levels required when called: 4
  4933 ;; This function calls:
  4934 ;;		_LCD_sendbyte
  4935 ;; This function is called by:
  4936 ;;		_main
  4937 ;; This function uses a non-reentrant model
  4938 ;;
  4939                           
  4940                           	psect	text24
  4941   002712                     __ptext24:
  4942                           	callstack 0
  4943   002712                     _LCD_sendstring:
  4944                           	callstack 26
  4945   002712                     
  4946                           ;../LCD.c: 105: void LCD_sendstring(char *string);../LCD.c: 106: {;../LCD.c: 107:  while
      +                          (*string != 0) {
  4947   002712  EF96  F013         	goto	l2460
  4948   002716                     l2456:
  4949                           
  4950                           ;../LCD.c: 108:         LCD_sendbyte(*string++,1);
  4951   002716  0E01               	movlw	1
  4952   002718  6E02               	movwf	LCD_sendbyte@type^0,c
  4953   00271A  C004  FFD9         	movff	LCD_sendstring@string,fsr2l
  4954   00271E  C005  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  4955   002722  50DF               	movf	indf2,w,c
  4956   002724  EC6E  F013         	call	_LCD_sendbyte
  4957   002728  4A04               	infsnz	LCD_sendstring@string^0,f,c
  4958   00272A  2A05               	incf	(LCD_sendstring@string+1)^0,f,c
  4959   00272C                     l2460:
  4960                           
  4961                           ;../LCD.c: 107:  while(*string != 0) {
  4962   00272C  C004  FFD9         	movff	LCD_sendstring@string,fsr2l
  4963   002730  C005  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  4964   002734  50DF               	movf	indf2,w,c
  4965   002736  A4D8               	btfss	status,2,c
  4966   002738  EFA0  F013         	goto	u2171
  4967   00273C  EFA2  F013         	goto	u2170
  4968   002740                     u2171:
  4969   002740  EF8B  F013         	goto	l2456
  4970   002744                     u2170:
  4971   002744  0012               	return		;funcret
  4972   002746                     __end_of_LCD_sendstring:
  4973                           	callstack 0
  4974                           
  4975 ;; *************** function _LCD_clear *****************
  4976 ;; Defined at:
  4977 ;;		line 87 in file "../LCD.c"
  4978 ;; Parameters:    Size  Location     Type
  4979 ;;		None
  4980 ;; Auto vars:     Size  Location     Type
  4981 ;;		None
  4982 ;; Return value:  Size  Location     Type
  4983 ;;                  1    wreg      void 
  4984 ;; Registers used:
  4985 ;;		wreg, status,2, status,0, cstack
  4986 ;; Tracked objects:
  4987 ;;		On entry : 0/0
  4988 ;;		On exit  : 0/0
  4989 ;;		Unchanged: 0/0
  4990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4993 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4994 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4995 ;;Total ram usage:        1 bytes
  4996 ;; Hardware stack levels used: 1
  4997 ;; Hardware stack levels required when called: 4
  4998 ;; This function calls:
  4999 ;;		_LCD_sendbyte
  5000 ;; This function is called by:
  5001 ;;		_main
  5002 ;; This function uses a non-reentrant model
  5003 ;;
  5004                           
  5005                           	psect	text25
  5006   002828                     __ptext25:
  5007                           	callstack 0
  5008   002828                     _LCD_clear:
  5009                           	callstack 26
  5010   002828                     
  5011                           ;../LCD.c: 89:     LCD_sendbyte(0b00000001,0);
  5012   002828  0E00               	movlw	0
  5013   00282A  6E02               	movwf	LCD_sendbyte@type^0,c
  5014   00282C  0E01               	movlw	1
  5015   00282E  EC6E  F013         	call	_LCD_sendbyte
  5016   002832                     
  5017                           ;../LCD.c: 90:     _delay((unsigned long)((2)*(64000000/4000.0)));
  5018   002832  0E2A               	movlw	42
  5019   002834  6E04               	movwf	??_LCD_clear^0,c
  5020   002836  0E8E               	movlw	142
  5021   002838                     u2907:
  5022   002838  2EE8               	decfsz	wreg,f,c
  5023   00283A  D7FE               	bra	u2907
  5024   00283C  2E04               	decfsz	??_LCD_clear^0,f,c
  5025   00283E  D7FC               	bra	u2907
  5026   002840  0012               	return		;funcret
  5027   002842                     __end_of_LCD_clear:
  5028                           	callstack 0
  5029                           
  5030 ;; *************** function _LCD_Init *****************
  5031 ;; Defined at:
  5032 ;;		line 48 in file "../LCD.c"
  5033 ;; Parameters:    Size  Location     Type
  5034 ;;		None
  5035 ;; Auto vars:     Size  Location     Type
  5036 ;;		None
  5037 ;; Return value:  Size  Location     Type
  5038 ;;                  1    wreg      void 
  5039 ;; Registers used:
  5040 ;;		wreg, status,2, status,0, cstack
  5041 ;; Tracked objects:
  5042 ;;		On entry : 0/0
  5043 ;;		On exit  : 0/0
  5044 ;;		Unchanged: 0/0
  5045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5048 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5049 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5050 ;;Total ram usage:        2 bytes
  5051 ;; Hardware stack levels used: 1
  5052 ;; Hardware stack levels required when called: 4
  5053 ;; This function calls:
  5054 ;;		_LCD_sendbyte
  5055 ;;		_LCD_sendnibble
  5056 ;; This function is called by:
  5057 ;;		_main
  5058 ;; This function uses a non-reentrant model
  5059 ;;
  5060                           
  5061                           	psect	text26
  5062   00235E                     __ptext26:
  5063                           	callstack 0
  5064   00235E                     _LCD_Init:
  5065                           	callstack 26
  5066   00235E                     
  5067                           ;../LCD.c: 51:     TRISCbits.TRISC6 = 0;
  5068   00235E  9C83               	bcf	131,6,c	;volatile
  5069                           
  5070                           ;../LCD.c: 52:     TRISCbits.TRISC2 = 0;
  5071   002360  9483               	bcf	131,2,c	;volatile
  5072                           
  5073                           ;../LCD.c: 53:     TRISBbits.TRISB3 = 0;
  5074   002362  9682               	bcf	130,3,c	;volatile
  5075                           
  5076                           ;../LCD.c: 54:     TRISBbits.TRISB2 = 0;
  5077   002364  9482               	bcf	130,2,c	;volatile
  5078                           
  5079                           ;../LCD.c: 55:     TRISEbits.TRISE3 = 0;
  5080   002366  9685               	bcf	133,3,c	;volatile
  5081                           
  5082                           ;../LCD.c: 56:     TRISEbits.TRISE1 = 0;
  5083   002368  9285               	bcf	133,1,c	;volatile
  5084                           
  5085                           ;../LCD.c: 58:     LATCbits.LATC6 = 0;
  5086   00236A  9C7B               	bcf	123,6,c	;volatile
  5087                           
  5088                           ;../LCD.c: 59:     LATCbits.LATC2 = 0;
  5089   00236C  947B               	bcf	123,2,c	;volatile
  5090                           
  5091                           ;../LCD.c: 60:     LATBbits.LATB3 = 0;
  5092   00236E  967A               	bcf	122,3,c	;volatile
  5093                           
  5094                           ;../LCD.c: 61:     LATBbits.LATB2 = 0;
  5095   002370  947A               	bcf	122,2,c	;volatile
  5096                           
  5097                           ;../LCD.c: 62:     LATEbits.LATE3 = 0;
  5098   002372  967D               	bcf	125,3,c	;volatile
  5099                           
  5100                           ;../LCD.c: 63:     LATEbits.LATE1 = 0;
  5101   002374  927D               	bcf	125,1,c	;volatile
  5102   002376                     
  5103                           ;../LCD.c: 66:  _delay((unsigned long)((50)*(64000000/4000.0)));
  5104   002376  0E05               	movlw	5
  5105   002378  6E05               	movwf	(??_LCD_Init+1)^0,c
  5106   00237A  0E0F               	movlw	15
  5107   00237C  6E04               	movwf	??_LCD_Init^0,c
  5108   00237E  0EF1               	movlw	241
  5109   002380                     u2917:
  5110   002380  2EE8               	decfsz	wreg,f,c
  5111   002382  D7FE               	bra	u2917
  5112   002384  2E04               	decfsz	??_LCD_Init^0,f,c
  5113   002386  D7FC               	bra	u2917
  5114   002388  2E05               	decfsz	(??_LCD_Init+1)^0,f,c
  5115   00238A  D7FA               	bra	u2917
  5116   00238C  F000               	nop	
  5117   00238E                     
  5118                           ;../LCD.c: 67:  LCD_sendnibble(0b0011);
  5119   00238E  0E03               	movlw	3
  5120   002390  EC34  F012         	call	_LCD_sendnibble
  5121   002394                     
  5122                           ;../LCD.c: 68:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  5123   002394  0EF0               	movlw	240
  5124   002396                     u2927:
  5125   002396  2EE8               	decfsz	wreg,f,c
  5126   002398  D7FE               	bra	u2927
  5127                           
  5128                           ;../LCD.c: 69:     LCD_sendnibble(0b0010);
  5129   00239A  0E02               	movlw	2
  5130   00239C  EC34  F012         	call	_LCD_sendnibble
  5131   0023A0                     
  5132                           ;../LCD.c: 70:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  5133   0023A0  0EF0               	movlw	240
  5134   0023A2                     u2937:
  5135   0023A2  2EE8               	decfsz	wreg,f,c
  5136   0023A4  D7FE               	bra	u2937
  5137   0023A6                     
  5138                           ;../LCD.c: 71:     LCD_sendbyte(0b00101000,0);
  5139   0023A6  0E00               	movlw	0
  5140   0023A8  6E02               	movwf	LCD_sendbyte@type^0,c
  5141   0023AA  0E28               	movlw	40
  5142   0023AC  EC6E  F013         	call	_LCD_sendbyte
  5143   0023B0                     
  5144                           ;../LCD.c: 72:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  5145   0023B0  0EF0               	movlw	240
  5146   0023B2                     u2947:
  5147   0023B2  2EE8               	decfsz	wreg,f,c
  5148   0023B4  D7FE               	bra	u2947
  5149   0023B6                     
  5150                           ;../LCD.c: 74:     LCD_sendbyte(0b00001000,0);
  5151   0023B6  0E00               	movlw	0
  5152   0023B8  6E02               	movwf	LCD_sendbyte@type^0,c
  5153   0023BA  0E08               	movlw	8
  5154   0023BC  EC6E  F013         	call	_LCD_sendbyte
  5155   0023C0                     
  5156                           ;../LCD.c: 75:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  5157   0023C0  0EF0               	movlw	240
  5158   0023C2                     u2957:
  5159   0023C2  2EE8               	decfsz	wreg,f,c
  5160   0023C4  D7FE               	bra	u2957
  5161   0023C6                     
  5162                           ;../LCD.c: 76:     LCD_sendbyte(0b00000001,0);
  5163   0023C6  0E00               	movlw	0
  5164   0023C8  6E02               	movwf	LCD_sendbyte@type^0,c
  5165   0023CA  0E01               	movlw	1
  5166   0023CC  EC6E  F013         	call	_LCD_sendbyte
  5167   0023D0                     
  5168                           ;../LCD.c: 77:     _delay((unsigned long)((2)*(64000000/4000.0)));
  5169   0023D0  0E2A               	movlw	42
  5170   0023D2  6E04               	movwf	??_LCD_Init^0,c
  5171   0023D4  0E8E               	movlw	142
  5172   0023D6                     u2967:
  5173   0023D6  2EE8               	decfsz	wreg,f,c
  5174   0023D8  D7FE               	bra	u2967
  5175   0023DA  2E04               	decfsz	??_LCD_Init^0,f,c
  5176   0023DC  D7FC               	bra	u2967
  5177   0023DE                     
  5178                           ;../LCD.c: 78:     LCD_sendbyte(0b0000110,0);
  5179   0023DE  0E00               	movlw	0
  5180   0023E0  6E02               	movwf	LCD_sendbyte@type^0,c
  5181   0023E2  0E06               	movlw	6
  5182   0023E4  EC6E  F013         	call	_LCD_sendbyte
  5183   0023E8                     
  5184                           ;../LCD.c: 81:     LCD_sendbyte(0b00001100,0);
  5185   0023E8  0E00               	movlw	0
  5186   0023EA  6E02               	movwf	LCD_sendbyte@type^0,c
  5187   0023EC  0E0C               	movlw	12
  5188   0023EE  EC6E  F013         	call	_LCD_sendbyte
  5189   0023F2  0012               	return		;funcret
  5190   0023F4                     __end_of_LCD_Init:
  5191                           	callstack 0
  5192                           
  5193 ;; *************** function _LCD_sendbyte *****************
  5194 ;; Defined at:
  5195 ;;		line 36 in file "../LCD.c"
  5196 ;; Parameters:    Size  Location     Type
  5197 ;;  Byte            1    wreg     unsigned char 
  5198 ;;  type            1    1[COMRAM] unsigned char 
  5199 ;; Auto vars:     Size  Location     Type
  5200 ;;  Byte            1    2[COMRAM] unsigned char 
  5201 ;; Return value:  Size  Location     Type
  5202 ;;                  1    wreg      void 
  5203 ;; Registers used:
  5204 ;;		wreg, status,2, status,0, cstack
  5205 ;; Tracked objects:
  5206 ;;		On entry : 0/0
  5207 ;;		On exit  : 0/0
  5208 ;;		Unchanged: 0/0
  5209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5210 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5211 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5213 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5214 ;;Total ram usage:        2 bytes
  5215 ;; Hardware stack levels used: 1
  5216 ;; Hardware stack levels required when called: 3
  5217 ;; This function calls:
  5218 ;;		_LCD_sendnibble
  5219 ;; This function is called by:
  5220 ;;		_LCD_Init
  5221 ;;		_LCD_clear
  5222 ;;		_LCD_setline
  5223 ;;		_LCD_sendstring
  5224 ;;		_LCD_scroll
  5225 ;; This function uses a non-reentrant model
  5226 ;;
  5227                           
  5228                           	psect	text27
  5229   0026DC                     __ptext27:
  5230                           	callstack 0
  5231   0026DC                     _LCD_sendbyte:
  5232                           	callstack 26
  5233                           
  5234                           ;incstack = 0
  5235                           ;LCD_sendbyte@Byte stored from wreg
  5236   0026DC  6E03               	movwf	LCD_sendbyte@Byte^0,c
  5237   0026DE                     
  5238                           ;../LCD.c: 36: void LCD_sendbyte(unsigned char Byte, char type);../LCD.c: 37: {;../LCD.c
      +                          : 38:     if (type) {LATCbits.LATC6 = 1;} else {LATCbits.LATC6 = 0;}
  5239   0026DE  5002               	movf	LCD_sendbyte@type^0,w,c
  5240   0026E0  B4D8               	btfsc	status,2,c
  5241   0026E2  EF75  F013         	goto	u2011
  5242   0026E6  EF77  F013         	goto	u2010
  5243   0026EA                     u2011:
  5244   0026EA  EF7A  F013         	goto	l298
  5245   0026EE                     u2010:
  5246   0026EE  8C7B               	bsf	123,6,c	;volatile
  5247   0026F0  EF7B  F013         	goto	l2328
  5248   0026F4                     l298:
  5249   0026F4  9C7B               	bcf	123,6,c	;volatile
  5250   0026F6                     l2328:
  5251                           
  5252                           ;../LCD.c: 39:     LCD_sendnibble((Byte >> 4)& 0b1111);
  5253   0026F6  3803               	swapf	LCD_sendbyte@Byte^0,w,c
  5254   0026F8  0B0F               	andlw	15
  5255   0026FA  0B0F               	andlw	15
  5256   0026FC  EC34  F012         	call	_LCD_sendnibble
  5257                           
  5258                           ;../LCD.c: 40:     LCD_sendnibble(Byte & 0b00001111);
  5259   002700  5003               	movf	LCD_sendbyte@Byte^0,w,c
  5260   002702  0B0F               	andlw	15
  5261   002704  EC34  F012         	call	_LCD_sendnibble
  5262   002708                     
  5263                           ;../LCD.c: 42:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  5264   002708  0EA0               	movlw	160
  5265   00270A                     u2977:
  5266   00270A  D000               	nop2	
  5267   00270C  2EE8               	decfsz	wreg,f,c
  5268   00270E  D7FD               	bra	u2977
  5269   002710  0012               	return		;funcret
  5270   002712                     __end_of_LCD_sendbyte:
  5271                           	callstack 0
  5272                           
  5273 ;; *************** function _LCD_sendnibble *****************
  5274 ;; Defined at:
  5275 ;;		line 19 in file "../LCD.c"
  5276 ;; Parameters:    Size  Location     Type
  5277 ;;  number          1    wreg     unsigned char 
  5278 ;; Auto vars:     Size  Location     Type
  5279 ;;  number          1    0[COMRAM] unsigned char 
  5280 ;; Return value:  Size  Location     Type
  5281 ;;                  1    wreg      void 
  5282 ;; Registers used:
  5283 ;;		wreg, cstack
  5284 ;; Tracked objects:
  5285 ;;		On entry : 0/0
  5286 ;;		On exit  : 0/0
  5287 ;;		Unchanged: 0/0
  5288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5290 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5292 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5293 ;;Total ram usage:        1 bytes
  5294 ;; Hardware stack levels used: 1
  5295 ;; Hardware stack levels required when called: 2
  5296 ;; This function calls:
  5297 ;;		_LCD_E_TOG
  5298 ;; This function is called by:
  5299 ;;		_LCD_sendbyte
  5300 ;;		_LCD_Init
  5301 ;; This function uses a non-reentrant model
  5302 ;;
  5303                           
  5304                           	psect	text28
  5305   002468                     __ptext28:
  5306                           	callstack 0
  5307   002468                     _LCD_sendnibble:
  5308                           	callstack 26
  5309                           
  5310                           ;incstack = 0
  5311                           ;LCD_sendnibble@number stored from wreg
  5312   002468  6E01               	movwf	LCD_sendnibble@number^0,c
  5313   00246A                     
  5314                           ;../LCD.c: 19: void LCD_sendnibble(unsigned char number);../LCD.c: 20: {;../LCD.c: 22:  
      +                          if (number & 0b0001) {LATBbits.LATB3 = 1;} else {LATBbits.LATB3 = 0;}
  5315   00246A  A001               	btfss	LCD_sendnibble@number^0,0,c
  5316   00246C  EF3A  F012         	goto	u1901
  5317   002470  EF3C  F012         	goto	u1900
  5318   002474                     u1901:
  5319   002474  EF3F  F012         	goto	l287
  5320   002478                     u1900:
  5321   002478  867A               	bsf	122,3,c	;volatile
  5322   00247A  EF40  F012         	goto	l2238
  5323   00247E                     l287:
  5324   00247E  967A               	bcf	122,3,c	;volatile
  5325   002480                     l2238:
  5326                           
  5327                           ;../LCD.c: 23:     if (number & 0b0010) {LATBbits.LATB2 = 1;} else {LATBbits.LATB2 = 0;}
  5328   002480  A201               	btfss	LCD_sendnibble@number^0,1,c
  5329   002482  EF45  F012         	goto	u1911
  5330   002486  EF47  F012         	goto	u1910
  5331   00248A                     u1911:
  5332   00248A  EF4A  F012         	goto	l289
  5333   00248E                     u1910:
  5334   00248E  847A               	bsf	122,2,c	;volatile
  5335   002490  EF4B  F012         	goto	l2242
  5336   002494                     l289:
  5337   002494  947A               	bcf	122,2,c	;volatile
  5338   002496                     l2242:
  5339                           
  5340                           ;../LCD.c: 24:     if (number & 0b0100) {LATEbits.LATE3 = 1;} else {LATEbits.LATE3 = 0;}
  5341   002496  A401               	btfss	LCD_sendnibble@number^0,2,c
  5342   002498  EF50  F012         	goto	u1921
  5343   00249C  EF52  F012         	goto	u1920
  5344   0024A0                     u1921:
  5345   0024A0  EF55  F012         	goto	l291
  5346   0024A4                     u1920:
  5347   0024A4  867D               	bsf	125,3,c	;volatile
  5348   0024A6  EF56  F012         	goto	l2246
  5349   0024AA                     l291:
  5350   0024AA  967D               	bcf	125,3,c	;volatile
  5351   0024AC                     l2246:
  5352                           
  5353                           ;../LCD.c: 25:     if (number & 0b1000) {LATEbits.LATE1 = 1;} else {LATEbits.LATE1 = 0;}
  5354   0024AC  A601               	btfss	LCD_sendnibble@number^0,3,c
  5355   0024AE  EF5B  F012         	goto	u1931
  5356   0024B2  EF5D  F012         	goto	u1930
  5357   0024B6                     u1931:
  5358   0024B6  EF60  F012         	goto	l293
  5359   0024BA                     u1930:
  5360   0024BA  827D               	bsf	125,1,c	;volatile
  5361   0024BC  EF61  F012         	goto	l2250
  5362   0024C0                     l293:
  5363   0024C0  927D               	bcf	125,1,c	;volatile
  5364   0024C2                     l2250:
  5365                           
  5366                           ;../LCD.c: 27:     LCD_E_TOG();
  5367   0024C2  EC2B  F014         	call	_LCD_E_TOG	;wreg free
  5368   0024C6                     
  5369                           ;../LCD.c: 28:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  5370   0024C6  0E1A               	movlw	26
  5371   0024C8                     u2987:
  5372   0024C8  2EE8               	decfsz	wreg,f,c
  5373   0024CA  D7FE               	bra	u2987
  5374   0024CC  D000               	nop2	
  5375   0024CE  0012               	return		;funcret
  5376   0024D0                     __end_of_LCD_sendnibble:
  5377                           	callstack 0
  5378                           
  5379 ;; *************** function _LCD_E_TOG *****************
  5380 ;; Defined at:
  5381 ;;		line 9 in file "../LCD.c"
  5382 ;; Parameters:    Size  Location     Type
  5383 ;;		None
  5384 ;; Auto vars:     Size  Location     Type
  5385 ;;		None
  5386 ;; Return value:  Size  Location     Type
  5387 ;;                  1    wreg      void 
  5388 ;; Registers used:
  5389 ;;		wreg
  5390 ;; Tracked objects:
  5391 ;;		On entry : 0/0
  5392 ;;		On exit  : 0/0
  5393 ;;		Unchanged: 0/0
  5394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5399 ;;Total ram usage:        0 bytes
  5400 ;; Hardware stack levels used: 1
  5401 ;; Hardware stack levels required when called: 1
  5402 ;; This function calls:
  5403 ;;		Nothing
  5404 ;; This function is called by:
  5405 ;;		_LCD_sendnibble
  5406 ;; This function uses a non-reentrant model
  5407 ;;
  5408                           
  5409                           	psect	text29
  5410   002856                     __ptext29:
  5411                           	callstack 0
  5412   002856                     _LCD_E_TOG:
  5413                           	callstack 26
  5414   002856                     
  5415                           ;../LCD.c: 11:  LATCbits.LATC2 = 1;
  5416   002856  847B               	bsf	123,2,c	;volatile
  5417   002858                     
  5418                           ;../LCD.c: 12:  _delay((unsigned long)((2)*(64000000/4000000.0)));
  5419   002858  0E0A               	movlw	10
  5420   00285A                     u2997:
  5421   00285A  2EE8               	decfsz	wreg,f,c
  5422   00285C  D7FE               	bra	u2997
  5423   00285E  D000               	nop2	
  5424   002860                     
  5425                           ;../LCD.c: 13:  LATCbits.LATC2 = 0;
  5426   002860  947B               	bcf	123,2,c	;volatile
  5427   002862  0012               	return		;funcret
  5428   002864                     __end_of_LCD_E_TOG:
  5429                           	callstack 0
  5430                           
  5431 ;; *************** function _Interrupts_init *****************
  5432 ;; Defined at:
  5433 ;;		line 11 in file "../interrupts.c"
  5434 ;; Parameters:    Size  Location     Type
  5435 ;;		None
  5436 ;; Auto vars:     Size  Location     Type
  5437 ;;		None
  5438 ;; Return value:  Size  Location     Type
  5439 ;;                  1    wreg      void 
  5440 ;; Registers used:
  5441 ;;		None
  5442 ;; Tracked objects:
  5443 ;;		On entry : 0/0
  5444 ;;		On exit  : 0/0
  5445 ;;		Unchanged: 0/0
  5446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5451 ;;Total ram usage:        0 bytes
  5452 ;; Hardware stack levels used: 1
  5453 ;; Hardware stack levels required when called: 1
  5454 ;; This function calls:
  5455 ;;		Nothing
  5456 ;; This function is called by:
  5457 ;;		_main
  5458 ;; This function uses a non-reentrant model
  5459 ;;
  5460                           
  5461                           	psect	text30
  5462   00286E                     __ptext30:
  5463                           	callstack 0
  5464   00286E                     _Interrupts_init:
  5465                           	callstack 29
  5466   00286E                     
  5467                           ;../interrupts.c: 14:     TMR0IE=1;
  5468   00286E  010E               	movlb	14	; () banked
  5469   002870  8B29               	bsf	41,5,b	;volatile
  5470                           
  5471                           ;../interrupts.c: 15:     INTCONbits.GIEH=1;
  5472   002872  8EF2               	bsf	242,7,c	;volatile
  5473                           
  5474                           ;../interrupts.c: 16:     INTCONbits.GIEL = 1;
  5475   002874  8CF2               	bsf	242,6,c	;volatile
  5476   002876                     
  5477                           ; BSR set to: 14
  5478   002876  0012               	return		;funcret
  5479   002878                     __end_of_Interrupts_init:
  5480                           	callstack 0
  5481                           
  5482 ;; *************** function _Comp1_init *****************
  5483 ;; Defined at:
  5484 ;;		line 31 in file "../comparator.c"
  5485 ;; Parameters:    Size  Location     Type
  5486 ;;		None
  5487 ;; Auto vars:     Size  Location     Type
  5488 ;;		None
  5489 ;; Return value:  Size  Location     Type
  5490 ;;                  1    wreg      void 
  5491 ;; Registers used:
  5492 ;;		wreg, status,2, cstack
  5493 ;; Tracked objects:
  5494 ;;		On entry : 0/0
  5495 ;;		On exit  : 0/0
  5496 ;;		Unchanged: 0/0
  5497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5502 ;;Total ram usage:        0 bytes
  5503 ;; Hardware stack levels used: 1
  5504 ;; Hardware stack levels required when called: 2
  5505 ;; This function calls:
  5506 ;;		_DAC_init
  5507 ;; This function is called by:
  5508 ;;		_main
  5509 ;; This function uses a non-reentrant model
  5510 ;;
  5511                           
  5512                           	psect	text31
  5513   0027C0                     __ptext31:
  5514                           	callstack 0
  5515   0027C0                     _Comp1_init:
  5516                           	callstack 28
  5517   0027C0                     
  5518                           ;../comparator.c: 33:     TRISAbits.TRISA3=1;
  5519   0027C0  8681               	bsf	129,3,c	;volatile
  5520   0027C2                     
  5521                           ;../comparator.c: 34:     CM1NCHbits.NCH=0b011;
  5522   0027C2  010E               	movlb	14	; () banked
  5523   0027C4  51D2               	movf	210,w,b	;volatile
  5524   0027C6  0BF8               	andlw	-8
  5525   0027C8  0903               	iorlw	3
  5526   0027CA  6FD2               	movwf	210,b	;volatile
  5527                           
  5528                           ;../comparator.c: 35:     CM1PCHbits.PCH=0b101;
  5529   0027CC  51D3               	movf	211,w,b	;volatile
  5530   0027CE  0BF8               	andlw	-8
  5531   0027D0  0905               	iorlw	5
  5532   0027D2  6FD3               	movwf	211,b	;volatile
  5533   0027D4                     
  5534                           ; BSR set to: 14
  5535                           ;../comparator.c: 36:     CM1CON0bits.HYS=1;
  5536   0027D4  83D0               	bsf	208,1,b	;volatile
  5537   0027D6                     
  5538                           ; BSR set to: 14
  5539                           ;../comparator.c: 37:     CM1CON0bits.POL=1;
  5540   0027D6  89D0               	bsf	208,4,b	;volatile
  5541   0027D8                     
  5542                           ; BSR set to: 14
  5543                           ;../comparator.c: 38:     CM1CON1bits.INTP=1;
  5544   0027D8  83D1               	bsf	209,1,b	;volatile
  5545   0027DA                     
  5546                           ; BSR set to: 14
  5547                           ;../comparator.c: 39:     CM1CON1bits.INTN=1;
  5548   0027DA  81D1               	bsf	209,0,b	;volatile
  5549   0027DC                     
  5550                           ; BSR set to: 14
  5551                           ;../comparator.c: 40:     DAC_init();
  5552   0027DC  EC21  F014         	call	_DAC_init	;wreg free
  5553   0027E0                     
  5554                           ;../comparator.c: 41:     CM1CON0bits.EN=1;
  5555   0027E0  010E               	movlb	14	; () banked
  5556   0027E2  8FD0               	bsf	208,7,b	;volatile
  5557   0027E4                     
  5558                           ; BSR set to: 14
  5559   0027E4  0012               	return		;funcret
  5560   0027E6                     __end_of_Comp1_init:
  5561                           	callstack 0
  5562                           
  5563 ;; *************** function _DAC_init *****************
  5564 ;; Defined at:
  5565 ;;		line 16 in file "../comparator.c"
  5566 ;; Parameters:    Size  Location     Type
  5567 ;;		None
  5568 ;; Auto vars:     Size  Location     Type
  5569 ;;		None
  5570 ;; Return value:  Size  Location     Type
  5571 ;;                  1    wreg      void 
  5572 ;; Registers used:
  5573 ;;		wreg, status,2
  5574 ;; Tracked objects:
  5575 ;;		On entry : 0/0
  5576 ;;		On exit  : 0/0
  5577 ;;		Unchanged: 0/0
  5578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5583 ;;Total ram usage:        0 bytes
  5584 ;; Hardware stack levels used: 1
  5585 ;; Hardware stack levels required when called: 1
  5586 ;; This function calls:
  5587 ;;		Nothing
  5588 ;; This function is called by:
  5589 ;;		_Comp1_init
  5590 ;; This function uses a non-reentrant model
  5591 ;;
  5592                           
  5593                           	psect	text32
  5594   002842                     __ptext32:
  5595                           	callstack 0
  5596   002842                     _DAC_init:
  5597                           	callstack 28
  5598   002842                     
  5599                           ;../comparator.c: 18:     DAC1CON0bits.PSS=0b00;
  5600   002842  0EF3               	movlw	-13
  5601   002844  010E               	movlb	14	; () banked
  5602   002846  17C6               	andwf	198,f,b	;volatile
  5603   002848                     
  5604                           ; BSR set to: 14
  5605                           ;../comparator.c: 19:     DAC1CON0bits.NSS=0b0;
  5606   002848  91C6               	bcf	198,0,b	;volatile
  5607                           
  5608                           ;../comparator.c: 23:     DAC1CON1bits.DAC1R=27;
  5609   00284A  51C7               	movf	199,w,b	;volatile
  5610   00284C  0BE0               	andlw	-32
  5611   00284E  091B               	iorlw	27
  5612   002850  6FC7               	movwf	199,b	;volatile
  5613   002852                     
  5614                           ; BSR set to: 14
  5615                           ;../comparator.c: 24:     DAC1CON0bits.DAC1EN=1;
  5616   002852  8FC6               	bsf	198,7,b	;volatile
  5617   002854                     
  5618                           ; BSR set to: 14
  5619   002854  0012               	return		;funcret
  5620   002856                     __end_of_DAC_init:
  5621                           	callstack 0
  5622                           
  5623 ;; *************** function _HighISR *****************
  5624 ;; Defined at:
  5625 ;;		line 23 in file "../interrupts.c"
  5626 ;; Parameters:    Size  Location     Type
  5627 ;;		None
  5628 ;; Auto vars:     Size  Location     Type
  5629 ;;		None
  5630 ;; Return value:  Size  Location     Type
  5631 ;;                  1    wreg      void 
  5632 ;; Registers used:
  5633 ;;		wreg, status,2, status,0
  5634 ;; Tracked objects:
  5635 ;;		On entry : 0/0
  5636 ;;		On exit  : 0/0
  5637 ;;		Unchanged: 0/0
  5638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5643 ;;Total ram usage:        0 bytes
  5644 ;; Hardware stack levels used: 1
  5645 ;; This function calls:
  5646 ;;		Nothing
  5647 ;; This function is called by:
  5648 ;;		Interrupt level 2
  5649 ;; This function uses a non-reentrant model
  5650 ;;
  5651                           
  5652                           	psect	intcode
  5653   000008                     __pintcode:
  5654                           	callstack 0
  5655   000008                     _HighISR:
  5656                           	callstack 22
  5657                           
  5658                           ; BSR set to: 14
  5659                           ;incstack = 0
  5660   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5661   00000A                     
  5662                           ;../interrupts.c: 27:     if (TMR0IF) {
  5663   00000A  010E               	movlb	14	; () banked
  5664   00000C  AB33               	btfss	51,5,b	;volatile
  5665   00000E  EF0B  F000         	goto	i2u247_41
  5666   000012  EF0D  F000         	goto	i2u247_40
  5667   000016                     i2u247_41:
  5668   000016  EF16  F000         	goto	i2l2580
  5669   00001A                     i2u247_40:
  5670   00001A                     
  5671                           ; BSR set to: 14
  5672                           ;../interrupts.c: 28:         TMR0H=0b00001011;
  5673   00001A  0E0B               	movlw	11
  5674   00001C  6ED4               	movwf	212,c	;volatile
  5675                           
  5676                           ;../interrupts.c: 29:         TMR0L=0b00001011;
  5677   00001E  0E0B               	movlw	11
  5678   000020  6ED3               	movwf	211,c	;volatile
  5679   000022                     
  5680                           ; BSR set to: 14
  5681                           ;../interrupts.c: 33:         minute += 1;
  5682   000022  0100               	movlb	0	; () banked
  5683   000024  4BE5               	infsnz	_minute& (0+255),f,b
  5684   000026  2BE6               	incf	(_minute+1)& (0+255),f,b
  5685   000028                     
  5686                           ; BSR set to: 0
  5687                           ;../interrupts.c: 34:         TMR0IF=0;
  5688   000028  010E               	movlb	14	; () banked
  5689   00002A  9B33               	bcf	51,5,b	;volatile
  5690   00002C                     i2l2580:
  5691                           
  5692                           ; BSR set to: 14
  5693                           ;../interrupts.c: 37:     if (PIR2bits.C1IF){
  5694   00002C  A135               	btfss	53,0,b	;volatile
  5695   00002E  EF1B  F000         	goto	i2u248_41
  5696   000032  EF1D  F000         	goto	i2u248_40
  5697   000036                     i2u248_41:
  5698   000036  EF61  F000         	goto	i2l157
  5699   00003A                     i2u248_40:
  5700   00003A                     
  5701                           ; BSR set to: 14
  5702                           ;../interrupts.c: 38:         if (CM1CON0bits.OUT == 0) {
  5703   00003A  BDD0               	btfsc	208,6,b	;volatile
  5704   00003C  EF22  F000         	goto	i2u249_41
  5705   000040  EF24  F000         	goto	i2u249_40
  5706   000044                     i2u249_41:
  5707   000044  EF2F  F000         	goto	i2l149
  5708   000048                     i2u249_40:
  5709   000048                     
  5710                           ; BSR set to: 14
  5711                           ;../interrupts.c: 39:             daylight_start_hour = hour;
  5712   000048  C0E7  F0DF         	movff	_hour,_daylight_start_hour
  5713   00004C  C0E8  F0E0         	movff	_hour+1,_daylight_start_hour+1
  5714                           
  5715                           ;../interrupts.c: 40:             daylight_start_min = minute;
  5716   000050  C0E5  F0DD         	movff	_minute,_daylight_start_min
  5717   000054  C0E6  F0DE         	movff	_minute+1,_daylight_start_min+1
  5718                           
  5719                           ;../interrupts.c: 41:             LATHbits.LATH3=0;
  5720   000058  9680               	bcf	128,3,c	;volatile
  5721                           
  5722                           ;../interrupts.c: 42:             }
  5723   00005A  EF5F  F000         	goto	i2l150
  5724   00005E                     i2l149:
  5725                           
  5726                           ; BSR set to: 14
  5727   00005E  ADD0               	btfss	208,6,b	;volatile
  5728   000060  EF34  F000         	goto	i2u250_41
  5729   000064  EF36  F000         	goto	i2u250_40
  5730   000068                     i2u250_41:
  5731   000068  EF5F  F000         	goto	i2l150
  5732   00006C                     i2u250_40:
  5733   00006C                     
  5734                           ; BSR set to: 14
  5735                           ;../interrupts.c: 44:             daylight_end_hour = hour;
  5736   00006C  C0E7  F0DB         	movff	_hour,_daylight_end_hour
  5737   000070  C0E8  F0DC         	movff	_hour+1,_daylight_end_hour+1
  5738                           
  5739                           ;../interrupts.c: 45:             daylight_end_min = minute;
  5740   000074  C0E5  F0D9         	movff	_minute,_daylight_end_min
  5741   000078  C0E6  F0DA         	movff	_minute+1,_daylight_end_min+1
  5742   00007C                     
  5743                           ; BSR set to: 14
  5744                           ;../interrupts.c: 46:         if (hour <1 || hour >=5){
  5745   00007C  0100               	movlb	0	; () banked
  5746   00007E  51E7               	movf	_hour& (0+255),w,b
  5747   000080  11E8               	iorwf	(_hour+1)& (0+255),w,b
  5748   000082  B4D8               	btfsc	status,2,c
  5749   000084  EF46  F000         	goto	i2u251_41
  5750   000088  EF48  F000         	goto	i2u251_40
  5751   00008C                     i2u251_41:
  5752   00008C  EF53  F000         	goto	i2l154
  5753   000090                     i2u251_40:
  5754   000090                     
  5755                           ; BSR set to: 0
  5756   000090  51E8               	movf	(_hour+1)& (0+255),w,b
  5757   000092  E109               	bnz	i2u252_40
  5758   000094  0E05               	movlw	5
  5759   000096  5DE7               	subwf	_hour& (0+255),w,b
  5760   000098  A0D8               	btfss	status,0,c
  5761   00009A  EF51  F000         	goto	i2u252_41
  5762   00009E  EF53  F000         	goto	i2u252_40
  5763   0000A2                     i2u252_41:
  5764   0000A2  EF5F  F000         	goto	i2l150
  5765   0000A6                     i2u252_40:
  5766   0000A6                     i2l154:
  5767                           
  5768                           ; BSR set to: 0
  5769                           ;../interrupts.c: 47:             if (CM1CON0bits.OUT == 1) {LATHbits.LATH3=1;}
  5770   0000A6  010E               	movlb	14	; () banked
  5771   0000A8  ADD0               	btfss	208,6,b	;volatile
  5772   0000AA  EF59  F000         	goto	i2u253_41
  5773   0000AE  EF5B  F000         	goto	i2u253_40
  5774   0000B2                     i2u253_41:
  5775   0000B2  EF5E  F000         	goto	i2l155
  5776   0000B6                     i2u253_40:
  5777   0000B6                     
  5778                           ; BSR set to: 14
  5779   0000B6  8680               	bsf	128,3,c	;volatile
  5780   0000B8  EF5F  F000         	goto	i2l150
  5781   0000BC                     i2l155:
  5782                           
  5783                           ; BSR set to: 14
  5784   0000BC  9680               	bcf	128,3,c	;volatile
  5785   0000BE                     i2l150:
  5786                           
  5787                           ;../interrupts.c: 51:         PIR2bits.C1IF=0;
  5788   0000BE  010E               	movlb	14	; () banked
  5789   0000C0  9135               	bcf	53,0,b	;volatile
  5790   0000C2                     i2l157:
  5791                           
  5792                           ; BSR set to: 14
  5793   0000C2  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5794   0000C4  0011               	retfie		f
  5795   0000C6                     __end_of_HighISR:
  5796                           	callstack 0
  5797                           
  5798                           	psect	rparam
  5799   000000                     
  5800                           	psect	temp
  5801   00005F                     btemp:
  5802                           	callstack 0
  5803   00005F                     	ds	1
  5804   000000                     int$flags	set	btemp
  5805   000000                     wtemp8	set	btemp+1
  5806   000000                     ttemp5	set	btemp+1
  5807   000000                     ttemp6	set	btemp+4
  5808   000000                     ttemp7	set	btemp+8
  5809                           
  5810                           	psect	idloc
  5811                           
  5812                           ;Config register IDLOC0 @ 0x200000
  5813                           ;	unspecified, using default values
  5814   200000                     	org	2097152
  5815   200000  0FFF               	dw	4095
  5816                           
  5817                           ;Config register IDLOC1 @ 0x200002
  5818                           ;	unspecified, using default values
  5819   200002                     	org	2097154
  5820   200002  0FFF               	dw	4095
  5821                           
  5822                           ;Config register IDLOC2 @ 0x200004
  5823                           ;	unspecified, using default values
  5824   200004                     	org	2097156
  5825   200004  0FFF               	dw	4095
  5826                           
  5827                           ;Config register IDLOC3 @ 0x200006
  5828                           ;	unspecified, using default values
  5829   200006                     	org	2097158
  5830   200006  0FFF               	dw	4095
  5831                           
  5832                           ;Config register IDLOC4 @ 0x200008
  5833                           ;	unspecified, using default values
  5834   200008                     	org	2097160
  5835   200008  0FFF               	dw	4095
  5836                           
  5837                           ;Config register IDLOC5 @ 0x20000A
  5838                           ;	unspecified, using default values
  5839   20000A                     	org	2097162
  5840   20000A  0FFF               	dw	4095
  5841                           
  5842                           ;Config register IDLOC6 @ 0x20000C
  5843                           ;	unspecified, using default values
  5844   20000C                     	org	2097164
  5845   20000C  0FFF               	dw	4095
  5846                           
  5847                           ;Config register IDLOC7 @ 0x20000E
  5848                           ;	unspecified, using default values
  5849   20000E                     	org	2097166
  5850   20000E  0FFF               	dw	4095
  5851                           
  5852                           	psect	config
  5853                           
  5854                           ;Config register CONFIG1L @ 0x300000
  5855                           ;	External Oscillator mode Selection bits
  5856                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5857                           ;	Power-up default value for COSC bits
  5858                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5859   300000                     	org	3145728
  5860   300000  AA                 	db	170
  5861                           
  5862                           ;Config register CONFIG1H @ 0x300001
  5863                           ;	unspecified, using default values
  5864                           ;	Clock Out Enable bit
  5865                           ;	CLKOUTEN = 0x1, unprogrammed default
  5866                           ;	Clock Switch Enable bit
  5867                           ;	CSWEN = 0x1, unprogrammed default
  5868                           ;	Fail-Safe Clock Monitor Enable bit
  5869                           ;	FCMEN = 0x1, unprogrammed default
  5870   300001                     	org	3145729
  5871   300001  FF                 	db	255
  5872                           
  5873                           ;Config register CONFIG2L @ 0x300002
  5874                           ;	unspecified, using default values
  5875                           ;	Master Clear Enable bit
  5876                           ;	MCLRE = 0x1, unprogrammed default
  5877                           ;	Power-up Timer Enable bit
  5878                           ;	PWRTE = 0x1, unprogrammed default
  5879                           ;	Low-power BOR enable bit
  5880                           ;	LPBOREN = 0x1, unprogrammed default
  5881                           ;	Brown-out Reset Enable bits
  5882                           ;	BOREN = 0x3, unprogrammed default
  5883   300002                     	org	3145730
  5884   300002  FF                 	db	255
  5885                           
  5886                           ;Config register CONFIG2H @ 0x300003
  5887                           ;	unspecified, using default values
  5888                           ;	Brown Out Reset Voltage selection bits
  5889                           ;	BORV = 0x3, unprogrammed default
  5890                           ;	ZCD Disable bit
  5891                           ;	ZCD = 0x1, unprogrammed default
  5892                           ;	PPSLOCK bit One-Way Set Enable bit
  5893                           ;	PPS1WAY = 0x1, unprogrammed default
  5894                           ;	Stack Full/Underflow Reset Enable bit
  5895                           ;	STVREN = 0x1, unprogrammed default
  5896                           ;	Debugger Enable bit
  5897                           ;	DEBUG = 0x1, unprogrammed default
  5898                           ;	Extended Instruction Set Enable bit
  5899                           ;	XINST = 0x1, unprogrammed default
  5900   300003                     	org	3145731
  5901   300003  FF                 	db	255
  5902                           
  5903                           ;Config register CONFIG3L @ 0x300004
  5904                           ;	WDT Period Select bits
  5905                           ;	WDTCPS = 0x1F, unprogrammed default
  5906                           ;	WDT operating mode
  5907                           ;	WDTE = OFF, WDT Disabled
  5908   300004                     	org	3145732
  5909   300004  9F                 	db	159
  5910                           
  5911                           ;Config register CONFIG3H @ 0x300005
  5912                           ;	unspecified, using default values
  5913                           ;	WDT Window Select bits
  5914                           ;	WDTCWS = 0x7, unprogrammed default
  5915                           ;	WDT input clock selector
  5916                           ;	WDTCCS = 0x7, unprogrammed default
  5917   300005                     	org	3145733
  5918   300005  FF                 	db	255
  5919                           
  5920                           ;Config register CONFIG4L @ 0x300006
  5921                           ;	unspecified, using default values
  5922                           ;	Write Protection Block 0
  5923                           ;	WRT0 = 0x1, unprogrammed default
  5924                           ;	Write Protection Block 1
  5925                           ;	WRT1 = 0x1, unprogrammed default
  5926                           ;	Write Protection Block 2
  5927                           ;	WRT2 = 0x1, unprogrammed default
  5928                           ;	Write Protection Block 3
  5929                           ;	WRT3 = 0x1, unprogrammed default
  5930                           ;	Write Protection Block 3
  5931                           ;	WRT4 = 0x1, unprogrammed default
  5932                           ;	Write Protection Block 3
  5933                           ;	WRT5 = 0x1, unprogrammed default
  5934                           ;	Write Protection Block 3
  5935                           ;	WRT6 = 0x1, unprogrammed default
  5936                           ;	Write Protection Block 3
  5937                           ;	WRT7 = 0x1, unprogrammed default
  5938   300006                     	org	3145734
  5939   300006  FF                 	db	255
  5940                           
  5941                           ;Config register CONFIG4H @ 0x300007
  5942                           ;	unspecified, using default values
  5943                           ;	Configuration Register Write Protection bit
  5944                           ;	WRTC = 0x1, unprogrammed default
  5945                           ;	Boot Block Write Protection bit
  5946                           ;	WRTB = 0x1, unprogrammed default
  5947                           ;	Data EEPROM Write Protection bit
  5948                           ;	WRTD = 0x1, unprogrammed default
  5949                           ;	Scanner Enable bit
  5950                           ;	SCANE = 0x1, unprogrammed default
  5951                           ;	Low Voltage Programming Enable bit
  5952                           ;	LVP = 0x1, unprogrammed default
  5953   300007                     	org	3145735
  5954   300007  FF                 	db	255
  5955                           
  5956                           ;Config register CONFIG5L @ 0x300008
  5957                           ;	unspecified, using default values
  5958                           ;	UserNVM Program Memory Code Protection bit
  5959                           ;	CP = 0x1, unprogrammed default
  5960                           ;	DataNVM Memory Code Protection bit
  5961                           ;	CPD = 0x1, unprogrammed default
  5962   300008                     	org	3145736
  5963   300008  FF                 	db	255
  5964                           
  5965                           ;Config register CONFIG5H @ 0x300009
  5966                           ;	unspecified, using default values
  5967   300009                     	org	3145737
  5968   300009  FF                 	db	255
  5969                           
  5970                           ;Config register CONFIG6L @ 0x30000A
  5971                           ;	unspecified, using default values
  5972                           ;	Table Read Protection Block 0
  5973                           ;	EBTR0 = 0x1, unprogrammed default
  5974                           ;	Table Read Protection Block 1
  5975                           ;	EBTR1 = 0x1, unprogrammed default
  5976                           ;	Table Read Protection Block 2
  5977                           ;	EBTR2 = 0x1, unprogrammed default
  5978                           ;	Table Read Protection Block 3
  5979                           ;	EBTR3 = 0x1, unprogrammed default
  5980                           ;	Table Read Protection Block 4
  5981                           ;	EBTR4 = 0x1, unprogrammed default
  5982                           ;	Table Read Protection Block 5
  5983                           ;	EBTR5 = 0x1, unprogrammed default
  5984                           ;	Table Read Protection Block 6
  5985                           ;	EBTR6 = 0x1, unprogrammed default
  5986                           ;	Table Read Protection Block 7
  5987                           ;	EBTR7 = 0x1, unprogrammed default
  5988   30000A                     	org	3145738
  5989   30000A  FF                 	db	255
  5990                           
  5991                           ;Config register CONFIG6H @ 0x30000B
  5992                           ;	unspecified, using default values
  5993                           ;	Boot Block Table Read Protection bit
  5994                           ;	EBTRB = 0x1, unprogrammed default
  5995   30000B                     	org	3145739
  5996   30000B  FF                 	db	255
  5997                           tosu	equ	0xFFF
  5998                           tosh	equ	0xFFE
  5999                           tosl	equ	0xFFD
  6000                           stkptr	equ	0xFFC
  6001                           pclatu	equ	0xFFB
  6002                           pclath	equ	0xFFA
  6003                           pcl	equ	0xFF9
  6004                           tblptru	equ	0xFF8
  6005                           tblptrh	equ	0xFF7
  6006                           tblptrl	equ	0xFF6
  6007                           tablat	equ	0xFF5
  6008                           prodh	equ	0xFF4
  6009                           prodl	equ	0xFF3
  6010                           indf0	equ	0xFEF
  6011                           postinc0	equ	0xFEE
  6012                           postdec0	equ	0xFED
  6013                           preinc0	equ	0xFEC
  6014                           plusw0	equ	0xFEB
  6015                           fsr0h	equ	0xFEA
  6016                           fsr0l	equ	0xFE9
  6017                           wreg	equ	0xFE8
  6018                           indf1	equ	0xFE7
  6019                           postinc1	equ	0xFE6
  6020                           postdec1	equ	0xFE5
  6021                           preinc1	equ	0xFE4
  6022                           plusw1	equ	0xFE3
  6023                           fsr1h	equ	0xFE2
  6024                           fsr1l	equ	0xFE1
  6025                           bsr	equ	0xFE0
  6026                           indf2	equ	0xFDF
  6027                           postinc2	equ	0xFDE
  6028                           postdec2	equ	0xFDD
  6029                           preinc2	equ	0xFDC
  6030                           plusw2	equ	0xFDB
  6031                           fsr2h	equ	0xFDA
  6032                           fsr2l	equ	0xFD9
  6033                           status	equ	0xFD8

Data Sizes:
    Strings     52
    Constant    0
    Data        0
    BSS         57
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     91      94
    BANK0           160    115     137
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[12]), STR_3(CODE[18]), STR_2(CODE[6]), STR_1(CODE[16]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[12]), STR_3(CODE[18]), STR_2(CODE[6]), STR_1(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[12]), STR_3(CODE[18]), STR_2(CODE[6]), STR_1(CODE[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[12]), STR_3(CODE[18]), STR_2(CODE[6]), STR_1(CODE[16]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1926$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[12]), STR_3(CODE[18]), STR_2(CODE[6]), STR_1(CODE[16]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> main@yearstr(BANK0[20]), main@datestr(BANK0[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1873$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1873$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    LCD_sendstring@string	PTR unsigned char  size(2) Largest target is 50
		 -> main@yearstr(BANK0[20]), main@datestr(BANK0[50]), 

    check_month@year	PTR unsigned short  size(2) Largest target is 2
		 -> main@year(BANK0[2]), 

    check_month@month_day	PTR unsigned int  size(2) Largest target is 2
		 -> main@month_day(BANK0[2]), 

    check_month@month	PTR unsigned int  size(2) Largest target is 2
		 -> main@month(BANK0[2]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    _check_month->___lwmod
    ___lwmod->___wmul
    ___lwdiv->___wmul
    _LCD_setline->_LCD_sendbyte
    _LCD_sendstring->_LCD_sendbyte
    _LCD_clear->_LCD_sendbyte
    _LCD_Init->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                90    90      0   18575
                                             25 BANK0     90    90      0
                         _Comp1_init
                    _Interrupts_init
                           _LCD_Init
                          _LCD_clear
                     _LCD_sendstring
                        _LCD_setline
                  _LEDarray_disp_bin
                      _LEDarray_init
                         _Light_init
                        _Timer0_init
                            ___lwdiv
                            ___lwmod
                             ___wmul
                        _check_month
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12    8708
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7899
                                             83 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           24    18      6    7538
                                             62 COMRAM    21    15      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3867
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2195
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1083
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1992
                                              6 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     207
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              4     2      2     237
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1223
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _check_month                                         10     4      6    1572
                                             11 COMRAM    10     4      6
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                              6 COMRAM     5     1      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4    1074
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Light_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    2     0      2     578
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LCD_setline                                          1     1      0     958
                                              3 COMRAM     1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_sendstring                                       2     0      2    1111
                                              3 COMRAM     2     0      2
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_clear                                            1     1      0     914
                                              3 COMRAM     1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0    1002
                                              3 COMRAM     2     2      0
                       _LCD_sendbyte
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (2) _LCD_sendbyte                                         2     1      1     914
                                              1 COMRAM     2     1      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (3) _LCD_sendnibble                                       1     1      0      88
                                              0 COMRAM     1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (4) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comp1_init                                           0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Comp1_init
     _DAC_init
   _Interrupts_init
   _LCD_Init
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
     _LCD_sendnibble
   _LCD_clear
     _LCD_sendbyte
   _LCD_sendstring
     _LCD_sendbyte
   _LCD_setline
     _LCD_sendbyte
   _LEDarray_disp_bin
   _LEDarray_init
   _Light_init
   _Timer0_init
   ___lwdiv
     ___wmul (ARG)
   ___lwmod
     ___wmul (ARG)
   ___wmul
   _check_month
     ___lwmod
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
         _isdigit

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      47        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     73      89       5       85.6%
BITBIGSFRlhlhhh     84      0       0      38        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5B      5E       1      100.0%
BITBIGSFRllhhh      5C      0       0      42        0.0%
BITBIGSFRhhll       4A      0       0      34        0.0%
BITBIGSFRlll        3A      0       0      45        0.0%
BITBIGSFRlhll       21      0       0      41        0.0%
BITBIGSFRhhlhh      1B      0       0      33        0.0%
BITBIGSFRlhhhhl     14      0       0      35        0.0%
BITBIGSFRlhlhl      11      0       0      40        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRllhl        9      0       0      44        0.0%
BITBIGSFRlhlhhl      8      0       0      39        0.0%
BITBIGSFRlhhl        6      0       0      37        0.0%
BITBIGSFRlhhhl       3      0       0      36        0.0%
BITBIGSFRllhhl       1      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     107      46        0.0%
DATA                 0      0     107       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Nov 09 19:32:02 2022

                        l50 2216                          l42 2806                          l51 2218  
                        l60 2284                          l52 222C                          l61 2286  
                        l53 222E                          l62 229A                          l54 2242  
                        l63 229C                          l55 2244                          l64 22B0  
                        l56 2258                          l48 2200                          l57 225A  
                        l49 2202                          l66 22B2                          l58 226E  
                        l59 2270                          l97 286C         ___wmul@multiplicand 0003  
         ??_Interrupts_init 0001                         l100 2854                         l103 27E4  
                       l300 2710                         l142 2876                         l303 23F2  
                       l311 26DA                         l241 2826                         l306 2840  
                       l317 2744                         l265 1768                         l329 27BE  
                       l291 24AA                         l443 1E5E                         l284 2862  
                       l293 24C0                         l295 24CE                         l287 247E  
                       l456 1FC2                         l289 2494                         l298 26F4  
                       l820 245E                         l830 252A                         l827 2466  
                       l837 2532                         _abs 2662                         _pad 22B4  
                       wreg 000FE8                 main@changed 00C5                 main@datestr 007D  
                      l1007 2584                        l2000 21A4                        l1121 2120  
                      l2010 2640                        l1034 22F8                        ?_abs 0013  
                      l2012 279A                        l1124 2770                        l1132 261C  
                      l2020 1CDC                        l2004 261E                        l2100 22C2  
                      l1037 233A                        l1061 1CD6                        l1045 1ABE  
                      l2014 27B6                        l1118 2118                        l2030 1D3C  
                      l2022 1CEA                        l2006 262A                        l2110 2318  
                      l2102 22D6                        l1039 235C                        l1047 1AC6  
                      l2120 2746                        l2040 1D86                        l2032 1D40  
                      l2024 1D0A                        l2008 263C                        l2112 231C  
                      l2104 22E4                        l1048 1B0C                        l2130 2612  
                      l2210 1FFC                        l2202 1FC4                        l2050 1DF6  
                      l2042 1D94                        l2034 1D4C                        l2026 1D0E  
                      l2018 1CD8                        l2114 2348                        l2106 22F0  
                      l1147 21EA                        l1155 2660                        l1083 1A22  
                      l2140 2860                        l2132 2616                        l2124 25D8  
                      l2212 2034                        l2204 1FD8                        l2052 1E08  
                      l2044 1DA6                        l2036 1D6A                        l2028 1D1C  
                      l2116 2662                        l2108 2304                        l2300 19B4  
                      l1093 2698                        l2126 25DC                        l2214 203C  
                      l2046 1DD4                        l2038 1D72                        l2054 1E0E  
                      l2070 1E96                        l2062 1E60                        l2118 267C  
                      l1158 2878                        l2150 1A88                        l2142 1A24  
                      l2320 2848                        l2136 2856                        l2240 248E  
                      l2400 2808                        l2128 25F0                        l2224 20B6  
                      l2216 2044                        l2208 1FDC                        l2056 1E1E  
                      l2048 1DF4                        l2080 1EFE                        l2072 1EA4  
                      l2064 1E64                        l1096 26A0                        l2160 1ADE  
                      l2152 1A96                        l2144 1A44                        l2304 19E4  
                      l1089 25D6                        l2322 2852                        l2138 2858  
                      l2250 24C2                        l2242 2496                        l2234 246A  
                      l2330 2708                        l2410 2376                        l2402 2810  
                      l2226 20EA                        l2218 207C                        l2058 1E3E  
                      l2082 1F0C                        l2090 1F72                        l2074 1EC4  
                      l2066 1E72                        l2170 1B14                        l2162 1AE4  
                      l2154 1A98                        l2146 1A58                        l2252 24C6  
                      l2244 24A4                        l2236 2478                        l2324 26DE  
                      l2420 23B0                        l2412 238E                        l2404 281A  
                      l2340 2500                        l2332 24D0                        l2500 15F6  
                      l2228 20FC                        l2092 1F82                        l2084 1F3A  
                      l2076 1EE2                        l2068 1E92                        l2180 1BB2  
                      l2172 1B1E                        l2164 1AF4                        l2156 1AB2  
                      l2148 1A68                        l2260 17AE                        l2308 19F6  
                      l2318 2842                        l2246 24AC                        l2238 2480  
                      l2326 26EE                        l2430 23DE                        l2422 23B6  
                      l2414 2394                        l2406 2824                        l2342 2516  
                      l2334 24E2                        l2510 169A                        l2502 1606  
                      l2094 1FA2                        l2086 1F5A                        l2078 1EEA  
                      l2190 1C82                        l2174 1B24                        l2182 1C16  
                      l2166 1B00                        l2158 1ACE                        l2262 17B2  
                      l2254 176A                        l2350 2592                        l2248 24BA  
                      l2328 26F6                        l2432 23E8                        l2424 23C0  
                      l2416 23A0                        l2408 235E                        l2440 26D0  
                      l2360 21EC                        l2344 251E                        l2336 24EA  
                      l2520 16F8                        l2512 16A6                        l2504 1614  
                      l2088 1F6C                        l2184 1C30                        l2192 1C90  
                      l2176 1BA6                        l2168 1B08                        l2280 1886  
                      l2272 17DE                        l2264 17BE                        l2256 1792  
                      l2352 25AE                        l2600 0E8C                        l2426 23C6  
                      l2418 23A6                        l2434 26A4                        l2370 2252  
                      l2362 21FA                        l2346 2524                        l2338 24F2  
                      l2522 1708                        l2514 16AE                        l2506 163E  
                      l2098 22B4                        l2194 1CA0                        l2186 1C4E  
                      l2178 1BAC                        l2290 18D2                        l2282 1896  
                      l2266 17C0                        l2274 1816                        l2258 17A0  
                      l2354 25CE                        l2450 2572                        l2442 2534  
                      l2610 0EDC                        l2602 0E90                        l2428 23D0  
                      l2460 272C                        l2436 26B4                        l2372 2268  
                      l2364 2210                        l2380 2864                        l2540 23FC  
                      l2516 16CA                        l2524 171A                        l2508 166C  
                      l2196 1CA6                        l2188 1C68                        l2292 190E  
                      l2284 18A4                        l2276 1828                        l2268 17D2  
                      l2348 2586                        l2444 2546                        l2700 12BE  
                      l2620 0F36                        l2612 0EE2                        l2604 0E94  
                      l2390 27D8                        l2382 27C0                        l2534 2828  
                      l2454 2712                        l2438 26BE                        l2374 227E  
                      l2366 2226                        l2358 27E6                        l2550 2432  
                      l2542 240E                        l2526 1736                        l2518 16DC  
                      l2470 1486                        l2462 1434                        l2198 1CB6  
                      l2294 191E                        l2286 18C4                        l2278 1850  
                      l2446 254E                        l2710 1308                        l2702 12D4  
                      l2630 0F6C                        l2622 0F3A                        l2614 0F08  
                      l2606 0E9A                        l2392 27DA                        l2384 27C2  
                      l2536 2832                        l2456 2716                        l2376 2294  
                      l2368 223C                        l2552 2448                        l2544 2416  
                      l2528 1748                        l2480 1512                        l2472 14A2  
                      l2464 1434                        l2296 193E                        l2448 2556  
                      l2720 136E                        l2712 131C                        l2704 12EA  
                      l2640 10C6                        l2632 0F82                        l2624 0F46  
                      l2616 0F14                        l2608 0ED0                        l2394 27DC  
                      l2386 27D4                        l2458 2728                        l2378 22AA  
                      l2554 2450                        l2546 241E                        l2538 23F4  
                      l2482 1522                        l2490 156A                        l2474 14BE  
                      l2466 144E                        l2298 195E                        l2730 13AC  
                      l2722 1380                        l2714 1330                        l2706 12EE  
                      l2642 10D8                        l2650 111E                        l2634 0F9E  
                      l2626 0F50                        l2618 0F20                        l2396 27E0  
                      l2388 27D6                        l2556 2452                        l2548 242C  
                      l2492 1586                        l2484 1530                        l2476 14DA  
                      l2468 146A                        l2740 1412                        l2732 13C0  
                      l2724 1386                        l2716 1342                        l2708 12F6  
                      l2652 1140                        l2660 1198                        l2644 10EA  
                      l2636 0FCE                        l2628 0F64                        l2398 286E  
                      l2558 2458                        l2494 15A2                        l2486 154C  
                      l2478 14F6                        l2742 1424                        l2734 13D4  
                      l2726 138E                        l2718 1358                        l2662 11AA  
                      l2670 11EC                        l2654 116C                        l2646 10F2  
                      l2638 1038                        l2496 15BE                        l2488 155C  
                      l2736 13E6                        l2728 139A                        l2680 1228  
                      l2664 11B2                        l2656 117E                        l2648 110A  
                      l2672 11F0                        l2498 15DA                        l2738 13FC  
                      l2690 1268                        l2682 1230                        l2666 11CE  
                      l2658 1190                        l2674 11FC                        l2594 0E36  
                      l2684 1244                        l2692 1272                        l2676 1210  
                      l2668 11E4                        l2596 0E78                        l1990 2122  
                      l2694 1286                        l2686 1256                        l2678 1226  
                      l2598 0E88                        ?_pad 0011                        l1992 2134  
                      l2696 129A                        l2688 1266                        l1994 2146  
                      l2794 1808                        l2698 12AC                        l2796 2066  
                      l1996 2150                        l1998 216E                        STR_1 0E13  
                      STR_2 0E2F                        STR_3 0E01                        STR_4 0E23  
                      u2000 195E                        u2001 195A                        u2010 26EE  
                      u2011 26EA                        u2100 2252                        u2020 24E2  
                      u2101 224E                        u2021 24DE                        u2110 2268  
                      u2030 2500                        u2111 2264                        u2031 24FC  
                      u2120 227E                        u2040 2516                        u2200 1486  
                      u2121 227A                        u2041 2512                        u2201 1482  
                      u2130 2294                        u2210 14A2                        u2050 25CE  
                      u2131 2290                        u2211 149E                        u2051 25CA  
                      u2140 22AA                        u2060 21FA                        u2300 15DA  
                      u2220 14BE                        u1500 2660                        u2141 22A6  
                      u2061 21F6                        u2301 15D6                        u2221 14BA  
                      u1501 265C                        u2150 26B4                        u2070 2210  
                      u2310 15F6                        u2230 14DA                        u1510 1CEA  
                      u2151 26B0                        u2071 220C                        u2311 15F2  
                      u2231 14D6                        u1511 1CE6                        u2160 26D0  
                      u2080 2226                        u2400 1764                        u2320 163E  
                      u2240 14F6                        u1520 1D1C                        u1600 1EE2  
                      u2161 26CC                        u2081 2222                        u2401 1760  
                      u2321 163A                        u2241 14F2                        u1521 1D18  
                      u1601 1EDE                        u2170 2744                        u2090 223C  
                      u2410 240E                        u2330 166C                        u2250 1512  
                      u1610 1F0C                        u2171 2740                        u2091 2238  
                      u2411 240A                        u2331 1668                        u2251 150E  
                      u1531 1D46                        u1611 1F08                        u2420 242C  
                      u2340 169A                        u2260 154C                        u2180 144E  
                      u1700 276C                        u1540 1D6A                        u1620 1F3A  
                      u1460 2134                        u2421 2428                        u2341 1696  
                      u2261 1548                        u2181 144A                        u1541 1D66  
                      u1621 1F36                        u1461 2130                        u2430 2448  
                      u2350 16CA                        u2270 1586                        u2190 146A  
                      u1710 25F0                        u1550 1D94                        u1630 1F82  
                      u1470 2146                        u2431 2444                        u2351 16C6  
                      u2271 1582                        u2191 1466                        u1711 25EC  
                      u1551 1D90                        u1631 1F7E                        u1471 2142  
                      u2360 16DC                        u2280 15A2                        u1720 2612  
                      u1560 1DD4                        u1480 216E                        u1640 22C2  
                      u1800 1C30                        u2600 1140                        u2361 16D8  
                      u2281 159E                        u1721 260E                        u1561 1DD0  
                      u1481 216A                        u1641 22BE                        u1801 1C2C  
                      u2601 113C                        u2370 16F8                        u2290 15BE  
                      u1570 1E1E                        u1490 21A4                        u1650 22E4  
                      u1810 1C4E                        u1730 1A54                        u2610 117E  
                      u2371 16F4                        u2291 15BA                        u1571 1E1A  
                      u1491 21A0                        u1651 22E0                        u1811 1C4A  
                      u1731 1A4E                        u2611 117A                        u1900 2478  
                      u2380 1736                        u1580 1E72                        u1660 233A  
                      u1820 1C68                        u1740 1A56                        u2700 1286  
                      u2620 1190                        u2540 0F36                        u1901 2474  
                      u2381 1732                        u1581 1E6E                        u1661 2336  
                      u1821 1C64                        u2701 1282                        u2621 118C  
                      u2541 0F32                        u1910 248E                        u2390 1748  
                      u1590 1EA4                        u1670 2348                        u1830 1C82  
                      u1750 1A68                        u2710 129A                        u2630 11AA  
                      u2550 0F64                        u1911 248A                        u2391 1744  
                      u1591 1EA0                        u1671 2344                        u1831 1C7E  
                      u1751 1A64                        u2711 1296                        u2631 11A6  
                      u2551 0F60                        u1920 24A4                        u1680 267C  
                      u1840 1C90                        u1760 1A96                        u2800 1358  
                      u2720 12AC                        u2640 11E4                        u2560 0F82  
                      u1921 24A0                        u1681 2678                        u1841 1C8C  
                      u1761 1A92                        u2801 1354                        u2721 12A8  
                      u2641 11E0                        u2561 0F7E                        u1930 24BA  
                      u1690 276A                        u1850 1CA0                        u1770 1AB2  
                      u2810 136E                        u2730 12BE                        u2650 1210  
                      u2570 10C6                        u1931 24B6                        u1691 2764  
                      u1851 1C9C                        u1771 1AAE                        u2811 136A  
                      u2731 12BA                        u2651 120C                        u2571 10C2  
                      u1860 1FFC                        u1780 1ADE                        u1940 1792  
                      u2820 1380                        u2740 12D4                        u2660 1226  
                      u2580 10D8                        u1861 1FF8                        u1781 1ADA  
                      u1941 178E                        u2821 137C                        u2741 12D0  
                      u2661 1222                        u2581 10D4                        u1870 2030  
                      u1790 1AF4                        u1950 1828                        u2830 13AC  
                      u2750 12EA                        u2670 1244                        u2590 10EA  
                      u1871 202C                        u1791 1AF0                        u1951 1824  
                      u2831 13A8                        u2751 12E6                        u2671 1240  
                      u2591 10E6                        u1880 20EA                        u1960 1850  
                      u2840 13C0                        u2760 1308                        u2680 1256  
                      u1881 20E6                        u1961 184C                        u2841 13BC  
                      u2761 1304                        u2681 1252                        u1890 20FC  
                      u1970 1896                        u2850 13D4                        u2770 131C  
                      u2690 1266                        u2907 2838                        u1891 20F8  
                      u1971 1892                        u2851 13D0                        u2771 1318  
                      u2691 1262                        u1980 190E                        u2860 13E6  
                      u2780 1330                        u2917 2380                        u1981 190A  
                      u2861 13E2                        u2781 132C                        u1990 193E  
                      u2870 13FC                        u2790 1342                        u2927 2396  
                      u1991 193A                        u2871 13F8                        u2791 133E  
                      u2880 1412                        u2937 23A2                        u2881 140E  
                      u2890 1424                        u2947 23B2                        u2891 1420  
                      u2957 23C2                        u2967 23D6                        u2977 270A  
                      u2987 24C8                        u2997 285A                        abs@a 0013  
                      _dbuf 0100                        _atoi 1FC4                        _main 0E36  
                      _dtoa 1A24                        _hour 00E7                        _prec 005C  
                      pad@i 0018                        pad@p 0015                        fsr1h 000FE2  
                      fsr2h 000FDA                        indf2 000FDF                        fsr1l 000FE1  
                      pad@w 001A                        fsr2l 000FD9                        btemp 005F  
              ?_LCD_setline 0001                        prodh 000FF4                        prodl 000FF3  
               main@yearstr 00AF                        start 00C6            __end_of_DAC_init 2856  
           __end_of_HighISR 00C6                ___param_bank 000000                  _Comp1_init 27C0  
                     ??_abs 0015                       ??_pad 0017            __end_of_LCD_Init 23F4  
           __end_of___aodiv 1E60                       ?_atoi 0007                       ?_main 0001  
                     ?_dtoa 001C             __end_of___aomod 1FC4                       _ADPCH 000F5F  
           __end_of___lwdiv 2468             __end_of___lwmod 2534                       i2l150 00BE  
                     i2l154 00A6                       i2l155 00BC                       i2l149 005E  
                     i2l157 00C2                vfpfcnvrt@fmt 0041                       _TMR0H 000FD4  
                     _TMR0L 000FD3        check_month@leap_year 0014                       _flags 005E  
                     _fputc 2122                       _fputs 261E             __end_of_isdigit 2772  
                     atoi@n 000E                       pad@fp 0011                       atoi@s 0007  
                     _width 00D3                       _putch 2878                       dtoa@d 001E  
                     dtoa@i 003C                       dtoa@n 0034                       dtoa@p 0030  
                     dtoa@s 003E                       dtoa@w 0032             __end_of_isspace 261E  
             ?_LCD_sendbyte 0002                       tablat 000FF5                       ttemp5 0060  
                     ttemp6 0063                       ttemp7 0067                       status 000FD8  
                     wtemp8 0060             __end_of_sprintf 2586        check_month@month_day 000E  
           __initialization 2772                __end_of_atoi 2122                __end_of_main 1434  
              __end_of_dtoa 1CD8                  _Light_init 2864            _daylight_end_min 00D9  
         __end_of_LCD_E_TOG 2864                      ??_atoi 0009                      ??_main 0079  
                    ??_dtoa 0026               __activetblptr 000003           __end_of_LCD_clear 2842  
                    ?_fputc 0001                      ?_fputs 000A                      _ADRESH 000F64  
            ??_LCD_sendbyte 0003                      ?_putch 0001                      i2l2580 002C  
                    i2l2572 000A                      i2l2590 0090                      i2l2582 003A  
                    i2l2574 001A                      i2l2592 00B6                      i2l2584 0048  
                    i2l2576 0022                      i2l2586 006C                      i2l2578 0028  
                    i2l2588 007C               vfpfcnvrt@done 0050                   ??_HighISR 0001  
                    _TMR0IE 00714D                      _TMR0IF 00719D           _LEDarray_disp_bin 21EC  
        ?_LEDarray_disp_bin 0001               ??_Timer0_init 0001                vfprintf@cfmt 005A  
                 ??___aodiv 0011                   ??___aomod 0011                      ___wmul 279A  
               ?_Comp1_init 0001                   ??___lwdiv 000B                   ??___lwmod 000B  
       ??_LEDarray_disp_bin 0003                      clear_0 2778                      clear_1 2784  
             main@month_day 00D1                      _minute 00E5                      isa$std 000001  
                    pad@buf 0013                      dtoa@fp 001C        main@daily_correction 00C9  
                    fputc@c 0001                      fputs@c 000E                      fputs@i 000F  
                    fputs@s 000A                   ??_isdigit 0003                __mediumconst 0000  
                 ??_isspace 0003                      tblptrh 000FF7                      tblptrl 000FF6  
                    tblptru 000FF8                      putch@c 0001                   ?_DAC_init 0001  
          __end_of_vfprintf 25D8                   ??_sprintf 005C             _current_day_min 00E1  
 __end_of_LEDarray_disp_bin 22B4                  __accesstop 0060     __end_of__initialization 2790  
                 ?_LCD_Init 0001             check_month@year 0010               ___rparam_used 000001  
             _LEDarray_init 27E6             _Interrupts_init 286E              __pcstackCOMRAM 0001  
               ?_Light_init 0001               __end_of_fputc 21EC               __end_of_fputs 2662  
             __end_of_putch 287A         __end_of_Timer0_init 2828           _daylight_end_hour 00DB  
                ??_DAC_init 0001                     ??_fputc 0005                     ??_fputs 000E  
                   ??_putch 0001                  __pbssBANK0 00D3                  __pbssBANK1 0100  
                ??_LCD_Init 0004              _LCD_sendnibble 2468              ?_LEDarray_init 0001  
            _LCD_sendstring 2712         _daylight_start_hour 00DF                     ?___wmul 0001  
      __end_of_LCD_sendbyte 2712      __end_of_LCD_sendnibble 24D0     __end_of_Interrupts_init 2878  
                   _HighISR 0008      __end_of_LCD_sendstring 2746                   _ADREFbits 000F58  
                   __Hparam 0000                     __Lparam 0000                 _Timer0_init 2808  
                   ___aodiv 1CD8                     ___aomod 1E60                     ___lwdiv 23F4  
                   ___lwmod 24D0                   ?_vfprintf 0054                __psmallconst 0E00  
                   __pcinit 2772                     __ramtop 0E00                     __ptext0 0E36  
                   __ptext1 2534                     __ptext2 2586                     __ptext3 176A  
                   __ptext4 1A24                     __ptext5 22B4                     __ptext6 261E  
                   __ptext7 2122                     __ptext8 2878                     __ptext9 2662  
                   _isdigit 2746               ??_check_month 0012                     _isspace 25D8  
                 _LCD_E_TOG 2856             LCD_setline@line 0004                     atoi@neg 000C  
                   main@day 00CD                     _sprintf 2534                   _LCD_clear 2828  
      end_of_initialization 2790             ?_LCD_sendnibble 0001       main@OneAmToFiveAmFlag 00C3  
                   fputc@fp 0003             ??_LEDarray_init 0001                     fputs@fp 000C  
           ?_LCD_sendstring 0004           __end_of_vfpfcnvrt 1A24                     postdec2 000FDD  
              ??_Comp1_init 0001                     postinc0 000FEE                     postinc1 000FE6  
                   postinc2 000FDE            vfpfcnvrt@convarg 0048                  ??_vfprintf 005A  
          _current_day_hour 00E3                  ?_LCD_E_TOG 0001                   _TRISAbits 000F81  
                 _TRISBbits 000F82                   _TRISCbits 000F83                   _TRISDbits 000F84  
                 _TRISEbits 000F85                   _TRISFbits 000F86                   _TRISGbits 000F87  
                 _TRISHbits 000F88  _calculated_solar_noon_hour 00D7            check_month@month 000C  
                ?_LCD_clear 0001         __end_of_check_month 176A          __end_of_Comp1_init 27E6  
               _CM1CON0bits 000ED0                 _CM1CON1bits 000ED1            ?_Interrupts_init 0001  
              ??_Light_init 0001                 vfpfcnvrt@ap 0043                 vfpfcnvrt@cp 0052  
               vfpfcnvrt@fp 003F              __end_of___wmul 27C0        LCD_sendnibble@number 0001  
       start_initialization 2772                 __end_of_abs 26A2                 __end_of_pad 235E  
        __end_of_Light_init 286E                _LCD_sendbyte 26DC               ??_LCD_setline 0004  
               vfprintf@fmt 0056        LCD_sendstring@string 0004                    ??___wmul 0005  
               __pbssCOMRAM 005C                 _check_month 1434                 ??_LCD_E_TOG 0001  
             __pcstackBANK0 0060            ___aodiv@dividend 0001                 ??_LCD_clear 0004  
                  ?_HighISR 0001            ___lwdiv@dividend 0007                   _dtoa$1964 002E  
              ?_Timer0_init 0001          _daylight_start_min 00DD                   __pintcode 0008  
                  ?___aodiv 0001                    ?___aomod 0001            ___aodiv@quotient 0013  
       __end_of_LCD_setline 26DC                    ?___lwdiv 0007                    ?___lwmod 0007  
               __smallconst 0E00                    ?_isdigit 0001                    ?_isspace 0001  
          ??_LCD_sendnibble 0001                    _DAC_init 2842            ___lwdiv@quotient 000B  
          ??_LCD_sendstring 0006                    ?_sprintf 0060            LCD_sendbyte@Byte 0003  
                  _LCD_Init 235E            LCD_sendbyte@type 0002              ___wmul@product 0005  
                  _LATAbits 000F79                    _LATBbits 000F7A                    _LATCbits 000F7B  
                  _LATDbits 000F7C                    _LATEbits 000F7D                    _LATFbits 000F7E  
                  _LATGbits 000F7F                    _LATHbits 000F80                    i2u250_40 006C  
                  i2u250_41 0068                    i2u251_40 0090                    i2u251_41 008C  
                  i2u252_40 00A6                    i2u252_41 00A2                    i2u253_40 00B6  
                  i2u253_41 00B2                    i2u247_40 001A                    i2u247_41 0016  
                  i2u248_40 003A                    i2u248_41 0036                    i2u249_40 0048  
                  i2u249_41 0044                    _PIR2bits 000E35                   _vfpfcnvrt 176A  
                _ADCON0bits 000F60           ___wmul@multiplier 0001                   main@isDST 00CB  
                 main@month 00CF                _isspace$2013 0005                  _CM1NCHbits 000ED2  
                _CM1PCHbits 000ED3       __end_of_LEDarray_init 2808                 _LCD_setline 26A2  
                  __Hrparam 0000                  vfprintf@ap 0058                    __Lrparam 0000  
                vfprintf@fp 0054                  ?_vfpfcnvrt 003F             ___aodiv@divisor 0009  
           ___aodiv@counter 0011                  _ANSELAbits 000E92                  _ANSELFbits 000EB4  
                sprintf@fmt 0062                  _T0CON0bits 000FD5                  _T0CON1bits 000FD6  
           ___lwdiv@divisor 0009             ___lwdiv@counter 000D                    __ptext10 1E60  
                  __ptext11 1CD8                    __ptext20 2864                    __ptext12 1FC4  
                  __ptext21 27E6                    __ptext13 25D8                    __ptext30 286E  
                  __ptext22 21EC                    __ptext14 2746                    __ptext31 27C0  
                  __ptext23 26A2                    __ptext15 279A                    __ptext32 2842  
                  __ptext24 2712                    __ptext16 1434                    __ptext25 2828  
                  __ptext17 24D0                    __ptext26 235E                    __ptext18 23F4  
                  __ptext27 26DC                    __ptext19 2808                    __ptext28 2468  
                  __ptext29 2856     LEDarray_disp_bin@number 0001                    isa$xinst 000000  
                  int$flags 005F                    _vfprintf 2586                    main@year 00C7  
          ___aomod@dividend 0001                  _INTCONbits 000FF2                ?_check_month 000C  
                  isdigit@c 0001                    intlevel2 0000                   sprintf@ap 006C  
              _DAC1CON0bits 000EC6                _DAC1CON1bits 000EC7            ___lwmod@dividend 0007  
                  isspace@c 0001             ___aomod@divisor 0009                 ??_vfpfcnvrt 0045  
           ___aomod@counter 0011                    sprintf@f 006E                    sprintf@s 0060  
 _calculated_solar_noon_min 00D5             ___lwmod@divisor 0009             ___lwmod@counter 000B  
              ___aodiv@sign 0012                ___aomod@sign 0012  

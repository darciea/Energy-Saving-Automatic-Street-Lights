

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Nov 08 17:27:54 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    49                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    51   000000                     
    52                           ; Version 2.35
    53                           ; Generated 05/05/2021 GMT
    54                           ; 
    55                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution. Publication is not required when
    69                           ;        this file is used in an embedded application.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC18F67K40 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87   000000                     _T0CON0bits	set	4053
    88   000000                     _T0CON1bits	set	4054
    89   000000                     _CM1CON1bits	set	3793
    90   000000                     _LATHbits	set	3968
    91   000000                     _ANSELAbits	set	3730
    92   000000                     _TRISAbits	set	3969
    93   000000                     _TMR0IE	set	29005
    94   000000                     _TRISEbits	set	3973
    95   000000                     _TRISCbits	set	3971
    96   000000                     _TRISBbits	set	3970
    97   000000                     _TRISFbits	set	3974
    98   000000                     _TRISGbits	set	3975
    99   000000                     _ANSELFbits	set	3764
   100   000000                     _ADREFbits	set	3928
   101   000000                     _ADPCH	set	3935
   102   000000                     _ADRESH	set	3940
   103   000000                     _ADCON0bits	set	3936
   104   000000                     _LATAbits	set	3961
   105   000000                     _LATGbits	set	3967
   106   000000                     _TMR0L	set	4051
   107   000000                     _TMR0H	set	4052
   108   000000                     _INTCONbits	set	4082
   109   000000                     _TRISHbits	set	3976
   110   000000                     _LATEbits	set	3965
   111   000000                     _LATCbits	set	3963
   112   000000                     _LATBbits	set	3962
   113   000000                     _LATFbits	set	3966
   114   000000                     _DAC1CON0bits	set	3782
   115   000000                     _CM1CON0bits	set	3792
   116   000000                     _CM1NCHbits	set	3794
   117   000000                     _DAC1CON1bits	set	3783
   118   000000                     _CM1PCHbits	set	3795
   119   000000                     _TMR0IF	set	29085
   120   000000                     _PIR2bits	set	3637
   121                           
   122                           	psect	smallconst
   123   000E00                     __psmallconst:
   124                           	callstack 0
   125   000E00  00                 	db	0
   126   000E01                     
   127                           ; BSR set to: 14
   128   000E01  56                 	db	86	;'V'
   129   000E02  6F                 	db	111	;'o'
   130   000E03  6C                 	db	108	;'l'
   131   000E04  74                 	db	116	;'t'
   132   000E05  61                 	db	97	;'a'
   133   000E06  67                 	db	103	;'g'
   134   000E07  65                 	db	101	;'e'
   135   000E08  20                 	db	32
   136   000E09  3D                 	db	61	;'='
   137   000E0A  20                 	db	32
   138   000E0B  25                 	db	37
   139   000E0C  64                 	db	100	;'d'
   140   000E0D  2E                 	db	46
   141   000E0E  25                 	db	37
   142   000E0F  30                 	db	48	;'0'
   143   000E10  32                 	db	50	;'2'
   144   000E11  64                 	db	100	;'d'
   145   000E12  00                 	db	0
   146   000E13                     
   147                           ; BSR set to: 14
   148   000E13  67                 	db	103	;'g'
   149   000E14  65                 	db	101	;'e'
   150   000E15  74                 	db	116	;'t'
   151   000E16  76                 	db	118	;'v'
   152   000E17  61                 	db	97	;'a'
   153   000E18  6C                 	db	108	;'l'
   154   000E19  20                 	db	32
   155   000E1A  3D                 	db	61	;'='
   156   000E1B  20                 	db	32
   157   000E1C  25                 	db	37
   158   000E1D  64                 	db	100	;'d'
   159   000E1E  00                 	db	0
   160   000E1F                     STR_1:
   161                           
   162                           ; BSR set to: 14
   163   000E1F  25                 	db	37
   164   000E20  64                 	db	100	;'d'
   165   000E21  20                 	db	32
   166   000E22  2F                 	db	47
   167   000E23  20                 	db	32
   168   000E24  25                 	db	37
   169   000E25  64                 	db	100	;'d'
   170   000E26  00                 	db	0
   171   000E27  00                 	db	0	; dummy byte at the end
   172   000000                     
   173                           ; #config settings
   174                           
   175                           	psect	cinit
   176   00260E                     __pcinit:
   177                           	callstack 0
   178   00260E                     start_initialization:
   179                           	callstack 0
   180   00260E                     __initialization:
   181                           	callstack 0
   182                           
   183                           ; Clear objects allocated to BANK1 (32 bytes)
   184   00260E  EE01  F000         	lfsr	0,__pbssBANK1
   185   002612  0E20               	movlw	32
   186   002614                     clear_0:
   187   002614  6AEE               	clrf	postinc0,c
   188   002616  06E8               	decf	wreg,f,c
   189   002618  E1FD               	bnz	clear_0
   190                           
   191                           ; Clear objects allocated to BANK0 (22 bytes)
   192   00261A  EE00  F0CB         	lfsr	0,__pbssBANK0
   193   00261E  0E16               	movlw	22
   194   002620                     clear_1:
   195   002620  6AEE               	clrf	postinc0,c
   196   002622  06E8               	decf	wreg,f,c
   197   002624  E1FD               	bnz	clear_1
   198                           
   199                           ; Clear objects allocated to COMRAM (3 bytes)
   200   002626  6A5E               	clrf	(__pbssCOMRAM+2)& (0+255),c
   201   002628  6A5D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   202   00262A  6A5C               	clrf	__pbssCOMRAM& (0+255),c
   203   00262C                     end_of_initialization:
   204                           	callstack 0
   205   00262C                     __end_of__initialization:
   206                           	callstack 0
   207   00262C  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   208   00262E  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   209   002630  0100               	movlb	0
   210   002632  EF14  F007         	goto	_main	;jump to C main() function
   211                           
   212                           	psect	bssCOMRAM
   213   00005C                     __pbssCOMRAM:
   214                           	callstack 0
   215   00005C                     _prec:
   216                           	callstack 0
   217   00005C                     	ds	2
   218   00005E                     _flags:
   219                           	callstack 0
   220   00005E                     	ds	1
   221                           
   222                           	psect	bssBANK0
   223   0000CB                     __pbssBANK0:
   224                           	callstack 0
   225   0000CB                     _width:
   226                           	callstack 0
   227   0000CB                     	ds	2
   228   0000CD                     _calculated_solar_noon_min:
   229                           	callstack 0
   230   0000CD                     	ds	2
   231   0000CF                     _calculated_solar_noon_hour:
   232                           	callstack 0
   233   0000CF                     	ds	2
   234   0000D1                     _daylight_end_min:
   235                           	callstack 0
   236   0000D1                     	ds	2
   237   0000D3                     _daylight_end_hour:
   238                           	callstack 0
   239   0000D3                     	ds	2
   240   0000D5                     _daylight_start_min:
   241                           	callstack 0
   242   0000D5                     	ds	2
   243   0000D7                     _daylight_start_hour:
   244                           	callstack 0
   245   0000D7                     	ds	2
   246   0000D9                     _current_day_min:
   247                           	callstack 0
   248   0000D9                     	ds	2
   249   0000DB                     _current_day_hour:
   250                           	callstack 0
   251   0000DB                     	ds	2
   252   0000DD                     _minute:
   253                           	callstack 0
   254   0000DD                     	ds	2
   255   0000DF                     _hour:
   256                           	callstack 0
   257   0000DF                     	ds	2
   258                           
   259                           	psect	bssBANK1
   260   000100                     __pbssBANK1:
   261                           	callstack 0
   262   000100                     _dbuf:
   263                           	callstack 0
   264   000100                     	ds	32
   265                           
   266                           	psect	cstackBANK0
   267   000060                     __pcstackBANK0:
   268                           	callstack 0
   269   000060                     ?_sprintf:
   270                           	callstack 0
   271   000060                     sprintf@s:
   272                           	callstack 0
   273                           
   274                           ; 2 bytes @ 0x0
   275   000060                     	ds	2
   276   000062                     sprintf@fmt:
   277                           	callstack 0
   278                           
   279                           ; 2 bytes @ 0x2
   280   000062                     	ds	6
   281   000068                     sprintf@ap:
   282                           	callstack 0
   283                           
   284                           ; 2 bytes @ 0x8
   285   000068                     	ds	2
   286   00006A                     sprintf@f:
   287                           	callstack 0
   288                           
   289                           ; 11 bytes @ 0xA
   290   00006A                     	ds	11
   291   000075                     ??_main:
   292                           
   293                           ; 1 bytes @ 0x15
   294   000075                     	ds	4
   295   000079                     main@datestr:
   296                           	callstack 0
   297                           
   298                           ; 50 bytes @ 0x19
   299   000079                     	ds	50
   300   0000AB                     main@yearstr:
   301                           	callstack 0
   302                           
   303                           ; 20 bytes @ 0x4B
   304   0000AB                     	ds	20
   305   0000BF                     main@OneAmToFiveAmFlag:
   306                           	callstack 0
   307                           
   308                           ; 2 bytes @ 0x5F
   309   0000BF                     	ds	2
   310   0000C1                     main@changed:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0x61
   314   0000C1                     	ds	2
   315   0000C3                     main@year:
   316                           	callstack 0
   317                           
   318                           ; 2 bytes @ 0x63
   319   0000C3                     	ds	2
   320   0000C5                     main@day:
   321                           	callstack 0
   322                           
   323                           ; 2 bytes @ 0x65
   324   0000C5                     	ds	2
   325   0000C7                     main@month:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0x67
   329   0000C7                     	ds	2
   330   0000C9                     main@month_day:
   331                           	callstack 0
   332                           
   333                           ; 2 bytes @ 0x69
   334   0000C9                     	ds	2
   335                           
   336                           	psect	cstackCOMRAM
   337   000001                     __pcstackCOMRAM:
   338                           	callstack 0
   339   000001                     ?_isdigit:
   340                           	callstack 0
   341   000001                     ?_isspace:
   342                           	callstack 0
   343   000001                     ?___wmul:
   344                           	callstack 0
   345   000001                     ?___aodiv:
   346                           	callstack 0
   347   000001                     ?___aomod:
   348                           	callstack 0
   349   000001                     LCD_sendnibble@number:
   350                           	callstack 0
   351   000001                     LEDarray_disp_bin@number:
   352                           	callstack 0
   353   000001                     ___wmul@multiplier:
   354                           	callstack 0
   355   000001                     isdigit@c:
   356                           	callstack 0
   357   000001                     isspace@c:
   358                           	callstack 0
   359   000001                     fputc@c:
   360                           	callstack 0
   361   000001                     ___aodiv@dividend:
   362                           	callstack 0
   363   000001                     ___aomod@dividend:
   364                           	callstack 0
   365                           
   366                           ; 8 bytes @ 0x0
   367   000001                     	ds	1
   368   000002                     LCD_sendbyte@type:
   369                           	callstack 0
   370                           
   371                           ; 1 bytes @ 0x1
   372   000002                     	ds	1
   373   000003                     ??_isdigit:
   374   000003                     ??_isspace:
   375   000003                     LCD_sendbyte@Byte:
   376                           	callstack 0
   377   000003                     ___wmul@multiplicand:
   378                           	callstack 0
   379   000003                     fputc@fp:
   380                           	callstack 0
   381                           
   382                           ; 2 bytes @ 0x2
   383   000003                     	ds	1
   384   000004                     ??_LCD_Init:
   385   000004                     ??_LCD_clear:
   386   000004                     LCD_setline@line:
   387                           	callstack 0
   388   000004                     LCD_sendstring@string:
   389                           	callstack 0
   390                           
   391                           ; 2 bytes @ 0x3
   392   000004                     	ds	1
   393   000005                     ??_fputc:
   394   000005                     _isspace$1934:
   395                           	callstack 0
   396   000005                     ___wmul@product:
   397                           	callstack 0
   398                           
   399                           ; 2 bytes @ 0x4
   400   000005                     	ds	1
   401   000006                     
   402                           ; 1 bytes @ 0x5
   403   000006                     	ds	1
   404   000007                     ?_atoi:
   405                           	callstack 0
   406   000007                     ?___lwdiv:
   407                           	callstack 0
   408   000007                     ?___lwmod:
   409                           	callstack 0
   410   000007                     ___lwdiv@dividend:
   411                           	callstack 0
   412   000007                     ___lwmod@dividend:
   413                           	callstack 0
   414   000007                     atoi@s:
   415                           	callstack 0
   416                           
   417                           ; 2 bytes @ 0x6
   418   000007                     	ds	2
   419   000009                     ??_atoi:
   420   000009                     ___lwdiv@divisor:
   421                           	callstack 0
   422   000009                     ___lwmod@divisor:
   423                           	callstack 0
   424   000009                     ___aodiv@divisor:
   425                           	callstack 0
   426   000009                     ___aomod@divisor:
   427                           	callstack 0
   428                           
   429                           ; 8 bytes @ 0x8
   430   000009                     	ds	1
   431   00000A                     fputs@s:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x9
   435   00000A                     	ds	1
   436   00000B                     ___lwmod@counter:
   437                           	callstack 0
   438   00000B                     ___lwdiv@quotient:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0xA
   442   00000B                     	ds	1
   443   00000C                     check_month@month:
   444                           	callstack 0
   445   00000C                     atoi@neg:
   446                           	callstack 0
   447   00000C                     fputs@fp:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0xB
   451   00000C                     	ds	1
   452   00000D                     ___lwdiv@counter:
   453                           	callstack 0
   454                           
   455                           ; 1 bytes @ 0xC
   456   00000D                     	ds	1
   457   00000E                     fputs@c:
   458                           	callstack 0
   459   00000E                     check_month@month_day:
   460                           	callstack 0
   461   00000E                     atoi@n:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0xD
   465   00000E                     	ds	1
   466   00000F                     fputs@i:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0xE
   470   00000F                     	ds	1
   471   000010                     check_month@year:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0xF
   475   000010                     	ds	1
   476   000011                     ___aodiv@counter:
   477                           	callstack 0
   478   000011                     ___aomod@counter:
   479                           	callstack 0
   480   000011                     pad@fp:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x10
   484   000011                     	ds	1
   485   000012                     ??_check_month:
   486   000012                     ___aodiv@sign:
   487                           	callstack 0
   488   000012                     ___aomod@sign:
   489                           	callstack 0
   490                           
   491                           ; 1 bytes @ 0x11
   492   000012                     	ds	1
   493   000013                     ?_abs:
   494                           	callstack 0
   495   000013                     pad@buf:
   496                           	callstack 0
   497   000013                     abs@a:
   498                           	callstack 0
   499   000013                     ___aodiv@quotient:
   500                           	callstack 0
   501                           
   502                           ; 8 bytes @ 0x12
   503   000013                     	ds	1
   504   000014                     check_month@leap_year:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0x13
   508   000014                     	ds	1
   509   000015                     ??_abs:
   510   000015                     pad@p:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x14
   514   000015                     	ds	2
   515   000017                     ??_pad:
   516                           
   517                           ; 1 bytes @ 0x16
   518   000017                     	ds	1
   519   000018                     pad@i:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x17
   523   000018                     	ds	2
   524   00001A                     pad@w:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x19
   528   00001A                     	ds	2
   529   00001C                     dtoa@fp:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x1B
   533   00001C                     	ds	2
   534   00001E                     dtoa@d:
   535                           	callstack 0
   536                           
   537                           ; 8 bytes @ 0x1D
   538   00001E                     	ds	8
   539   000026                     ??_dtoa:
   540                           
   541                           ; 1 bytes @ 0x25
   542   000026                     	ds	8
   543   00002E                     _dtoa$1885:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x2D
   547   00002E                     	ds	2
   548   000030                     dtoa@p:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x2F
   552   000030                     	ds	2
   553   000032                     dtoa@w:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x31
   557   000032                     	ds	2
   558   000034                     dtoa@n:
   559                           	callstack 0
   560                           
   561                           ; 8 bytes @ 0x33
   562   000034                     	ds	8
   563   00003C                     dtoa@i:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x3B
   567   00003C                     	ds	2
   568   00003E                     dtoa@s:
   569                           	callstack 0
   570                           
   571                           ; 1 bytes @ 0x3D
   572   00003E                     	ds	1
   573   00003F                     vfpfcnvrt@fp:
   574                           	callstack 0
   575                           
   576                           ; 2 bytes @ 0x3E
   577   00003F                     	ds	2
   578   000041                     vfpfcnvrt@fmt:
   579                           	callstack 0
   580                           
   581                           ; 2 bytes @ 0x40
   582   000041                     	ds	2
   583   000043                     vfpfcnvrt@ap:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0x42
   587   000043                     	ds	2
   588   000045                     ??_vfpfcnvrt:
   589                           
   590                           ; 1 bytes @ 0x44
   591   000045                     	ds	3
   592   000048                     vfpfcnvrt@convarg:
   593                           	callstack 0
   594                           
   595                           ; 8 bytes @ 0x47
   596   000048                     	ds	8
   597   000050                     vfpfcnvrt@done:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x4F
   601   000050                     	ds	2
   602   000052                     vfpfcnvrt@cp:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x51
   606   000052                     	ds	2
   607   000054                     ?_vfprintf:
   608                           	callstack 0
   609   000054                     vfprintf@fp:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x53
   613   000054                     	ds	2
   614   000056                     vfprintf@fmt:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x55
   618   000056                     	ds	2
   619   000058                     vfprintf@ap:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x57
   623   000058                     	ds	2
   624   00005A                     vfprintf@cfmt:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x59
   628   00005A                     	ds	2
   629   00005C                     
   630                           ; 1 bytes @ 0x5B
   631 ;;
   632 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   633 ;;
   634 ;; *************** function _main *****************
   635 ;; Defined at:
   636 ;;		line 24 in file "../main.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;		None
   639 ;; Auto vars:     Size  Location     Type
   640 ;;  datestr        50   25[BANK0 ] unsigned char [50]
   641 ;;  yearstr        20   75[BANK0 ] unsigned char [20]
   642 ;;  month_day       2  105[BANK0 ] unsigned int 
   643 ;;  month           2  103[BANK0 ] unsigned int 
   644 ;;  day             2  101[BANK0 ] unsigned int 
   645 ;;  year            2   99[BANK0 ] unsigned short 
   646 ;;  changed         2   97[BANK0 ] unsigned int 
   647 ;;  OneAmToFiveA    2   95[BANK0 ] unsigned int 
   648 ;; Return value:  Size  Location     Type
   649 ;;                  1    wreg      void 
   650 ;; Registers used:
   651 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   652 ;; Tracked objects:
   653 ;;		On entry : 0/0
   654 ;;		On exit  : 0/0
   655 ;;		Unchanged: 0/0
   656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   658 ;;      Locals:         0      82       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   659 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   660 ;;      Totals:         0      86       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   661 ;;Total ram usage:       86 bytes
   662 ;; Hardware stack levels required when called: 9
   663 ;; This function calls:
   664 ;;		_Comp1_init
   665 ;;		_Interrupts_init
   666 ;;		_LCD_Init
   667 ;;		_LCD_clear
   668 ;;		_LCD_sendstring
   669 ;;		_LCD_setline
   670 ;;		_LEDarray_disp_bin
   671 ;;		_LEDarray_init
   672 ;;		_Light_init
   673 ;;		_Timer0_init
   674 ;;		___lwdiv
   675 ;;		___lwmod
   676 ;;		___wmul
   677 ;;		_check_month
   678 ;;		_sprintf
   679 ;; This function is called by:
   680 ;;		Startup code after reset
   681 ;; This function uses a non-reentrant model
   682 ;;
   683                           
   684                           	psect	text0
   685   000E28                     __ptext0:
   686                           	callstack 0
   687   000E28                     _main:
   688                           	callstack 22
   689   000E28                     
   690                           ;../main.c: 27:     unsigned int day = 2;
   691   000E28  0E00               	movlw	0
   692   000E2A  0100               	movlb	0	; () banked
   693   000E2C  6FC6               	movwf	(main@day+1)& (0+255),b
   694   000E2E  0E02               	movlw	2
   695   000E30  6FC5               	movwf	main@day& (0+255),b
   696                           
   697                           ;../main.c: 28:     unsigned int month = 2;
   698   000E32  0E00               	movlw	0
   699   000E34  6FC8               	movwf	(main@month+1)& (0+255),b
   700   000E36  0E02               	movlw	2
   701   000E38  6FC7               	movwf	main@month& (0+255),b
   702                           
   703                           ;../main.c: 29:     unsigned int month_day = 27;
   704   000E3A  0E00               	movlw	0
   705   000E3C  6FCA               	movwf	(main@month_day+1)& (0+255),b
   706   000E3E  0E1B               	movlw	27
   707   000E40  6FC9               	movwf	main@month_day& (0+255),b
   708                           
   709                           ;../main.c: 30:     unsigned short year = 2020;
   710   000E42  0E07               	movlw	7
   711   000E44  6FC4               	movwf	(main@year+1)& (0+255),b
   712   000E46  0EE4               	movlw	228
   713   000E48  6FC3               	movwf	main@year& (0+255),b
   714                           
   715                           ;../main.c: 33:     unsigned int changed = 0;
   716   000E4A  0E00               	movlw	0
   717   000E4C  6FC2               	movwf	(main@changed+1)& (0+255),b
   718   000E4E  0E00               	movlw	0
   719   000E50  6FC1               	movwf	main@changed& (0+255),b
   720                           
   721                           ;../main.c: 34:     unsigned int OneAmToFiveAmFlag = 0;
   722   000E52  0E00               	movlw	0
   723   000E54  6FC0               	movwf	(main@OneAmToFiveAmFlag+1)& (0+255),b
   724   000E56  0E00               	movlw	0
   725   000E58  6FBF               	movwf	main@OneAmToFiveAmFlag& (0+255),b
   726   000E5A                     
   727                           ; BSR set to: 0
   728                           ;../main.c: 37:     char datestr[50];;../main.c: 38:     char yearstr[20];;../main.c: 41
      +                          :     Timer0_init();
   729   000E5A  EC52  F013         	call	_Timer0_init	;wreg free
   730                           
   731                           ;../main.c: 42:     LEDarray_init();
   732   000E5E  EC41  F013         	call	_LEDarray_init	;wreg free
   733                           
   734                           ;../main.c: 43:     Interrupts_init();
   735   000E62  EC80  F013         	call	_Interrupts_init	;wreg free
   736                           
   737                           ;../main.c: 44:     LEDarray_init();
   738   000E66  EC41  F013         	call	_LEDarray_init	;wreg free
   739   000E6A                     
   740                           ;../main.c: 45:     Comp1_init();
   741   000E6A  EC2E  F013         	call	_Comp1_init	;wreg free
   742   000E6E                     
   743                           ;../main.c: 46:     Light_init();
   744   000E6E  EC85  F013         	call	_Light_init	;wreg free
   745   000E72                     
   746                           ;../main.c: 48:     LCD_Init();
   747   000E72  ECFD  F010         	call	_LCD_Init	;wreg free
   748   000E76                     l2564:
   749                           
   750                           ;../main.c: 53:         LCD_setline(1);
   751   000E76  0E01               	movlw	1
   752   000E78  EC9F  F012         	call	_LCD_setline
   753   000E7C                     
   754                           ;../main.c: 54:         sprintf(datestr, "%d / %d", month_day, month);
   755   000E7C  0E79               	movlw	low main@datestr
   756   000E7E  0100               	movlb	0	; () banked
   757   000E80  6F60               	movwf	sprintf@s& (0+255),b
   758   000E82  0E00               	movlw	high main@datestr
   759   000E84  6F61               	movwf	(sprintf@s+1)& (0+255),b
   760   000E86  0E1F               	movlw	low STR_1
   761   000E88  6F62               	movwf	sprintf@fmt& (0+255),b
   762   000E8A  0E0E               	movlw	high STR_1
   763   000E8C  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   764   000E8E  C0C9  F064         	movff	main@month_day,?_sprintf+4
   765   000E92  C0CA  F065         	movff	main@month_day+1,?_sprintf+5
   766   000E96  C0C7  F066         	movff	main@month,?_sprintf+6
   767   000E9A  C0C8  F067         	movff	main@month+1,?_sprintf+7
   768   000E9E  ECE8  F011         	call	_sprintf	;wreg free
   769   000EA2                     
   770                           ;../main.c: 55:         LCD_sendstring(datestr);
   771   000EA2  0E79               	movlw	low main@datestr
   772   000EA4  6E04               	movwf	LCD_sendstring@string^0,c
   773   000EA6  0E00               	movlw	high main@datestr
   774   000EA8  6E05               	movwf	(LCD_sendstring@string+1)^0,c
   775   000EAA  ECD7  F012         	call	_LCD_sendstring	;wreg free
   776   000EAE                     
   777                           ;../main.c: 56:         LCD_setline(2);
   778   000EAE  0E02               	movlw	2
   779   000EB0  EC9F  F012         	call	_LCD_setline
   780   000EB4                     
   781                           ;../main.c: 57:         sprintf(yearstr, "%d / %d", day, year);
   782   000EB4  0EAB               	movlw	low main@yearstr
   783   000EB6  0100               	movlb	0	; () banked
   784   000EB8  6F60               	movwf	sprintf@s& (0+255),b
   785   000EBA  0E00               	movlw	high main@yearstr
   786   000EBC  6F61               	movwf	(sprintf@s+1)& (0+255),b
   787   000EBE  0E1F               	movlw	low STR_1
   788   000EC0  6F62               	movwf	sprintf@fmt& (0+255),b
   789   000EC2  0E0E               	movlw	high STR_1
   790   000EC4  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   791   000EC6  C0C5  F064         	movff	main@day,?_sprintf+4
   792   000ECA  C0C6  F065         	movff	main@day+1,?_sprintf+5
   793   000ECE  C0C3  F066         	movff	main@year,?_sprintf+6
   794   000ED2  C0C4  F067         	movff	main@year+1,?_sprintf+7
   795   000ED6  ECE8  F011         	call	_sprintf	;wreg free
   796   000EDA                     
   797                           ;../main.c: 58:         LCD_sendstring(yearstr);
   798   000EDA  0EAB               	movlw	low main@yearstr
   799   000EDC  6E04               	movwf	LCD_sendstring@string^0,c
   800   000EDE  0E00               	movlw	high main@yearstr
   801   000EE0  6E05               	movwf	(LCD_sendstring@string+1)^0,c
   802   000EE2  ECD7  F012         	call	_LCD_sendstring	;wreg free
   803   000EE6                     
   804                           ;../main.c: 61:         if (minute == 60) {
   805   000EE6  0E3C               	movlw	60
   806   000EE8  0100               	movlb	0	; () banked
   807   000EEA  19DD               	xorwf	_minute& (0+255),w,b
   808   000EEC  11DE               	iorwf	(_minute+1)& (0+255),w,b
   809   000EEE  A4D8               	btfss	status,2,c
   810   000EF0  EF7C  F007         	goto	u2471
   811   000EF4  EF7E  F007         	goto	u2470
   812   000EF8                     u2471:
   813   000EF8  EF54  F008         	goto	l207
   814   000EFC                     u2470:
   815   000EFC                     
   816                           ; BSR set to: 0
   817                           ;../main.c: 62:             hour++;
   818   000EFC  4BDF               	infsnz	_hour& (0+255),f,b
   819   000EFE  2BE0               	incf	(_hour+1)& (0+255),f,b
   820   000F00                     
   821                           ; BSR set to: 0
   822                           ;../main.c: 63:             LEDarray_disp_bin(hour);
   823   000F00  C0DF  F001         	movff	_hour,LEDarray_disp_bin@number
   824   000F04  C0E0  F002         	movff	_hour+1,LEDarray_disp_bin@number+1
   825   000F08  EC44  F010         	call	_LEDarray_disp_bin	;wreg free
   826   000F0C                     
   827                           ;../main.c: 64:             minute = 0;
   828   000F0C  0E00               	movlw	0
   829   000F0E  0100               	movlb	0	; () banked
   830   000F10  6FDE               	movwf	(_minute+1)& (0+255),b
   831   000F12  0E00               	movlw	0
   832   000F14  6FDD               	movwf	_minute& (0+255),b
   833   000F16                     
   834                           ; BSR set to: 0
   835                           ;../main.c: 65:             if (hour == 24){
   836   000F16  0E18               	movlw	24
   837   000F18  19DF               	xorwf	_hour& (0+255),w,b
   838   000F1A  11E0               	iorwf	(_hour+1)& (0+255),w,b
   839   000F1C  A4D8               	btfss	status,2,c
   840   000F1E  EF93  F007         	goto	u2481
   841   000F22  EF95  F007         	goto	u2480
   842   000F26                     u2481:
   843   000F26  EF54  F008         	goto	l207
   844   000F2A                     u2480:
   845   000F2A                     
   846                           ; BSR set to: 0
   847                           ;../main.c: 66:                 hour = 0;
   848   000F2A  0E00               	movlw	0
   849   000F2C  6FE0               	movwf	(_hour+1)& (0+255),b
   850   000F2E  0E00               	movlw	0
   851   000F30  6FDF               	movwf	_hour& (0+255),b
   852   000F32                     
   853                           ; BSR set to: 0
   854                           ;../main.c: 67:                 day++;
   855   000F32  4BC5               	infsnz	main@day& (0+255),f,b
   856   000F34  2BC6               	incf	(main@day+1)& (0+255),f,b
   857   000F36                     
   858                           ; BSR set to: 0
   859                           ;../main.c: 68:                 month_day++;
   860   000F36  4BC9               	infsnz	main@month_day& (0+255),f,b
   861   000F38  2BCA               	incf	(main@month_day+1)& (0+255),f,b
   862   000F3A                     
   863                           ; BSR set to: 0
   864                           ;../main.c: 69:                 check_month(&month, &month_day, &year);
   865   000F3A  0EC7               	movlw	low main@month
   866   000F3C  6E0C               	movwf	check_month@month^0,c
   867   000F3E  0E00               	movlw	high main@month
   868   000F40  6E0D               	movwf	(check_month@month+1)^0,c
   869   000F42  0EC9               	movlw	low main@month_day
   870   000F44  6E0E               	movwf	check_month@month_day^0,c
   871   000F46  0E00               	movlw	high main@month_day
   872   000F48  6E0F               	movwf	(check_month@month_day+1)^0,c
   873   000F4A  0EC3               	movlw	low main@year
   874   000F4C  6E10               	movwf	check_month@year^0,c
   875   000F4E  0E00               	movlw	high main@year
   876   000F50  6E11               	movwf	(check_month@year+1)^0,c
   877   000F52  EC68  F009         	call	_check_month	;wreg free
   878   000F56                     
   879                           ;../main.c: 70:                 if (day == 7){day = 0;}
   880   000F56  0E07               	movlw	7
   881   000F58  0100               	movlb	0	; () banked
   882   000F5A  19C5               	xorwf	main@day& (0+255),w,b
   883   000F5C  11C6               	iorwf	(main@day+1)& (0+255),w,b
   884   000F5E  A4D8               	btfss	status,2,c
   885   000F60  EFB4  F007         	goto	u2491
   886   000F64  EFB6  F007         	goto	u2490
   887   000F68                     u2491:
   888   000F68  EFBA  F007         	goto	l2598
   889   000F6C                     u2490:
   890   000F6C                     
   891                           ; BSR set to: 0
   892   000F6C  0E00               	movlw	0
   893   000F6E  6FC6               	movwf	(main@day+1)& (0+255),b
   894   000F70  0E00               	movlw	0
   895   000F72  6FC5               	movwf	main@day& (0+255),b
   896   000F74                     l2598:
   897                           
   898                           ; BSR set to: 0
   899                           ;../main.c: 71:                 LCD_clear();
   900   000F74  EC62  F013         	call	_LCD_clear	;wreg free
   901   000F78                     
   902                           ;../main.c: 75:                 if (daylight_end_min >= daylight_start_min) {
   903   000F78  0100               	movlb	0	; () banked
   904   000F7A  51D5               	movf	_daylight_start_min& (0+255),w,b
   905   000F7C  5DD1               	subwf	_daylight_end_min& (0+255),w,b
   906   000F7E  51D6               	movf	(_daylight_start_min+1)& (0+255),w,b
   907   000F80  59D2               	subwfb	(_daylight_end_min+1)& (0+255),w,b
   908   000F82  A0D8               	btfss	status,0,c
   909   000F84  EFC6  F007         	goto	u2501
   910   000F88  EFC8  F007         	goto	u2500
   911   000F8C                     u2501:
   912   000F8C  EFD6  F007         	goto	l2604
   913   000F90                     u2500:
   914   000F90                     
   915                           ; BSR set to: 0
   916                           ;../main.c: 76:                     current_day_min = daylight_end_min - daylight_start_
      +                          min;
   917   000F90  51D5               	movf	_daylight_start_min& (0+255),w,b
   918   000F92  5DD1               	subwf	_daylight_end_min& (0+255),w,b
   919   000F94  6FD9               	movwf	_current_day_min& (0+255),b
   920   000F96  51D6               	movf	(_daylight_start_min+1)& (0+255),w,b
   921   000F98  59D2               	subwfb	(_daylight_end_min+1)& (0+255),w,b
   922   000F9A  6FDA               	movwf	(_current_day_min+1)& (0+255),b
   923                           
   924                           ;../main.c: 77:                     current_day_hour = daylight_end_hour - daylight_star
      +                          t_hour;}
   925   000F9C  51D7               	movf	_daylight_start_hour& (0+255),w,b
   926   000F9E  5DD3               	subwf	_daylight_end_hour& (0+255),w,b
   927   000FA0  6FDB               	movwf	_current_day_hour& (0+255),b
   928   000FA2  51D8               	movf	(_daylight_start_hour+1)& (0+255),w,b
   929   000FA4  59D4               	subwfb	(_daylight_end_hour+1)& (0+255),w,b
   930   000FA6  6FDC               	movwf	(_current_day_hour+1)& (0+255),b
   931   000FA8  EFEE  F007         	goto	l2606
   932   000FAC                     l2604:
   933                           
   934                           ; BSR set to: 0
   935                           ;../main.c: 79:                     current_day_min = daylight_end_min + (60-daylight_st
      +                          art_min);
   936   000FAC  51D5               	movf	_daylight_start_min& (0+255),w,b
   937   000FAE  5DD1               	subwf	_daylight_end_min& (0+255),w,b
   938   000FB0  6F75               	movwf	??_main& (0+255),b
   939   000FB2  51D6               	movf	(_daylight_start_min+1)& (0+255),w,b
   940   000FB4  59D2               	subwfb	(_daylight_end_min+1)& (0+255),w,b
   941   000FB6  6F76               	movwf	(??_main+1)& (0+255),b
   942   000FB8  0E3C               	movlw	60
   943   000FBA  2575               	addwf	??_main& (0+255),w,b
   944   000FBC  6FD9               	movwf	_current_day_min& (0+255),b
   945   000FBE  0E00               	movlw	0
   946   000FC0  2176               	addwfc	(??_main+1)& (0+255),w,b
   947   000FC2  6FDA               	movwf	(_current_day_min+1)& (0+255),b
   948                           
   949                           ;../main.c: 80:                     current_day_hour = daylight_end_hour - daylight_star
      +                          t_hour - 1;
   950   000FC4  51D7               	movf	_daylight_start_hour& (0+255),w,b
   951   000FC6  5DD3               	subwf	_daylight_end_hour& (0+255),w,b
   952   000FC8  6F75               	movwf	??_main& (0+255),b
   953   000FCA  51D8               	movf	(_daylight_start_hour+1)& (0+255),w,b
   954   000FCC  59D4               	subwfb	(_daylight_end_hour+1)& (0+255),w,b
   955   000FCE  6F76               	movwf	(??_main+1)& (0+255),b
   956   000FD0  0EFF               	movlw	255
   957   000FD2  2575               	addwf	??_main& (0+255),w,b
   958   000FD4  6FDB               	movwf	_current_day_hour& (0+255),b
   959   000FD6  0EFF               	movlw	255
   960   000FD8  2176               	addwfc	(??_main+1)& (0+255),w,b
   961   000FDA  6FDC               	movwf	(_current_day_hour+1)& (0+255),b
   962   000FDC                     l2606:
   963                           
   964                           ; BSR set to: 0
   965                           ;../main.c: 83:                 calculated_solar_noon_hour = (daylight_start_hour*60 + d
      +                          aylight_start_min + current_day_hour*60 + current_day_min)/60;
   966   000FDC  C0D7  F001         	movff	_daylight_start_hour,___wmul@multiplier
   967   000FE0  C0D8  F002         	movff	_daylight_start_hour+1,___wmul@multiplier+1
   968   000FE4  0E00               	movlw	0
   969   000FE6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   970   000FE8  0E3C               	movlw	60
   971   000FEA  6E03               	movwf	___wmul@multiplicand^0,c
   972   000FEC  EC1B  F013         	call	___wmul	;wreg free
   973   000FF0  C001  F075         	movff	?___wmul,??_main
   974   000FF4  C002  F076         	movff	?___wmul+1,??_main+1
   975   000FF8  C0DB  F001         	movff	_current_day_hour,___wmul@multiplier
   976   000FFC  C0DC  F002         	movff	_current_day_hour+1,___wmul@multiplier+1
   977   001000  0E00               	movlw	0
   978   001002  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   979   001004  0E3C               	movlw	60
   980   001006  6E03               	movwf	___wmul@multiplicand^0,c
   981   001008  EC1B  F013         	call	___wmul	;wreg free
   982   00100C  5001               	movf	?___wmul^0,w,c
   983   00100E  0100               	movlb	0	; () banked
   984   001010  2575               	addwf	??_main& (0+255),w,b
   985   001012  6F77               	movwf	(??_main+2)& (0+255),b
   986   001014  5002               	movf	(?___wmul+1)^0,w,c
   987   001016  2176               	addwfc	(??_main+1)& (0+255),w,b
   988   001018  6F78               	movwf	(??_main+3)& (0+255),b
   989   00101A  51D5               	movf	_daylight_start_min& (0+255),w,b
   990   00101C  2777               	addwf	(??_main+2)& (0+255),f,b
   991   00101E  51D6               	movf	(_daylight_start_min+1)& (0+255),w,b
   992   001020  2378               	addwfc	(??_main+3)& (0+255),f,b
   993   001022  51D9               	movf	_current_day_min& (0+255),w,b
   994   001024  2577               	addwf	(??_main+2)& (0+255),w,b
   995   001026  6E07               	movwf	___lwdiv@dividend^0,c
   996   001028  51DA               	movf	(_current_day_min+1)& (0+255),w,b
   997   00102A  2178               	addwfc	(??_main+3)& (0+255),w,b
   998   00102C  6E08               	movwf	(___lwdiv@dividend+1)^0,c
   999   00102E  0E00               	movlw	0
  1000   001030  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  1001   001032  0E3C               	movlw	60
  1002   001034  6E09               	movwf	___lwdiv@divisor^0,c
  1003   001036  EC48  F011         	call	___lwdiv	;wreg free
  1004   00103A  C007  F0CF         	movff	?___lwdiv,_calculated_solar_noon_hour
  1005   00103E  C008  F0D0         	movff	?___lwdiv+1,_calculated_solar_noon_hour+1
  1006   001042                     
  1007                           ;../main.c: 84:                 calculated_solar_noon_min = (daylight_start_hour*60 + da
      +                          ylight_start_min + current_day_hour*60 + current_day_min)%60;
  1008   001042  C0D7  F001         	movff	_daylight_start_hour,___wmul@multiplier
  1009   001046  C0D8  F002         	movff	_daylight_start_hour+1,___wmul@multiplier+1
  1010   00104A  0E00               	movlw	0
  1011   00104C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1012   00104E  0E3C               	movlw	60
  1013   001050  6E03               	movwf	___wmul@multiplicand^0,c
  1014   001052  EC1B  F013         	call	___wmul	;wreg free
  1015   001056  C001  F075         	movff	?___wmul,??_main
  1016   00105A  C002  F076         	movff	?___wmul+1,??_main+1
  1017   00105E  C0DB  F001         	movff	_current_day_hour,___wmul@multiplier
  1018   001062  C0DC  F002         	movff	_current_day_hour+1,___wmul@multiplier+1
  1019   001066  0E00               	movlw	0
  1020   001068  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1021   00106A  0E3C               	movlw	60
  1022   00106C  6E03               	movwf	___wmul@multiplicand^0,c
  1023   00106E  EC1B  F013         	call	___wmul	;wreg free
  1024   001072  5001               	movf	?___wmul^0,w,c
  1025   001074  0100               	movlb	0	; () banked
  1026   001076  2575               	addwf	??_main& (0+255),w,b
  1027   001078  6F77               	movwf	(??_main+2)& (0+255),b
  1028   00107A  5002               	movf	(?___wmul+1)^0,w,c
  1029   00107C  2176               	addwfc	(??_main+1)& (0+255),w,b
  1030   00107E  6F78               	movwf	(??_main+3)& (0+255),b
  1031   001080  51D5               	movf	_daylight_start_min& (0+255),w,b
  1032   001082  2777               	addwf	(??_main+2)& (0+255),f,b
  1033   001084  51D6               	movf	(_daylight_start_min+1)& (0+255),w,b
  1034   001086  2378               	addwfc	(??_main+3)& (0+255),f,b
  1035   001088  51D9               	movf	_current_day_min& (0+255),w,b
  1036   00108A  2577               	addwf	(??_main+2)& (0+255),w,b
  1037   00108C  6E07               	movwf	___lwmod@dividend^0,c
  1038   00108E  51DA               	movf	(_current_day_min+1)& (0+255),w,b
  1039   001090  2178               	addwfc	(??_main+3)& (0+255),w,b
  1040   001092  6E08               	movwf	(___lwmod@dividend+1)^0,c
  1041   001094  0E00               	movlw	0
  1042   001096  6E0A               	movwf	(___lwmod@divisor+1)^0,c
  1043   001098  0E3C               	movlw	60
  1044   00109A  6E09               	movwf	___lwmod@divisor^0,c
  1045   00109C  ECB6  F011         	call	___lwmod	;wreg free
  1046   0010A0  C007  F0CD         	movff	?___lwmod,_calculated_solar_noon_min
  1047   0010A4  C008  F0CE         	movff	?___lwmod+1,_calculated_solar_noon_min+1
  1048   0010A8                     l207:
  1049                           
  1050                           ;../main.c: 90:         if (hour >= 1 && hour < 5){
  1051   0010A8  0100               	movlb	0	; () banked
  1052   0010AA  51DF               	movf	_hour& (0+255),w,b
  1053   0010AC  11E0               	iorwf	(_hour+1)& (0+255),w,b
  1054   0010AE  B4D8               	btfsc	status,2,c
  1055   0010B0  EF5C  F008         	goto	u2511
  1056   0010B4  EF5E  F008         	goto	u2510
  1057   0010B8                     u2511:
  1058   0010B8  EF6E  F008         	goto	l2616
  1059   0010BC                     u2510:
  1060   0010BC                     
  1061                           ; BSR set to: 0
  1062   0010BC  51E0               	movf	(_hour+1)& (0+255),w,b
  1063   0010BE  E107               	bnz	u2521
  1064   0010C0  0E05               	movlw	5
  1065   0010C2  5DDF               	subwf	_hour& (0+255),w,b
  1066   0010C4  B0D8               	btfsc	status,0,c
  1067   0010C6  EF67  F008         	goto	u2521
  1068   0010CA  EF69  F008         	goto	u2520
  1069   0010CE                     u2521:
  1070   0010CE  EF6E  F008         	goto	l2616
  1071   0010D2                     u2520:
  1072   0010D2                     
  1073                           ; BSR set to: 0
  1074                           ;../main.c: 91:             LATHbits.LATH3=0;
  1075   0010D2  9680               	bcf	128,3,c	;volatile
  1076   0010D4                     
  1077                           ; BSR set to: 0
  1078                           ;../main.c: 92:             OneAmToFiveAmFlag = 1;}
  1079   0010D4  0E00               	movlw	0
  1080   0010D6  6FC0               	movwf	(main@OneAmToFiveAmFlag+1)& (0+255),b
  1081   0010D8  0E01               	movlw	1
  1082   0010DA  6FBF               	movwf	main@OneAmToFiveAmFlag& (0+255),b
  1083   0010DC                     l2616:
  1084                           
  1085                           ; BSR set to: 0
  1086                           ;../main.c: 93:         if (hour == 5 && OneAmToFiveAmFlag == 1 && CM1CON0bits.OUT == 1)
      +                          {
  1087   0010DC  0E05               	movlw	5
  1088   0010DE  19DF               	xorwf	_hour& (0+255),w,b
  1089   0010E0  11E0               	iorwf	(_hour+1)& (0+255),w,b
  1090   0010E2  A4D8               	btfss	status,2,c
  1091   0010E4  EF76  F008         	goto	u2531
  1092   0010E8  EF78  F008         	goto	u2530
  1093   0010EC                     u2531:
  1094   0010EC  EF8F  F008         	goto	l2626
  1095   0010F0                     u2530:
  1096   0010F0                     
  1097                           ; BSR set to: 0
  1098   0010F0  05BF               	decf	main@OneAmToFiveAmFlag& (0+255),w,b
  1099   0010F2  11C0               	iorwf	(main@OneAmToFiveAmFlag+1)& (0+255),w,b
  1100   0010F4  A4D8               	btfss	status,2,c
  1101   0010F6  EF7F  F008         	goto	u2541
  1102   0010FA  EF81  F008         	goto	u2540
  1103   0010FE                     u2541:
  1104   0010FE  EF8F  F008         	goto	l2626
  1105   001102                     u2540:
  1106   001102                     
  1107                           ; BSR set to: 0
  1108   001102  010E               	movlb	14	; () banked
  1109   001104  ADD0               	btfss	208,6,b	;volatile
  1110   001106  EF87  F008         	goto	u2551
  1111   00110A  EF89  F008         	goto	u2550
  1112   00110E                     u2551:
  1113   00110E  EF8F  F008         	goto	l2626
  1114   001112                     u2550:
  1115   001112                     
  1116                           ; BSR set to: 14
  1117                           ;../main.c: 94:                 LATHbits.LATH3=1;
  1118   001112  8680               	bsf	128,3,c	;volatile
  1119   001114                     
  1120                           ; BSR set to: 14
  1121                           ;../main.c: 95:                 OneAmToFiveAmFlag = 0;}
  1122   001114  0E00               	movlw	0
  1123   001116  0100               	movlb	0	; () banked
  1124   001118  6FC0               	movwf	(main@OneAmToFiveAmFlag+1)& (0+255),b
  1125   00111A  0E00               	movlw	0
  1126   00111C  6FBF               	movwf	main@OneAmToFiveAmFlag& (0+255),b
  1127   00111E                     l2626:
  1128                           
  1129                           ;../main.c: 98:         if (day == 0 && month == 3 && hour == 1 && minute == 0 && month_
      +                          day >=25 && month_day <= 31) {hour++;}
  1130   00111E  0100               	movlb	0	; () banked
  1131   001120  51C5               	movf	main@day& (0+255),w,b
  1132   001122  11C6               	iorwf	(main@day+1)& (0+255),w,b
  1133   001124  A4D8               	btfss	status,2,c
  1134   001126  EF97  F008         	goto	u2561
  1135   00112A  EF99  F008         	goto	u2560
  1136   00112E                     u2561:
  1137   00112E  EFCD  F008         	goto	l2640
  1138   001132                     u2560:
  1139   001132                     
  1140                           ; BSR set to: 0
  1141   001132  0E03               	movlw	3
  1142   001134  19C7               	xorwf	main@month& (0+255),w,b
  1143   001136  11C8               	iorwf	(main@month+1)& (0+255),w,b
  1144   001138  A4D8               	btfss	status,2,c
  1145   00113A  EFA1  F008         	goto	u2571
  1146   00113E  EFA3  F008         	goto	u2570
  1147   001142                     u2571:
  1148   001142  EFCD  F008         	goto	l2640
  1149   001146                     u2570:
  1150   001146                     
  1151                           ; BSR set to: 0
  1152   001146  05DF               	decf	_hour& (0+255),w,b
  1153   001148  11E0               	iorwf	(_hour+1)& (0+255),w,b
  1154   00114A  A4D8               	btfss	status,2,c
  1155   00114C  EFAA  F008         	goto	u2581
  1156   001150  EFAC  F008         	goto	u2580
  1157   001154                     u2581:
  1158   001154  EFCD  F008         	goto	l2640
  1159   001158                     u2580:
  1160   001158                     
  1161                           ; BSR set to: 0
  1162   001158  51DD               	movf	_minute& (0+255),w,b
  1163   00115A  11DE               	iorwf	(_minute+1)& (0+255),w,b
  1164   00115C  A4D8               	btfss	status,2,c
  1165   00115E  EFB3  F008         	goto	u2591
  1166   001162  EFB5  F008         	goto	u2590
  1167   001166                     u2591:
  1168   001166  EFCD  F008         	goto	l2640
  1169   00116A                     u2590:
  1170   00116A                     
  1171                           ; BSR set to: 0
  1172   00116A  51CA               	movf	(main@month_day+1)& (0+255),w,b
  1173   00116C  E109               	bnz	u2600
  1174   00116E  0E19               	movlw	25
  1175   001170  5DC9               	subwf	main@month_day& (0+255),w,b
  1176   001172  A0D8               	btfss	status,0,c
  1177   001174  EFBE  F008         	goto	u2601
  1178   001178  EFC0  F008         	goto	u2600
  1179   00117C                     u2601:
  1180   00117C  EFCD  F008         	goto	l2640
  1181   001180                     u2600:
  1182   001180                     
  1183                           ; BSR set to: 0
  1184   001180  51CA               	movf	(main@month_day+1)& (0+255),w,b
  1185   001182  E107               	bnz	u2611
  1186   001184  0E20               	movlw	32
  1187   001186  5DC9               	subwf	main@month_day& (0+255),w,b
  1188   001188  B0D8               	btfsc	status,0,c
  1189   00118A  EFC9  F008         	goto	u2611
  1190   00118E  EFCB  F008         	goto	u2610
  1191   001192                     u2611:
  1192   001192  EFCD  F008         	goto	l2640
  1193   001196                     u2610:
  1194   001196                     
  1195                           ; BSR set to: 0
  1196   001196  4BDF               	infsnz	_hour& (0+255),f,b
  1197   001198  2BE0               	incf	(_hour+1)& (0+255),f,b
  1198   00119A                     l2640:
  1199                           
  1200                           ; BSR set to: 0
  1201                           ;../main.c: 100:         if (day == 0 && month == 10 && hour == 2 && minute == 0 && mont
      +                          h_day >=25 && month_day <= 31 && changed == 0) {
  1202   00119A  51C5               	movf	main@day& (0+255),w,b
  1203   00119C  11C6               	iorwf	(main@day+1)& (0+255),w,b
  1204   00119E  A4D8               	btfss	status,2,c
  1205   0011A0  EFD4  F008         	goto	u2621
  1206   0011A4  EFD6  F008         	goto	u2620
  1207   0011A8                     u2621:
  1208   0011A8  EF1B  F009         	goto	l2658
  1209   0011AC                     u2620:
  1210   0011AC                     
  1211                           ; BSR set to: 0
  1212   0011AC  0E0A               	movlw	10
  1213   0011AE  19C7               	xorwf	main@month& (0+255),w,b
  1214   0011B0  11C8               	iorwf	(main@month+1)& (0+255),w,b
  1215   0011B2  A4D8               	btfss	status,2,c
  1216   0011B4  EFDE  F008         	goto	u2631
  1217   0011B8  EFE0  F008         	goto	u2630
  1218   0011BC                     u2631:
  1219   0011BC  EF1B  F009         	goto	l2658
  1220   0011C0                     u2630:
  1221   0011C0                     
  1222                           ; BSR set to: 0
  1223   0011C0  0E02               	movlw	2
  1224   0011C2  19DF               	xorwf	_hour& (0+255),w,b
  1225   0011C4  11E0               	iorwf	(_hour+1)& (0+255),w,b
  1226   0011C6  A4D8               	btfss	status,2,c
  1227   0011C8  EFE8  F008         	goto	u2641
  1228   0011CC  EFEA  F008         	goto	u2640
  1229   0011D0                     u2641:
  1230   0011D0  EF1B  F009         	goto	l2658
  1231   0011D4                     u2640:
  1232   0011D4                     
  1233                           ; BSR set to: 0
  1234   0011D4  51DD               	movf	_minute& (0+255),w,b
  1235   0011D6  11DE               	iorwf	(_minute+1)& (0+255),w,b
  1236   0011D8  A4D8               	btfss	status,2,c
  1237   0011DA  EFF1  F008         	goto	u2651
  1238   0011DE  EFF3  F008         	goto	u2650
  1239   0011E2                     u2651:
  1240   0011E2  EF1B  F009         	goto	l2658
  1241   0011E6                     u2650:
  1242   0011E6                     
  1243                           ; BSR set to: 0
  1244   0011E6  51CA               	movf	(main@month_day+1)& (0+255),w,b
  1245   0011E8  E109               	bnz	u2660
  1246   0011EA  0E19               	movlw	25
  1247   0011EC  5DC9               	subwf	main@month_day& (0+255),w,b
  1248   0011EE  A0D8               	btfss	status,0,c
  1249   0011F0  EFFC  F008         	goto	u2661
  1250   0011F4  EFFE  F008         	goto	u2660
  1251   0011F8                     u2661:
  1252   0011F8  EF1B  F009         	goto	l2658
  1253   0011FC                     u2660:
  1254   0011FC                     
  1255                           ; BSR set to: 0
  1256   0011FC  51CA               	movf	(main@month_day+1)& (0+255),w,b
  1257   0011FE  E107               	bnz	u2671
  1258   001200  0E20               	movlw	32
  1259   001202  5DC9               	subwf	main@month_day& (0+255),w,b
  1260   001204  B0D8               	btfsc	status,0,c
  1261   001206  EF07  F009         	goto	u2671
  1262   00120A  EF09  F009         	goto	u2670
  1263   00120E                     u2671:
  1264   00120E  EF1B  F009         	goto	l2658
  1265   001212                     u2670:
  1266   001212                     
  1267                           ; BSR set to: 0
  1268   001212  51C1               	movf	main@changed& (0+255),w,b
  1269   001214  11C2               	iorwf	(main@changed+1)& (0+255),w,b
  1270   001216  A4D8               	btfss	status,2,c
  1271   001218  EF10  F009         	goto	u2681
  1272   00121C  EF12  F009         	goto	u2680
  1273   001220                     u2681:
  1274   001220  EF1B  F009         	goto	l2658
  1275   001224                     u2680:
  1276   001224                     
  1277                           ; BSR set to: 0
  1278                           ;../main.c: 101:             hour--;
  1279   001224  07DF               	decf	_hour& (0+255),f,b
  1280   001226  A0D8               	btfss	status,0,c
  1281   001228  07E0               	decf	(_hour+1)& (0+255),f,b
  1282   00122A                     
  1283                           ; BSR set to: 0
  1284                           ;../main.c: 102:             changed = 1;
  1285   00122A  0E00               	movlw	0
  1286   00122C  6FC2               	movwf	(main@changed+1)& (0+255),b
  1287   00122E  0E01               	movlw	1
  1288   001230  6FC1               	movwf	main@changed& (0+255),b
  1289                           
  1290                           ;../main.c: 103:         }
  1291   001232  EF3B  F007         	goto	l2564
  1292   001236                     l2658:
  1293                           
  1294                           ; BSR set to: 0
  1295   001236  51C5               	movf	main@day& (0+255),w,b
  1296   001238  11C6               	iorwf	(main@day+1)& (0+255),w,b
  1297   00123A  A4D8               	btfss	status,2,c
  1298   00123C  EF22  F009         	goto	u2691
  1299   001240  EF24  F009         	goto	u2690
  1300   001244                     u2691:
  1301   001244  EF3B  F007         	goto	l2564
  1302   001248                     u2690:
  1303   001248                     
  1304                           ; BSR set to: 0
  1305   001248  0E0A               	movlw	10
  1306   00124A  19C7               	xorwf	main@month& (0+255),w,b
  1307   00124C  11C8               	iorwf	(main@month+1)& (0+255),w,b
  1308   00124E  A4D8               	btfss	status,2,c
  1309   001250  EF2C  F009         	goto	u2701
  1310   001254  EF2E  F009         	goto	u2700
  1311   001258                     u2701:
  1312   001258  EF3B  F007         	goto	l2564
  1313   00125C                     u2700:
  1314   00125C                     
  1315                           ; BSR set to: 0
  1316   00125C  0E02               	movlw	2
  1317   00125E  19DF               	xorwf	_hour& (0+255),w,b
  1318   001260  11E0               	iorwf	(_hour+1)& (0+255),w,b
  1319   001262  A4D8               	btfss	status,2,c
  1320   001264  EF36  F009         	goto	u2711
  1321   001268  EF38  F009         	goto	u2710
  1322   00126C                     u2711:
  1323   00126C  EF3B  F007         	goto	l2564
  1324   001270                     u2710:
  1325   001270                     
  1326                           ; BSR set to: 0
  1327   001270  51DD               	movf	_minute& (0+255),w,b
  1328   001272  11DE               	iorwf	(_minute+1)& (0+255),w,b
  1329   001274  A4D8               	btfss	status,2,c
  1330   001276  EF3F  F009         	goto	u2721
  1331   00127A  EF41  F009         	goto	u2720
  1332   00127E                     u2721:
  1333   00127E  EF3B  F007         	goto	l2564
  1334   001282                     u2720:
  1335   001282                     
  1336                           ; BSR set to: 0
  1337   001282  51CA               	movf	(main@month_day+1)& (0+255),w,b
  1338   001284  E109               	bnz	u2730
  1339   001286  0E19               	movlw	25
  1340   001288  5DC9               	subwf	main@month_day& (0+255),w,b
  1341   00128A  A0D8               	btfss	status,0,c
  1342   00128C  EF4A  F009         	goto	u2731
  1343   001290  EF4C  F009         	goto	u2730
  1344   001294                     u2731:
  1345   001294  EF3B  F007         	goto	l2564
  1346   001298                     u2730:
  1347   001298                     
  1348                           ; BSR set to: 0
  1349   001298  51CA               	movf	(main@month_day+1)& (0+255),w,b
  1350   00129A  E107               	bnz	u2741
  1351   00129C  0E20               	movlw	32
  1352   00129E  5DC9               	subwf	main@month_day& (0+255),w,b
  1353   0012A0  B0D8               	btfsc	status,0,c
  1354   0012A2  EF55  F009         	goto	u2741
  1355   0012A6  EF57  F009         	goto	u2740
  1356   0012AA                     u2741:
  1357   0012AA  EF3B  F007         	goto	l2564
  1358   0012AE                     u2740:
  1359   0012AE                     
  1360                           ; BSR set to: 0
  1361   0012AE  05C1               	decf	main@changed& (0+255),w,b
  1362   0012B0  11C2               	iorwf	(main@changed+1)& (0+255),w,b
  1363   0012B2  A4D8               	btfss	status,2,c
  1364   0012B4  EF5E  F009         	goto	u2751
  1365   0012B8  EF60  F009         	goto	u2750
  1366   0012BC                     u2751:
  1367   0012BC  EF3B  F007         	goto	l2564
  1368   0012C0                     u2750:
  1369   0012C0                     
  1370                           ; BSR set to: 0
  1371   0012C0  0E00               	movlw	0
  1372   0012C2  6FC2               	movwf	(main@changed+1)& (0+255),b
  1373   0012C4  0E00               	movlw	0
  1374   0012C6  6FC1               	movwf	main@changed& (0+255),b
  1375   0012C8  EF3B  F007         	goto	l2564
  1376   0012CC  EF64  F000         	goto	start
  1377   0012D0                     __end_of_main:
  1378                           	callstack 0
  1379                           
  1380 ;; *************** function _sprintf *****************
  1381 ;; Defined at:
  1382 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1383 ;; Parameters:    Size  Location     Type
  1384 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1385 ;;		 -> main@yearstr(20), main@datestr(50), 
  1386 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1387 ;;		 -> STR_4(12), STR_3(18), STR_2(8), STR_1(8), 
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;  f              11   10[BANK0 ] struct _IO_FILE
  1390 ;;  ap              2    8[BANK0 ] PTR void [1]
  1391 ;;		 -> ?_sprintf(2), 
  1392 ;;  ret             2    0        int 
  1393 ;; Return value:  Size  Location     Type
  1394 ;;                  2    0[BANK0 ] int 
  1395 ;; Registers used:
  1396 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1397 ;; Tracked objects:
  1398 ;;		On entry : 0/0
  1399 ;;		On exit  : 0/0
  1400 ;;		Unchanged: 0/0
  1401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1402 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1403 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1405 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1406 ;;Total ram usage:       21 bytes
  1407 ;; Hardware stack levels used: 1
  1408 ;; Hardware stack levels required when called: 8
  1409 ;; This function calls:
  1410 ;;		_vfprintf
  1411 ;; This function is called by:
  1412 ;;		_main
  1413 ;;		_ADC2String
  1414 ;;		_LDR2String
  1415 ;; This function uses a non-reentrant model
  1416 ;;
  1417                           
  1418                           	psect	text1
  1419   0023D0                     __ptext1:
  1420                           	callstack 0
  1421   0023D0                     _sprintf:
  1422                           	callstack 22
  1423   0023D0  0E64               	movlw	low (?_sprintf+4)
  1424   0023D2  0100               	movlb	0	; () banked
  1425   0023D4  6F68               	movwf	sprintf@ap& (0+255),b
  1426   0023D6  0E00               	movlw	high (?_sprintf+4)
  1427   0023D8  6F69               	movwf	(sprintf@ap+1)& (0+255),b
  1428   0023DA  C060  F06A         	movff	sprintf@s,sprintf@f
  1429   0023DE  C061  F06B         	movff	sprintf@s+1,sprintf@f+1
  1430   0023E2                     
  1431                           ; BSR set to: 0
  1432   0023E2  0E00               	movlw	0
  1433   0023E4  6F6E               	movwf	(sprintf@f+4)& (0+255),b
  1434   0023E6  0E00               	movlw	0
  1435   0023E8  6F6D               	movwf	(sprintf@f+3)& (0+255),b
  1436   0023EA                     
  1437                           ; BSR set to: 0
  1438   0023EA  0E00               	movlw	0
  1439   0023EC  6F74               	movwf	(sprintf@f+10)& (0+255),b
  1440   0023EE  0E00               	movlw	0
  1441   0023F0  6F73               	movwf	(sprintf@f+9)& (0+255),b
  1442   0023F2                     
  1443                           ; BSR set to: 0
  1444   0023F2  0E6A               	movlw	low sprintf@f
  1445   0023F4  6E54               	movwf	vfprintf@fp^0,c
  1446   0023F6  0E00               	movlw	high sprintf@f
  1447   0023F8  6E55               	movwf	(vfprintf@fp+1)^0,c
  1448   0023FA  C062  F056         	movff	sprintf@fmt,vfprintf@fmt
  1449   0023FE  C063  F057         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1450   002402  0E68               	movlw	low sprintf@ap
  1451   002404  6E58               	movwf	vfprintf@ap^0,c
  1452   002406  0E00               	movlw	high sprintf@ap
  1453   002408  6E59               	movwf	(vfprintf@ap+1)^0,c
  1454   00240A  EC11  F012         	call	_vfprintf	;wreg free
  1455   00240E  0100               	movlb	0	; () banked
  1456   002410  516D               	movf	(sprintf@f+3)& (0+255),w,b
  1457   002412  2560               	addwf	sprintf@s& (0+255),w,b
  1458   002414  6ED9               	movwf	fsr2l,c
  1459   002416  516E               	movf	(sprintf@f+4)& (0+255),w,b
  1460   002418  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  1461   00241A  6EDA               	movwf	fsr2h,c
  1462   00241C  0E00               	movlw	0
  1463   00241E  6EDF               	movwf	indf2,c
  1464   002420                     
  1465                           ; BSR set to: 0
  1466   002420  0012               	return		;funcret
  1467   002422                     __end_of_sprintf:
  1468                           	callstack 0
  1469                           
  1470 ;; *************** function _vfprintf *****************
  1471 ;; Defined at:
  1472 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;  fp              2   83[COMRAM] PTR struct _IO_FILE
  1475 ;;		 -> sprintf@f(11), 
  1476 ;;  fmt             2   85[COMRAM] PTR const unsigned char 
  1477 ;;		 -> STR_4(12), STR_3(18), STR_2(8), STR_1(8), 
  1478 ;;  ap              2   87[COMRAM] PTR PTR void 
  1479 ;;		 -> sprintf@ap(2), 
  1480 ;; Auto vars:     Size  Location     Type
  1481 ;;  cfmt            2   89[COMRAM] PTR unsigned char 
  1482 ;;		 -> STR_4(12), STR_3(18), STR_2(8), STR_1(8), 
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  2   83[COMRAM] int 
  1485 ;; Registers used:
  1486 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1492 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1493 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1495 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1496 ;;Total ram usage:        8 bytes
  1497 ;; Hardware stack levels used: 1
  1498 ;; Hardware stack levels required when called: 7
  1499 ;; This function calls:
  1500 ;;		_vfpfcnvrt
  1501 ;; This function is called by:
  1502 ;;		_sprintf
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           	psect	text2
  1507   002422                     __ptext2:
  1508                           	callstack 0
  1509   002422                     _vfprintf:
  1510                           	callstack 22
  1511   002422                     
  1512                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1513   002422  C056  F05A         	movff	vfprintf@fmt,vfprintf@cfmt
  1514   002426  C057  F05B         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1515                           
  1516                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1517   00242A  EF25  F012         	goto	l2312
  1518   00242E                     l2310:
  1519                           
  1520                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1521   00242E  C054  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  1522   002432  C055  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1523   002436  0E5A               	movlw	low vfprintf@cfmt
  1524   002438  6E41               	movwf	vfpfcnvrt@fmt^0,c
  1525   00243A  0E00               	movlw	high vfprintf@cfmt
  1526   00243C  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1527   00243E  C058  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  1528   002442  C059  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1529   002446  EC03  F00B         	call	_vfpfcnvrt	;wreg free
  1530   00244A                     l2312:
  1531                           
  1532                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1533   00244A  C05A  FFF6         	movff	vfprintf@cfmt,tblptrl
  1534   00244E  C05B  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1535   002452                     	if	0	;tblptru may be non-zero
  1536   002452                     	endif
  1537   002452                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1538   002452  0E00               	movlw	low (__mediumconst shr (0+16))
  1539   002454  6EF8               	movwf	tblptru,c
  1540   002456                     	endif
  1541   002456  0008               	tblrd		*
  1542   002458  50F5               	movf	tablat,w,c
  1543   00245A  0900               	iorlw	0
  1544   00245C  A4D8               	btfss	status,2,c
  1545   00245E  EF33  F012         	goto	u1981
  1546   002462  EF35  F012         	goto	u1980
  1547   002466                     u1981:
  1548   002466  EF17  F012         	goto	l2310
  1549   00246A                     u1980:
  1550   00246A                     
  1551                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1552   00246A  0E00               	movlw	0
  1553   00246C  6E55               	movwf	(?_vfprintf+1)^0,c
  1554   00246E  0E00               	movlw	0
  1555   002470  6E54               	movwf	?_vfprintf^0,c
  1556   002472  0012               	return		;funcret
  1557   002474                     __end_of_vfprintf:
  1558                           	callstack 0
  1559                           
  1560 ;; *************** function _vfpfcnvrt *****************
  1561 ;; Defined at:
  1562 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  1565 ;;		 -> sprintf@f(11), 
  1566 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  1567 ;;		 -> vfprintf@cfmt(2), 
  1568 ;;  ap              2   66[COMRAM] PTR PTR void 
  1569 ;;		 -> sprintf@ap(2), 
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;  convarg         8   71[COMRAM] struct .
  1572 ;;  cp              2   81[COMRAM] PTR unsigned char 
  1573 ;;		 -> STR_4(12), STR_3(18), STR_2(8), STR_1(8), 
  1574 ;;  done            2   79[COMRAM] int 
  1575 ;;  i               2    0        int 
  1576 ;;  c               1    0        unsigned char 
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  1    wreg      void 
  1579 ;; Registers used:
  1580 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1586 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1587 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1588 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1589 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1590 ;;Total ram usage:       21 bytes
  1591 ;; Hardware stack levels used: 1
  1592 ;; Hardware stack levels required when called: 6
  1593 ;; This function calls:
  1594 ;;		_atoi
  1595 ;;		_dtoa
  1596 ;;		_fputc
  1597 ;;		_isdigit
  1598 ;; This function is called by:
  1599 ;;		_vfprintf
  1600 ;; This function uses a non-reentrant model
  1601 ;;
  1602                           
  1603                           	psect	text3
  1604   001606                     __ptext3:
  1605                           	callstack 0
  1606   001606                     _vfpfcnvrt:
  1607                           	callstack 22
  1608   001606                     
  1609                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1610   001606  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1611   00160A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1612   00160E  CFDE FFF6          	movff	postinc2,tblptrl
  1613   001612  CFDD FFF7          	movff	postdec2,tblptrh
  1614   001616                     	if	0	;tblptru may be non-zero
  1615   001616                     	endif
  1616   001616                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1617   001616  0E00               	movlw	low (__mediumconst shr (0+16))
  1618   001618  6EF8               	movwf	tblptru,c
  1619   00161A                     	endif
  1620   00161A  0008               	tblrd		*
  1621   00161C  50F5               	movf	tablat,w,c
  1622   00161E  0A25               	xorlw	37
  1623   001620  A4D8               	btfss	status,2,c
  1624   001622  EF15  F00B         	goto	u1871
  1625   001626  EF17  F00B         	goto	u1870
  1626   00162A                     u1871:
  1627   00162A  EF49  F00C         	goto	l2268
  1628   00162E                     u1870:
  1629   00162E                     
  1630                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1631   00162E  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1632   001632  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1633   001636  2ADE               	incf	postinc2,f,c
  1634   001638  0E00               	movlw	0
  1635   00163A  22DD               	addwfc	postdec2,f,c
  1636   00163C                     
  1637                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1638   00163C  0E00               	movlw	0
  1639   00163E  0100               	movlb	0	; () banked
  1640   001640  6FCC               	movwf	(_width+1)& (0+255),b
  1641   001642  0E00               	movlw	0
  1642   001644  6FCB               	movwf	_width& (0+255),b
  1643   001646  C0CB  F05E         	movff	_width,_flags
  1644   00164A                     
  1645                           ; BSR set to: 0
  1646                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1647   00164A  685C               	setf	_prec^0,c
  1648   00164C  685D               	setf	(_prec+1)^0,c
  1649   00164E                     
  1650                           ; BSR set to: 0
  1651                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  1652   00164E  0E00               	movlw	0
  1653   001650  6E51               	movwf	(vfpfcnvrt@done+1)^0,c
  1654   001652  0E00               	movlw	0
  1655   001654  6E50               	movwf	vfpfcnvrt@done^0,c
  1656                           
  1657                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  1658   001656  EF59  F00B         	goto	l2234
  1659   00165A                     l2224:
  1660                           
  1661                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  1662   00165A  825E               	bsf	_flags^0,1,c
  1663   00165C                     
  1664                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  1665   00165C  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1666   001660  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1667   001664  2ADE               	incf	postinc2,f,c
  1668   001666  0E00               	movlw	0
  1669   001668  22DD               	addwfc	postdec2,f,c
  1670                           
  1671                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  1672   00166A  EF59  F00B         	goto	l2234
  1673   00166E                     l2228:
  1674                           
  1675                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  1676   00166E  0E00               	movlw	0
  1677   001670  6E51               	movwf	(vfpfcnvrt@done+1)^0,c
  1678   001672  0E01               	movlw	1
  1679   001674  6E50               	movwf	vfpfcnvrt@done^0,c
  1680                           
  1681                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  1682   001676  EF59  F00B         	goto	l2234
  1683   00167A                     l2232:
  1684   00167A  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1685   00167E  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1686   001682  CFDE FFF6          	movff	postinc2,tblptrl
  1687   001686  CFDD FFF7          	movff	postdec2,tblptrh
  1688   00168A                     	if	0	;tblptru may be non-zero
  1689   00168A                     	endif
  1690   00168A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1691   00168A  0E00               	movlw	low (__mediumconst shr (0+16))
  1692   00168C  6EF8               	movwf	tblptru,c
  1693   00168E                     	endif
  1694   00168E  0008               	tblrd		*
  1695   001690  50F5               	movf	tablat,w,c
  1696   001692  6E45               	movwf	??_vfpfcnvrt^0,c
  1697   001694  6A46               	clrf	(??_vfpfcnvrt+1)^0,c
  1698                           
  1699                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1700                           ; Switch size 1, requested type "simple"
  1701                           ; Number of cases is 1, Range of values is 0 to 0
  1702                           ; switch strategies available:
  1703                           ; Name         Instructions Cycles
  1704                           ; simple_byte            4     3 (average)
  1705                           ;	Chosen strategy is simple_byte
  1706   001696  5046               	movf	(??_vfpfcnvrt+1)^0,w,c
  1707   001698  0A00               	xorlw	0	; case 0
  1708   00169A  B4D8               	btfsc	status,2,c
  1709   00169C  EF52  F00B         	goto	l2724
  1710   0016A0  EF37  F00B         	goto	l2228
  1711   0016A4                     l2724:
  1712                           
  1713                           ; Switch size 1, requested type "simple"
  1714                           ; Number of cases is 1, Range of values is 48 to 48
  1715                           ; switch strategies available:
  1716                           ; Name         Instructions Cycles
  1717                           ; simple_byte            4     3 (average)
  1718                           ;	Chosen strategy is simple_byte
  1719   0016A4  5045               	movf	??_vfpfcnvrt^0,w,c
  1720   0016A6  0A30               	xorlw	48	; case 48
  1721   0016A8  B4D8               	btfsc	status,2,c
  1722   0016AA  EF2D  F00B         	goto	l2224
  1723   0016AE  EF37  F00B         	goto	l2228
  1724   0016B2                     l2234:
  1725                           
  1726                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  1727   0016B2  5050               	movf	vfpfcnvrt@done^0,w,c
  1728   0016B4  1051               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  1729   0016B6  B4D8               	btfsc	status,2,c
  1730   0016B8  EF60  F00B         	goto	u1881
  1731   0016BC  EF62  F00B         	goto	u1880
  1732   0016C0                     u1881:
  1733   0016C0  EF3D  F00B         	goto	l2232
  1734   0016C4                     u1880:
  1735   0016C4                     
  1736                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1074:         if 
      +                          ((*fmt)[0] == '*') {
  1737   0016C4  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1738   0016C8  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1739   0016CC  CFDE FFF6          	movff	postinc2,tblptrl
  1740   0016D0  CFDD FFF7          	movff	postdec2,tblptrh
  1741   0016D4                     	if	0	;tblptru may be non-zero
  1742   0016D4                     	endif
  1743   0016D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1744   0016D4  0E00               	movlw	low (__mediumconst shr (0+16))
  1745   0016D6  6EF8               	movwf	tblptru,c
  1746   0016D8                     	endif
  1747   0016D8  0008               	tblrd		*
  1748   0016DA  50F5               	movf	tablat,w,c
  1749   0016DC  0A2A               	xorlw	42
  1750   0016DE  A4D8               	btfss	status,2,c
  1751   0016E0  EF74  F00B         	goto	u1891
  1752   0016E4  EF76  F00B         	goto	u1890
  1753   0016E8                     u1891:
  1754   0016E8  EFA0  F00B         	goto	l2244
  1755   0016EC                     u1890:
  1756   0016EC                     
  1757                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1075:            
      +                           ++*fmt;
  1758   0016EC  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1759   0016F0  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1760   0016F4  2ADE               	incf	postinc2,f,c
  1761   0016F6  0E00               	movlw	0
  1762   0016F8  22DD               	addwfc	postdec2,f,c
  1763                           
  1764                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1076:            
      +                           width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1765   0016FA  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1766   0016FE  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1767   001702  CFDF F045          	movff	indf2,??_vfpfcnvrt
  1768   001706  0E02               	movlw	2
  1769   001708  26DE               	addwf	postinc2,f,c
  1770   00170A  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  1771   00170E  0E00               	movlw	0
  1772   001710  22DD               	addwfc	postdec2,f,c
  1773   001712  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1774   001716  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1775   00171A  CFDE F0CB          	movff	postinc2,_width
  1776   00171E  CFDD F0CC          	movff	postdec2,_width+1
  1777   001722                     
  1778                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1077:            
      +                           if (width < 0) {
  1779   001722  0100               	movlb	0	; () banked
  1780   001724  BFCC               	btfsc	(_width+1)& (0+255),7,b
  1781   001726  EF99  F00B         	goto	u1900
  1782   00172A  EF97  F00B         	goto	u1901
  1783   00172E                     u1901:
  1784   00172E  EFD5  F00B         	goto	l2252
  1785   001732                     u1900:
  1786   001732                     
  1787                           ; BSR set to: 0
  1788                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1078:            
      +                               flags |= (1 << 0);
  1789   001732  805E               	bsf	_flags^0,0,c
  1790                           
  1791                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1079:            
      +                               width = -width;
  1792   001734  6DCB               	negf	_width& (0+255),b
  1793   001736  1FCC               	comf	(_width+1)& (0+255),f,b
  1794   001738  B0D8               	btfsc	status,0,c
  1795   00173A  2BCC               	incf	(_width+1)& (0+255),f,b
  1796   00173C  EFD5  F00B         	goto	l2252
  1797   001740                     l2244:
  1798                           
  1799                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1082:            
      +                           width = atoi(*fmt);
  1800   001740  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1801   001744  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1802   001748  CFDE F007          	movff	postinc2,atoi@s
  1803   00174C  CFDD F008          	movff	postdec2,atoi@s+1
  1804   001750  EC30  F00F         	call	_atoi	;wreg free
  1805   001754  C007  F0CB         	movff	?_atoi,_width
  1806   001758  C008  F0CC         	movff	?_atoi+1,_width+1
  1807                           
  1808                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1083:            
      +                           while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1809   00175C  EFB7  F00B         	goto	l2250
  1810   001760                     l2246:
  1811                           
  1812                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1084:            
      +                               ++*fmt;
  1813   001760  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1814   001764  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1815   001768  2ADE               	incf	postinc2,f,c
  1816   00176A  0E00               	movlw	0
  1817   00176C  22DD               	addwfc	postdec2,f,c
  1818   00176E                     l2250:
  1819   00176E  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1820   001772  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1821   001776  CFDE FFF6          	movff	postinc2,tblptrl
  1822   00177A  CFDD FFF7          	movff	postdec2,tblptrh
  1823   00177E                     	if	0	;tblptru may be non-zero
  1824   00177E                     	endif
  1825   00177E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1826   00177E  0E00               	movlw	low (__mediumconst shr (0+16))
  1827   001780  6EF8               	movwf	tblptru,c
  1828   001782                     	endif
  1829   001782  0008               	tblrd		*
  1830   001784  CFF5 F045          	movff	tablat,??_vfpfcnvrt
  1831   001788  0ED0               	movlw	208
  1832   00178A  2445               	addwf	??_vfpfcnvrt^0,w,c
  1833   00178C  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  1834   00178E  6A47               	clrf	(??_vfpfcnvrt+2)^0,c
  1835   001790  0EFF               	movlw	255
  1836   001792  2247               	addwfc	(??_vfpfcnvrt+2)^0,f,c
  1837   001794  5047               	movf	(??_vfpfcnvrt+2)^0,w,c
  1838   001796  E109               	bnz	u1910
  1839   001798  0E0A               	movlw	10
  1840   00179A  5C46               	subwf	(??_vfpfcnvrt+1)^0,w,c
  1841   00179C  A0D8               	btfss	status,0,c
  1842   00179E  EFD3  F00B         	goto	u1911
  1843   0017A2  EFD5  F00B         	goto	u1910
  1844   0017A6                     u1911:
  1845   0017A6  EFB0  F00B         	goto	l2246
  1846   0017AA                     u1910:
  1847   0017AA                     l2252:
  1848                           
  1849                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1850   0017AA  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1851   0017AE  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1852   0017B2  CFDE F052          	movff	postinc2,vfpfcnvrt@cp
  1853   0017B6  CFDD F053          	movff	postdec2,vfpfcnvrt@cp+1
  1854   0017BA                     
  1855                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1856   0017BA  C052  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1857   0017BE  C053  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1858   0017C2                     	if	0	;tblptru may be non-zero
  1859   0017C2                     	endif
  1860   0017C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1861   0017C2  0E00               	movlw	low (__mediumconst shr (0+16))
  1862   0017C4  6EF8               	movwf	tblptru,c
  1863   0017C6                     	endif
  1864   0017C6  0008               	tblrd		*
  1865   0017C8  50F5               	movf	tablat,w,c
  1866   0017CA  0A64               	xorlw	100
  1867   0017CC  B4D8               	btfsc	status,2,c
  1868   0017CE  EFEB  F00B         	goto	u1921
  1869   0017D2  EFED  F00B         	goto	u1920
  1870   0017D6                     u1921:
  1871   0017D6  EFFD  F00B         	goto	l2258
  1872   0017DA                     u1920:
  1873   0017DA  C052  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1874   0017DE  C053  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1875   0017E2                     	if	0	;tblptru may be non-zero
  1876   0017E2                     	endif
  1877   0017E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1878   0017E2  0E00               	movlw	low (__mediumconst shr (0+16))
  1879   0017E4  6EF8               	movwf	tblptru,c
  1880   0017E6                     	endif
  1881   0017E6  0008               	tblrd		*
  1882   0017E8  50F5               	movf	tablat,w,c
  1883   0017EA  0A69               	xorlw	105
  1884   0017EC  A4D8               	btfss	status,2,c
  1885   0017EE  EFFB  F00B         	goto	u1931
  1886   0017F2  EFFD  F00B         	goto	u1930
  1887   0017F6                     u1931:
  1888   0017F6  EF40  F00C         	goto	l2264
  1889   0017FA                     u1930:
  1890   0017FA                     l2258:
  1891                           
  1892                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1893   0017FA  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1894   0017FE  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1895   001802  CFDF F045          	movff	indf2,??_vfpfcnvrt
  1896   001806  0E02               	movlw	2
  1897   001808  26DE               	addwf	postinc2,f,c
  1898   00180A  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  1899   00180E  0E00               	movlw	0
  1900   001810  22DD               	addwfc	postdec2,f,c
  1901   001812  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1902   001816  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1903   00181A  CFDE F048          	movff	postinc2,vfpfcnvrt@convarg
  1904   00181E  CFDD F049          	movff	postdec2,vfpfcnvrt@convarg+1
  1905   001822  0E00               	movlw	0
  1906   001824  BE49               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1907   001826  0EFF               	movlw	-1
  1908   001828  6E4A               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1909   00182A  6E4B               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1910   00182C  6E4C               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1911   00182E  6E4D               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1912   001830  6E4E               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1913   001832  6E4F               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1914                           
  1915                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1916   001834  0E01               	movlw	1
  1917   001836  2452               	addwf	vfpfcnvrt@cp^0,w,c
  1918   001838  6E45               	movwf	??_vfpfcnvrt^0,c
  1919   00183A  0E00               	movlw	0
  1920   00183C  2053               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1921   00183E  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  1922   001840  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1923   001844  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1924   001848  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  1925   00184C  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1926   001850                     
  1927                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1928   001850  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1929   001854  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1930   001858  C048  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  1931   00185C  C049  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1932   001860  C04A  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1933   001864  C04B  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1934   001868  C04C  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1935   00186C  C04D  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1936   001870  C04E  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1937   001874  C04F  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1938   001878  EC60  F00C         	call	_dtoa	;wreg free
  1939   00187C  EF5F  F00C         	goto	l1073
  1940   001880                     l2264:
  1941                           
  1942                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1943   001880  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1944   001884  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1945   001888  2ADE               	incf	postinc2,f,c
  1946   00188A  0E00               	movlw	0
  1947   00188C  22DD               	addwfc	postdec2,f,c
  1948   00188E  EF5F  F00C         	goto	l1073
  1949   001892                     l2268:
  1950                           
  1951                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1952   001892  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1953   001896  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1954   00189A  CFDE FFF6          	movff	postinc2,tblptrl
  1955   00189E  CFDD FFF7          	movff	postdec2,tblptrh
  1956   0018A2                     	if	0	;tblptru may be non-zero
  1957   0018A2                     	endif
  1958   0018A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1959   0018A2  0E00               	movlw	low (__mediumconst shr (0+16))
  1960   0018A4  6EF8               	movwf	tblptru,c
  1961   0018A6                     	endif
  1962   0018A6  0008               	tblrd		*
  1963   0018A8  50F5               	movf	tablat,w,c
  1964   0018AA  6E01               	movwf	fputc@c^0,c
  1965   0018AC  6A02               	clrf	(fputc@c+1)^0,c
  1966   0018AE  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1967   0018B2  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1968   0018B6  ECDF  F00F         	call	_fputc	;wreg free
  1969   0018BA  EF40  F00C         	goto	l2264
  1970   0018BE                     l1073:
  1971   0018BE  0012               	return		;funcret
  1972   0018C0                     __end_of_vfpfcnvrt:
  1973                           	callstack 0
  1974                           
  1975 ;; *************** function _dtoa *****************
  1976 ;; Defined at:
  1977 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1978 ;; Parameters:    Size  Location     Type
  1979 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1980 ;;		 -> sprintf@f(11), 
  1981 ;;  d               8   29[COMRAM] long long 
  1982 ;; Auto vars:     Size  Location     Type
  1983 ;;  n               8   51[COMRAM] long long 
  1984 ;;  i               2   59[COMRAM] int 
  1985 ;;  w               2   49[COMRAM] int 
  1986 ;;  p               2   47[COMRAM] int 
  1987 ;;  s               1   61[COMRAM] unsigned char 
  1988 ;; Return value:  Size  Location     Type
  1989 ;;                  1    wreg      void 
  1990 ;; Registers used:
  1991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1997 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1998 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1999 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2000 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2001 ;;Total ram usage:       35 bytes
  2002 ;; Hardware stack levels used: 1
  2003 ;; Hardware stack levels required when called: 5
  2004 ;; This function calls:
  2005 ;;		___aodiv
  2006 ;;		___aomod
  2007 ;;		_abs
  2008 ;;		_pad
  2009 ;; This function is called by:
  2010 ;;		_vfpfcnvrt
  2011 ;; This function uses a non-reentrant model
  2012 ;;
  2013                           
  2014                           	psect	text4
  2015   0018C0                     __ptext4:
  2016                           	callstack 0
  2017   0018C0                     _dtoa:
  2018                           	callstack 22
  2019   0018C0                     
  2020                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  2021   0018C0  C01E  F034         	movff	dtoa@d,dtoa@n
  2022   0018C4  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  2023   0018C8  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  2024   0018CC  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  2025   0018D0  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  2026   0018D4  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  2027   0018D8  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  2028   0018DC  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  2029   0018E0                     
  2030                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  2031   0018E0  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  2032   0018E2  EF75  F00C         	goto	u1661
  2033   0018E6  EF78  F00C         	goto	u1660
  2034   0018EA                     u1661:
  2035   0018EA  0E01               	movlw	1
  2036   0018EC  EF79  F00C         	goto	u1670
  2037   0018F0                     u1660:
  2038   0018F0  0E00               	movlw	0
  2039   0018F2                     u1670:
  2040   0018F2  6E3E               	movwf	dtoa@s^0,c
  2041   0018F4                     
  2042                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  2043   0018F4  503E               	movf	dtoa@s^0,w,c
  2044   0018F6  B4D8               	btfsc	status,2,c
  2045   0018F8  EF80  F00C         	goto	u1681
  2046   0018FC  EF82  F00C         	goto	u1680
  2047   001900                     u1681:
  2048   001900  EF92  F00C         	goto	l2110
  2049   001904                     u1680:
  2050   001904                     
  2051                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  2052   001904  1E3B               	comf	(dtoa@n+7)^0,f,c
  2053   001906  1E3A               	comf	(dtoa@n+6)^0,f,c
  2054   001908  1E39               	comf	(dtoa@n+5)^0,f,c
  2055   00190A  1E38               	comf	(dtoa@n+4)^0,f,c
  2056   00190C  1E37               	comf	(dtoa@n+3)^0,f,c
  2057   00190E  1E36               	comf	(dtoa@n+2)^0,f,c
  2058   001910  1E35               	comf	(dtoa@n+1)^0,f,c
  2059   001912  6C34               	negf	dtoa@n^0,c
  2060   001914  0E00               	movlw	0
  2061   001916  2235               	addwfc	(dtoa@n+1)^0,f,c
  2062   001918  2236               	addwfc	(dtoa@n+2)^0,f,c
  2063   00191A  2237               	addwfc	(dtoa@n+3)^0,f,c
  2064   00191C  2238               	addwfc	(dtoa@n+4)^0,f,c
  2065   00191E  2239               	addwfc	(dtoa@n+5)^0,f,c
  2066   001920  223A               	addwfc	(dtoa@n+6)^0,f,c
  2067   001922  223B               	addwfc	(dtoa@n+7)^0,f,c
  2068   001924                     l2110:
  2069                           
  2070                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 458:     if (!(pr
      +                          ec < 0)) {
  2071   001924  BE5D               	btfsc	(_prec+1)^0,7,c
  2072   001926  EF97  F00C         	goto	u1691
  2073   00192A  EF99  F00C         	goto	u1690
  2074   00192E                     u1691:
  2075   00192E  EF9A  F00C         	goto	l2114
  2076   001932                     u1690:
  2077   001932                     
  2078                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 459:         flag
      +                          s &= ~(1 << 1);
  2079   001932  925E               	bcf	_flags^0,1,c
  2080   001934                     l2114:
  2081                           
  2082                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  2083   001934  BE5D               	btfsc	(_prec+1)^0,7,c
  2084   001936  EFA7  F00C         	goto	u1700
  2085   00193A  505D               	movf	(_prec+1)^0,w,c
  2086   00193C  E106               	bnz	u1701
  2087   00193E  045C               	decf	_prec^0,w,c
  2088   001940  B0D8               	btfsc	status,0,c
  2089   001942  EFA5  F00C         	goto	u1701
  2090   001946  EFA7  F00C         	goto	u1700
  2091   00194A                     u1701:
  2092   00194A  EFAD  F00C         	goto	l1035
  2093   00194E                     u1700:
  2094   00194E  0E00               	movlw	0
  2095   001950  6E31               	movwf	(dtoa@p+1)^0,c
  2096   001952  0E01               	movlw	1
  2097   001954  6E30               	movwf	dtoa@p^0,c
  2098   001956  EFB1  F00C         	goto	l1037
  2099   00195A                     l1035:
  2100   00195A  C05C  F030         	movff	_prec,dtoa@p
  2101   00195E  C05D  F031         	movff	_prec+1,dtoa@p+1
  2102   001962                     l1037:
  2103                           
  2104                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  2105   001962  C0CB  F032         	movff	_width,dtoa@w
  2106   001966  C0CC  F033         	movff	_width+1,dtoa@w+1
  2107   00196A                     
  2108                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  2109   00196A  503E               	movf	dtoa@s^0,w,c
  2110   00196C  B4D8               	btfsc	status,2,c
  2111   00196E  EFBB  F00C         	goto	u1711
  2112   001972  EFBD  F00C         	goto	u1710
  2113   001976                     u1711:
  2114   001976  EFD4  F00C         	goto	l1038
  2115   00197A                     u1710:
  2116   00197A                     
  2117                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  2118   00197A  0632               	decf	dtoa@w^0,f,c
  2119   00197C  A0D8               	btfss	status,0,c
  2120   00197E  0633               	decf	(dtoa@w+1)^0,f,c
  2121   001980                     
  2122                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  2123   001980  503E               	movf	dtoa@s^0,w,c
  2124   001982  A4D8               	btfss	status,2,c
  2125   001984  EFC6  F00C         	goto	u1721
  2126   001988  EFC8  F00C         	goto	u1720
  2127   00198C                     u1721:
  2128   00198C  EFCE  F00C         	goto	l2126
  2129   001990                     u1720:
  2130   001990  0E00               	movlw	0
  2131   001992  6E2F               	movwf	(_dtoa$1885+1)^0,c
  2132   001994  0E2B               	movlw	43
  2133   001996  6E2E               	movwf	_dtoa$1885^0,c
  2134   001998  EFD2  F00C         	goto	l2128
  2135   00199C                     l2126:
  2136   00199C  0E00               	movlw	0
  2137   00199E  6E2F               	movwf	(_dtoa$1885+1)^0,c
  2138   0019A0  0E2D               	movlw	45
  2139   0019A2  6E2E               	movwf	_dtoa$1885^0,c
  2140   0019A4                     l2128:
  2141   0019A4  C02E  F03E         	movff	_dtoa$1885,dtoa@s
  2142   0019A8                     l1038:
  2143                           
  2144                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  2145   0019A8  0E00               	movlw	0
  2146   0019AA  6E3D               	movwf	(dtoa@i+1)^0,c
  2147   0019AC  0E1F               	movlw	31
  2148   0019AE  6E3C               	movwf	dtoa@i^0,c
  2149   0019B0                     
  2150                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  2151   0019B0  0E00               	movlw	0
  2152   0019B2  0101               	movlb	1	; () banked
  2153   0019B4  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2154                           
  2155                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2156   0019B6  EF59  F00D         	goto	l2142
  2157   0019BA                     l2132:
  2158                           
  2159                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  2160   0019BA  063C               	decf	dtoa@i^0,f,c
  2161   0019BC  A0D8               	btfss	status,0,c
  2162   0019BE  063D               	decf	(dtoa@i+1)^0,f,c
  2163   0019C0                     
  2164                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2165   0019C0  0E00               	movlw	low _dbuf
  2166   0019C2  243C               	addwf	dtoa@i^0,w,c
  2167   0019C4  6ED9               	movwf	fsr2l,c
  2168   0019C6  0E01               	movlw	high _dbuf
  2169   0019C8  203D               	addwfc	(dtoa@i+1)^0,w,c
  2170   0019CA  6EDA               	movwf	fsr2h,c
  2171   0019CC  C034  F001         	movff	dtoa@n,___aomod@dividend
  2172   0019D0  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2173   0019D4  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2174   0019D8  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2175   0019DC  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2176   0019E0  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2177   0019E4  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2178   0019E8  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2179   0019EC  0E0A               	movlw	10
  2180   0019EE  6E09               	movwf	___aomod@divisor^0,c
  2181   0019F0  0E00               	movlw	0
  2182   0019F2  6E0A               	movwf	(___aomod@divisor+1)^0,c
  2183   0019F4  0E00               	movlw	0
  2184   0019F6  6E0B               	movwf	(___aomod@divisor+2)^0,c
  2185   0019F8  0E00               	movlw	0
  2186   0019FA  6E0C               	movwf	(___aomod@divisor+3)^0,c
  2187   0019FC  0E00               	movlw	0
  2188   0019FE  6E0D               	movwf	(___aomod@divisor+4)^0,c
  2189   001A00  0E00               	movlw	0
  2190   001A02  6E0E               	movwf	(___aomod@divisor+5)^0,c
  2191   001A04  0E00               	movlw	0
  2192   001A06  6E0F               	movwf	(___aomod@divisor+6)^0,c
  2193   001A08  0E00               	movlw	0
  2194   001A0A  6E10               	movwf	(___aomod@divisor+7)^0,c
  2195   001A0C  EC7E  F00E         	call	___aomod	;wreg free
  2196   001A10  C001  F026         	movff	?___aomod,??_dtoa
  2197   001A14  C002  F027         	movff	?___aomod+1,??_dtoa+1
  2198   001A18  C003  F028         	movff	?___aomod+2,??_dtoa+2
  2199   001A1C  C004  F029         	movff	?___aomod+3,??_dtoa+3
  2200   001A20  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  2201   001A24  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  2202   001A28  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  2203   001A2C  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  2204   001A30  C026  F013         	movff	??_dtoa,abs@a
  2205   001A34  C027  F014         	movff	??_dtoa+1,abs@a+1
  2206   001A38  EC7F  F012         	call	_abs	;wreg free
  2207   001A3C  5013               	movf	?_abs^0,w,c
  2208   001A3E  0F30               	addlw	48
  2209   001A40  6EDF               	movwf	indf2,c
  2210   001A42                     
  2211                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  2212   001A42  0630               	decf	dtoa@p^0,f,c
  2213   001A44  A0D8               	btfss	status,0,c
  2214   001A46  0631               	decf	(dtoa@p+1)^0,f,c
  2215   001A48                     
  2216                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  2217   001A48  0632               	decf	dtoa@w^0,f,c
  2218   001A4A  A0D8               	btfss	status,0,c
  2219   001A4C  0633               	decf	(dtoa@w+1)^0,f,c
  2220   001A4E                     
  2221                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  2222   001A4E  C034  F001         	movff	dtoa@n,___aodiv@dividend
  2223   001A52  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2224   001A56  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2225   001A5A  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2226   001A5E  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2227   001A62  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2228   001A66  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2229   001A6A  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2230   001A6E  0E0A               	movlw	10
  2231   001A70  6E09               	movwf	___aodiv@divisor^0,c
  2232   001A72  0E00               	movlw	0
  2233   001A74  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2234   001A76  0E00               	movlw	0
  2235   001A78  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2236   001A7A  0E00               	movlw	0
  2237   001A7C  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2238   001A7E  0E00               	movlw	0
  2239   001A80  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2240   001A82  0E00               	movlw	0
  2241   001A84  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2242   001A86  0E00               	movlw	0
  2243   001A88  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2244   001A8A  0E00               	movlw	0
  2245   001A8C  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2246   001A8E  ECBA  F00D         	call	___aodiv	;wreg free
  2247   001A92  C001  F034         	movff	?___aodiv,dtoa@n
  2248   001A96  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  2249   001A9A  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  2250   001A9E  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  2251   001AA2  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  2252   001AA6  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  2253   001AAA  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  2254   001AAE  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  2255   001AB2                     l2142:
  2256                           
  2257                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2258   001AB2  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  2259   001AB4  EF64  F00D         	goto	u1731
  2260   001AB8  503D               	movf	(dtoa@i+1)^0,w,c
  2261   001ABA  E108               	bnz	u1730
  2262   001ABC  043C               	decf	dtoa@i^0,w,c
  2263   001ABE  A0D8               	btfss	status,0,c
  2264   001AC0  EF64  F00D         	goto	u1731
  2265   001AC4  EF66  F00D         	goto	u1730
  2266   001AC8                     u1731:
  2267   001AC8  EF96  F00D         	goto	l2152
  2268   001ACC                     u1730:
  2269   001ACC  5034               	movf	dtoa@n^0,w,c
  2270   001ACE  1035               	iorwf	(dtoa@n+1)^0,w,c
  2271   001AD0  1036               	iorwf	(dtoa@n+2)^0,w,c
  2272   001AD2  1037               	iorwf	(dtoa@n+3)^0,w,c
  2273   001AD4  1038               	iorwf	(dtoa@n+4)^0,w,c
  2274   001AD6  1039               	iorwf	(dtoa@n+5)^0,w,c
  2275   001AD8  103A               	iorwf	(dtoa@n+6)^0,w,c
  2276   001ADA  103B               	iorwf	(dtoa@n+7)^0,w,c
  2277   001ADC  A4D8               	btfss	status,2,c
  2278   001ADE  EF73  F00D         	goto	u1741
  2279   001AE2  EF75  F00D         	goto	u1740
  2280   001AE6                     u1741:
  2281   001AE6  EFDD  F00C         	goto	l2132
  2282   001AEA                     u1740:
  2283   001AEA  BE31               	btfsc	(dtoa@p+1)^0,7,c
  2284   001AEC  EF82  F00D         	goto	u1750
  2285   001AF0  5031               	movf	(dtoa@p+1)^0,w,c
  2286   001AF2  E106               	bnz	u1751
  2287   001AF4  0430               	decf	dtoa@p^0,w,c
  2288   001AF6  B0D8               	btfsc	status,0,c
  2289   001AF8  EF80  F00D         	goto	u1751
  2290   001AFC  EF82  F00D         	goto	u1750
  2291   001B00                     u1751:
  2292   001B00  EFDD  F00C         	goto	l2132
  2293   001B04                     u1750:
  2294   001B04  BE33               	btfsc	(dtoa@w+1)^0,7,c
  2295   001B06  EF8D  F00D         	goto	u1761
  2296   001B0A  5033               	movf	(dtoa@w+1)^0,w,c
  2297   001B0C  E108               	bnz	u1760
  2298   001B0E  0432               	decf	dtoa@w^0,w,c
  2299   001B10  A0D8               	btfss	status,0,c
  2300   001B12  EF8D  F00D         	goto	u1761
  2301   001B16  EF8F  F00D         	goto	u1760
  2302   001B1A                     u1761:
  2303   001B1A  EF96  F00D         	goto	l2152
  2304   001B1E                     u1760:
  2305   001B1E  B25E               	btfsc	_flags^0,1,c
  2306   001B20  EF94  F00D         	goto	u1771
  2307   001B24  EF96  F00D         	goto	u1770
  2308   001B28                     u1771:
  2309   001B28  EFDD  F00C         	goto	l2132
  2310   001B2C                     u1770:
  2311   001B2C                     l2152:
  2312                           
  2313                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  2314   001B2C  503E               	movf	dtoa@s^0,w,c
  2315   001B2E  B4D8               	btfsc	status,2,c
  2316   001B30  EF9C  F00D         	goto	u1781
  2317   001B34  EF9E  F00D         	goto	u1780
  2318   001B38                     u1781:
  2319   001B38  EFA9  F00D         	goto	l2158
  2320   001B3C                     u1780:
  2321   001B3C                     
  2322                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  2323   001B3C  063C               	decf	dtoa@i^0,f,c
  2324   001B3E  A0D8               	btfss	status,0,c
  2325   001B40  063D               	decf	(dtoa@i+1)^0,f,c
  2326   001B42                     
  2327                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  2328   001B42  0E00               	movlw	low _dbuf
  2329   001B44  243C               	addwf	dtoa@i^0,w,c
  2330   001B46  6ED9               	movwf	fsr2l,c
  2331   001B48  0E01               	movlw	high _dbuf
  2332   001B4A  203D               	addwfc	(dtoa@i+1)^0,w,c
  2333   001B4C  6EDA               	movwf	fsr2h,c
  2334   001B4E  C03E  FFDF         	movff	dtoa@s,indf2
  2335   001B52                     l2158:
  2336                           
  2337                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2338   001B52  C01C  F011         	movff	dtoa@fp,pad@fp
  2339   001B56  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2340   001B5A  0E00               	movlw	low _dbuf
  2341   001B5C  243C               	addwf	dtoa@i^0,w,c
  2342   001B5E  6E13               	movwf	pad@buf^0,c
  2343   001B60  0E01               	movlw	high _dbuf
  2344   001B62  203D               	addwfc	(dtoa@i+1)^0,w,c
  2345   001B64  6E14               	movwf	(pad@buf+1)^0,c
  2346   001B66  C032  F015         	movff	dtoa@w,pad@p
  2347   001B6A  C033  F016         	movff	dtoa@w+1,pad@p+1
  2348   001B6E  ECA8  F010         	call	_pad	;wreg free
  2349   001B72  0012               	return		;funcret
  2350   001B74                     __end_of_dtoa:
  2351                           	callstack 0
  2352                           
  2353 ;; *************** function _pad *****************
  2354 ;; Defined at:
  2355 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2358 ;;		 -> sprintf@f(11), 
  2359 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2360 ;;		 -> dbuf(32), 
  2361 ;;  p               2   20[COMRAM] int 
  2362 ;; Auto vars:     Size  Location     Type
  2363 ;;  w               2   25[COMRAM] int 
  2364 ;;  i               2   23[COMRAM] int 
  2365 ;; Return value:  Size  Location     Type
  2366 ;;                  1    wreg      void 
  2367 ;; Registers used:
  2368 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2374 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2375 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2376 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2377 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2378 ;;Total ram usage:       11 bytes
  2379 ;; Hardware stack levels used: 1
  2380 ;; Hardware stack levels required when called: 4
  2381 ;; This function calls:
  2382 ;;		_fputc
  2383 ;;		_fputs
  2384 ;; This function is called by:
  2385 ;;		_dtoa
  2386 ;; This function uses a non-reentrant model
  2387 ;;
  2388                           
  2389                           	psect	text5
  2390   002150                     __ptext5:
  2391                           	callstack 0
  2392   002150                     _pad:
  2393                           	callstack 22
  2394   002150                     
  2395                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 139:     if (flags & (1 << 0)) {
  2396   002150  A05E               	btfss	_flags^0,0,c
  2397   002152  EFAD  F010         	goto	u1571
  2398   002156  EFAF  F010         	goto	u1570
  2399   00215A                     u1571:
  2400   00215A  EFB9  F010         	goto	l2062
  2401   00215E                     u1570:
  2402   00215E                     
  2403                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 140:         fput
      +                          s((const char *)buf, fp);
  2404   00215E  C013  F00A         	movff	pad@buf,fputs@s
  2405   002162  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2406   002166  C011  F00C         	movff	pad@fp,fputs@fp
  2407   00216A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2408   00216E  EC5D  F012         	call	_fputs	;wreg free
  2409   002172                     l2062:
  2410                           
  2411                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 145:     w = (p <
      +                           0) ? 0 : p;
  2412   002172  BE16               	btfsc	(pad@p+1)^0,7,c
  2413   002174  EFBE  F010         	goto	u1581
  2414   002178  EFC0  F010         	goto	u1580
  2415   00217C                     u1581:
  2416   00217C  EFC6  F010         	goto	l2066
  2417   002180                     u1580:
  2418   002180  C015  F01A         	movff	pad@p,pad@w
  2419   002184  C016  F01B         	movff	pad@p+1,pad@w+1
  2420   002188  EFCA  F010         	goto	l1024
  2421   00218C                     l2066:
  2422   00218C  0E00               	movlw	0
  2423   00218E  6E1B               	movwf	(pad@w+1)^0,c
  2424   002190  0E00               	movlw	0
  2425   002192  6E1A               	movwf	pad@w^0,c
  2426   002194                     l1024:
  2427                           
  2428                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2429   002194  0E00               	movlw	0
  2430   002196  6E19               	movwf	(pad@i+1)^0,c
  2431   002198  0E00               	movlw	0
  2432   00219A  6E18               	movwf	pad@i^0,c
  2433                           
  2434                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2435   00219C  EFDC  F010         	goto	l2072
  2436   0021A0                     l2068:
  2437                           
  2438                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2439   0021A0  0E00               	movlw	0
  2440   0021A2  6E02               	movwf	(fputc@c+1)^0,c
  2441   0021A4  0E20               	movlw	32
  2442   0021A6  6E01               	movwf	fputc@c^0,c
  2443   0021A8  C011  F003         	movff	pad@fp,fputc@fp
  2444   0021AC  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2445   0021B0  ECDF  F00F         	call	_fputc	;wreg free
  2446   0021B4                     
  2447                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2448   0021B4  4A18               	infsnz	pad@i^0,f,c
  2449   0021B6  2A19               	incf	(pad@i+1)^0,f,c
  2450   0021B8                     l2072:
  2451                           
  2452                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2453   0021B8  501A               	movf	pad@w^0,w,c
  2454   0021BA  5C18               	subwf	pad@i^0,w,c
  2455   0021BC  5019               	movf	(pad@i+1)^0,w,c
  2456   0021BE  0A80               	xorlw	128
  2457   0021C0  6E17               	movwf	??_pad^0,c
  2458   0021C2  501B               	movf	(pad@w+1)^0,w,c
  2459   0021C4  0A80               	xorlw	128
  2460   0021C6  5817               	subwfb	??_pad^0,w,c
  2461   0021C8  A0D8               	btfss	status,0,c
  2462   0021CA  EFE9  F010         	goto	u1591
  2463   0021CE  EFEB  F010         	goto	u1590
  2464   0021D2                     u1591:
  2465   0021D2  EFD0  F010         	goto	l2068
  2466   0021D6                     u1590:
  2467   0021D6                     
  2468                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 154:     if (!(fl
      +                          ags & (1 << 0))) {
  2469   0021D6  B05E               	btfsc	_flags^0,0,c
  2470   0021D8  EFF0  F010         	goto	u1601
  2471   0021DC  EFF2  F010         	goto	u1600
  2472   0021E0                     u1601:
  2473   0021E0  EFFC  F010         	goto	l1029
  2474   0021E4                     u1600:
  2475   0021E4                     
  2476                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2477   0021E4  C013  F00A         	movff	pad@buf,fputs@s
  2478   0021E8  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2479   0021EC  C011  F00C         	movff	pad@fp,fputs@fp
  2480   0021F0  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2481   0021F4  EC5D  F012         	call	_fputs	;wreg free
  2482   0021F8                     l1029:
  2483   0021F8  0012               	return		;funcret
  2484   0021FA                     __end_of_pad:
  2485                           	callstack 0
  2486                           
  2487 ;; *************** function _fputs *****************
  2488 ;; Defined at:
  2489 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2492 ;;		 -> dbuf(32), 
  2493 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2494 ;;		 -> sprintf@f(11), 
  2495 ;; Auto vars:     Size  Location     Type
  2496 ;;  i               2   14[COMRAM] int 
  2497 ;;  c               1   13[COMRAM] unsigned char 
  2498 ;; Return value:  Size  Location     Type
  2499 ;;                  2    9[COMRAM] int 
  2500 ;; Registers used:
  2501 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2507 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2508 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2510 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2511 ;;Total ram usage:        7 bytes
  2512 ;; Hardware stack levels used: 1
  2513 ;; Hardware stack levels required when called: 3
  2514 ;; This function calls:
  2515 ;;		_fputc
  2516 ;; This function is called by:
  2517 ;;		_pad
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521                           	psect	text6
  2522   0024BA                     __ptext6:
  2523                           	callstack 0
  2524   0024BA                     _fputs:
  2525                           	callstack 22
  2526   0024BA  0E00               	movlw	0
  2527   0024BC  6E10               	movwf	(fputs@i+1)^0,c
  2528   0024BE  0E00               	movlw	0
  2529   0024C0  6E0F               	movwf	fputs@i^0,c
  2530   0024C2  EF6E  F012         	goto	l1970
  2531   0024C6                     l1966:
  2532   0024C6  C00E  F001         	movff	fputs@c,fputc@c
  2533   0024CA  6A02               	clrf	(fputc@c+1)^0,c
  2534   0024CC  C00C  F003         	movff	fputs@fp,fputc@fp
  2535   0024D0  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2536   0024D4  ECDF  F00F         	call	_fputc	;wreg free
  2537   0024D8  4A0F               	infsnz	fputs@i^0,f,c
  2538   0024DA  2A10               	incf	(fputs@i+1)^0,f,c
  2539   0024DC                     l1970:
  2540   0024DC  500F               	movf	fputs@i^0,w,c
  2541   0024DE  240A               	addwf	fputs@s^0,w,c
  2542   0024E0  6ED9               	movwf	fsr2l,c
  2543   0024E2  5010               	movf	(fputs@i+1)^0,w,c
  2544   0024E4  200B               	addwfc	(fputs@s+1)^0,w,c
  2545   0024E6  6EDA               	movwf	fsr2h,c
  2546   0024E8  50DF               	movf	indf2,w,c
  2547   0024EA  6E0E               	movwf	fputs@c^0,c
  2548   0024EC  500E               	movf	fputs@c^0,w,c
  2549   0024EE  A4D8               	btfss	status,2,c
  2550   0024F0  EF7C  F012         	goto	u1431
  2551   0024F4  EF7E  F012         	goto	u1430
  2552   0024F8                     u1431:
  2553   0024F8  EF63  F012         	goto	l1966
  2554   0024FC                     u1430:
  2555   0024FC  0012               	return		;funcret
  2556   0024FE                     __end_of_fputs:
  2557                           	callstack 0
  2558                           
  2559 ;; *************** function _fputc *****************
  2560 ;; Defined at:
  2561 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2562 ;; Parameters:    Size  Location     Type
  2563 ;;  c               2    0[COMRAM] int 
  2564 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2565 ;;		 -> sprintf@f(11), 
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;		None
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  2    0[COMRAM] int 
  2570 ;; Registers used:
  2571 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2577 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2579 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2580 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2581 ;;Total ram usage:        9 bytes
  2582 ;; Hardware stack levels used: 1
  2583 ;; Hardware stack levels required when called: 2
  2584 ;; This function calls:
  2585 ;;		_putch
  2586 ;; This function is called by:
  2587 ;;		_pad
  2588 ;;		_vfpfcnvrt
  2589 ;;		_fputs
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593                           	psect	text7
  2594   001FBE                     __ptext7:
  2595                           	callstack 0
  2596   001FBE                     _fputc:
  2597                           	callstack 25
  2598   001FBE  5003               	movf	fputc@fp^0,w,c
  2599   001FC0  1004               	iorwf	(fputc@fp+1)^0,w,c
  2600   001FC2  B4D8               	btfsc	status,2,c
  2601   001FC4  EFE6  F00F         	goto	u1391
  2602   001FC8  EFE8  F00F         	goto	u1390
  2603   001FCC                     u1391:
  2604   001FCC  EFF1  F00F         	goto	l1954
  2605   001FD0                     u1390:
  2606   001FD0  5003               	movf	fputc@fp^0,w,c
  2607   001FD2  1004               	iorwf	(fputc@fp+1)^0,w,c
  2608   001FD4  A4D8               	btfss	status,2,c
  2609   001FD6  EFEF  F00F         	goto	u1401
  2610   001FDA  EFF1  F00F         	goto	u1400
  2611   001FDE                     u1401:
  2612   001FDE  EFF6  F00F         	goto	l1956
  2613   001FE2                     u1400:
  2614   001FE2                     l1954:
  2615   001FE2  5001               	movf	fputc@c^0,w,c
  2616   001FE4  EC88  F013         	call	_putch
  2617   001FE8  EF43  F010         	goto	l1137
  2618   001FEC                     l1956:
  2619   001FEC  EE20 F009          	lfsr	2,9
  2620   001FF0  5003               	movf	fputc@fp^0,w,c
  2621   001FF2  26D9               	addwf	fsr2l,f,c
  2622   001FF4  5004               	movf	(fputc@fp+1)^0,w,c
  2623   001FF6  22DA               	addwfc	fsr2h,f,c
  2624   001FF8  50DE               	movf	postinc2,w,c
  2625   001FFA  10DE               	iorwf	postinc2,w,c
  2626   001FFC  B4D8               	btfsc	status,2,c
  2627   001FFE  EF03  F010         	goto	u1411
  2628   002002  EF05  F010         	goto	u1410
  2629   002006                     u1411:
  2630   002006  EF20  F010         	goto	l1960
  2631   00200A                     u1410:
  2632   00200A  EE20 F009          	lfsr	2,9
  2633   00200E  5003               	movf	fputc@fp^0,w,c
  2634   002010  26D9               	addwf	fsr2l,f,c
  2635   002012  5004               	movf	(fputc@fp+1)^0,w,c
  2636   002014  22DA               	addwfc	fsr2h,f,c
  2637   002016  EE10 F003          	lfsr	1,3
  2638   00201A  5003               	movf	fputc@fp^0,w,c
  2639   00201C  26E1               	addwf	fsr1l,f,c
  2640   00201E  5004               	movf	(fputc@fp+1)^0,w,c
  2641   002020  22E2               	addwfc	fsr1h,f,c
  2642   002022  50DE               	movf	postinc2,w,c
  2643   002024  5CE6               	subwf	postinc1,w,c
  2644   002026  50E6               	movf	postinc1,w,c
  2645   002028  0A80               	xorlw	128
  2646   00202A  6E09               	movwf	(??_fputc+4)^0,c
  2647   00202C  50DE               	movf	postinc2,w,c
  2648   00202E  0A80               	xorlw	128
  2649   002030  5809               	subwfb	(??_fputc+4)^0,w,c
  2650   002032  B0D8               	btfsc	status,0,c
  2651   002034  EF1E  F010         	goto	u1421
  2652   002038  EF20  F010         	goto	u1420
  2653   00203C                     u1421:
  2654   00203C  EF43  F010         	goto	l1137
  2655   002040                     u1420:
  2656   002040                     l1960:
  2657   002040  EE20 F003          	lfsr	2,3
  2658   002044  5003               	movf	fputc@fp^0,w,c
  2659   002046  26D9               	addwf	fsr2l,f,c
  2660   002048  5004               	movf	(fputc@fp+1)^0,w,c
  2661   00204A  22DA               	addwfc	fsr2h,f,c
  2662   00204C  CFDE F005          	movff	postinc2,??_fputc
  2663   002050  CFDD F006          	movff	postdec2,??_fputc+1
  2664   002054  C003  FFD9         	movff	fputc@fp,fsr2l
  2665   002058  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2666   00205C  CFDE F007          	movff	postinc2,??_fputc+2
  2667   002060  CFDD F008          	movff	postdec2,??_fputc+3
  2668   002064  5005               	movf	??_fputc^0,w,c
  2669   002066  2407               	addwf	(??_fputc+2)^0,w,c
  2670   002068  6ED9               	movwf	fsr2l,c
  2671   00206A  5006               	movf	(??_fputc+1)^0,w,c
  2672   00206C  2008               	addwfc	(??_fputc+3)^0,w,c
  2673   00206E  6EDA               	movwf	fsr2h,c
  2674   002070  C001  FFDF         	movff	fputc@c,indf2
  2675   002074  EE20 F003          	lfsr	2,3
  2676   002078  5003               	movf	fputc@fp^0,w,c
  2677   00207A  26D9               	addwf	fsr2l,f,c
  2678   00207C  5004               	movf	(fputc@fp+1)^0,w,c
  2679   00207E  22DA               	addwfc	fsr2h,f,c
  2680   002080  2ADE               	incf	postinc2,f,c
  2681   002082  0E00               	movlw	0
  2682   002084  22DD               	addwfc	postdec2,f,c
  2683   002086                     l1137:
  2684   002086  0012               	return		;funcret
  2685   002088                     __end_of_fputc:
  2686                           	callstack 0
  2687                           
  2688 ;; *************** function _putch *****************
  2689 ;; Defined at:
  2690 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;  c               1    wreg     unsigned char 
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;  c               1    0[COMRAM] unsigned char 
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  1    wreg      void 
  2697 ;; Registers used:
  2698 ;;		wreg
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2708 ;;Total ram usage:        0 bytes
  2709 ;; Hardware stack levels used: 1
  2710 ;; Hardware stack levels required when called: 1
  2711 ;; This function calls:
  2712 ;;		Nothing
  2713 ;; This function is called by:
  2714 ;;		_fputc
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718                           	psect	text8
  2719   002710                     __ptext8:
  2720                           	callstack 0
  2721   002710                     _putch:
  2722                           	callstack 25
  2723   002710  0012               	return		;funcret
  2724   002712                     __end_of_putch:
  2725                           	callstack 0
  2726                           
  2727 ;; *************** function _abs *****************
  2728 ;; Defined at:
  2729 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;  a               2   18[COMRAM] int 
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;		None
  2734 ;; Return value:  Size  Location     Type
  2735 ;;                  2   18[COMRAM] int 
  2736 ;; Registers used:
  2737 ;;		wreg, status,2, status,0
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2743 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2745 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2746 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2747 ;;Total ram usage:        4 bytes
  2748 ;; Hardware stack levels used: 1
  2749 ;; Hardware stack levels required when called: 1
  2750 ;; This function calls:
  2751 ;;		Nothing
  2752 ;; This function is called by:
  2753 ;;		_dtoa
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756                           
  2757                           	psect	text9
  2758   0024FE                     __ptext9:
  2759                           	callstack 0
  2760   0024FE                     _abs:
  2761                           	callstack 25
  2762   0024FE  BE14               	btfsc	(abs@a+1)^0,7,c
  2763   002500  EF8C  F012         	goto	u1610
  2764   002504  5014               	movf	(abs@a+1)^0,w,c
  2765   002506  E106               	bnz	u1611
  2766   002508  0413               	decf	abs@a^0,w,c
  2767   00250A  B0D8               	btfsc	status,0,c
  2768   00250C  EF8A  F012         	goto	u1611
  2769   002510  EF8C  F012         	goto	u1610
  2770   002514                     u1611:
  2771   002514  EF9A  F012         	goto	l1083
  2772   002518                     u1610:
  2773   002518  C013  F015         	movff	abs@a,??_abs
  2774   00251C  C014  F016         	movff	abs@a+1,??_abs+1
  2775   002520  1E15               	comf	??_abs^0,f,c
  2776   002522  1E16               	comf	(??_abs+1)^0,f,c
  2777   002524  4A15               	infsnz	??_abs^0,f,c
  2778   002526  2A16               	incf	(??_abs+1)^0,f,c
  2779   002528  C015  F013         	movff	??_abs,?_abs
  2780   00252C  C016  F014         	movff	??_abs+1,?_abs+1
  2781   002530  EF9E  F012         	goto	l1086
  2782   002534                     l1083:
  2783   002534  C013  F013         	movff	abs@a,?_abs
  2784   002538  C014  F014         	movff	abs@a+1,?_abs+1
  2785   00253C                     l1086:
  2786   00253C  0012               	return		;funcret
  2787   00253E                     __end_of_abs:
  2788                           	callstack 0
  2789                           
  2790 ;; *************** function ___aomod *****************
  2791 ;; Defined at:
  2792 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2793 ;; Parameters:    Size  Location     Type
  2794 ;;  dividend        8    0[COMRAM] long long 
  2795 ;;  divisor         8    8[COMRAM] long long 
  2796 ;; Auto vars:     Size  Location     Type
  2797 ;;  sign            1   17[COMRAM] unsigned char 
  2798 ;;  counter         1   16[COMRAM] unsigned char 
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  8    0[COMRAM] long long 
  2801 ;; Registers used:
  2802 ;;		wreg, status,2, status,0
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2808 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2809 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2811 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2812 ;;Total ram usage:       18 bytes
  2813 ;; Hardware stack levels used: 1
  2814 ;; Hardware stack levels required when called: 1
  2815 ;; This function calls:
  2816 ;;		Nothing
  2817 ;; This function is called by:
  2818 ;;		_dtoa
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822                           	psect	text10
  2823   001CFC                     __ptext10:
  2824                           	callstack 0
  2825   001CFC                     ___aomod:
  2826                           	callstack 25
  2827   001CFC  0E00               	movlw	0
  2828   001CFE  6E12               	movwf	___aomod@sign^0,c
  2829   001D00  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2830   001D02  EF87  F00E         	goto	u1510
  2831   001D06  EF85  F00E         	goto	u1511
  2832   001D0A                     u1511:
  2833   001D0A  EF99  F00E         	goto	l2030
  2834   001D0E                     u1510:
  2835   001D0E  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2836   001D10  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2837   001D12  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2838   001D14  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2839   001D16  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2840   001D18  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2841   001D1A  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2842   001D1C  6C01               	negf	___aomod@dividend^0,c
  2843   001D1E  0E00               	movlw	0
  2844   001D20  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2845   001D22  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2846   001D24  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2847   001D26  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2848   001D28  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2849   001D2A  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2850   001D2C  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2851   001D2E  0E01               	movlw	1
  2852   001D30  6E12               	movwf	___aomod@sign^0,c
  2853   001D32                     l2030:
  2854   001D32  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2855   001D34  EFA0  F00E         	goto	u1520
  2856   001D38  EF9E  F00E         	goto	u1521
  2857   001D3C                     u1521:
  2858   001D3C  EFB0  F00E         	goto	l2034
  2859   001D40                     u1520:
  2860   001D40  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2861   001D42  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2862   001D44  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2863   001D46  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2864   001D48  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2865   001D4A  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2866   001D4C  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2867   001D4E  6C09               	negf	___aomod@divisor^0,c
  2868   001D50  0E00               	movlw	0
  2869   001D52  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2870   001D54  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2871   001D56  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2872   001D58  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2873   001D5A  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2874   001D5C  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2875   001D5E  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2876   001D60                     l2034:
  2877   001D60  5009               	movf	___aomod@divisor^0,w,c
  2878   001D62  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2879   001D64  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2880   001D66  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2881   001D68  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2882   001D6A  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2883   001D6C  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2884   001D6E  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2885   001D70  B4D8               	btfsc	status,2,c
  2886   001D72  EFBD  F00E         	goto	u1531
  2887   001D76  EFBF  F00E         	goto	u1530
  2888   001D7A                     u1531:
  2889   001D7A  EF07  F00F         	goto	l2050
  2890   001D7E                     u1530:
  2891   001D7E  0E01               	movlw	1
  2892   001D80  6E11               	movwf	___aomod@counter^0,c
  2893   001D82  EFCD  F00E         	goto	l2040
  2894   001D86                     l2038:
  2895   001D86  90D8               	bcf	status,0,c
  2896   001D88  3609               	rlcf	___aomod@divisor^0,f,c
  2897   001D8A  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2898   001D8C  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2899   001D8E  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2900   001D90  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2901   001D92  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2902   001D94  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2903   001D96  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2904   001D98  2A11               	incf	___aomod@counter^0,f,c
  2905   001D9A                     l2040:
  2906   001D9A  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2907   001D9C  EFD2  F00E         	goto	u1541
  2908   001DA0  EFD4  F00E         	goto	u1540
  2909   001DA4                     u1541:
  2910   001DA4  EFC3  F00E         	goto	l2038
  2911   001DA8                     u1540:
  2912   001DA8                     l2042:
  2913   001DA8  5009               	movf	___aomod@divisor^0,w,c
  2914   001DAA  5C01               	subwf	___aomod@dividend^0,w,c
  2915   001DAC  500A               	movf	(___aomod@divisor+1)^0,w,c
  2916   001DAE  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2917   001DB0  500B               	movf	(___aomod@divisor+2)^0,w,c
  2918   001DB2  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2919   001DB4  500C               	movf	(___aomod@divisor+3)^0,w,c
  2920   001DB6  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2921   001DB8  500D               	movf	(___aomod@divisor+4)^0,w,c
  2922   001DBA  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2923   001DBC  500E               	movf	(___aomod@divisor+5)^0,w,c
  2924   001DBE  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2925   001DC0  500F               	movf	(___aomod@divisor+6)^0,w,c
  2926   001DC2  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2927   001DC4  5010               	movf	(___aomod@divisor+7)^0,w,c
  2928   001DC6  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2929   001DC8  A0D8               	btfss	status,0,c
  2930   001DCA  EFE9  F00E         	goto	u1551
  2931   001DCE  EFEB  F00E         	goto	u1550
  2932   001DD2                     u1551:
  2933   001DD2  EFFB  F00E         	goto	l2046
  2934   001DD6                     u1550:
  2935   001DD6  5009               	movf	___aomod@divisor^0,w,c
  2936   001DD8  5E01               	subwf	___aomod@dividend^0,f,c
  2937   001DDA  500A               	movf	(___aomod@divisor+1)^0,w,c
  2938   001DDC  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2939   001DDE  500B               	movf	(___aomod@divisor+2)^0,w,c
  2940   001DE0  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2941   001DE2  500C               	movf	(___aomod@divisor+3)^0,w,c
  2942   001DE4  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2943   001DE6  500D               	movf	(___aomod@divisor+4)^0,w,c
  2944   001DE8  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2945   001DEA  500E               	movf	(___aomod@divisor+5)^0,w,c
  2946   001DEC  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2947   001DEE  500F               	movf	(___aomod@divisor+6)^0,w,c
  2948   001DF0  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2949   001DF2  5010               	movf	(___aomod@divisor+7)^0,w,c
  2950   001DF4  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2951   001DF6                     l2046:
  2952   001DF6  90D8               	bcf	status,0,c
  2953   001DF8  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2954   001DFA  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2955   001DFC  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2956   001DFE  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2957   001E00  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2958   001E02  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2959   001E04  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2960   001E06  3209               	rrcf	___aomod@divisor^0,f,c
  2961   001E08  2E11               	decfsz	___aomod@counter^0,f,c
  2962   001E0A  EFD4  F00E         	goto	l2042
  2963   001E0E                     l2050:
  2964   001E0E  5012               	movf	___aomod@sign^0,w,c
  2965   001E10  B4D8               	btfsc	status,2,c
  2966   001E12  EF0D  F00F         	goto	u1561
  2967   001E16  EF0F  F00F         	goto	u1560
  2968   001E1A                     u1561:
  2969   001E1A  EF1F  F00F         	goto	l2054
  2970   001E1E                     u1560:
  2971   001E1E  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2972   001E20  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2973   001E22  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2974   001E24  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2975   001E26  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2976   001E28  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2977   001E2A  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2978   001E2C  6C01               	negf	___aomod@dividend^0,c
  2979   001E2E  0E00               	movlw	0
  2980   001E30  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2981   001E32  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2982   001E34  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2983   001E36  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2984   001E38  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2985   001E3A  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2986   001E3C  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2987   001E3E                     l2054:
  2988   001E3E  C001  F001         	movff	___aomod@dividend,?___aomod
  2989   001E42  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2990   001E46  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2991   001E4A  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2992   001E4E  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2993   001E52  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2994   001E56  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2995   001E5A  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2996   001E5E  0012               	return		;funcret
  2997   001E60                     __end_of___aomod:
  2998                           	callstack 0
  2999                           
  3000 ;; *************** function ___aodiv *****************
  3001 ;; Defined at:
  3002 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;  dividend        8    0[COMRAM] long long 
  3005 ;;  divisor         8    8[COMRAM] long long 
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;  quotient        8   18[COMRAM] long long 
  3008 ;;  sign            1   17[COMRAM] unsigned char 
  3009 ;;  counter         1   16[COMRAM] unsigned char 
  3010 ;; Return value:  Size  Location     Type
  3011 ;;                  8    0[COMRAM] long long 
  3012 ;; Registers used:
  3013 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3019 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3020 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3022 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3023 ;;Total ram usage:       26 bytes
  3024 ;; Hardware stack levels used: 1
  3025 ;; Hardware stack levels required when called: 1
  3026 ;; This function calls:
  3027 ;;		Nothing
  3028 ;; This function is called by:
  3029 ;;		_dtoa
  3030 ;; This function uses a non-reentrant model
  3031 ;;
  3032                           
  3033                           	psect	text11
  3034   001B74                     __ptext11:
  3035                           	callstack 0
  3036   001B74                     ___aodiv:
  3037                           	callstack 25
  3038   001B74  0E00               	movlw	0
  3039   001B76  6E12               	movwf	___aodiv@sign^0,c
  3040   001B78  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3041   001B7A  EFC3  F00D         	goto	u1440
  3042   001B7E  EFC1  F00D         	goto	u1441
  3043   001B82                     u1441:
  3044   001B82  EFD5  F00D         	goto	l1986
  3045   001B86                     u1440:
  3046   001B86  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3047   001B88  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3048   001B8A  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3049   001B8C  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3050   001B8E  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3051   001B90  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3052   001B92  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3053   001B94  6C09               	negf	___aodiv@divisor^0,c
  3054   001B96  0E00               	movlw	0
  3055   001B98  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3056   001B9A  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3057   001B9C  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3058   001B9E  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3059   001BA0  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3060   001BA2  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3061   001BA4  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3062   001BA6  0E01               	movlw	1
  3063   001BA8  6E12               	movwf	___aodiv@sign^0,c
  3064   001BAA                     l1986:
  3065   001BAA  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3066   001BAC  EFDC  F00D         	goto	u1450
  3067   001BB0  EFDA  F00D         	goto	u1451
  3068   001BB4                     u1451:
  3069   001BB4  EFEE  F00D         	goto	l1992
  3070   001BB8                     u1450:
  3071   001BB8  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3072   001BBA  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3073   001BBC  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3074   001BBE  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3075   001BC0  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3076   001BC2  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3077   001BC4  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3078   001BC6  6C01               	negf	___aodiv@dividend^0,c
  3079   001BC8  0E00               	movlw	0
  3080   001BCA  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3081   001BCC  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3082   001BCE  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3083   001BD0  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3084   001BD2  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3085   001BD4  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3086   001BD6  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3087   001BD8  0E01               	movlw	1
  3088   001BDA  1A12               	xorwf	___aodiv@sign^0,f,c
  3089   001BDC                     l1992:
  3090   001BDC  EE20  F013         	lfsr	2,___aodiv@quotient
  3091   001BE0  0E07               	movlw	7
  3092   001BE2                     u1461:
  3093   001BE2  6ADE               	clrf	postinc2,c
  3094   001BE4  06E8               	decf	wreg,f,c
  3095   001BE6  E2FD               	bc	u1461
  3096   001BE8  5009               	movf	___aodiv@divisor^0,w,c
  3097   001BEA  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3098   001BEC  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3099   001BEE  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3100   001BF0  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3101   001BF2  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3102   001BF4  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3103   001BF6  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3104   001BF8  B4D8               	btfsc	status,2,c
  3105   001BFA  EF01  F00E         	goto	u1471
  3106   001BFE  EF03  F00E         	goto	u1470
  3107   001C02                     u1471:
  3108   001C02  EF55  F00E         	goto	l2014
  3109   001C06                     u1470:
  3110   001C06  0E01               	movlw	1
  3111   001C08  6E11               	movwf	___aodiv@counter^0,c
  3112   001C0A  EF11  F00E         	goto	l2000
  3113   001C0E                     l1998:
  3114   001C0E  90D8               	bcf	status,0,c
  3115   001C10  3609               	rlcf	___aodiv@divisor^0,f,c
  3116   001C12  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3117   001C14  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3118   001C16  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3119   001C18  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3120   001C1A  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3121   001C1C  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3122   001C1E  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3123   001C20  2A11               	incf	___aodiv@counter^0,f,c
  3124   001C22                     l2000:
  3125   001C22  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3126   001C24  EF16  F00E         	goto	u1481
  3127   001C28  EF18  F00E         	goto	u1480
  3128   001C2C                     u1481:
  3129   001C2C  EF07  F00E         	goto	l1998
  3130   001C30                     u1480:
  3131   001C30                     l2002:
  3132   001C30  90D8               	bcf	status,0,c
  3133   001C32  3613               	rlcf	___aodiv@quotient^0,f,c
  3134   001C34  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3135   001C36  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3136   001C38  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3137   001C3A  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3138   001C3C  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3139   001C3E  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3140   001C40  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3141   001C42  5009               	movf	___aodiv@divisor^0,w,c
  3142   001C44  5C01               	subwf	___aodiv@dividend^0,w,c
  3143   001C46  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3144   001C48  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3145   001C4A  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3146   001C4C  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3147   001C4E  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3148   001C50  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3149   001C52  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3150   001C54  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3151   001C56  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3152   001C58  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3153   001C5A  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3154   001C5C  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3155   001C5E  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3156   001C60  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3157   001C62  A0D8               	btfss	status,0,c
  3158   001C64  EF36  F00E         	goto	u1491
  3159   001C68  EF38  F00E         	goto	u1490
  3160   001C6C                     u1491:
  3161   001C6C  EF49  F00E         	goto	l2010
  3162   001C70                     u1490:
  3163   001C70  5009               	movf	___aodiv@divisor^0,w,c
  3164   001C72  5E01               	subwf	___aodiv@dividend^0,f,c
  3165   001C74  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3166   001C76  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3167   001C78  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3168   001C7A  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3169   001C7C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3170   001C7E  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3171   001C80  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3172   001C82  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3173   001C84  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3174   001C86  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3175   001C88  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3176   001C8A  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3177   001C8C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3178   001C8E  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3179   001C90  8013               	bsf	___aodiv@quotient^0,0,c
  3180   001C92                     l2010:
  3181   001C92  90D8               	bcf	status,0,c
  3182   001C94  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3183   001C96  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3184   001C98  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3185   001C9A  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3186   001C9C  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3187   001C9E  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3188   001CA0  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3189   001CA2  3209               	rrcf	___aodiv@divisor^0,f,c
  3190   001CA4  2E11               	decfsz	___aodiv@counter^0,f,c
  3191   001CA6  EF18  F00E         	goto	l2002
  3192   001CAA                     l2014:
  3193   001CAA  5012               	movf	___aodiv@sign^0,w,c
  3194   001CAC  B4D8               	btfsc	status,2,c
  3195   001CAE  EF5B  F00E         	goto	u1501
  3196   001CB2  EF5D  F00E         	goto	u1500
  3197   001CB6                     u1501:
  3198   001CB6  EF6D  F00E         	goto	l2018
  3199   001CBA                     u1500:
  3200   001CBA  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3201   001CBC  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3202   001CBE  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3203   001CC0  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3204   001CC2  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3205   001CC4  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3206   001CC6  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3207   001CC8  6C13               	negf	___aodiv@quotient^0,c
  3208   001CCA  0E00               	movlw	0
  3209   001CCC  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3210   001CCE  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3211   001CD0  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3212   001CD2  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3213   001CD4  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3214   001CD6  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3215   001CD8  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3216   001CDA                     l2018:
  3217   001CDA  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3218   001CDE  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3219   001CE2  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3220   001CE6  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3221   001CEA  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3222   001CEE  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3223   001CF2  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3224   001CF6  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3225   001CFA  0012               	return		;funcret
  3226   001CFC                     __end_of___aodiv:
  3227                           	callstack 0
  3228                           
  3229 ;; *************** function _atoi *****************
  3230 ;; Defined at:
  3231 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  3232 ;; Parameters:    Size  Location     Type
  3233 ;;  s               2    6[COMRAM] PTR const unsigned char 
  3234 ;;		 -> STR_4(12), STR_3(18), STR_2(8), STR_1(8), 
  3235 ;; Auto vars:     Size  Location     Type
  3236 ;;  n               2   13[COMRAM] int 
  3237 ;;  neg             2   11[COMRAM] int 
  3238 ;; Return value:  Size  Location     Type
  3239 ;;                  2    6[COMRAM] int 
  3240 ;; Registers used:
  3241 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3242 ;; Tracked objects:
  3243 ;;		On entry : 0/0
  3244 ;;		On exit  : 0/0
  3245 ;;		Unchanged: 0/0
  3246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3247 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3248 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3249 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3250 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3251 ;;Total ram usage:        9 bytes
  3252 ;; Hardware stack levels used: 1
  3253 ;; Hardware stack levels required when called: 2
  3254 ;; This function calls:
  3255 ;;		___wmul
  3256 ;;		_isdigit
  3257 ;;		_isspace
  3258 ;; This function is called by:
  3259 ;;		_vfpfcnvrt
  3260 ;; This function uses a non-reentrant model
  3261 ;;
  3262                           
  3263                           	psect	text12
  3264   001E60                     __ptext12:
  3265                           	callstack 0
  3266   001E60                     _atoi:
  3267                           	callstack 25
  3268   001E60  0E00               	movlw	0
  3269   001E62  6E0F               	movwf	(atoi@n+1)^0,c
  3270   001E64  0E00               	movlw	0
  3271   001E66  6E0E               	movwf	atoi@n^0,c
  3272   001E68  0E00               	movlw	0
  3273   001E6A  6E0D               	movwf	(atoi@neg+1)^0,c
  3274   001E6C  0E00               	movlw	0
  3275   001E6E  6E0C               	movwf	atoi@neg^0,c
  3276   001E70  EF3C  F00F         	goto	l2168
  3277   001E74                     l2164:
  3278   001E74  4A07               	infsnz	atoi@s^0,f,c
  3279   001E76  2A08               	incf	(atoi@s+1)^0,f,c
  3280   001E78                     l2168:
  3281   001E78  C007  FFF6         	movff	atoi@s,tblptrl
  3282   001E7C  C008  FFF7         	movff	atoi@s+1,tblptrh
  3283   001E80                     	if	0	;tblptru may be non-zero
  3284   001E80                     	endif
  3285   001E80                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3286   001E80  0E00               	movlw	low (__mediumconst shr (0+16))
  3287   001E82  6EF8               	movwf	tblptru,c
  3288   001E84                     	endif
  3289   001E84  0008               	tblrd		*
  3290   001E86  50F5               	movf	tablat,w,c
  3291   001E88  0A20               	xorlw	32
  3292   001E8A  B4D8               	btfsc	status,2,c
  3293   001E8C  EF4A  F00F         	goto	u1791
  3294   001E90  EF4C  F00F         	goto	u1790
  3295   001E94                     u1791:
  3296   001E94  EF3A  F00F         	goto	l2164
  3297   001E98                     u1790:
  3298   001E98  C007  FFF6         	movff	atoi@s,tblptrl
  3299   001E9C  C008  FFF7         	movff	atoi@s+1,tblptrh
  3300   001EA0                     	if	0	;tblptru may be non-zero
  3301   001EA0                     	endif
  3302   001EA0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3303   001EA0  0E00               	movlw	low (__mediumconst shr (0+16))
  3304   001EA2  6EF8               	movwf	tblptru,c
  3305   001EA4                     	endif
  3306   001EA4  0008               	tblrd		*
  3307   001EA6  CFF5 F009          	movff	tablat,??_atoi
  3308   001EAA  0EF7               	movlw	247
  3309   001EAC  2409               	addwf	??_atoi^0,w,c
  3310   001EAE  6E0A               	movwf	(??_atoi+1)^0,c
  3311   001EB0  6A0B               	clrf	(??_atoi+2)^0,c
  3312   001EB2  0EFF               	movlw	255
  3313   001EB4  220B               	addwfc	(??_atoi+2)^0,f,c
  3314   001EB6  500B               	movf	(??_atoi+2)^0,w,c
  3315   001EB8  E109               	bnz	u1800
  3316   001EBA  0E05               	movlw	5
  3317   001EBC  5C0A               	subwf	(??_atoi+1)^0,w,c
  3318   001EBE  A0D8               	btfss	status,0,c
  3319   001EC0  EF64  F00F         	goto	u1801
  3320   001EC4  EF66  F00F         	goto	u1800
  3321   001EC8                     u1801:
  3322   001EC8  EF3A  F00F         	goto	l2164
  3323   001ECC                     u1800:
  3324   001ECC  EF70  F00F         	goto	l2176
  3325   001ED0                     l2172:
  3326   001ED0  0E00               	movlw	0
  3327   001ED2  6E0D               	movwf	(atoi@neg+1)^0,c
  3328   001ED4  0E01               	movlw	1
  3329   001ED6  6E0C               	movwf	atoi@neg^0,c
  3330   001ED8                     l2174:
  3331   001ED8  4A07               	infsnz	atoi@s^0,f,c
  3332   001EDA  2A08               	incf	(atoi@s+1)^0,f,c
  3333   001EDC  EFA9  F00F         	goto	l2184
  3334   001EE0                     l2176:
  3335   001EE0  C007  FFF6         	movff	atoi@s,tblptrl
  3336   001EE4  C008  FFF7         	movff	atoi@s+1,tblptrh
  3337   001EE8                     	if	0	;tblptru may be non-zero
  3338   001EE8                     	endif
  3339   001EE8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3340   001EE8  0E00               	movlw	low (__mediumconst shr (0+16))
  3341   001EEA  6EF8               	movwf	tblptru,c
  3342   001EEC                     	endif
  3343   001EEC  0008               	tblrd		*
  3344   001EEE  50F5               	movf	tablat,w,c
  3345   001EF0  6E09               	movwf	??_atoi^0,c
  3346   001EF2  6A0A               	clrf	(??_atoi+1)^0,c
  3347                           
  3348                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3349                           ; Switch size 1, requested type "simple"
  3350                           ; Number of cases is 1, Range of values is 0 to 0
  3351                           ; switch strategies available:
  3352                           ; Name         Instructions Cycles
  3353                           ; simple_byte            4     3 (average)
  3354                           ;	Chosen strategy is simple_byte
  3355   001EF4  500A               	movf	(??_atoi+1)^0,w,c
  3356   001EF6  0A00               	xorlw	0	; case 0
  3357   001EF8  B4D8               	btfsc	status,2,c
  3358   001EFA  EF81  F00F         	goto	l2726
  3359   001EFE  EFA9  F00F         	goto	l2184
  3360   001F02                     l2726:
  3361                           
  3362                           ; Switch size 1, requested type "simple"
  3363                           ; Number of cases is 2, Range of values is 43 to 45
  3364                           ; switch strategies available:
  3365                           ; Name         Instructions Cycles
  3366                           ; simple_byte            7     4 (average)
  3367                           ;	Chosen strategy is simple_byte
  3368   001F02  5009               	movf	??_atoi^0,w,c
  3369   001F04  0A2B               	xorlw	43	; case 43
  3370   001F06  B4D8               	btfsc	status,2,c
  3371   001F08  EF6C  F00F         	goto	l2174
  3372   001F0C  0A06               	xorlw	6	; case 45
  3373   001F0E  B4D8               	btfsc	status,2,c
  3374   001F10  EF68  F00F         	goto	l2172
  3375   001F14  EFA9  F00F         	goto	l2184
  3376   001F18                     l2178:
  3377   001F18  C00E  F001         	movff	atoi@n,___wmul@multiplier
  3378   001F1C  C00F  F002         	movff	atoi@n+1,___wmul@multiplier+1
  3379   001F20  0E00               	movlw	0
  3380   001F22  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3381   001F24  0E0A               	movlw	10
  3382   001F26  6E03               	movwf	___wmul@multiplicand^0,c
  3383   001F28  EC1B  F013         	call	___wmul	;wreg free
  3384   001F2C  C007  FFF6         	movff	atoi@s,tblptrl
  3385   001F30  C008  FFF7         	movff	atoi@s+1,tblptrh
  3386   001F34                     	if	0	;tblptru may be non-zero
  3387   001F34                     	endif
  3388   001F34                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3389   001F34  0E00               	movlw	low (__mediumconst shr (0+16))
  3390   001F36  6EF8               	movwf	tblptru,c
  3391   001F38                     	endif
  3392   001F38  0008               	tblrd		*
  3393   001F3A  50F5               	movf	tablat,w,c
  3394   001F3C  5E01               	subwf	?___wmul^0,f,c
  3395   001F3E  0E00               	movlw	0
  3396   001F40  5A02               	subwfb	(?___wmul+1)^0,f,c
  3397   001F42  0E30               	movlw	48
  3398   001F44  2401               	addwf	?___wmul^0,w,c
  3399   001F46  6E0E               	movwf	atoi@n^0,c
  3400   001F48  0E00               	movlw	0
  3401   001F4A  2002               	addwfc	(?___wmul+1)^0,w,c
  3402   001F4C  6E0F               	movwf	(atoi@n+1)^0,c
  3403   001F4E  EF6C  F00F         	goto	l2174
  3404   001F52                     l2184:
  3405   001F52  C007  FFF6         	movff	atoi@s,tblptrl
  3406   001F56  C008  FFF7         	movff	atoi@s+1,tblptrh
  3407   001F5A                     	if	0	;tblptru may be non-zero
  3408   001F5A                     	endif
  3409   001F5A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3410   001F5A  0E00               	movlw	low (__mediumconst shr (0+16))
  3411   001F5C  6EF8               	movwf	tblptru,c
  3412   001F5E                     	endif
  3413   001F5E  0008               	tblrd		*
  3414   001F60  CFF5 F009          	movff	tablat,??_atoi
  3415   001F64  0ED0               	movlw	208
  3416   001F66  2409               	addwf	??_atoi^0,w,c
  3417   001F68  6E0A               	movwf	(??_atoi+1)^0,c
  3418   001F6A  6A0B               	clrf	(??_atoi+2)^0,c
  3419   001F6C  0EFF               	movlw	255
  3420   001F6E  220B               	addwfc	(??_atoi+2)^0,f,c
  3421   001F70  500B               	movf	(??_atoi+2)^0,w,c
  3422   001F72  E109               	bnz	u1810
  3423   001F74  0E0A               	movlw	10
  3424   001F76  5C0A               	subwf	(??_atoi+1)^0,w,c
  3425   001F78  A0D8               	btfss	status,0,c
  3426   001F7A  EFC1  F00F         	goto	u1811
  3427   001F7E  EFC3  F00F         	goto	u1810
  3428   001F82                     u1811:
  3429   001F82  EF8C  F00F         	goto	l2178
  3430   001F86                     u1810:
  3431   001F86  500C               	movf	atoi@neg^0,w,c
  3432   001F88  100D               	iorwf	(atoi@neg+1)^0,w,c
  3433   001F8A  A4D8               	btfss	status,2,c
  3434   001F8C  EFCA  F00F         	goto	u1821
  3435   001F90  EFCC  F00F         	goto	u1820
  3436   001F94                     u1821:
  3437   001F94  EFDA  F00F         	goto	l1108
  3438   001F98                     u1820:
  3439   001F98  C00E  F009         	movff	atoi@n,??_atoi
  3440   001F9C  C00F  F00A         	movff	atoi@n+1,??_atoi+1
  3441   001FA0  1E09               	comf	??_atoi^0,f,c
  3442   001FA2  1E0A               	comf	(??_atoi+1)^0,f,c
  3443   001FA4  4A09               	infsnz	??_atoi^0,f,c
  3444   001FA6  2A0A               	incf	(??_atoi+1)^0,f,c
  3445   001FA8  C009  F007         	movff	??_atoi,?_atoi
  3446   001FAC  C00A  F008         	movff	??_atoi+1,?_atoi+1
  3447   001FB0  EFDE  F00F         	goto	l1111
  3448   001FB4                     l1108:
  3449   001FB4  C00E  F007         	movff	atoi@n,?_atoi
  3450   001FB8  C00F  F008         	movff	atoi@n+1,?_atoi+1
  3451   001FBC                     l1111:
  3452   001FBC  0012               	return		;funcret
  3453   001FBE                     __end_of_atoi:
  3454                           	callstack 0
  3455                           
  3456 ;; *************** function _isspace *****************
  3457 ;; Defined at:
  3458 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  3459 ;; Parameters:    Size  Location     Type
  3460 ;;  c               2    0[COMRAM] int 
  3461 ;; Auto vars:     Size  Location     Type
  3462 ;;		None
  3463 ;; Return value:  Size  Location     Type
  3464 ;;                  2    0[COMRAM] int 
  3465 ;; Registers used:
  3466 ;;		wreg, status,2, status,0
  3467 ;; Tracked objects:
  3468 ;;		On entry : 0/0
  3469 ;;		On exit  : 0/0
  3470 ;;		Unchanged: 0/0
  3471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3472 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3473 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3474 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3475 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3476 ;;Total ram usage:        5 bytes
  3477 ;; Hardware stack levels used: 1
  3478 ;; Hardware stack levels required when called: 1
  3479 ;; This function calls:
  3480 ;;		Nothing
  3481 ;; This function is called by:
  3482 ;;		_atoi
  3483 ;; This function uses a non-reentrant model
  3484 ;;
  3485                           
  3486                           	psect	text13
  3487   002474                     __ptext13:
  3488                           	callstack 0
  3489   002474                     _isspace:
  3490                           	callstack 25
  3491   002474  0E01               	movlw	1
  3492   002476  6E05               	movwf	_isspace$1934^0,c
  3493   002478  0E20               	movlw	32
  3494   00247A  1801               	xorwf	isspace@c^0,w,c
  3495   00247C  1002               	iorwf	(isspace@c+1)^0,w,c
  3496   00247E  B4D8               	btfsc	status,2,c
  3497   002480  EF44  F012         	goto	u1641
  3498   002484  EF46  F012         	goto	u1640
  3499   002488                     u1641:
  3500   002488  EF59  F012         	goto	l2092
  3501   00248C                     u1640:
  3502   00248C  0EF7               	movlw	247
  3503   00248E  2401               	addwf	isspace@c^0,w,c
  3504   002490  6E03               	movwf	??_isspace^0,c
  3505   002492  0EFF               	movlw	255
  3506   002494  2002               	addwfc	(isspace@c+1)^0,w,c
  3507   002496  6E04               	movwf	(??_isspace+1)^0,c
  3508   002498  5004               	movf	(??_isspace+1)^0,w,c
  3509   00249A  E109               	bnz	u1650
  3510   00249C  0E05               	movlw	5
  3511   00249E  5C03               	subwf	??_isspace^0,w,c
  3512   0024A0  A0D8               	btfss	status,0,c
  3513   0024A2  EF55  F012         	goto	u1651
  3514   0024A6  EF57  F012         	goto	u1650
  3515   0024AA                     u1651:
  3516   0024AA  EF59  F012         	goto	l2092
  3517   0024AE                     u1650:
  3518   0024AE  0E00               	movlw	0
  3519   0024B0  6E05               	movwf	_isspace$1934^0,c
  3520   0024B2                     l2092:
  3521   0024B2  C005  F001         	movff	_isspace$1934,?_isspace
  3522   0024B6  6A02               	clrf	(?_isspace+1)^0,c
  3523   0024B8  0012               	return		;funcret
  3524   0024BA                     __end_of_isspace:
  3525                           	callstack 0
  3526                           
  3527 ;; *************** function _isdigit *****************
  3528 ;; Defined at:
  3529 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;  c               2    0[COMRAM] int 
  3532 ;; Auto vars:     Size  Location     Type
  3533 ;;		None
  3534 ;; Return value:  Size  Location     Type
  3535 ;;                  2    0[COMRAM] int 
  3536 ;; Registers used:
  3537 ;;		wreg, status,2, status,0
  3538 ;; Tracked objects:
  3539 ;;		On entry : 0/0
  3540 ;;		On exit  : 0/0
  3541 ;;		Unchanged: 0/0
  3542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3543 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3545 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3546 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3547 ;;Total ram usage:        4 bytes
  3548 ;; Hardware stack levels used: 1
  3549 ;; Hardware stack levels required when called: 1
  3550 ;; This function calls:
  3551 ;;		Nothing
  3552 ;; This function is called by:
  3553 ;;		_vfpfcnvrt
  3554 ;;		_atoi
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           	psect	text14
  3559   0025E2                     __ptext14:
  3560                           	callstack 0
  3561   0025E2                     _isdigit:
  3562                           	callstack 26
  3563   0025E2  0ED0               	movlw	208
  3564   0025E4  2401               	addwf	isdigit@c^0,w,c
  3565   0025E6  6E03               	movwf	??_isdigit^0,c
  3566   0025E8  0EFF               	movlw	255
  3567   0025EA  2002               	addwfc	(isdigit@c+1)^0,w,c
  3568   0025EC  6E04               	movwf	(??_isdigit+1)^0,c
  3569   0025EE  5004               	movf	(??_isdigit+1)^0,w,c
  3570   0025F0  E10A               	bnz	u1620
  3571   0025F2  0E0A               	movlw	10
  3572   0025F4  5C03               	subwf	??_isdigit^0,w,c
  3573   0025F6  A0D8               	btfss	status,0,c
  3574   0025F8  EF00  F013         	goto	u1621
  3575   0025FC  EF03  F013         	goto	u1620
  3576   002600                     u1621:
  3577   002600  0E01               	movlw	1
  3578   002602  EF04  F013         	goto	u1630
  3579   002606                     u1620:
  3580   002606  0E00               	movlw	0
  3581   002608                     u1630:
  3582   002608  6E01               	movwf	?_isdigit^0,c
  3583   00260A  6A02               	clrf	(?_isdigit+1)^0,c
  3584   00260C  0012               	return		;funcret
  3585   00260E                     __end_of_isdigit:
  3586                           	callstack 0
  3587                           
  3588 ;; *************** function ___wmul *****************
  3589 ;; Defined at:
  3590 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  3591 ;; Parameters:    Size  Location     Type
  3592 ;;  multiplier      2    0[COMRAM] unsigned int 
  3593 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3594 ;; Auto vars:     Size  Location     Type
  3595 ;;  product         2    4[COMRAM] unsigned int 
  3596 ;; Return value:  Size  Location     Type
  3597 ;;                  2    0[COMRAM] unsigned int 
  3598 ;; Registers used:
  3599 ;;		wreg, status,2, status,0, prodl, prodh
  3600 ;; Tracked objects:
  3601 ;;		On entry : 0/0
  3602 ;;		On exit  : 0/0
  3603 ;;		Unchanged: 0/0
  3604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3605 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3606 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3608 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3609 ;;Total ram usage:        6 bytes
  3610 ;; Hardware stack levels used: 1
  3611 ;; Hardware stack levels required when called: 1
  3612 ;; This function calls:
  3613 ;;		Nothing
  3614 ;; This function is called by:
  3615 ;;		_main
  3616 ;;		_atoi
  3617 ;;		_ADC2String
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621                           	psect	text15
  3622   002636                     __ptext15:
  3623                           	callstack 0
  3624   002636                     ___wmul:
  3625                           	callstack 25
  3626   002636  5001               	movf	___wmul@multiplier^0,w,c
  3627   002638  0203               	mulwf	___wmul@multiplicand^0,c
  3628   00263A  CFF3 F005          	movff	prodl,___wmul@product
  3629   00263E  CFF4 F006          	movff	prodh,___wmul@product+1
  3630   002642  5001               	movf	___wmul@multiplier^0,w,c
  3631   002644  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3632   002646  50F3               	movf	243,w,c
  3633   002648  2606               	addwf	(___wmul@product+1)^0,f,c
  3634   00264A  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3635   00264C  0203               	mulwf	___wmul@multiplicand^0,c
  3636   00264E  50F3               	movf	243,w,c
  3637   002650  2606               	addwf	(___wmul@product+1)^0,f,c
  3638   002652  C005  F001         	movff	___wmul@product,?___wmul
  3639   002656  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3640   00265A  0012               	return		;funcret
  3641   00265C                     __end_of___wmul:
  3642                           	callstack 0
  3643                           
  3644 ;; *************** function _check_month *****************
  3645 ;; Defined at:
  3646 ;;		line 12 in file "../MonthTracker.c"
  3647 ;; Parameters:    Size  Location     Type
  3648 ;;  month           2   11[COMRAM] PTR unsigned int 
  3649 ;;		 -> main@month(2), 
  3650 ;;  month_day       2   13[COMRAM] PTR unsigned int 
  3651 ;;		 -> main@month_day(2), 
  3652 ;;  year            2   15[COMRAM] PTR unsigned short 
  3653 ;;		 -> main@year(2), 
  3654 ;; Auto vars:     Size  Location     Type
  3655 ;;  leap_year       2   19[COMRAM] int 
  3656 ;; Return value:  Size  Location     Type
  3657 ;;                  1    wreg      void 
  3658 ;; Registers used:
  3659 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3660 ;; Tracked objects:
  3661 ;;		On entry : 0/0
  3662 ;;		On exit  : 0/0
  3663 ;;		Unchanged: 0/0
  3664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3665 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3666 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3667 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3668 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3669 ;;Total ram usage:       10 bytes
  3670 ;; Hardware stack levels used: 1
  3671 ;; Hardware stack levels required when called: 2
  3672 ;; This function calls:
  3673 ;;		___lwmod
  3674 ;; This function is called by:
  3675 ;;		_main
  3676 ;; This function uses a non-reentrant model
  3677 ;;
  3678                           
  3679                           	psect	text16
  3680   0012D0                     __ptext16:
  3681                           	callstack 0
  3682   0012D0                     _check_month:
  3683                           	callstack 28
  3684   0012D0                     
  3685                           ;../MonthTracker.c: 16:         if ((*month == 1 || *month == 3 || *month == 5 || *month
      +                           == 7 || *month == 8|| *month == 10 || *month == 12) && *month_day == 32){
  3686   0012D0  C00C  FFD9         	movff	check_month@month,fsr2l
  3687   0012D4  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3688   0012D8  04DE               	decf	postinc2,w,c
  3689   0012DA  10DE               	iorwf	postinc2,w,c
  3690   0012DC  B4D8               	btfsc	status,2,c
  3691   0012DE  EF73  F009         	goto	u2111
  3692   0012E2  EF75  F009         	goto	u2110
  3693   0012E6                     u2111:
  3694   0012E6  EFC9  F009         	goto	l2438
  3695   0012EA                     u2110:
  3696   0012EA  C00C  FFD9         	movff	check_month@month,fsr2l
  3697   0012EE  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3698   0012F2  0E03               	movlw	3
  3699   0012F4  18DE               	xorwf	postinc2,w,c
  3700   0012F6  10DE               	iorwf	postinc2,w,c
  3701   0012F8  B4D8               	btfsc	status,2,c
  3702   0012FA  EF81  F009         	goto	u2121
  3703   0012FE  EF83  F009         	goto	u2120
  3704   001302                     u2121:
  3705   001302  EFC9  F009         	goto	l2438
  3706   001306                     u2120:
  3707   001306  C00C  FFD9         	movff	check_month@month,fsr2l
  3708   00130A  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3709   00130E  0E05               	movlw	5
  3710   001310  18DE               	xorwf	postinc2,w,c
  3711   001312  10DE               	iorwf	postinc2,w,c
  3712   001314  B4D8               	btfsc	status,2,c
  3713   001316  EF8F  F009         	goto	u2131
  3714   00131A  EF91  F009         	goto	u2130
  3715   00131E                     u2131:
  3716   00131E  EFC9  F009         	goto	l2438
  3717   001322                     u2130:
  3718   001322  C00C  FFD9         	movff	check_month@month,fsr2l
  3719   001326  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3720   00132A  0E07               	movlw	7
  3721   00132C  18DE               	xorwf	postinc2,w,c
  3722   00132E  10DE               	iorwf	postinc2,w,c
  3723   001330  B4D8               	btfsc	status,2,c
  3724   001332  EF9D  F009         	goto	u2141
  3725   001336  EF9F  F009         	goto	u2140
  3726   00133A                     u2141:
  3727   00133A  EFC9  F009         	goto	l2438
  3728   00133E                     u2140:
  3729   00133E  C00C  FFD9         	movff	check_month@month,fsr2l
  3730   001342  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3731   001346  0E08               	movlw	8
  3732   001348  18DE               	xorwf	postinc2,w,c
  3733   00134A  10DE               	iorwf	postinc2,w,c
  3734   00134C  B4D8               	btfsc	status,2,c
  3735   00134E  EFAB  F009         	goto	u2151
  3736   001352  EFAD  F009         	goto	u2150
  3737   001356                     u2151:
  3738   001356  EFC9  F009         	goto	l2438
  3739   00135A                     u2150:
  3740   00135A  C00C  FFD9         	movff	check_month@month,fsr2l
  3741   00135E  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3742   001362  0E0A               	movlw	10
  3743   001364  18DE               	xorwf	postinc2,w,c
  3744   001366  10DE               	iorwf	postinc2,w,c
  3745   001368  B4D8               	btfsc	status,2,c
  3746   00136A  EFB9  F009         	goto	u2161
  3747   00136E  EFBB  F009         	goto	u2160
  3748   001372                     u2161:
  3749   001372  EFC9  F009         	goto	l2438
  3750   001376                     u2160:
  3751   001376  C00C  FFD9         	movff	check_month@month,fsr2l
  3752   00137A  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3753   00137E  0E0C               	movlw	12
  3754   001380  18DE               	xorwf	postinc2,w,c
  3755   001382  10DE               	iorwf	postinc2,w,c
  3756   001384  A4D8               	btfss	status,2,c
  3757   001386  EFC7  F009         	goto	u2171
  3758   00138A  EFC9  F009         	goto	u2170
  3759   00138E                     u2171:
  3760   00138E  EF03  F00A         	goto	l2450
  3761   001392                     u2170:
  3762   001392                     l2438:
  3763   001392  C00E  FFD9         	movff	check_month@month_day,fsr2l
  3764   001396  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  3765   00139A  0E20               	movlw	32
  3766   00139C  18DE               	xorwf	postinc2,w,c
  3767   00139E  10DE               	iorwf	postinc2,w,c
  3768   0013A0  A4D8               	btfss	status,2,c
  3769   0013A2  EFD5  F009         	goto	u2181
  3770   0013A6  EFD7  F009         	goto	u2180
  3771   0013AA                     u2181:
  3772   0013AA  EF03  F00A         	goto	l2450
  3773   0013AE                     u2180:
  3774   0013AE                     
  3775                           ;../MonthTracker.c: 18:             *month_day = 1;
  3776   0013AE  C00E  FFD9         	movff	check_month@month_day,fsr2l
  3777   0013B2  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  3778   0013B6  0E01               	movlw	1
  3779   0013B8  6EDE               	movwf	postinc2,c
  3780   0013BA  0E00               	movlw	0
  3781   0013BC  6EDD               	movwf	postdec2,c
  3782   0013BE                     
  3783                           ;../MonthTracker.c: 19:             (*month)++;
  3784   0013BE  C00C  FFD9         	movff	check_month@month,fsr2l
  3785   0013C2  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3786   0013C6  2ADE               	incf	postinc2,f,c
  3787   0013C8  0E00               	movlw	0
  3788   0013CA  22DD               	addwfc	postdec2,f,c
  3789   0013CC                     
  3790                           ;../MonthTracker.c: 20:             if (*month == 13){
  3791   0013CC  C00C  FFD9         	movff	check_month@month,fsr2l
  3792   0013D0  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3793   0013D4  0E0D               	movlw	13
  3794   0013D6  18DE               	xorwf	postinc2,w,c
  3795   0013D8  10DE               	iorwf	postinc2,w,c
  3796   0013DA  A4D8               	btfss	status,2,c
  3797   0013DC  EFF2  F009         	goto	u2191
  3798   0013E0  EFF4  F009         	goto	u2190
  3799   0013E4                     u2191:
  3800   0013E4  EF03  F00A         	goto	l2450
  3801   0013E8                     u2190:
  3802   0013E8                     
  3803                           ;../MonthTracker.c: 21:                 *month = 1;
  3804   0013E8  C00C  FFD9         	movff	check_month@month,fsr2l
  3805   0013EC  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3806   0013F0  0E01               	movlw	1
  3807   0013F2  6EDE               	movwf	postinc2,c
  3808   0013F4  0E00               	movlw	0
  3809   0013F6  6EDD               	movwf	postdec2,c
  3810   0013F8                     
  3811                           ;../MonthTracker.c: 22:                 (*year)++;
  3812   0013F8  C010  FFD9         	movff	check_month@year,fsr2l
  3813   0013FC  C011  FFDA         	movff	check_month@year+1,fsr2h
  3814   001400  2ADE               	incf	postinc2,f,c
  3815   001402  0E00               	movlw	0
  3816   001404  22DD               	addwfc	postdec2,f,c
  3817   001406                     l2450:
  3818                           
  3819                           ;../MonthTracker.c: 26:         if ((*month == 4 || *month == 6 || *month == 9 || *month
      +                           == 11) && *month_day == 31){
  3820   001406  C00C  FFD9         	movff	check_month@month,fsr2l
  3821   00140A  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3822   00140E  0E04               	movlw	4
  3823   001410  18DE               	xorwf	postinc2,w,c
  3824   001412  10DE               	iorwf	postinc2,w,c
  3825   001414  B4D8               	btfsc	status,2,c
  3826   001416  EF0F  F00A         	goto	u2201
  3827   00141A  EF11  F00A         	goto	u2200
  3828   00141E                     u2201:
  3829   00141E  EF3B  F00A         	goto	l2458
  3830   001422                     u2200:
  3831   001422  C00C  FFD9         	movff	check_month@month,fsr2l
  3832   001426  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3833   00142A  0E06               	movlw	6
  3834   00142C  18DE               	xorwf	postinc2,w,c
  3835   00142E  10DE               	iorwf	postinc2,w,c
  3836   001430  B4D8               	btfsc	status,2,c
  3837   001432  EF1D  F00A         	goto	u2211
  3838   001436  EF1F  F00A         	goto	u2210
  3839   00143A                     u2211:
  3840   00143A  EF3B  F00A         	goto	l2458
  3841   00143E                     u2210:
  3842   00143E  C00C  FFD9         	movff	check_month@month,fsr2l
  3843   001442  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3844   001446  0E09               	movlw	9
  3845   001448  18DE               	xorwf	postinc2,w,c
  3846   00144A  10DE               	iorwf	postinc2,w,c
  3847   00144C  B4D8               	btfsc	status,2,c
  3848   00144E  EF2B  F00A         	goto	u2221
  3849   001452  EF2D  F00A         	goto	u2220
  3850   001456                     u2221:
  3851   001456  EF3B  F00A         	goto	l2458
  3852   00145A                     u2220:
  3853   00145A  C00C  FFD9         	movff	check_month@month,fsr2l
  3854   00145E  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3855   001462  0E0B               	movlw	11
  3856   001464  18DE               	xorwf	postinc2,w,c
  3857   001466  10DE               	iorwf	postinc2,w,c
  3858   001468  A4D8               	btfss	status,2,c
  3859   00146A  EF39  F00A         	goto	u2231
  3860   00146E  EF3B  F00A         	goto	u2230
  3861   001472                     u2231:
  3862   001472  EF58  F00A         	goto	l2464
  3863   001476                     u2230:
  3864   001476                     l2458:
  3865   001476  C00E  FFD9         	movff	check_month@month_day,fsr2l
  3866   00147A  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  3867   00147E  0E1F               	movlw	31
  3868   001480  18DE               	xorwf	postinc2,w,c
  3869   001482  10DE               	iorwf	postinc2,w,c
  3870   001484  A4D8               	btfss	status,2,c
  3871   001486  EF47  F00A         	goto	u2241
  3872   00148A  EF49  F00A         	goto	u2240
  3873   00148E                     u2241:
  3874   00148E  EF58  F00A         	goto	l2464
  3875   001492                     u2240:
  3876   001492                     
  3877                           ;../MonthTracker.c: 28:             *month_day = 1;
  3878   001492  C00E  FFD9         	movff	check_month@month_day,fsr2l
  3879   001496  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  3880   00149A  0E01               	movlw	1
  3881   00149C  6EDE               	movwf	postinc2,c
  3882   00149E  0E00               	movlw	0
  3883   0014A0  6EDD               	movwf	postdec2,c
  3884   0014A2                     
  3885                           ;../MonthTracker.c: 29:             (*month)++;
  3886   0014A2  C00C  FFD9         	movff	check_month@month,fsr2l
  3887   0014A6  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3888   0014AA  2ADE               	incf	postinc2,f,c
  3889   0014AC  0E00               	movlw	0
  3890   0014AE  22DD               	addwfc	postdec2,f,c
  3891   0014B0                     l2464:
  3892                           
  3893                           ;../MonthTracker.c: 33:         if ((*year % 4 == 0 && *year % 100 != 0) || *year % 400 
      +                          == 0) {leap_year = 1;}
  3894   0014B0  C010  FFD9         	movff	check_month@year,fsr2l
  3895   0014B4  C011  FFDA         	movff	check_month@year+1,fsr2h
  3896   0014B8  CFDE F012          	movff	postinc2,??_check_month
  3897   0014BC  CFDD F013          	movff	postdec2,??_check_month+1
  3898   0014C0  0E03               	movlw	3
  3899   0014C2  1612               	andwf	??_check_month^0,f,c
  3900   0014C4  0E00               	movlw	0
  3901   0014C6  1613               	andwf	(??_check_month+1)^0,f,c
  3902   0014C8  5012               	movf	??_check_month^0,w,c
  3903   0014CA  1013               	iorwf	(??_check_month+1)^0,w,c
  3904   0014CC  A4D8               	btfss	status,2,c
  3905   0014CE  EF6B  F00A         	goto	u2251
  3906   0014D2  EF6D  F00A         	goto	u2250
  3907   0014D6                     u2251:
  3908   0014D6  EF84  F00A         	goto	l2468
  3909   0014DA                     u2250:
  3910   0014DA  C010  FFD9         	movff	check_month@year,fsr2l
  3911   0014DE  C011  FFDA         	movff	check_month@year+1,fsr2h
  3912   0014E2  CFDE F007          	movff	postinc2,___lwmod@dividend
  3913   0014E6  CFDD F008          	movff	postdec2,___lwmod@dividend+1
  3914   0014EA  0E00               	movlw	0
  3915   0014EC  6E0A               	movwf	(___lwmod@divisor+1)^0,c
  3916   0014EE  0E64               	movlw	100
  3917   0014F0  6E09               	movwf	___lwmod@divisor^0,c
  3918   0014F2  ECB6  F011         	call	___lwmod	;wreg free
  3919   0014F6  5007               	movf	?___lwmod^0,w,c
  3920   0014F8  1008               	iorwf	(?___lwmod+1)^0,w,c
  3921   0014FA  A4D8               	btfss	status,2,c
  3922   0014FC  EF82  F00A         	goto	u2261
  3923   001500  EF84  F00A         	goto	u2260
  3924   001504                     u2261:
  3925   001504  EF9B  F00A         	goto	l2470
  3926   001508                     u2260:
  3927   001508                     l2468:
  3928   001508  C010  FFD9         	movff	check_month@year,fsr2l
  3929   00150C  C011  FFDA         	movff	check_month@year+1,fsr2h
  3930   001510  CFDE F007          	movff	postinc2,___lwmod@dividend
  3931   001514  CFDD F008          	movff	postdec2,___lwmod@dividend+1
  3932   001518  0E01               	movlw	1
  3933   00151A  6E0A               	movwf	(___lwmod@divisor+1)^0,c
  3934   00151C  0E90               	movlw	144
  3935   00151E  6E09               	movwf	___lwmod@divisor^0,c
  3936   001520  ECB6  F011         	call	___lwmod	;wreg free
  3937   001524  5007               	movf	?___lwmod^0,w,c
  3938   001526  1008               	iorwf	(?___lwmod+1)^0,w,c
  3939   001528  A4D8               	btfss	status,2,c
  3940   00152A  EF99  F00A         	goto	u2271
  3941   00152E  EF9B  F00A         	goto	u2270
  3942   001532                     u2271:
  3943   001532  EFA1  F00A         	goto	l2472
  3944   001536                     u2270:
  3945   001536                     l2470:
  3946   001536  0E00               	movlw	0
  3947   001538  6E15               	movwf	(check_month@leap_year+1)^0,c
  3948   00153A  0E01               	movlw	1
  3949   00153C  6E14               	movwf	check_month@leap_year^0,c
  3950   00153E  EFA5  F00A         	goto	l2474
  3951   001542                     l2472:
  3952   001542  0E00               	movlw	0
  3953   001544  6E15               	movwf	(check_month@leap_year+1)^0,c
  3954   001546  0E00               	movlw	0
  3955   001548  6E14               	movwf	check_month@leap_year^0,c
  3956   00154A                     l2474:
  3957                           
  3958                           ;../MonthTracker.c: 36:         if (*month == 2 && leap_year == 1){
  3959   00154A  C00C  FFD9         	movff	check_month@month,fsr2l
  3960   00154E  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3961   001552  0E02               	movlw	2
  3962   001554  18DE               	xorwf	postinc2,w,c
  3963   001556  10DE               	iorwf	postinc2,w,c
  3964   001558  A4D8               	btfss	status,2,c
  3965   00155A  EFB1  F00A         	goto	u2281
  3966   00155E  EFB3  F00A         	goto	u2280
  3967   001562                     u2281:
  3968   001562  EFDB  F00A         	goto	l2484
  3969   001566                     u2280:
  3970   001566  0414               	decf	check_month@leap_year^0,w,c
  3971   001568  1015               	iorwf	(check_month@leap_year+1)^0,w,c
  3972   00156A  A4D8               	btfss	status,2,c
  3973   00156C  EFBA  F00A         	goto	u2291
  3974   001570  EFBC  F00A         	goto	u2290
  3975   001574                     u2291:
  3976   001574  EFDB  F00A         	goto	l2484
  3977   001578                     u2290:
  3978   001578                     
  3979                           ;../MonthTracker.c: 38:             if (*month_day == 30){
  3980   001578  C00E  FFD9         	movff	check_month@month_day,fsr2l
  3981   00157C  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  3982   001580  0E1E               	movlw	30
  3983   001582  18DE               	xorwf	postinc2,w,c
  3984   001584  10DE               	iorwf	postinc2,w,c
  3985   001586  A4D8               	btfss	status,2,c
  3986   001588  EFC8  F00A         	goto	u2301
  3987   00158C  EFCA  F00A         	goto	u2300
  3988   001590                     u2301:
  3989   001590  EF02  F00B         	goto	l255
  3990   001594                     u2300:
  3991   001594                     l2480:
  3992                           
  3993                           ;../MonthTracker.c: 39:                 *month_day = 1;
  3994   001594  C00E  FFD9         	movff	check_month@month_day,fsr2l
  3995   001598  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  3996   00159C  0E01               	movlw	1
  3997   00159E  6EDE               	movwf	postinc2,c
  3998   0015A0  0E00               	movlw	0
  3999   0015A2  6EDD               	movwf	postdec2,c
  4000   0015A4                     
  4001                           ;../MonthTracker.c: 40:                 (*month)++;
  4002   0015A4  C00C  FFD9         	movff	check_month@month,fsr2l
  4003   0015A8  C00D  FFDA         	movff	check_month@month+1,fsr2h
  4004   0015AC  2ADE               	incf	postinc2,f,c
  4005   0015AE  0E00               	movlw	0
  4006   0015B0  22DD               	addwfc	postdec2,f,c
  4007   0015B2  EF02  F00B         	goto	l255
  4008   0015B6                     l2484:
  4009   0015B6  C00C  FFD9         	movff	check_month@month,fsr2l
  4010   0015BA  C00D  FFDA         	movff	check_month@month+1,fsr2h
  4011   0015BE  0E02               	movlw	2
  4012   0015C0  18DE               	xorwf	postinc2,w,c
  4013   0015C2  10DE               	iorwf	postinc2,w,c
  4014   0015C4  A4D8               	btfss	status,2,c
  4015   0015C6  EFE7  F00A         	goto	u2311
  4016   0015CA  EFE9  F00A         	goto	u2310
  4017   0015CE                     u2311:
  4018   0015CE  EF02  F00B         	goto	l255
  4019   0015D2                     u2310:
  4020   0015D2  5014               	movf	check_month@leap_year^0,w,c
  4021   0015D4  1015               	iorwf	(check_month@leap_year+1)^0,w,c
  4022   0015D6  A4D8               	btfss	status,2,c
  4023   0015D8  EFF0  F00A         	goto	u2321
  4024   0015DC  EFF2  F00A         	goto	u2320
  4025   0015E0                     u2321:
  4026   0015E0  EF02  F00B         	goto	l255
  4027   0015E4                     u2320:
  4028   0015E4                     
  4029                           ;../MonthTracker.c: 44:             if (*month_day == 29){
  4030   0015E4  C00E  FFD9         	movff	check_month@month_day,fsr2l
  4031   0015E8  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  4032   0015EC  0E1D               	movlw	29
  4033   0015EE  18DE               	xorwf	postinc2,w,c
  4034   0015F0  10DE               	iorwf	postinc2,w,c
  4035   0015F2  A4D8               	btfss	status,2,c
  4036   0015F4  EFFE  F00A         	goto	u2331
  4037   0015F8  EF00  F00B         	goto	u2330
  4038   0015FC                     u2331:
  4039   0015FC  EF02  F00B         	goto	l255
  4040   001600                     u2330:
  4041   001600  EFCA  F00A         	goto	l2480
  4042   001604                     l255:
  4043   001604  0012               	return		;funcret
  4044   001606                     __end_of_check_month:
  4045                           	callstack 0
  4046                           
  4047 ;; *************** function ___lwmod *****************
  4048 ;; Defined at:
  4049 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwmod.c"
  4050 ;; Parameters:    Size  Location     Type
  4051 ;;  dividend        2    6[COMRAM] unsigned int 
  4052 ;;  divisor         2    8[COMRAM] unsigned int 
  4053 ;; Auto vars:     Size  Location     Type
  4054 ;;  counter         1   10[COMRAM] unsigned char 
  4055 ;; Return value:  Size  Location     Type
  4056 ;;                  2    6[COMRAM] unsigned int 
  4057 ;; Registers used:
  4058 ;;		wreg, status,2, status,0
  4059 ;; Tracked objects:
  4060 ;;		On entry : 0/0
  4061 ;;		On exit  : 0/0
  4062 ;;		Unchanged: 0/0
  4063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4064 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4065 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4067 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4068 ;;Total ram usage:        5 bytes
  4069 ;; Hardware stack levels used: 1
  4070 ;; Hardware stack levels required when called: 1
  4071 ;; This function calls:
  4072 ;;		Nothing
  4073 ;; This function is called by:
  4074 ;;		_main
  4075 ;;		_check_month
  4076 ;; This function uses a non-reentrant model
  4077 ;;
  4078                           
  4079                           	psect	text17
  4080   00236C                     __ptext17:
  4081                           	callstack 0
  4082   00236C                     ___lwmod:
  4083                           	callstack 28
  4084   00236C  5009               	movf	___lwmod@divisor^0,w,c
  4085   00236E  100A               	iorwf	(___lwmod@divisor+1)^0,w,c
  4086   002370  B4D8               	btfsc	status,2,c
  4087   002372  EFBD  F011         	goto	u1951
  4088   002376  EFBF  F011         	goto	u1950
  4089   00237A                     u1951:
  4090   00237A  EFE3  F011         	goto	l820
  4091   00237E                     u1950:
  4092   00237E  0E01               	movlw	1
  4093   002380  6E0B               	movwf	___lwmod@counter^0,c
  4094   002382  EFC7  F011         	goto	l2298
  4095   002386                     l2296:
  4096   002386  90D8               	bcf	status,0,c
  4097   002388  3609               	rlcf	___lwmod@divisor^0,f,c
  4098   00238A  360A               	rlcf	(___lwmod@divisor+1)^0,f,c
  4099   00238C  2A0B               	incf	___lwmod@counter^0,f,c
  4100   00238E                     l2298:
  4101   00238E  AE0A               	btfss	(___lwmod@divisor+1)^0,7,c
  4102   002390  EFCC  F011         	goto	u1961
  4103   002394  EFCE  F011         	goto	u1960
  4104   002398                     u1961:
  4105   002398  EFC3  F011         	goto	l2296
  4106   00239C                     u1960:
  4107   00239C                     l2300:
  4108   00239C  5009               	movf	___lwmod@divisor^0,w,c
  4109   00239E  5C07               	subwf	___lwmod@dividend^0,w,c
  4110   0023A0  500A               	movf	(___lwmod@divisor+1)^0,w,c
  4111   0023A2  5808               	subwfb	(___lwmod@dividend+1)^0,w,c
  4112   0023A4  A0D8               	btfss	status,0,c
  4113   0023A6  EFD7  F011         	goto	u1971
  4114   0023AA  EFD9  F011         	goto	u1970
  4115   0023AE                     u1971:
  4116   0023AE  EFDD  F011         	goto	l2304
  4117   0023B2                     u1970:
  4118   0023B2  5009               	movf	___lwmod@divisor^0,w,c
  4119   0023B4  5E07               	subwf	___lwmod@dividend^0,f,c
  4120   0023B6  500A               	movf	(___lwmod@divisor+1)^0,w,c
  4121   0023B8  5A08               	subwfb	(___lwmod@dividend+1)^0,f,c
  4122   0023BA                     l2304:
  4123   0023BA  90D8               	bcf	status,0,c
  4124   0023BC  320A               	rrcf	(___lwmod@divisor+1)^0,f,c
  4125   0023BE  3209               	rrcf	___lwmod@divisor^0,f,c
  4126   0023C0  2E0B               	decfsz	___lwmod@counter^0,f,c
  4127   0023C2  EFCE  F011         	goto	l2300
  4128   0023C6                     l820:
  4129   0023C6  C007  F007         	movff	___lwmod@dividend,?___lwmod
  4130   0023CA  C008  F008         	movff	___lwmod@dividend+1,?___lwmod+1
  4131   0023CE  0012               	return		;funcret
  4132   0023D0                     __end_of___lwmod:
  4133                           	callstack 0
  4134                           
  4135 ;; *************** function ___lwdiv *****************
  4136 ;; Defined at:
  4137 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  4138 ;; Parameters:    Size  Location     Type
  4139 ;;  dividend        2    6[COMRAM] unsigned int 
  4140 ;;  divisor         2    8[COMRAM] unsigned int 
  4141 ;; Auto vars:     Size  Location     Type
  4142 ;;  quotient        2   10[COMRAM] unsigned int 
  4143 ;;  counter         1   12[COMRAM] unsigned char 
  4144 ;; Return value:  Size  Location     Type
  4145 ;;                  2    6[COMRAM] unsigned int 
  4146 ;; Registers used:
  4147 ;;		wreg, status,2, status,0
  4148 ;; Tracked objects:
  4149 ;;		On entry : 0/0
  4150 ;;		On exit  : 0/0
  4151 ;;		Unchanged: 0/0
  4152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4153 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4154 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4156 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4157 ;;Total ram usage:        7 bytes
  4158 ;; Hardware stack levels used: 1
  4159 ;; Hardware stack levels required when called: 1
  4160 ;; This function calls:
  4161 ;;		Nothing
  4162 ;; This function is called by:
  4163 ;;		_main
  4164 ;;		_LEDarray_disp_dec
  4165 ;;		_LEDarray_disp_PPM
  4166 ;;		_ADC2String
  4167 ;; This function uses a non-reentrant model
  4168 ;;
  4169                           
  4170                           	psect	text18
  4171   002290                     __ptext18:
  4172                           	callstack 0
  4173   002290                     ___lwdiv:
  4174                           	callstack 29
  4175   002290  0E00               	movlw	0
  4176   002292  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  4177   002294  0E00               	movlw	0
  4178   002296  6E0B               	movwf	___lwdiv@quotient^0,c
  4179   002298  5009               	movf	___lwdiv@divisor^0,w,c
  4180   00229A  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4181   00229C  B4D8               	btfsc	status,2,c
  4182   00229E  EF53  F011         	goto	u2341
  4183   0022A2  EF55  F011         	goto	u2340
  4184   0022A6                     u2341:
  4185   0022A6  EF7D  F011         	goto	l810
  4186   0022AA                     u2340:
  4187   0022AA  0E01               	movlw	1
  4188   0022AC  6E0D               	movwf	___lwdiv@counter^0,c
  4189   0022AE  EF5D  F011         	goto	l2506
  4190   0022B2                     l2504:
  4191   0022B2  90D8               	bcf	status,0,c
  4192   0022B4  3609               	rlcf	___lwdiv@divisor^0,f,c
  4193   0022B6  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4194   0022B8  2A0D               	incf	___lwdiv@counter^0,f,c
  4195   0022BA                     l2506:
  4196   0022BA  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  4197   0022BC  EF62  F011         	goto	u2351
  4198   0022C0  EF64  F011         	goto	u2350
  4199   0022C4                     u2351:
  4200   0022C4  EF59  F011         	goto	l2504
  4201   0022C8                     u2350:
  4202   0022C8                     l2508:
  4203   0022C8  90D8               	bcf	status,0,c
  4204   0022CA  360B               	rlcf	___lwdiv@quotient^0,f,c
  4205   0022CC  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4206   0022CE  5009               	movf	___lwdiv@divisor^0,w,c
  4207   0022D0  5C07               	subwf	___lwdiv@dividend^0,w,c
  4208   0022D2  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  4209   0022D4  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4210   0022D6  A0D8               	btfss	status,0,c
  4211   0022D8  EF70  F011         	goto	u2361
  4212   0022DC  EF72  F011         	goto	u2360
  4213   0022E0                     u2361:
  4214   0022E0  EF77  F011         	goto	l2516
  4215   0022E4                     u2360:
  4216   0022E4  5009               	movf	___lwdiv@divisor^0,w,c
  4217   0022E6  5E07               	subwf	___lwdiv@dividend^0,f,c
  4218   0022E8  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  4219   0022EA  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4220   0022EC  800B               	bsf	___lwdiv@quotient^0,0,c
  4221   0022EE                     l2516:
  4222   0022EE  90D8               	bcf	status,0,c
  4223   0022F0  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4224   0022F2  3209               	rrcf	___lwdiv@divisor^0,f,c
  4225   0022F4  2E0D               	decfsz	___lwdiv@counter^0,f,c
  4226   0022F6  EF64  F011         	goto	l2508
  4227   0022FA                     l810:
  4228   0022FA  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  4229   0022FE  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4230   002302  0012               	return		;funcret
  4231   002304                     __end_of___lwdiv:
  4232                           	callstack 0
  4233                           
  4234 ;; *************** function _Timer0_init *****************
  4235 ;; Defined at:
  4236 ;;		line 7 in file "../timers.c"
  4237 ;; Parameters:    Size  Location     Type
  4238 ;;		None
  4239 ;; Auto vars:     Size  Location     Type
  4240 ;;		None
  4241 ;; Return value:  Size  Location     Type
  4242 ;;                  1    wreg      void 
  4243 ;; Registers used:
  4244 ;;		wreg, status,2
  4245 ;; Tracked objects:
  4246 ;;		On entry : 0/0
  4247 ;;		On exit  : 0/0
  4248 ;;		Unchanged: 0/0
  4249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4254 ;;Total ram usage:        0 bytes
  4255 ;; Hardware stack levels used: 1
  4256 ;; Hardware stack levels required when called: 1
  4257 ;; This function calls:
  4258 ;;		Nothing
  4259 ;; This function is called by:
  4260 ;;		_main
  4261 ;; This function uses a non-reentrant model
  4262 ;;
  4263                           
  4264                           	psect	text19
  4265   0026A4                     __ptext19:
  4266                           	callstack 0
  4267   0026A4                     _Timer0_init:
  4268                           	callstack 29
  4269   0026A4                     
  4270                           ;../timers.c: 9:     T0CON1bits.T0CS=0b010;
  4271   0026A4  50D6               	movf	214,w,c	;volatile
  4272   0026A6  0B1F               	andlw	-225
  4273   0026A8  0940               	iorlw	64
  4274   0026AA  6ED6               	movwf	214,c	;volatile
  4275   0026AC                     
  4276                           ;../timers.c: 10:     T0CON1bits.T0ASYNC=1;
  4277   0026AC  88D6               	bsf	214,4,c	;volatile
  4278                           
  4279                           ;../timers.c: 11:     T0CON1bits.T0CKPS=0b0010;
  4280   0026AE  50D6               	movf	214,w,c	;volatile
  4281   0026B0  0BF0               	andlw	-16
  4282   0026B2  0902               	iorlw	2
  4283   0026B4  6ED6               	movwf	214,c	;volatile
  4284   0026B6                     
  4285                           ;../timers.c: 12:     T0CON0bits.T016BIT=1;
  4286   0026B6  88D5               	bsf	213,4,c	;volatile
  4287                           
  4288                           ;../timers.c: 15:     TMR0H=0b00001011;
  4289   0026B8  0E0B               	movlw	11
  4290   0026BA  6ED4               	movwf	212,c	;volatile
  4291                           
  4292                           ;../timers.c: 16:     TMR0L=0b00001011;
  4293   0026BC  0E0B               	movlw	11
  4294   0026BE  6ED3               	movwf	211,c	;volatile
  4295   0026C0                     
  4296                           ;../timers.c: 17:     T0CON0bits.T0EN=1;
  4297   0026C0  8ED5               	bsf	213,7,c	;volatile
  4298   0026C2  0012               	return		;funcret
  4299   0026C4                     __end_of_Timer0_init:
  4300                           	callstack 0
  4301                           
  4302 ;; *************** function _Light_init *****************
  4303 ;; Defined at:
  4304 ;;		line 8 in file "../comparator.c"
  4305 ;; Parameters:    Size  Location     Type
  4306 ;;		None
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;		None
  4309 ;; Return value:  Size  Location     Type
  4310 ;;                  1    wreg      void 
  4311 ;; Registers used:
  4312 ;;		None
  4313 ;; Tracked objects:
  4314 ;;		On entry : 0/0
  4315 ;;		On exit  : 0/0
  4316 ;;		Unchanged: 0/0
  4317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4322 ;;Total ram usage:        0 bytes
  4323 ;; Hardware stack levels used: 1
  4324 ;; Hardware stack levels required when called: 1
  4325 ;; This function calls:
  4326 ;;		Nothing
  4327 ;; This function is called by:
  4328 ;;		_main
  4329 ;; This function uses a non-reentrant model
  4330 ;;
  4331                           
  4332                           	psect	text20
  4333   00270A                     __ptext20:
  4334                           	callstack 0
  4335   00270A                     _Light_init:
  4336                           	callstack 29
  4337   00270A                     
  4338                           ;../comparator.c: 10:    LATHbits.LATH3=1;
  4339   00270A  8680               	bsf	128,3,c	;volatile
  4340                           
  4341                           ;../comparator.c: 11:    TRISHbits.TRISH3=0;
  4342   00270C  9688               	bcf	136,3,c	;volatile
  4343   00270E  0012               	return		;funcret
  4344   002710                     __end_of_Light_init:
  4345                           	callstack 0
  4346                           
  4347 ;; *************** function _LEDarray_init *****************
  4348 ;; Defined at:
  4349 ;;		line 8 in file "../LEDarray.c"
  4350 ;; Parameters:    Size  Location     Type
  4351 ;;		None
  4352 ;; Auto vars:     Size  Location     Type
  4353 ;;		None
  4354 ;; Return value:  Size  Location     Type
  4355 ;;                  1    wreg      void 
  4356 ;; Registers used:
  4357 ;;		None
  4358 ;; Tracked objects:
  4359 ;;		On entry : 0/0
  4360 ;;		On exit  : 0/0
  4361 ;;		Unchanged: 0/0
  4362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4367 ;;Total ram usage:        0 bytes
  4368 ;; Hardware stack levels used: 1
  4369 ;; Hardware stack levels required when called: 1
  4370 ;; This function calls:
  4371 ;;		Nothing
  4372 ;; This function is called by:
  4373 ;;		_main
  4374 ;; This function uses a non-reentrant model
  4375 ;;
  4376                           
  4377                           	psect	text21
  4378   002682                     __ptext21:
  4379                           	callstack 0
  4380   002682                     _LEDarray_init:
  4381                           	callstack 29
  4382   002682                     
  4383                           ;../LEDarray.c: 9:     TRISGbits.TRISG0 = 0;
  4384   002682  9087               	bcf	135,0,c	;volatile
  4385                           
  4386                           ;../LEDarray.c: 10:     TRISGbits.TRISG1 = 0;
  4387   002684  9287               	bcf	135,1,c	;volatile
  4388                           
  4389                           ;../LEDarray.c: 11:     TRISAbits.TRISA2 = 0;
  4390   002686  9481               	bcf	129,2,c	;volatile
  4391                           
  4392                           ;../LEDarray.c: 12:     TRISFbits.TRISF6 = 0;
  4393   002688  9C86               	bcf	134,6,c	;volatile
  4394                           
  4395                           ;../LEDarray.c: 13:     TRISAbits.TRISA4 = 0;
  4396   00268A  9881               	bcf	129,4,c	;volatile
  4397                           
  4398                           ;../LEDarray.c: 14:     TRISAbits.TRISA5 = 0;
  4399   00268C  9A81               	bcf	129,5,c	;volatile
  4400                           
  4401                           ;../LEDarray.c: 15:     TRISFbits.TRISF0 = 0;
  4402   00268E  9086               	bcf	134,0,c	;volatile
  4403                           
  4404                           ;../LEDarray.c: 16:     TRISBbits.TRISB0 = 0;
  4405   002690  9082               	bcf	130,0,c	;volatile
  4406                           
  4407                           ;../LEDarray.c: 18:     LATGbits.LATG0 = 0;
  4408   002692  907F               	bcf	127,0,c	;volatile
  4409                           
  4410                           ;../LEDarray.c: 19:     LATGbits.LATG1 = 0;
  4411   002694  927F               	bcf	127,1,c	;volatile
  4412                           
  4413                           ;../LEDarray.c: 20:     LATAbits.LATA2 = 0;
  4414   002696  9479               	bcf	121,2,c	;volatile
  4415                           
  4416                           ;../LEDarray.c: 21:     LATFbits.LATF6 = 0;
  4417   002698  9C7E               	bcf	126,6,c	;volatile
  4418                           
  4419                           ;../LEDarray.c: 22:     LATAbits.LATA4 = 0;
  4420   00269A  9879               	bcf	121,4,c	;volatile
  4421                           
  4422                           ;../LEDarray.c: 23:     LATAbits.LATA5 = 0;
  4423   00269C  9A79               	bcf	121,5,c	;volatile
  4424                           
  4425                           ;../LEDarray.c: 24:     LATFbits.LATF0 = 0;
  4426   00269E  907E               	bcf	126,0,c	;volatile
  4427                           
  4428                           ;../LEDarray.c: 25:     LATBbits.LATB0 = 0;
  4429   0026A0  907A               	bcf	122,0,c	;volatile
  4430   0026A2  0012               	return		;funcret
  4431   0026A4                     __end_of_LEDarray_init:
  4432                           	callstack 0
  4433                           
  4434 ;; *************** function _LEDarray_disp_bin *****************
  4435 ;; Defined at:
  4436 ;;		line 37 in file "../LEDarray.c"
  4437 ;; Parameters:    Size  Location     Type
  4438 ;;  number          2    0[COMRAM] unsigned int 
  4439 ;; Auto vars:     Size  Location     Type
  4440 ;;		None
  4441 ;; Return value:  Size  Location     Type
  4442 ;;                  1    wreg      void 
  4443 ;; Registers used:
  4444 ;;		None
  4445 ;; Tracked objects:
  4446 ;;		On entry : 0/0
  4447 ;;		On exit  : 0/0
  4448 ;;		Unchanged: 0/0
  4449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4450 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4453 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4454 ;;Total ram usage:        2 bytes
  4455 ;; Hardware stack levels used: 1
  4456 ;; Hardware stack levels required when called: 1
  4457 ;; This function calls:
  4458 ;;		Nothing
  4459 ;; This function is called by:
  4460 ;;		_main
  4461 ;;		_LEDarray_disp_dec
  4462 ;;		_LEDarray_disp_PPM
  4463 ;; This function uses a non-reentrant model
  4464 ;;
  4465                           
  4466                           	psect	text22
  4467   002088                     __ptext22:
  4468                           	callstack 0
  4469   002088                     _LEDarray_disp_bin:
  4470                           	callstack 29
  4471   002088                     
  4472                           ;../LEDarray.c: 38:     if (number & 0b000000001) {LATGbits.LATG0=1;} else {LATGbits.LAT
      +                          G0=0;}
  4473   002088  A001               	btfss	LEDarray_disp_bin@number^0,0,c
  4474   00208A  EF49  F010         	goto	u1991
  4475   00208E  EF4B  F010         	goto	u1990
  4476   002092                     u1991:
  4477   002092  EF4E  F010         	goto	l48
  4478   002096                     u1990:
  4479   002096  807F               	bsf	127,0,c	;volatile
  4480   002098  EF4F  F010         	goto	l49
  4481   00209C                     l48:
  4482   00209C  907F               	bcf	127,0,c	;volatile
  4483   00209E                     l49:
  4484                           
  4485                           ;../LEDarray.c: 39:     if (number & 0b000000010) {LATGbits.LATG1=1;} else {LATGbits.LAT
      +                          G1=0;}
  4486   00209E  A201               	btfss	LEDarray_disp_bin@number^0,1,c
  4487   0020A0  EF54  F010         	goto	u2001
  4488   0020A4  EF56  F010         	goto	u2000
  4489   0020A8                     u2001:
  4490   0020A8  EF59  F010         	goto	l50
  4491   0020AC                     u2000:
  4492   0020AC  827F               	bsf	127,1,c	;volatile
  4493   0020AE  EF5A  F010         	goto	l51
  4494   0020B2                     l50:
  4495   0020B2  927F               	bcf	127,1,c	;volatile
  4496   0020B4                     l51:
  4497                           
  4498                           ;../LEDarray.c: 40:     if (number & 0b000000100) {LATAbits.LATA2=1;} else {LATAbits.LAT
      +                          A2=0;}
  4499   0020B4  A401               	btfss	LEDarray_disp_bin@number^0,2,c
  4500   0020B6  EF5F  F010         	goto	u2011
  4501   0020BA  EF61  F010         	goto	u2010
  4502   0020BE                     u2011:
  4503   0020BE  EF64  F010         	goto	l52
  4504   0020C2                     u2010:
  4505   0020C2  8479               	bsf	121,2,c	;volatile
  4506   0020C4  EF65  F010         	goto	l53
  4507   0020C8                     l52:
  4508   0020C8  9479               	bcf	121,2,c	;volatile
  4509   0020CA                     l53:
  4510                           
  4511                           ;../LEDarray.c: 41:     if (number & 0b000001000) {LATFbits.LATF6=1;} else {LATFbits.LAT
      +                          F6=0;}
  4512   0020CA  A601               	btfss	LEDarray_disp_bin@number^0,3,c
  4513   0020CC  EF6A  F010         	goto	u2021
  4514   0020D0  EF6C  F010         	goto	u2020
  4515   0020D4                     u2021:
  4516   0020D4  EF6F  F010         	goto	l54
  4517   0020D8                     u2020:
  4518   0020D8  8C7E               	bsf	126,6,c	;volatile
  4519   0020DA  EF70  F010         	goto	l55
  4520   0020DE                     l54:
  4521   0020DE  9C7E               	bcf	126,6,c	;volatile
  4522   0020E0                     l55:
  4523                           
  4524                           ;../LEDarray.c: 42:     if (number & 0b000010000) {LATAbits.LATA4=1;} else {LATAbits.LAT
      +                          A4=0;}
  4525   0020E0  A801               	btfss	LEDarray_disp_bin@number^0,4,c
  4526   0020E2  EF75  F010         	goto	u2031
  4527   0020E6  EF77  F010         	goto	u2030
  4528   0020EA                     u2031:
  4529   0020EA  EF7A  F010         	goto	l56
  4530   0020EE                     u2030:
  4531   0020EE  8879               	bsf	121,4,c	;volatile
  4532   0020F0  EF7B  F010         	goto	l57
  4533   0020F4                     l56:
  4534   0020F4  9879               	bcf	121,4,c	;volatile
  4535   0020F6                     l57:
  4536                           
  4537                           ;../LEDarray.c: 43:     if (number & 0b000100000) {LATAbits.LATA5=1;} else {LATAbits.LAT
      +                          A5=0;}
  4538   0020F6  AA01               	btfss	LEDarray_disp_bin@number^0,5,c
  4539   0020F8  EF80  F010         	goto	u2041
  4540   0020FC  EF82  F010         	goto	u2040
  4541   002100                     u2041:
  4542   002100  EF85  F010         	goto	l58
  4543   002104                     u2040:
  4544   002104  8A79               	bsf	121,5,c	;volatile
  4545   002106  EF86  F010         	goto	l59
  4546   00210A                     l58:
  4547   00210A  9A79               	bcf	121,5,c	;volatile
  4548   00210C                     l59:
  4549                           
  4550                           ;../LEDarray.c: 44:     if (number & 0b001000000) {LATFbits.LATF0=1;} else {LATFbits.LAT
      +                          F0=0;}
  4551   00210C  AC01               	btfss	LEDarray_disp_bin@number^0,6,c
  4552   00210E  EF8B  F010         	goto	u2051
  4553   002112  EF8D  F010         	goto	u2050
  4554   002116                     u2051:
  4555   002116  EF90  F010         	goto	l60
  4556   00211A                     u2050:
  4557   00211A  807E               	bsf	126,0,c	;volatile
  4558   00211C  EF91  F010         	goto	l61
  4559   002120                     l60:
  4560   002120  907E               	bcf	126,0,c	;volatile
  4561   002122                     l61:
  4562                           
  4563                           ;../LEDarray.c: 45:     if (number & 0b010000000) {LATBbits.LATB0=1;} else {LATBbits.LAT
      +                          B0=0;}
  4564   002122  AE01               	btfss	LEDarray_disp_bin@number^0,7,c
  4565   002124  EF96  F010         	goto	u2061
  4566   002128  EF98  F010         	goto	u2060
  4567   00212C                     u2061:
  4568   00212C  EF9B  F010         	goto	l62
  4569   002130                     u2060:
  4570   002130  807A               	bsf	122,0,c	;volatile
  4571   002132  EF9C  F010         	goto	l63
  4572   002136                     l62:
  4573   002136  907A               	bcf	122,0,c	;volatile
  4574   002138                     l63:
  4575                           
  4576                           ;../LEDarray.c: 46:     if (number & 0b100000000) {LATBbits.LATB1=1;} else {LATBbits.LAT
      +                          B1=0;}
  4577   002138  A002               	btfss	(LEDarray_disp_bin@number+1)^0,0,c
  4578   00213A  EFA1  F010         	goto	u2071
  4579   00213E  EFA3  F010         	goto	u2070
  4580   002142                     u2071:
  4581   002142  EFA6  F010         	goto	l64
  4582   002146                     u2070:
  4583   002146  827A               	bsf	122,1,c	;volatile
  4584   002148  EFA7  F010         	goto	l66
  4585   00214C                     l64:
  4586   00214C  927A               	bcf	122,1,c	;volatile
  4587   00214E                     l66:
  4588   00214E  0012               	return		;funcret
  4589   002150                     __end_of_LEDarray_disp_bin:
  4590                           	callstack 0
  4591                           
  4592 ;; *************** function _LCD_setline *****************
  4593 ;; Defined at:
  4594 ;;		line 96 in file "../LCD.c"
  4595 ;; Parameters:    Size  Location     Type
  4596 ;;  line            1    wreg     unsigned char 
  4597 ;; Auto vars:     Size  Location     Type
  4598 ;;  line            1    3[COMRAM] unsigned char 
  4599 ;; Return value:  Size  Location     Type
  4600 ;;                  1    wreg      void 
  4601 ;; Registers used:
  4602 ;;		wreg, status,2, status,0, cstack
  4603 ;; Tracked objects:
  4604 ;;		On entry : 0/0
  4605 ;;		On exit  : 0/0
  4606 ;;		Unchanged: 0/0
  4607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4609 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4611 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4612 ;;Total ram usage:        1 bytes
  4613 ;; Hardware stack levels used: 1
  4614 ;; Hardware stack levels required when called: 4
  4615 ;; This function calls:
  4616 ;;		_LCD_sendbyte
  4617 ;; This function is called by:
  4618 ;;		_main
  4619 ;; This function uses a non-reentrant model
  4620 ;;
  4621                           
  4622                           	psect	text23
  4623   00253E                     __ptext23:
  4624                           	callstack 0
  4625   00253E                     _LCD_setline:
  4626                           	callstack 26
  4627                           
  4628                           ;incstack = 0
  4629                           ;LCD_setline@line stored from wreg
  4630   00253E  6E04               	movwf	LCD_setline@line^0,c
  4631   002540                     
  4632                           ;../LCD.c: 96: void LCD_setline (char line);../LCD.c: 97: {;../LCD.c: 98:     if (line =
      +                          = 1) {LCD_sendbyte(0x80,0);};
  4633   002540  0404               	decf	LCD_setline@line^0,w,c
  4634   002542  A4D8               	btfss	status,2,c
  4635   002544  EFA6  F012         	goto	u2081
  4636   002548  EFA8  F012         	goto	u2080
  4637   00254C                     u2081:
  4638   00254C  EFAD  F012         	goto	l2398
  4639   002550                     u2080:
  4640   002550  0E00               	movlw	0
  4641   002552  6E02               	movwf	LCD_sendbyte@type^0,c
  4642   002554  0E80               	movlw	128
  4643   002556  ECBC  F012         	call	_LCD_sendbyte
  4644   00255A                     l2398:
  4645                           
  4646                           ;../LCD.c: 99:     if (line == 2) {LCD_sendbyte(0xC0,0);}
  4647   00255A  0E02               	movlw	2
  4648   00255C  1804               	xorwf	LCD_setline@line^0,w,c
  4649   00255E  A4D8               	btfss	status,2,c
  4650   002560  EFB4  F012         	goto	u2091
  4651   002564  EFB6  F012         	goto	u2090
  4652   002568                     u2091:
  4653   002568  EFBB  F012         	goto	l301
  4654   00256C                     u2090:
  4655   00256C  0E00               	movlw	0
  4656   00256E  6E02               	movwf	LCD_sendbyte@type^0,c
  4657   002570  0EC0               	movlw	192
  4658   002572  ECBC  F012         	call	_LCD_sendbyte
  4659   002576                     l301:
  4660   002576  0012               	return		;funcret
  4661   002578                     __end_of_LCD_setline:
  4662                           	callstack 0
  4663                           
  4664 ;; *************** function _LCD_sendstring *****************
  4665 ;; Defined at:
  4666 ;;		line 105 in file "../LCD.c"
  4667 ;; Parameters:    Size  Location     Type
  4668 ;;  string          2    3[COMRAM] PTR unsigned char 
  4669 ;;		 -> main@yearstr(20), main@datestr(50), 
  4670 ;; Auto vars:     Size  Location     Type
  4671 ;;		None
  4672 ;; Return value:  Size  Location     Type
  4673 ;;                  1    wreg      void 
  4674 ;; Registers used:
  4675 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4676 ;; Tracked objects:
  4677 ;;		On entry : 0/0
  4678 ;;		On exit  : 0/0
  4679 ;;		Unchanged: 0/0
  4680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4681 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4684 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4685 ;;Total ram usage:        2 bytes
  4686 ;; Hardware stack levels used: 1
  4687 ;; Hardware stack levels required when called: 4
  4688 ;; This function calls:
  4689 ;;		_LCD_sendbyte
  4690 ;; This function is called by:
  4691 ;;		_main
  4692 ;; This function uses a non-reentrant model
  4693 ;;
  4694                           
  4695                           	psect	text24
  4696   0025AE                     __ptext24:
  4697                           	callstack 0
  4698   0025AE                     _LCD_sendstring:
  4699                           	callstack 26
  4700   0025AE                     
  4701                           ;../LCD.c: 105: void LCD_sendstring(char *string);../LCD.c: 106: {;../LCD.c: 107:  while
      +                          (*string != 0) {
  4702   0025AE  EFE4  F012         	goto	l2420
  4703   0025B2                     l2416:
  4704                           
  4705                           ;../LCD.c: 108:         LCD_sendbyte(*string++,1);
  4706   0025B2  0E01               	movlw	1
  4707   0025B4  6E02               	movwf	LCD_sendbyte@type^0,c
  4708   0025B6  C004  FFD9         	movff	LCD_sendstring@string,fsr2l
  4709   0025BA  C005  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  4710   0025BE  50DF               	movf	indf2,w,c
  4711   0025C0  ECBC  F012         	call	_LCD_sendbyte
  4712   0025C4  4A04               	infsnz	LCD_sendstring@string^0,f,c
  4713   0025C6  2A05               	incf	(LCD_sendstring@string+1)^0,f,c
  4714   0025C8                     l2420:
  4715                           
  4716                           ;../LCD.c: 107:  while(*string != 0) {
  4717   0025C8  C004  FFD9         	movff	LCD_sendstring@string,fsr2l
  4718   0025CC  C005  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  4719   0025D0  50DF               	movf	indf2,w,c
  4720   0025D2  A4D8               	btfss	status,2,c
  4721   0025D4  EFEE  F012         	goto	u2101
  4722   0025D8  EFF0  F012         	goto	u2100
  4723   0025DC                     u2101:
  4724   0025DC  EFD9  F012         	goto	l2416
  4725   0025E0                     u2100:
  4726   0025E0  0012               	return		;funcret
  4727   0025E2                     __end_of_LCD_sendstring:
  4728                           	callstack 0
  4729                           
  4730 ;; *************** function _LCD_clear *****************
  4731 ;; Defined at:
  4732 ;;		line 87 in file "../LCD.c"
  4733 ;; Parameters:    Size  Location     Type
  4734 ;;		None
  4735 ;; Auto vars:     Size  Location     Type
  4736 ;;		None
  4737 ;; Return value:  Size  Location     Type
  4738 ;;                  1    wreg      void 
  4739 ;; Registers used:
  4740 ;;		wreg, status,2, status,0, cstack
  4741 ;; Tracked objects:
  4742 ;;		On entry : 0/0
  4743 ;;		On exit  : 0/0
  4744 ;;		Unchanged: 0/0
  4745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4748 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4749 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4750 ;;Total ram usage:        1 bytes
  4751 ;; Hardware stack levels used: 1
  4752 ;; Hardware stack levels required when called: 4
  4753 ;; This function calls:
  4754 ;;		_LCD_sendbyte
  4755 ;; This function is called by:
  4756 ;;		_main
  4757 ;; This function uses a non-reentrant model
  4758 ;;
  4759                           
  4760                           	psect	text25
  4761   0026C4                     __ptext25:
  4762                           	callstack 0
  4763   0026C4                     _LCD_clear:
  4764                           	callstack 26
  4765   0026C4                     
  4766                           ;../LCD.c: 89:     LCD_sendbyte(0b00000001,0);
  4767   0026C4  0E00               	movlw	0
  4768   0026C6  6E02               	movwf	LCD_sendbyte@type^0,c
  4769   0026C8  0E01               	movlw	1
  4770   0026CA  ECBC  F012         	call	_LCD_sendbyte
  4771   0026CE                     
  4772                           ;../LCD.c: 90:     _delay((unsigned long)((2)*(64000000/4000.0)));
  4773   0026CE  0E2A               	movlw	42
  4774   0026D0  6E04               	movwf	??_LCD_clear^0,c
  4775   0026D2  0E8E               	movlw	142
  4776   0026D4                     u2767:
  4777   0026D4  2EE8               	decfsz	wreg,f,c
  4778   0026D6  D7FE               	bra	u2767
  4779   0026D8  2E04               	decfsz	??_LCD_clear^0,f,c
  4780   0026DA  D7FC               	bra	u2767
  4781   0026DC  0012               	return		;funcret
  4782   0026DE                     __end_of_LCD_clear:
  4783                           	callstack 0
  4784                           
  4785 ;; *************** function _LCD_Init *****************
  4786 ;; Defined at:
  4787 ;;		line 48 in file "../LCD.c"
  4788 ;; Parameters:    Size  Location     Type
  4789 ;;		None
  4790 ;; Auto vars:     Size  Location     Type
  4791 ;;		None
  4792 ;; Return value:  Size  Location     Type
  4793 ;;                  1    wreg      void 
  4794 ;; Registers used:
  4795 ;;		wreg, status,2, status,0, cstack
  4796 ;; Tracked objects:
  4797 ;;		On entry : 0/0
  4798 ;;		On exit  : 0/0
  4799 ;;		Unchanged: 0/0
  4800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4803 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4804 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4805 ;;Total ram usage:        2 bytes
  4806 ;; Hardware stack levels used: 1
  4807 ;; Hardware stack levels required when called: 4
  4808 ;; This function calls:
  4809 ;;		_LCD_sendbyte
  4810 ;;		_LCD_sendnibble
  4811 ;; This function is called by:
  4812 ;;		_main
  4813 ;; This function uses a non-reentrant model
  4814 ;;
  4815                           
  4816                           	psect	text26
  4817   0021FA                     __ptext26:
  4818                           	callstack 0
  4819   0021FA                     _LCD_Init:
  4820                           	callstack 26
  4821   0021FA                     
  4822                           ;../LCD.c: 51:     TRISCbits.TRISC6 = 0;
  4823   0021FA  9C83               	bcf	131,6,c	;volatile
  4824                           
  4825                           ;../LCD.c: 52:     TRISCbits.TRISC2 = 0;
  4826   0021FC  9483               	bcf	131,2,c	;volatile
  4827                           
  4828                           ;../LCD.c: 53:     TRISBbits.TRISB3 = 0;
  4829   0021FE  9682               	bcf	130,3,c	;volatile
  4830                           
  4831                           ;../LCD.c: 54:     TRISBbits.TRISB2 = 0;
  4832   002200  9482               	bcf	130,2,c	;volatile
  4833                           
  4834                           ;../LCD.c: 55:     TRISEbits.TRISE3 = 0;
  4835   002202  9685               	bcf	133,3,c	;volatile
  4836                           
  4837                           ;../LCD.c: 56:     TRISEbits.TRISE1 = 0;
  4838   002204  9285               	bcf	133,1,c	;volatile
  4839                           
  4840                           ;../LCD.c: 58:     LATCbits.LATC6 = 0;
  4841   002206  9C7B               	bcf	123,6,c	;volatile
  4842                           
  4843                           ;../LCD.c: 59:     LATCbits.LATC2 = 0;
  4844   002208  947B               	bcf	123,2,c	;volatile
  4845                           
  4846                           ;../LCD.c: 60:     LATBbits.LATB3 = 0;
  4847   00220A  967A               	bcf	122,3,c	;volatile
  4848                           
  4849                           ;../LCD.c: 61:     LATBbits.LATB2 = 0;
  4850   00220C  947A               	bcf	122,2,c	;volatile
  4851                           
  4852                           ;../LCD.c: 62:     LATEbits.LATE3 = 0;
  4853   00220E  967D               	bcf	125,3,c	;volatile
  4854                           
  4855                           ;../LCD.c: 63:     LATEbits.LATE1 = 0;
  4856   002210  927D               	bcf	125,1,c	;volatile
  4857   002212                     
  4858                           ;../LCD.c: 66:  _delay((unsigned long)((50)*(64000000/4000.0)));
  4859   002212  0E05               	movlw	5
  4860   002214  6E05               	movwf	(??_LCD_Init+1)^0,c
  4861   002216  0E0F               	movlw	15
  4862   002218  6E04               	movwf	??_LCD_Init^0,c
  4863   00221A  0EF1               	movlw	241
  4864   00221C                     u2777:
  4865   00221C  2EE8               	decfsz	wreg,f,c
  4866   00221E  D7FE               	bra	u2777
  4867   002220  2E04               	decfsz	??_LCD_Init^0,f,c
  4868   002222  D7FC               	bra	u2777
  4869   002224  2E05               	decfsz	(??_LCD_Init+1)^0,f,c
  4870   002226  D7FA               	bra	u2777
  4871   002228  F000               	nop	
  4872   00222A                     
  4873                           ;../LCD.c: 67:  LCD_sendnibble(0b0011);
  4874   00222A  0E03               	movlw	3
  4875   00222C  EC82  F011         	call	_LCD_sendnibble
  4876   002230                     
  4877                           ;../LCD.c: 68:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  4878   002230  0EF0               	movlw	240
  4879   002232                     u2787:
  4880   002232  2EE8               	decfsz	wreg,f,c
  4881   002234  D7FE               	bra	u2787
  4882                           
  4883                           ;../LCD.c: 69:     LCD_sendnibble(0b0010);
  4884   002236  0E02               	movlw	2
  4885   002238  EC82  F011         	call	_LCD_sendnibble
  4886   00223C                     
  4887                           ;../LCD.c: 70:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  4888   00223C  0EF0               	movlw	240
  4889   00223E                     u2797:
  4890   00223E  2EE8               	decfsz	wreg,f,c
  4891   002240  D7FE               	bra	u2797
  4892   002242                     
  4893                           ;../LCD.c: 71:     LCD_sendbyte(0b00101000,0);
  4894   002242  0E00               	movlw	0
  4895   002244  6E02               	movwf	LCD_sendbyte@type^0,c
  4896   002246  0E28               	movlw	40
  4897   002248  ECBC  F012         	call	_LCD_sendbyte
  4898   00224C                     
  4899                           ;../LCD.c: 72:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  4900   00224C  0EF0               	movlw	240
  4901   00224E                     u2807:
  4902   00224E  2EE8               	decfsz	wreg,f,c
  4903   002250  D7FE               	bra	u2807
  4904   002252                     
  4905                           ;../LCD.c: 74:     LCD_sendbyte(0b00001000,0);
  4906   002252  0E00               	movlw	0
  4907   002254  6E02               	movwf	LCD_sendbyte@type^0,c
  4908   002256  0E08               	movlw	8
  4909   002258  ECBC  F012         	call	_LCD_sendbyte
  4910   00225C                     
  4911                           ;../LCD.c: 75:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  4912   00225C  0EF0               	movlw	240
  4913   00225E                     u2817:
  4914   00225E  2EE8               	decfsz	wreg,f,c
  4915   002260  D7FE               	bra	u2817
  4916   002262                     
  4917                           ;../LCD.c: 76:     LCD_sendbyte(0b00000001,0);
  4918   002262  0E00               	movlw	0
  4919   002264  6E02               	movwf	LCD_sendbyte@type^0,c
  4920   002266  0E01               	movlw	1
  4921   002268  ECBC  F012         	call	_LCD_sendbyte
  4922   00226C                     
  4923                           ;../LCD.c: 77:     _delay((unsigned long)((2)*(64000000/4000.0)));
  4924   00226C  0E2A               	movlw	42
  4925   00226E  6E04               	movwf	??_LCD_Init^0,c
  4926   002270  0E8E               	movlw	142
  4927   002272                     u2827:
  4928   002272  2EE8               	decfsz	wreg,f,c
  4929   002274  D7FE               	bra	u2827
  4930   002276  2E04               	decfsz	??_LCD_Init^0,f,c
  4931   002278  D7FC               	bra	u2827
  4932   00227A                     
  4933                           ;../LCD.c: 78:     LCD_sendbyte(0b0000110,0);
  4934   00227A  0E00               	movlw	0
  4935   00227C  6E02               	movwf	LCD_sendbyte@type^0,c
  4936   00227E  0E06               	movlw	6
  4937   002280  ECBC  F012         	call	_LCD_sendbyte
  4938   002284                     
  4939                           ;../LCD.c: 81:     LCD_sendbyte(0b00001100,0);
  4940   002284  0E00               	movlw	0
  4941   002286  6E02               	movwf	LCD_sendbyte@type^0,c
  4942   002288  0E0C               	movlw	12
  4943   00228A  ECBC  F012         	call	_LCD_sendbyte
  4944   00228E  0012               	return		;funcret
  4945   002290                     __end_of_LCD_Init:
  4946                           	callstack 0
  4947                           
  4948 ;; *************** function _LCD_sendbyte *****************
  4949 ;; Defined at:
  4950 ;;		line 36 in file "../LCD.c"
  4951 ;; Parameters:    Size  Location     Type
  4952 ;;  Byte            1    wreg     unsigned char 
  4953 ;;  type            1    1[COMRAM] unsigned char 
  4954 ;; Auto vars:     Size  Location     Type
  4955 ;;  Byte            1    2[COMRAM] unsigned char 
  4956 ;; Return value:  Size  Location     Type
  4957 ;;                  1    wreg      void 
  4958 ;; Registers used:
  4959 ;;		wreg, status,2, status,0, cstack
  4960 ;; Tracked objects:
  4961 ;;		On entry : 0/0
  4962 ;;		On exit  : 0/0
  4963 ;;		Unchanged: 0/0
  4964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4965 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4966 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4968 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4969 ;;Total ram usage:        2 bytes
  4970 ;; Hardware stack levels used: 1
  4971 ;; Hardware stack levels required when called: 3
  4972 ;; This function calls:
  4973 ;;		_LCD_sendnibble
  4974 ;; This function is called by:
  4975 ;;		_LCD_Init
  4976 ;;		_LCD_clear
  4977 ;;		_LCD_setline
  4978 ;;		_LCD_sendstring
  4979 ;;		_LCD_scroll
  4980 ;; This function uses a non-reentrant model
  4981 ;;
  4982                           
  4983                           	psect	text27
  4984   002578                     __ptext27:
  4985                           	callstack 0
  4986   002578                     _LCD_sendbyte:
  4987                           	callstack 26
  4988                           
  4989                           ;incstack = 0
  4990                           ;LCD_sendbyte@Byte stored from wreg
  4991   002578  6E03               	movwf	LCD_sendbyte@Byte^0,c
  4992   00257A                     
  4993                           ;../LCD.c: 36: void LCD_sendbyte(unsigned char Byte, char type);../LCD.c: 37: {;../LCD.c
      +                          : 38:     if (type) {LATCbits.LATC6 = 1;} else {LATCbits.LATC6 = 0;}
  4994   00257A  5002               	movf	LCD_sendbyte@type^0,w,c
  4995   00257C  B4D8               	btfsc	status,2,c
  4996   00257E  EFC3  F012         	goto	u1941
  4997   002582  EFC5  F012         	goto	u1940
  4998   002586                     u1941:
  4999   002586  EFC8  F012         	goto	l288
  5000   00258A                     u1940:
  5001   00258A  8C7B               	bsf	123,6,c	;volatile
  5002   00258C  EFC9  F012         	goto	l2288
  5003   002590                     l288:
  5004   002590  9C7B               	bcf	123,6,c	;volatile
  5005   002592                     l2288:
  5006                           
  5007                           ;../LCD.c: 39:     LCD_sendnibble((Byte >> 4)& 0b1111);
  5008   002592  3803               	swapf	LCD_sendbyte@Byte^0,w,c
  5009   002594  0B0F               	andlw	15
  5010   002596  0B0F               	andlw	15
  5011   002598  EC82  F011         	call	_LCD_sendnibble
  5012                           
  5013                           ;../LCD.c: 40:     LCD_sendnibble(Byte & 0b00001111);
  5014   00259C  5003               	movf	LCD_sendbyte@Byte^0,w,c
  5015   00259E  0B0F               	andlw	15
  5016   0025A0  EC82  F011         	call	_LCD_sendnibble
  5017   0025A4                     
  5018                           ;../LCD.c: 42:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  5019   0025A4  0EA0               	movlw	160
  5020   0025A6                     u2837:
  5021   0025A6  D000               	nop2	
  5022   0025A8  2EE8               	decfsz	wreg,f,c
  5023   0025AA  D7FD               	bra	u2837
  5024   0025AC  0012               	return		;funcret
  5025   0025AE                     __end_of_LCD_sendbyte:
  5026                           	callstack 0
  5027                           
  5028 ;; *************** function _LCD_sendnibble *****************
  5029 ;; Defined at:
  5030 ;;		line 19 in file "../LCD.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;  number          1    wreg     unsigned char 
  5033 ;; Auto vars:     Size  Location     Type
  5034 ;;  number          1    0[COMRAM] unsigned char 
  5035 ;; Return value:  Size  Location     Type
  5036 ;;                  1    wreg      void 
  5037 ;; Registers used:
  5038 ;;		wreg, cstack
  5039 ;; Tracked objects:
  5040 ;;		On entry : 0/0
  5041 ;;		On exit  : 0/0
  5042 ;;		Unchanged: 0/0
  5043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5045 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5047 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5048 ;;Total ram usage:        1 bytes
  5049 ;; Hardware stack levels used: 1
  5050 ;; Hardware stack levels required when called: 2
  5051 ;; This function calls:
  5052 ;;		_LCD_E_TOG
  5053 ;; This function is called by:
  5054 ;;		_LCD_sendbyte
  5055 ;;		_LCD_Init
  5056 ;; This function uses a non-reentrant model
  5057 ;;
  5058                           
  5059                           	psect	text28
  5060   002304                     __ptext28:
  5061                           	callstack 0
  5062   002304                     _LCD_sendnibble:
  5063                           	callstack 26
  5064                           
  5065                           ;incstack = 0
  5066                           ;LCD_sendnibble@number stored from wreg
  5067   002304  6E01               	movwf	LCD_sendnibble@number^0,c
  5068   002306                     
  5069                           ;../LCD.c: 19: void LCD_sendnibble(unsigned char number);../LCD.c: 20: {;../LCD.c: 22:  
      +                          if (number & 0b0001) {LATBbits.LATB3 = 1;} else {LATBbits.LATB3 = 0;}
  5070   002306  A001               	btfss	LCD_sendnibble@number^0,0,c
  5071   002308  EF88  F011         	goto	u1831
  5072   00230C  EF8A  F011         	goto	u1830
  5073   002310                     u1831:
  5074   002310  EF8D  F011         	goto	l277
  5075   002314                     u1830:
  5076   002314  867A               	bsf	122,3,c	;volatile
  5077   002316  EF8E  F011         	goto	l2198
  5078   00231A                     l277:
  5079   00231A  967A               	bcf	122,3,c	;volatile
  5080   00231C                     l2198:
  5081                           
  5082                           ;../LCD.c: 23:     if (number & 0b0010) {LATBbits.LATB2 = 1;} else {LATBbits.LATB2 = 0;}
  5083   00231C  A201               	btfss	LCD_sendnibble@number^0,1,c
  5084   00231E  EF93  F011         	goto	u1841
  5085   002322  EF95  F011         	goto	u1840
  5086   002326                     u1841:
  5087   002326  EF98  F011         	goto	l279
  5088   00232A                     u1840:
  5089   00232A  847A               	bsf	122,2,c	;volatile
  5090   00232C  EF99  F011         	goto	l2202
  5091   002330                     l279:
  5092   002330  947A               	bcf	122,2,c	;volatile
  5093   002332                     l2202:
  5094                           
  5095                           ;../LCD.c: 24:     if (number & 0b0100) {LATEbits.LATE3 = 1;} else {LATEbits.LATE3 = 0;}
  5096   002332  A401               	btfss	LCD_sendnibble@number^0,2,c
  5097   002334  EF9E  F011         	goto	u1851
  5098   002338  EFA0  F011         	goto	u1850
  5099   00233C                     u1851:
  5100   00233C  EFA3  F011         	goto	l281
  5101   002340                     u1850:
  5102   002340  867D               	bsf	125,3,c	;volatile
  5103   002342  EFA4  F011         	goto	l2206
  5104   002346                     l281:
  5105   002346  967D               	bcf	125,3,c	;volatile
  5106   002348                     l2206:
  5107                           
  5108                           ;../LCD.c: 25:     if (number & 0b1000) {LATEbits.LATE1 = 1;} else {LATEbits.LATE1 = 0;}
  5109   002348  A601               	btfss	LCD_sendnibble@number^0,3,c
  5110   00234A  EFA9  F011         	goto	u1861
  5111   00234E  EFAB  F011         	goto	u1860
  5112   002352                     u1861:
  5113   002352  EFAE  F011         	goto	l283
  5114   002356                     u1860:
  5115   002356  827D               	bsf	125,1,c	;volatile
  5116   002358  EFAF  F011         	goto	l2210
  5117   00235C                     l283:
  5118   00235C  927D               	bcf	125,1,c	;volatile
  5119   00235E                     l2210:
  5120                           
  5121                           ;../LCD.c: 27:     LCD_E_TOG();
  5122   00235E  EC79  F013         	call	_LCD_E_TOG	;wreg free
  5123   002362                     
  5124                           ;../LCD.c: 28:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  5125   002362  0E1A               	movlw	26
  5126   002364                     u2847:
  5127   002364  2EE8               	decfsz	wreg,f,c
  5128   002366  D7FE               	bra	u2847
  5129   002368  D000               	nop2	
  5130   00236A  0012               	return		;funcret
  5131   00236C                     __end_of_LCD_sendnibble:
  5132                           	callstack 0
  5133                           
  5134 ;; *************** function _LCD_E_TOG *****************
  5135 ;; Defined at:
  5136 ;;		line 9 in file "../LCD.c"
  5137 ;; Parameters:    Size  Location     Type
  5138 ;;		None
  5139 ;; Auto vars:     Size  Location     Type
  5140 ;;		None
  5141 ;; Return value:  Size  Location     Type
  5142 ;;                  1    wreg      void 
  5143 ;; Registers used:
  5144 ;;		wreg
  5145 ;; Tracked objects:
  5146 ;;		On entry : 0/0
  5147 ;;		On exit  : 0/0
  5148 ;;		Unchanged: 0/0
  5149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5154 ;;Total ram usage:        0 bytes
  5155 ;; Hardware stack levels used: 1
  5156 ;; Hardware stack levels required when called: 1
  5157 ;; This function calls:
  5158 ;;		Nothing
  5159 ;; This function is called by:
  5160 ;;		_LCD_sendnibble
  5161 ;; This function uses a non-reentrant model
  5162 ;;
  5163                           
  5164                           	psect	text29
  5165   0026F2                     __ptext29:
  5166                           	callstack 0
  5167   0026F2                     _LCD_E_TOG:
  5168                           	callstack 26
  5169   0026F2                     
  5170                           ;../LCD.c: 11:  LATCbits.LATC2 = 1;
  5171   0026F2  847B               	bsf	123,2,c	;volatile
  5172   0026F4                     
  5173                           ;../LCD.c: 12:  _delay((unsigned long)((2)*(64000000/4000000.0)));
  5174   0026F4  0E0A               	movlw	10
  5175   0026F6                     u2857:
  5176   0026F6  2EE8               	decfsz	wreg,f,c
  5177   0026F8  D7FE               	bra	u2857
  5178   0026FA  D000               	nop2	
  5179   0026FC                     
  5180                           ;../LCD.c: 13:  LATCbits.LATC2 = 0;
  5181   0026FC  947B               	bcf	123,2,c	;volatile
  5182   0026FE  0012               	return		;funcret
  5183   002700                     __end_of_LCD_E_TOG:
  5184                           	callstack 0
  5185                           
  5186 ;; *************** function _Interrupts_init *****************
  5187 ;; Defined at:
  5188 ;;		line 11 in file "../interrupts.c"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;		None
  5191 ;; Auto vars:     Size  Location     Type
  5192 ;;		None
  5193 ;; Return value:  Size  Location     Type
  5194 ;;                  1    wreg      void 
  5195 ;; Registers used:
  5196 ;;		None
  5197 ;; Tracked objects:
  5198 ;;		On entry : 0/0
  5199 ;;		On exit  : 0/0
  5200 ;;		Unchanged: 0/0
  5201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5206 ;;Total ram usage:        0 bytes
  5207 ;; Hardware stack levels used: 1
  5208 ;; Hardware stack levels required when called: 1
  5209 ;; This function calls:
  5210 ;;		Nothing
  5211 ;; This function is called by:
  5212 ;;		_main
  5213 ;; This function uses a non-reentrant model
  5214 ;;
  5215                           
  5216                           	psect	text30
  5217   002700                     __ptext30:
  5218                           	callstack 0
  5219   002700                     _Interrupts_init:
  5220                           	callstack 29
  5221   002700                     
  5222                           ;../interrupts.c: 14:     TMR0IE=1;
  5223   002700  010E               	movlb	14	; () banked
  5224   002702  8B29               	bsf	41,5,b	;volatile
  5225                           
  5226                           ;../interrupts.c: 15:     INTCONbits.GIEH=1;
  5227   002704  8EF2               	bsf	242,7,c	;volatile
  5228                           
  5229                           ;../interrupts.c: 16:     INTCONbits.GIEL = 1;
  5230   002706  8CF2               	bsf	242,6,c	;volatile
  5231   002708                     
  5232                           ; BSR set to: 14
  5233   002708  0012               	return		;funcret
  5234   00270A                     __end_of_Interrupts_init:
  5235                           	callstack 0
  5236                           
  5237 ;; *************** function _Comp1_init *****************
  5238 ;; Defined at:
  5239 ;;		line 29 in file "../comparator.c"
  5240 ;; Parameters:    Size  Location     Type
  5241 ;;		None
  5242 ;; Auto vars:     Size  Location     Type
  5243 ;;		None
  5244 ;; Return value:  Size  Location     Type
  5245 ;;                  1    wreg      void 
  5246 ;; Registers used:
  5247 ;;		wreg, status,2, cstack
  5248 ;; Tracked objects:
  5249 ;;		On entry : 0/0
  5250 ;;		On exit  : 0/0
  5251 ;;		Unchanged: 0/0
  5252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5257 ;;Total ram usage:        0 bytes
  5258 ;; Hardware stack levels used: 1
  5259 ;; Hardware stack levels required when called: 2
  5260 ;; This function calls:
  5261 ;;		_DAC_init
  5262 ;; This function is called by:
  5263 ;;		_main
  5264 ;; This function uses a non-reentrant model
  5265 ;;
  5266                           
  5267                           	psect	text31
  5268   00265C                     __ptext31:
  5269                           	callstack 0
  5270   00265C                     _Comp1_init:
  5271                           	callstack 28
  5272   00265C                     
  5273                           ;../comparator.c: 31:     TRISAbits.TRISA3=1;
  5274   00265C  8681               	bsf	129,3,c	;volatile
  5275   00265E                     
  5276                           ;../comparator.c: 32:     CM1NCHbits.NCH=0b011;
  5277   00265E  010E               	movlb	14	; () banked
  5278   002660  51D2               	movf	210,w,b	;volatile
  5279   002662  0BF8               	andlw	-8
  5280   002664  0903               	iorlw	3
  5281   002666  6FD2               	movwf	210,b	;volatile
  5282                           
  5283                           ;../comparator.c: 33:     CM1PCHbits.PCH=0b101;
  5284   002668  51D3               	movf	211,w,b	;volatile
  5285   00266A  0BF8               	andlw	-8
  5286   00266C  0905               	iorlw	5
  5287   00266E  6FD3               	movwf	211,b	;volatile
  5288   002670                     
  5289                           ; BSR set to: 14
  5290                           ;../comparator.c: 34:     CM1CON0bits.HYS=1;
  5291   002670  83D0               	bsf	208,1,b	;volatile
  5292   002672                     
  5293                           ; BSR set to: 14
  5294                           ;../comparator.c: 35:     CM1CON0bits.POL=1;
  5295   002672  89D0               	bsf	208,4,b	;volatile
  5296   002674                     
  5297                           ; BSR set to: 14
  5298                           ;../comparator.c: 36:     CM1CON1bits.INTP=1;
  5299   002674  83D1               	bsf	209,1,b	;volatile
  5300   002676                     
  5301                           ; BSR set to: 14
  5302                           ;../comparator.c: 37:     CM1CON1bits.INTN=1;
  5303   002676  81D1               	bsf	209,0,b	;volatile
  5304   002678                     
  5305                           ; BSR set to: 14
  5306                           ;../comparator.c: 38:     DAC_init();
  5307   002678  EC6F  F013         	call	_DAC_init	;wreg free
  5308   00267C                     
  5309                           ;../comparator.c: 39:     CM1CON0bits.EN=1;
  5310   00267C  010E               	movlb	14	; () banked
  5311   00267E  8FD0               	bsf	208,7,b	;volatile
  5312   002680                     
  5313                           ; BSR set to: 14
  5314   002680  0012               	return		;funcret
  5315   002682                     __end_of_Comp1_init:
  5316                           	callstack 0
  5317                           
  5318 ;; *************** function _DAC_init *****************
  5319 ;; Defined at:
  5320 ;;		line 14 in file "../comparator.c"
  5321 ;; Parameters:    Size  Location     Type
  5322 ;;		None
  5323 ;; Auto vars:     Size  Location     Type
  5324 ;;		None
  5325 ;; Return value:  Size  Location     Type
  5326 ;;                  1    wreg      void 
  5327 ;; Registers used:
  5328 ;;		wreg, status,2
  5329 ;; Tracked objects:
  5330 ;;		On entry : 0/0
  5331 ;;		On exit  : 0/0
  5332 ;;		Unchanged: 0/0
  5333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5338 ;;Total ram usage:        0 bytes
  5339 ;; Hardware stack levels used: 1
  5340 ;; Hardware stack levels required when called: 1
  5341 ;; This function calls:
  5342 ;;		Nothing
  5343 ;; This function is called by:
  5344 ;;		_Comp1_init
  5345 ;; This function uses a non-reentrant model
  5346 ;;
  5347                           
  5348                           	psect	text32
  5349   0026DE                     __ptext32:
  5350                           	callstack 0
  5351   0026DE                     _DAC_init:
  5352                           	callstack 28
  5353   0026DE                     
  5354                           ;../comparator.c: 16:     DAC1CON0bits.PSS=0b00;
  5355   0026DE  0EF3               	movlw	-13
  5356   0026E0  010E               	movlb	14	; () banked
  5357   0026E2  17C6               	andwf	198,f,b	;volatile
  5358   0026E4                     
  5359                           ; BSR set to: 14
  5360                           ;../comparator.c: 17:     DAC1CON0bits.NSS=0b0;
  5361   0026E4  91C6               	bcf	198,0,b	;volatile
  5362                           
  5363                           ;../comparator.c: 21:     DAC1CON1bits.DAC1R=27;
  5364   0026E6  51C7               	movf	199,w,b	;volatile
  5365   0026E8  0BE0               	andlw	-32
  5366   0026EA  091B               	iorlw	27
  5367   0026EC  6FC7               	movwf	199,b	;volatile
  5368   0026EE                     
  5369                           ; BSR set to: 14
  5370                           ;../comparator.c: 22:     DAC1CON0bits.DAC1EN=1;
  5371   0026EE  8FC6               	bsf	198,7,b	;volatile
  5372   0026F0                     
  5373                           ; BSR set to: 14
  5374   0026F0  0012               	return		;funcret
  5375   0026F2                     __end_of_DAC_init:
  5376                           	callstack 0
  5377                           
  5378 ;; *************** function _HighISR *****************
  5379 ;; Defined at:
  5380 ;;		line 23 in file "../interrupts.c"
  5381 ;; Parameters:    Size  Location     Type
  5382 ;;		None
  5383 ;; Auto vars:     Size  Location     Type
  5384 ;;		None
  5385 ;; Return value:  Size  Location     Type
  5386 ;;                  1    wreg      void 
  5387 ;; Registers used:
  5388 ;;		wreg, status,2, status,0
  5389 ;; Tracked objects:
  5390 ;;		On entry : 0/0
  5391 ;;		On exit  : 0/0
  5392 ;;		Unchanged: 0/0
  5393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5398 ;;Total ram usage:        0 bytes
  5399 ;; Hardware stack levels used: 1
  5400 ;; This function calls:
  5401 ;;		Nothing
  5402 ;; This function is called by:
  5403 ;;		Interrupt level 2
  5404 ;; This function uses a non-reentrant model
  5405 ;;
  5406                           
  5407                           	psect	intcode
  5408   000008                     __pintcode:
  5409                           	callstack 0
  5410   000008                     _HighISR:
  5411                           	callstack 22
  5412                           
  5413                           ; BSR set to: 14
  5414                           ;incstack = 0
  5415   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5416   00000A                     
  5417                           ;../interrupts.c: 27:     if (TMR0IF) {
  5418   00000A  010E               	movlb	14	; () banked
  5419   00000C  AB33               	btfss	51,5,b	;volatile
  5420   00000E  EF0B  F000         	goto	i2u240_41
  5421   000012  EF0D  F000         	goto	i2u240_40
  5422   000016                     i2u240_41:
  5423   000016  EF16  F000         	goto	i2l2540
  5424   00001A                     i2u240_40:
  5425   00001A                     
  5426                           ; BSR set to: 14
  5427                           ;../interrupts.c: 28:         TMR0H=0b00001011;
  5428   00001A  0E0B               	movlw	11
  5429   00001C  6ED4               	movwf	212,c	;volatile
  5430                           
  5431                           ;../interrupts.c: 29:         TMR0L=0b00001011;
  5432   00001E  0E0B               	movlw	11
  5433   000020  6ED3               	movwf	211,c	;volatile
  5434   000022                     
  5435                           ; BSR set to: 14
  5436                           ;../interrupts.c: 30:         minute += 1;
  5437   000022  0100               	movlb	0	; () banked
  5438   000024  4BDD               	infsnz	_minute& (0+255),f,b
  5439   000026  2BDE               	incf	(_minute+1)& (0+255),f,b
  5440   000028                     
  5441                           ; BSR set to: 0
  5442                           ;../interrupts.c: 31:         TMR0IF=0;
  5443   000028  010E               	movlb	14	; () banked
  5444   00002A  9B33               	bcf	51,5,b	;volatile
  5445   00002C                     i2l2540:
  5446                           
  5447                           ; BSR set to: 14
  5448                           ;../interrupts.c: 34:     if (PIR2bits.C1IF){
  5449   00002C  A135               	btfss	53,0,b	;volatile
  5450   00002E  EF1B  F000         	goto	i2u241_41
  5451   000032  EF1D  F000         	goto	i2u241_40
  5452   000036                     i2u241_41:
  5453   000036  EF62  F000         	goto	i2l153
  5454   00003A                     i2u241_40:
  5455   00003A                     
  5456                           ; BSR set to: 14
  5457                           ;../interrupts.c: 35:         if (CM1CON0bits.OUT == 0) {
  5458   00003A  BDD0               	btfsc	208,6,b	;volatile
  5459   00003C  EF22  F000         	goto	i2u242_41
  5460   000040  EF24  F000         	goto	i2u242_40
  5461   000044                     i2u242_41:
  5462   000044  EF2F  F000         	goto	i2l145
  5463   000048                     i2u242_40:
  5464   000048                     
  5465                           ; BSR set to: 14
  5466                           ;../interrupts.c: 36:             daylight_start_hour = hour;
  5467   000048  C0DF  F0D7         	movff	_hour,_daylight_start_hour
  5468   00004C  C0E0  F0D8         	movff	_hour+1,_daylight_start_hour+1
  5469                           
  5470                           ;../interrupts.c: 37:             daylight_start_min = minute;
  5471   000050  C0DD  F0D5         	movff	_minute,_daylight_start_min
  5472   000054  C0DE  F0D6         	movff	_minute+1,_daylight_start_min+1
  5473                           
  5474                           ;../interrupts.c: 38:             LATHbits.LATH3=0;
  5475   000058  9680               	bcf	128,3,c	;volatile
  5476                           
  5477                           ;../interrupts.c: 39:             }
  5478   00005A  EF60  F000         	goto	i2l146
  5479   00005E                     i2l145:
  5480                           
  5481                           ; BSR set to: 14
  5482   00005E  ADD0               	btfss	208,6,b	;volatile
  5483   000060  EF34  F000         	goto	i2u243_41
  5484   000064  EF36  F000         	goto	i2u243_40
  5485   000068                     i2u243_41:
  5486   000068  EF60  F000         	goto	i2l146
  5487   00006C                     i2u243_40:
  5488   00006C                     
  5489                           ; BSR set to: 14
  5490                           ;../interrupts.c: 41:             daylight_end_hour = hour;
  5491   00006C  C0DF  F0D3         	movff	_hour,_daylight_end_hour
  5492   000070  C0E0  F0D4         	movff	_hour+1,_daylight_end_hour+1
  5493                           
  5494                           ;../interrupts.c: 42:             daylight_end_min = minute;
  5495   000074  C0DD  F0D1         	movff	_minute,_daylight_end_min
  5496   000078  C0DE  F0D2         	movff	_minute+1,_daylight_end_min+1
  5497   00007C                     
  5498                           ; BSR set to: 14
  5499                           ;../interrupts.c: 43:         if (hour <1 || hour >=5){
  5500   00007C  0100               	movlb	0	; () banked
  5501   00007E  51DF               	movf	_hour& (0+255),w,b
  5502   000080  11E0               	iorwf	(_hour+1)& (0+255),w,b
  5503   000082  B4D8               	btfsc	status,2,c
  5504   000084  EF46  F000         	goto	i2u244_41
  5505   000088  EF48  F000         	goto	i2u244_40
  5506   00008C                     i2u244_41:
  5507   00008C  EF53  F000         	goto	i2l150
  5508   000090                     i2u244_40:
  5509   000090                     
  5510                           ; BSR set to: 0
  5511   000090  51E0               	movf	(_hour+1)& (0+255),w,b
  5512   000092  E109               	bnz	i2u245_40
  5513   000094  0E05               	movlw	5
  5514   000096  5DDF               	subwf	_hour& (0+255),w,b
  5515   000098  A0D8               	btfss	status,0,c
  5516   00009A  EF51  F000         	goto	i2u245_41
  5517   00009E  EF53  F000         	goto	i2u245_40
  5518   0000A2                     i2u245_41:
  5519   0000A2  EF60  F000         	goto	i2l146
  5520   0000A6                     i2u245_40:
  5521   0000A6                     i2l150:
  5522                           
  5523                           ; BSR set to: 0
  5524                           ;../interrupts.c: 44:             if (CM1CON0bits.OUT == 1) {LATHbits.LATH3=1;}
  5525   0000A6  010E               	movlb	14	; () banked
  5526   0000A8  ADD0               	btfss	208,6,b	;volatile
  5527   0000AA  EF59  F000         	goto	i2u246_41
  5528   0000AE  EF5B  F000         	goto	i2u246_40
  5529   0000B2                     i2u246_41:
  5530   0000B2  EF5E  F000         	goto	i2l151
  5531   0000B6                     i2u246_40:
  5532   0000B6                     
  5533                           ; BSR set to: 14
  5534   0000B6  8680               	bsf	128,3,c	;volatile
  5535   0000B8  EF5F  F000         	goto	i2l152
  5536   0000BC                     i2l151:
  5537                           
  5538                           ; BSR set to: 14
  5539   0000BC  9680               	bcf	128,3,c	;volatile
  5540   0000BE                     i2l152:
  5541                           
  5542                           ; BSR set to: 14
  5543                           ;../interrupts.c: 46:             LATHbits.LATH3=1;}
  5544   0000BE  8680               	bsf	128,3,c	;volatile
  5545   0000C0                     i2l146:
  5546                           
  5547                           ;../interrupts.c: 48:         PIR2bits.C1IF=0;
  5548   0000C0  010E               	movlb	14	; () banked
  5549   0000C2  9135               	bcf	53,0,b	;volatile
  5550   0000C4                     i2l153:
  5551                           
  5552                           ; BSR set to: 14
  5553   0000C4  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5554   0000C6  0011               	retfie		f
  5555   0000C8                     __end_of_HighISR:
  5556                           	callstack 0
  5557                           
  5558                           	psect	rparam
  5559   000000                     
  5560                           	psect	temp
  5561   00005F                     btemp:
  5562                           	callstack 0
  5563   00005F                     	ds	1
  5564   000000                     int$flags	set	btemp
  5565   000000                     wtemp8	set	btemp+1
  5566   000000                     ttemp5	set	btemp+1
  5567   000000                     ttemp6	set	btemp+4
  5568   000000                     ttemp7	set	btemp+8
  5569                           
  5570                           	psect	idloc
  5571                           
  5572                           ;Config register IDLOC0 @ 0x200000
  5573                           ;	unspecified, using default values
  5574   200000                     	org	2097152
  5575   200000  0FFF               	dw	4095
  5576                           
  5577                           ;Config register IDLOC1 @ 0x200002
  5578                           ;	unspecified, using default values
  5579   200002                     	org	2097154
  5580   200002  0FFF               	dw	4095
  5581                           
  5582                           ;Config register IDLOC2 @ 0x200004
  5583                           ;	unspecified, using default values
  5584   200004                     	org	2097156
  5585   200004  0FFF               	dw	4095
  5586                           
  5587                           ;Config register IDLOC3 @ 0x200006
  5588                           ;	unspecified, using default values
  5589   200006                     	org	2097158
  5590   200006  0FFF               	dw	4095
  5591                           
  5592                           ;Config register IDLOC4 @ 0x200008
  5593                           ;	unspecified, using default values
  5594   200008                     	org	2097160
  5595   200008  0FFF               	dw	4095
  5596                           
  5597                           ;Config register IDLOC5 @ 0x20000A
  5598                           ;	unspecified, using default values
  5599   20000A                     	org	2097162
  5600   20000A  0FFF               	dw	4095
  5601                           
  5602                           ;Config register IDLOC6 @ 0x20000C
  5603                           ;	unspecified, using default values
  5604   20000C                     	org	2097164
  5605   20000C  0FFF               	dw	4095
  5606                           
  5607                           ;Config register IDLOC7 @ 0x20000E
  5608                           ;	unspecified, using default values
  5609   20000E                     	org	2097166
  5610   20000E  0FFF               	dw	4095
  5611                           
  5612                           	psect	config
  5613                           
  5614                           ;Config register CONFIG1L @ 0x300000
  5615                           ;	External Oscillator mode Selection bits
  5616                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5617                           ;	Power-up default value for COSC bits
  5618                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5619   300000                     	org	3145728
  5620   300000  AA                 	db	170
  5621                           
  5622                           ;Config register CONFIG1H @ 0x300001
  5623                           ;	unspecified, using default values
  5624                           ;	Clock Out Enable bit
  5625                           ;	CLKOUTEN = 0x1, unprogrammed default
  5626                           ;	Clock Switch Enable bit
  5627                           ;	CSWEN = 0x1, unprogrammed default
  5628                           ;	Fail-Safe Clock Monitor Enable bit
  5629                           ;	FCMEN = 0x1, unprogrammed default
  5630   300001                     	org	3145729
  5631   300001  FF                 	db	255
  5632                           
  5633                           ;Config register CONFIG2L @ 0x300002
  5634                           ;	unspecified, using default values
  5635                           ;	Master Clear Enable bit
  5636                           ;	MCLRE = 0x1, unprogrammed default
  5637                           ;	Power-up Timer Enable bit
  5638                           ;	PWRTE = 0x1, unprogrammed default
  5639                           ;	Low-power BOR enable bit
  5640                           ;	LPBOREN = 0x1, unprogrammed default
  5641                           ;	Brown-out Reset Enable bits
  5642                           ;	BOREN = 0x3, unprogrammed default
  5643   300002                     	org	3145730
  5644   300002  FF                 	db	255
  5645                           
  5646                           ;Config register CONFIG2H @ 0x300003
  5647                           ;	unspecified, using default values
  5648                           ;	Brown Out Reset Voltage selection bits
  5649                           ;	BORV = 0x3, unprogrammed default
  5650                           ;	ZCD Disable bit
  5651                           ;	ZCD = 0x1, unprogrammed default
  5652                           ;	PPSLOCK bit One-Way Set Enable bit
  5653                           ;	PPS1WAY = 0x1, unprogrammed default
  5654                           ;	Stack Full/Underflow Reset Enable bit
  5655                           ;	STVREN = 0x1, unprogrammed default
  5656                           ;	Debugger Enable bit
  5657                           ;	DEBUG = 0x1, unprogrammed default
  5658                           ;	Extended Instruction Set Enable bit
  5659                           ;	XINST = 0x1, unprogrammed default
  5660   300003                     	org	3145731
  5661   300003  FF                 	db	255
  5662                           
  5663                           ;Config register CONFIG3L @ 0x300004
  5664                           ;	WDT Period Select bits
  5665                           ;	WDTCPS = 0x1F, unprogrammed default
  5666                           ;	WDT operating mode
  5667                           ;	WDTE = OFF, WDT Disabled
  5668   300004                     	org	3145732
  5669   300004  9F                 	db	159
  5670                           
  5671                           ;Config register CONFIG3H @ 0x300005
  5672                           ;	unspecified, using default values
  5673                           ;	WDT Window Select bits
  5674                           ;	WDTCWS = 0x7, unprogrammed default
  5675                           ;	WDT input clock selector
  5676                           ;	WDTCCS = 0x7, unprogrammed default
  5677   300005                     	org	3145733
  5678   300005  FF                 	db	255
  5679                           
  5680                           ;Config register CONFIG4L @ 0x300006
  5681                           ;	unspecified, using default values
  5682                           ;	Write Protection Block 0
  5683                           ;	WRT0 = 0x1, unprogrammed default
  5684                           ;	Write Protection Block 1
  5685                           ;	WRT1 = 0x1, unprogrammed default
  5686                           ;	Write Protection Block 2
  5687                           ;	WRT2 = 0x1, unprogrammed default
  5688                           ;	Write Protection Block 3
  5689                           ;	WRT3 = 0x1, unprogrammed default
  5690                           ;	Write Protection Block 3
  5691                           ;	WRT4 = 0x1, unprogrammed default
  5692                           ;	Write Protection Block 3
  5693                           ;	WRT5 = 0x1, unprogrammed default
  5694                           ;	Write Protection Block 3
  5695                           ;	WRT6 = 0x1, unprogrammed default
  5696                           ;	Write Protection Block 3
  5697                           ;	WRT7 = 0x1, unprogrammed default
  5698   300006                     	org	3145734
  5699   300006  FF                 	db	255
  5700                           
  5701                           ;Config register CONFIG4H @ 0x300007
  5702                           ;	unspecified, using default values
  5703                           ;	Configuration Register Write Protection bit
  5704                           ;	WRTC = 0x1, unprogrammed default
  5705                           ;	Boot Block Write Protection bit
  5706                           ;	WRTB = 0x1, unprogrammed default
  5707                           ;	Data EEPROM Write Protection bit
  5708                           ;	WRTD = 0x1, unprogrammed default
  5709                           ;	Scanner Enable bit
  5710                           ;	SCANE = 0x1, unprogrammed default
  5711                           ;	Low Voltage Programming Enable bit
  5712                           ;	LVP = 0x1, unprogrammed default
  5713   300007                     	org	3145735
  5714   300007  FF                 	db	255
  5715                           
  5716                           ;Config register CONFIG5L @ 0x300008
  5717                           ;	unspecified, using default values
  5718                           ;	UserNVM Program Memory Code Protection bit
  5719                           ;	CP = 0x1, unprogrammed default
  5720                           ;	DataNVM Memory Code Protection bit
  5721                           ;	CPD = 0x1, unprogrammed default
  5722   300008                     	org	3145736
  5723   300008  FF                 	db	255
  5724                           
  5725                           ;Config register CONFIG5H @ 0x300009
  5726                           ;	unspecified, using default values
  5727   300009                     	org	3145737
  5728   300009  FF                 	db	255
  5729                           
  5730                           ;Config register CONFIG6L @ 0x30000A
  5731                           ;	unspecified, using default values
  5732                           ;	Table Read Protection Block 0
  5733                           ;	EBTR0 = 0x1, unprogrammed default
  5734                           ;	Table Read Protection Block 1
  5735                           ;	EBTR1 = 0x1, unprogrammed default
  5736                           ;	Table Read Protection Block 2
  5737                           ;	EBTR2 = 0x1, unprogrammed default
  5738                           ;	Table Read Protection Block 3
  5739                           ;	EBTR3 = 0x1, unprogrammed default
  5740                           ;	Table Read Protection Block 4
  5741                           ;	EBTR4 = 0x1, unprogrammed default
  5742                           ;	Table Read Protection Block 5
  5743                           ;	EBTR5 = 0x1, unprogrammed default
  5744                           ;	Table Read Protection Block 6
  5745                           ;	EBTR6 = 0x1, unprogrammed default
  5746                           ;	Table Read Protection Block 7
  5747                           ;	EBTR7 = 0x1, unprogrammed default
  5748   30000A                     	org	3145738
  5749   30000A  FF                 	db	255
  5750                           
  5751                           ;Config register CONFIG6H @ 0x30000B
  5752                           ;	unspecified, using default values
  5753                           ;	Boot Block Table Read Protection bit
  5754                           ;	EBTRB = 0x1, unprogrammed default
  5755   30000B                     	org	3145739
  5756   30000B  FF                 	db	255
  5757                           tosu	equ	0xFFF
  5758                           tosh	equ	0xFFE
  5759                           tosl	equ	0xFFD
  5760                           stkptr	equ	0xFFC
  5761                           pclatu	equ	0xFFB
  5762                           pclath	equ	0xFFA
  5763                           pcl	equ	0xFF9
  5764                           tblptru	equ	0xFF8
  5765                           tblptrh	equ	0xFF7
  5766                           tblptrl	equ	0xFF6
  5767                           tablat	equ	0xFF5
  5768                           prodh	equ	0xFF4
  5769                           prodl	equ	0xFF3
  5770                           indf0	equ	0xFEF
  5771                           postinc0	equ	0xFEE
  5772                           postdec0	equ	0xFED
  5773                           preinc0	equ	0xFEC
  5774                           plusw0	equ	0xFEB
  5775                           fsr0h	equ	0xFEA
  5776                           fsr0l	equ	0xFE9
  5777                           wreg	equ	0xFE8
  5778                           indf1	equ	0xFE7
  5779                           postinc1	equ	0xFE6
  5780                           postdec1	equ	0xFE5
  5781                           preinc1	equ	0xFE4
  5782                           plusw1	equ	0xFE3
  5783                           fsr1h	equ	0xFE2
  5784                           fsr1l	equ	0xFE1
  5785                           bsr	equ	0xFE0
  5786                           indf2	equ	0xFDF
  5787                           postinc2	equ	0xFDE
  5788                           postdec2	equ	0xFDD
  5789                           preinc2	equ	0xFDC
  5790                           plusw2	equ	0xFDB
  5791                           fsr2h	equ	0xFDA
  5792                           fsr2l	equ	0xFD9
  5793                           status	equ	0xFD8

Data Sizes:
    Strings     38
    Constant    0
    Data        0
    BSS         57
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     91      94
    BANK0           160    107     129
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[12]), STR_3(CODE[18]), STR_2(CODE[8]), STR_1(CODE[8]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[12]), STR_3(CODE[18]), STR_2(CODE[8]), STR_1(CODE[8]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[12]), STR_3(CODE[18]), STR_2(CODE[8]), STR_1(CODE[8]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[12]), STR_3(CODE[18]), STR_2(CODE[8]), STR_1(CODE[8]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1847$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[12]), STR_3(CODE[18]), STR_2(CODE[8]), STR_1(CODE[8]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> main@yearstr(BANK0[20]), main@datestr(BANK0[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1794$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1794$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    LCD_sendstring@string	PTR unsigned char  size(2) Largest target is 50
		 -> main@yearstr(BANK0[20]), main@datestr(BANK0[50]), 

    check_month@year	PTR unsigned short  size(2) Largest target is 2
		 -> main@year(BANK0[2]), 

    check_month@month_day	PTR unsigned int  size(2) Largest target is 2
		 -> main@month_day(BANK0[2]), 

    check_month@month	PTR unsigned int  size(2) Largest target is 2
		 -> main@month(BANK0[2]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    _check_month->___lwmod
    ___lwmod->___wmul
    ___lwdiv->___wmul
    _LCD_setline->_LCD_sendbyte
    _LCD_sendstring->_LCD_sendbyte
    _LCD_clear->_LCD_sendbyte
    _LCD_Init->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                86    86      0   18263
                                             21 BANK0     86    86      0
                         _Comp1_init
                    _Interrupts_init
                           _LCD_Init
                          _LCD_clear
                     _LCD_sendstring
                        _LCD_setline
                  _LEDarray_disp_bin
                      _LEDarray_init
                         _Light_init
                        _Timer0_init
                            ___lwdiv
                            ___lwmod
                             ___wmul
                        _check_month
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    15      8    8708
                                              0 BANK0     21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7899
                                             83 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           24    18      6    7538
                                             62 COMRAM    21    15      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3867
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2195
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1083
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1992
                                              6 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     207
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              4     2      2     237
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1223
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _check_month                                         10     4      6    1572
                                             11 COMRAM    10     4      6
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                              6 COMRAM     5     1      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4    1074
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Light_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    2     0      2     426
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LCD_setline                                          1     1      0     958
                                              3 COMRAM     1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_sendstring                                       2     0      2    1111
                                              3 COMRAM     2     0      2
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_clear                                            1     1      0     914
                                              3 COMRAM     1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0    1002
                                              3 COMRAM     2     2      0
                       _LCD_sendbyte
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (2) _LCD_sendbyte                                         2     1      1     914
                                              1 COMRAM     2     1      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (3) _LCD_sendnibble                                       1     1      0      88
                                              0 COMRAM     1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (4) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comp1_init                                           0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Comp1_init
     _DAC_init
   _Interrupts_init
   _LCD_Init
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
     _LCD_sendnibble
   _LCD_clear
     _LCD_sendbyte
   _LCD_sendstring
     _LCD_sendbyte
   _LCD_setline
     _LCD_sendbyte
   _LEDarray_disp_bin
   _LEDarray_init
   _Light_init
   _Timer0_init
   ___lwdiv
     ___wmul (ARG)
   ___lwmod
     ___wmul (ARG)
   ___wmul
   _check_month
     ___lwmod
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
         _isdigit

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6B      81       5       80.6%
BITBIGSFRlhlhhh     84      0       0      40        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5B      5E       1      100.0%
BITBIGSFRllhhh      5C      0       0      44        0.0%
BITBIGSFRhhll       4A      0       0      34        0.0%
BITBIGSFRlll        3A      0       0      47        0.0%
BITBIGSFRlhll       21      0       0      43        0.0%
BITBIGSFRhhlhh      1B      0       0      33        0.0%
BITBIGSFRlhhhhl     14      0       0      37        0.0%
BITBIGSFRlhlhl      11      0       0      42        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRllhl        9      0       0      46        0.0%
BITBIGSFRlhlhhl      8      0       0      41        0.0%
BITBIGSFRlhhl        6      0       0      39        0.0%
BITBIGSFRlhhhl       3      0       0      38        0.0%
BITBIGSFRllhhl       1      0       0      45        0.0%
BITBIGSFRlhhhhl      1      0       0      36        0.0%
BITBIGSFRhl          1      0       0      35        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FF      48        0.0%
DATA                 0      0      FF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Nov 08 17:27:54 2022

                        l50 20B2                          l42 26A2                          l51 20B4  
                        l60 2120                          l52 20C8                          l61 2122  
                        l53 20CA                          l62 2136                          l54 20DE  
                        l63 2138                          l55 20E0                          l64 214C  
                        l56 20F4                          l48 209C                          l57 20F6  
                        l49 209E                          l66 214E                          l58 210A  
                        l59 210C                          l93 270E                          l96 26F0  
                        l99 2680         ___wmul@multiplicand 0003           ??_Interrupts_init 0001  
                       l301 2576                         l231 26C2                         l207 10A8  
                       l138 2708                         l307 25E0                         l255 1604  
                       l319 265A                         l281 2346                         l433 1CFA  
                       l274 26FE                         l290 25AC                         l283 235C  
                       l285 236A                         l277 231A                         l293 228E  
                       l446 1E5E                         l279 2330                         l288 2590  
                       l296 26DC                         l810 22FA                         l820 23C6  
                       l817 2302                         l827 23CE                         l997 2420  
                       _abs 24FE                         _pad 2150                         wreg 000FE8  
               main@changed 00C1                 main@datestr 0079                        l1111 1FBC  
                      l2000 1C22                        l1024 2194                        l1114 260C  
                      l1122 24B8                        l2010 1C92                        l2002 1C30  
                      l1027 21D6                        l1051 1B72                        l1035 195A  
                      ?_abs 0013                        l2100 26FC                        l1108 1FB4  
                      l2012 1CA4                        l2004 1C42                        l1029 21F8  
                      l1037 1962                        l2006 1C70                        l2014 1CAA  
                      l2030 1D32                        l2022 1CFC                        l1038 19A8  
                      l2110 1924                        l2102 18C0                        l2200 232A  
                      l2016 1CBA                        l2008 1C90                        l2040 1D9A  
                      l2032 1D40                        l2024 1D00                        l2120 197A  
                      l2112 1932                        l2104 18E0                        l1137 2086  
                      l1145 24FC                        l1073 18BE                        l2210 235E  
                      l2202 2332                        l2018 1CDA                        l2042 1DA8  
                      l2050 1E0E                        l2034 1D60                        l2026 1D0E  
                      l2130 19B0                        l2122 1980                        l2114 1934  
                      l2106 18F4                        l1083 2534                        l2212 2362  
                      l2204 2340                        l2300 239C                        l2052 1E1E  
                      l2044 1DD6                        l2036 1D7E                        l2028 1D2E  
                      l1148 2710                        l2060 215E                        l2140 1A4E  
                      l2132 19BA                        l2124 1990                        l2116 194E  
                      l2108 1904                        l2220 164A                        l2206 2348  
                      l2302 23B2                        l2054 1E3E                        l2046 1DF6  
                      l2038 1D86                        l1086 253C                        l2070 21B4  
                      l2062 2172                        l2150 1B1E                        l2134 19C0  
                      l2142 1AB2                        l2126 199C                        l2118 196A  
                      l2222 164E                        l2214 1606                        l2310 242E  
                      l1079 2472                        l2208 2356                        l2400 256C  
                      l2320 2088                        l2304 23BA                        l2080 25E2  
                      l2048 1E08                        l2072 21B8                        l2064 2180  
                      l2144 1ACC                        l2152 1B2C                        l2136 1A42  
                      l2128 19A4                        l2240 1722                        l2232 167A  
                      l2224 165A                        l2216 162E                        l2312 244A  
                      l2330 20EE                        l2322 2096                        l2306 23C0  
                      l2090 24AE                        l2170 1E98                        l2162 1E60  
                      l2074 21E4                        l2066 218C                        l2058 2150  
                      l2154 1B3C                        l2146 1AEA                        l2138 1A48  
                      l2250 176E                        l2242 1732                        l2226 165C  
                      l2234 16B2                        l2218 163C                        l2314 246A  
                      l2410 240E                        l2402 23D0                        l2420 25C8  
                      l2332 2104                        l2324 20AC                        l2340 270A  
                      l2500 2298                        l2092 24B2                        l2084 2474  
                      l2172 1ED0                        l2164 1E74                        l2076 24FE  
                      l2068 21A0                        l2156 1B42                        l2148 1B04  
                      l2260 1850                        l2252 17AA                        l2244 1740  
                      l2236 16C4                        l2228 166E                        l2308 2422  
                      l2404 23E2                        l2350 2674                        l2342 265C  
                      l2414 25AE                        l2334 211A                        l2326 20C2  
                      l2318 2682                        l2510 22CE                        l2502 22AA  
                      l2430 1322                        l2422 12D0                        l2086 2478  
                      l2174 1ED8                        l2078 2518                        l2158 1B52  
                      l2254 17BA                        l2246 1760                        l2238 16EC  
                      l2406 23EA                        l2280 26E4                        l2352 2676  
                      l2344 265E                        l2096 26F2                        l2416 25B2  
                      l2336 2130                        l2328 20D8                        l2360 26A4  
                      l2512 22E4                        l2504 22B2                        l2440 13AE  
                      l2432 133E                        l2424 12D0                        l2088 248C  
                      l2184 1F52                        l2176 1EE0                        l2168 1E78  
                      l2264 1880                        l2256 17DA                        l2408 23F2  
                      l2600 0F78                        l2282 26EE                        l2354 2678  
                      l2346 2670                        l2098 26F4                        l2194 2306  
                      l2290 25A4                        l2370 2212                        l2418 25C4  
                      l2338 2146                        l2362 26AC                        l2514 22EC  
                      l2506 22BA                        l2442 13BE                        l2450 1406  
                      l2434 135A                        l2426 12EA                        l2186 1F86  
                      l2178 1F18                        l2258 17FA                        l2610 10BC  
                      l2602 0F90                        l2356 267C                        l2348 2672  
                      l2196 2314                        l2284 257A                        l2380 224C  
                      l2372 222A                        l2364 26B6                        l2516 22EE  
                      l2508 22C8                        l2292 236C                        l2460 1492  
                      l2452 1422                        l2444 13CC                        l2436 1376  
                      l2428 1306                        l2188 1F98                        l2268 1892  
                      l2620 1102                        l2612 10D2                        l2604 0FAC  
                      l2278 26DE                        l2358 2700                        l2198 231C  
                      l2286 258A                        l2390 227A                        l2382 2252  
                      l2374 2230                        l2366 26C0                        l2518 22F4  
                      l2294 237E                        l2470 1536                        l2462 14A2  
                      l2454 143E                        l2446 13E8                        l2438 1392  
                      l2630 1146                        l2622 1112                        l2614 10D4  
                      l2606 0FDC                        l2288 2592                        l2392 2284  
                      l2384 225C                        l2376 223C                        l2368 21FA  
                      l2296 2386                        l2480 1594                        l2472 1542  
                      l2464 14B0                        l2456 145A                        l2448 13F8  
                      l2632 1158                        l2640 119A                        l2624 1114  
                      l2616 10DC                        l2608 1042                        l2560 0E6E  
                      l2386 2262                        l2378 2242                        l2394 2540  
                      l2298 238E                        l2482 15A4                        l2474 154A  
                      l2466 14DA                        l2458 1476                        l2650 11FC  
                      l2642 11AC                        l2634 116A                        l2618 10F0  
                      l2626 111E                        l2570 0EAE                        l2562 0E72  
                      l2554 0E28                        l2388 226C                        l2396 2550  
                      l2476 1566                        l2484 15B6                        l2468 1508  
                      l2724 16A4                        l2660 1248                        l2652 1212  
                      l2644 11C0                        l2636 1180                        l2628 1132  
                      l2580 0F00                        l2572 0EB4                        l2564 0E76  
                      l2556 0E5A                        l2494 26C4                        l2398 255A  
                      l2486 15D2                        l2478 1578                        l2726 1F02  
                      l1950 1FBE                        l2670 12AE                        l2662 125C  
                      l2654 1224                        l2646 11D4                        l2638 1196  
                      l2590 0F36                        l2582 0F0C                        l2574 0EDA  
                      l2566 0E7C                        l2558 0E6A                        l2496 26CE  
                      l2488 15E4                        l1960 2040                        l1952 1FD0  
                      l2672 12C0                        l2664 1270                        l2656 122A  
                      l2648 11E6                        l2592 0F3A                        l2584 0F16  
                      l2576 0EE6                        l2568 0EA2                        l2498 2290  
                      l1954 1FE2                        l1970 24DC                        l2666 1282  
                      l2658 1236                        l2594 0F56                        l2586 0F2A  
                      l2578 0EFC                        l1972 2636                        l1980 1B78  
                      l1956 1FEC                        l1964 24BA                        l2668 1298  
                      l2596 0F6C                        l2588 0F32                        l1974 2652  
                      l1990 1BD8                        l1982 1B86                        l1958 200A  
                      l1966 24C6                        l2598 0F74                        ?_pad 0011  
                      l1992 1BDC                        l1984 1BA6                        l1968 24D8  
                      l1994 1BE8                        l1986 1BAA                        l1978 1B74  
                      l1996 1C06                        l1988 1BB8                        l1998 1C0E  
                      STR_1 0E1F                        STR_2 0E1F                        STR_3 0E01  
                      STR_4 0E13                        u2000 20AC                        u2001 20A8  
                      u2010 20C2                        u2011 20BE                        u2100 25E0  
                      u2020 20D8                        u2101 25DC                        u2021 20D4  
                      u2030 20EE                        u2110 12EA                        u2031 20EA  
                      u2111 12E6                        u2040 2104                        u2200 1422  
                      u2120 1306                        u1400 1FE2                        u2041 2100  
                      u2201 141E                        u2121 1302                        u1401 1FDE  
                      u2050 211A                        u2210 143E                        u2130 1322  
                      u1410 200A                        u2051 2116                        u2211 143A  
                      u2131 131E                        u1411 2006                        u2060 2130  
                      u2300 1594                        u2220 145A                        u2140 133E  
                      u1500 1CBA                        u1420 2040                        u2061 212C  
                      u2301 1590                        u2221 1456                        u2141 133A  
                      u1501 1CB6                        u1421 203C                        u2070 2146  
                      u2310 15D2                        u2230 1476                        u2150 135A  
                      u1510 1D0E                        u1430 24FC                        u2071 2142  
                      u2311 15CE                        u2231 1472                        u2151 1356  
                      u1511 1D0A                        u1431 24F8                        u2080 2550  
                      u2320 15E4                        u2240 1492                        u2160 1376  
                      u1440 1B86                        u1520 1D40                        u1600 21E4  
                      u2081 254C                        u2321 15E0                        u2241 148E  
                      u2161 1372                        u1441 1B82                        u1521 1D3C  
                      u1601 21E0                        u2090 256C                        u2330 1600  
                      u2250 14DA                        u2170 1392                        u1450 1BB8  
                      u1530 1D7E                        u1610 2518                        u2091 2568  
                      u2331 15FC                        u2251 14D6                        u2171 138E  
                      u1451 1BB4                        u1531 1D7A                        u1611 2514  
                      u2340 22AA                        u2260 1508                        u2180 13AE  
                      u1620 2606                        u1540 1DA8                        u1700 194E  
                      u2500 0F90                        u2341 22A6                        u2261 1504  
                      u2181 13AA                        u1621 2600                        u1461 1BE2  
                      u1541 1DA4                        u1701 194A                        u2501 0F8C  
                      u2350 22C8                        u2270 1536                        u2190 13E8  
                      u1630 2608                        u1470 1C06                        u1550 1DD6  
                      u1390 1FD0                        u1710 197A                        u2510 10BC  
                      u2351 22C4                        u2271 1532                        u2191 13E4  
                      u1471 1C02                        u1551 1DD2                        u1391 1FCC  
                      u1711 1976                        u2511 10B8                        u2360 22E4  
                      u2280 1566                        u1640 248C                        u1800 1ECC  
                      u1480 1C30                        u1560 1E1E                        u1720 1990  
                      u2600 1180                        u2520 10D2                        u2361 22E0  
                      u2281 1562                        u1641 2488                        u1801 1EC8  
                      u1481 1C2C                        u1561 1E1A                        u1721 198C  
                      u2601 117C                        u2521 10CE                        u2290 1578  
                      u1650 24AE                        u1810 1F86                        u1490 1C70  
                      u1570 215E                        u1730 1ACC                        u2610 1196  
                      u2530 10F0                        u2291 1574                        u1651 24AA  
                      u1811 1F82                        u1491 1C6C                        u1571 215A  
                      u1731 1AC8                        u2611 1192                        u2531 10EC  
                      u1820 1F98                        u1580 2180                        u1740 1AEA  
                      u1660 18F0                        u1900 1732                        u2700 125C  
                      u2620 11AC                        u2540 1102                        u1821 1F94  
                      u1581 217C                        u1741 1AE6                        u1661 18EA  
                      u1901 172E                        u2701 1258                        u2621 11A8  
                      u2541 10FE                        u1830 2314                        u1590 21D6  
                      u1750 1B04                        u1670 18F2                        u1910 17AA  
                      u2710 1270                        u2630 11C0                        u2550 1112  
                      u2470 0EFC                        u1831 2310                        u1591 21D2  
                      u1751 1B00                        u1911 17A6                        u2711 126C  
                      u2631 11BC                        u2551 110E                        u2471 0EF8  
                      u1840 232A                        u1760 1B1E                        u1680 1904  
                      u1920 17DA                        u2720 1282                        u2640 11D4  
                      u2560 1132                        u2480 0F2A                        u1841 2326  
                      u1761 1B1A                        u1681 1900                        u1921 17D6  
                      u2721 127E                        u2641 11D0                        u2561 112E  
                      u2481 0F26                        u1850 2340                        u1770 1B2C  
                      u1690 1932                        u1930 17FA                        u2730 1298  
                      u2650 11E6                        u2570 1146                        u2490 0F6C  
                      u1851 233C                        u1771 1B28                        u1691 192E  
                      u1931 17F6                        u2731 1294                        u2651 11E2  
                      u2571 1142                        u2491 0F68                        u1860 2356  
                      u1940 258A                        u1780 1B3C                        u2740 12AE  
                      u2660 11FC                        u2580 1158                        u1861 2352  
                      u1941 2586                        u1781 1B38                        u2741 12AA  
                      u2661 11F8                        u2581 1154                        u1950 237E  
                      u1790 1E98                        u1870 162E                        u2750 12C0  
                      u2670 1212                        u2590 116A                        u2807 224E  
                      u1951 237A                        u1791 1E94                        u1871 162A  
                      u2751 12BC                        u2671 120E                        u2591 1166  
                      u1960 239C                        u1880 16C4                        u2680 1224  
                      u2817 225E                        u1961 2398                        u1881 16C0  
                      u2681 1220                        u1970 23B2                        u1890 16EC  
                      u2690 1248                        u2827 2272                        u1971 23AE  
                      u1891 16E8                        u2691 1244                        u1980 246A  
                      u2837 25A6                        u1981 2466                        u1990 2096  
                      u2847 2364                        u2767 26D4                        u1991 2092  
                      u2857 26F6                        u2777 221C                        u2787 2232  
                      u2797 223E                        abs@a 0013                        _dbuf 0100  
                      _atoi 1E60                        _main 0E28                        _dtoa 18C0  
                      _hour 00DF                        _prec 005C                        pad@i 0018  
                      pad@p 0015                        fsr1h 000FE2                        fsr2h 000FDA  
                      indf2 000FDF                        fsr1l 000FE1                        pad@w 001A  
                      fsr2l 000FD9                        btemp 005F                ?_LCD_setline 0001  
                      prodh 000FF4                        prodl 000FF3                 main@yearstr 00AB  
                      start 00C8            __end_of_DAC_init 26F2             __end_of_HighISR 00C8  
              ___param_bank 000000                  _Comp1_init 265C                       ??_abs 0015  
                     ??_pad 0017            __end_of_LCD_Init 2290             __end_of___aodiv 1CFC  
                     ?_atoi 0007                       ?_main 0001                       ?_dtoa 001C  
           __end_of___aomod 1E60                       _ADPCH 000F5F             __end_of___lwdiv 2304  
           __end_of___lwmod 23D0                       i2l150 00A6                       i2l151 00BC  
                     i2l152 00BE                       i2l145 005E                       i2l153 00C4  
                     i2l146 00C0                vfpfcnvrt@fmt 0041                       _TMR0H 000FD4  
                     _TMR0L 000FD3        check_month@leap_year 0014                       _flags 005E  
                     _fputc 1FBE                       _fputs 24BA             __end_of_isdigit 260E  
                     atoi@n 000E                       pad@fp 0011                       atoi@s 0007  
                     _width 00CB                       _putch 2710                       dtoa@d 001E  
                     dtoa@i 003C                       dtoa@n 0034                       dtoa@p 0030  
                     dtoa@s 003E                       dtoa@w 0032             __end_of_isspace 24BA  
             ?_LCD_sendbyte 0002                       tablat 000FF5                       ttemp5 0060  
                     ttemp6 0063                       ttemp7 0067                       status 000FD8  
                     wtemp8 0060             __end_of_sprintf 2422        check_month@month_day 000E  
           __initialization 260E                __end_of_atoi 1FBE                __end_of_main 12D0  
              __end_of_dtoa 1B74                  _Light_init 270A            _daylight_end_min 00D1  
         __end_of_LCD_E_TOG 2700                      ??_atoi 0009                      ??_main 0075  
                    ??_dtoa 0026               __activetblptr 000003           __end_of_LCD_clear 26DE  
                    ?_fputc 0001                      ?_fputs 000A                      _ADRESH 000F64  
            ??_LCD_sendbyte 0003                      ?_putch 0001                      i2l2540 002C  
                    i2l2532 000A                      i2l2550 0090                      i2l2542 003A  
                    i2l2534 001A                      i2l2552 00B6                      i2l2544 0048  
                    i2l2536 0022                      i2l2546 006C                      i2l2538 0028  
                    i2l2548 007C               vfpfcnvrt@done 0050                   ??_HighISR 0001  
                    _TMR0IE 00714D                      _TMR0IF 00719D           _LEDarray_disp_bin 2088  
        ?_LEDarray_disp_bin 0001               ??_Timer0_init 0001                vfprintf@cfmt 005A  
                 ??___aodiv 0011                   ??___aomod 0011                      ___wmul 2636  
               ?_Comp1_init 0001                   ??___lwdiv 000B                   ??___lwmod 000B  
       ??_LEDarray_disp_bin 0003                      clear_0 2614                      clear_1 2620  
             main@month_day 00C9                      _minute 00DD                      isa$std 000001  
                    pad@buf 0013                      dtoa@fp 001C                      fputc@c 0001  
                    fputs@c 000E                      fputs@i 000F                      fputs@s 000A  
                 ??_isdigit 0003                __mediumconst 0000                   ??_isspace 0003  
                    tblptrh 000FF7                      tblptrl 000FF6                      tblptru 000FF8  
                    putch@c 0001                   ?_DAC_init 0001            __end_of_vfprintf 2474  
                 ??_sprintf 005C             _current_day_min 00D9   __end_of_LEDarray_disp_bin 2150  
                __accesstop 0060     __end_of__initialization 262C                   ?_LCD_Init 0001  
           check_month@year 0010               ___rparam_used 000001               _LEDarray_init 2682  
           _Interrupts_init 2700              __pcstackCOMRAM 0001                 ?_Light_init 0001  
             __end_of_fputc 2088               __end_of_fputs 24FE               __end_of_putch 2712  
       __end_of_Timer0_init 26C4           _daylight_end_hour 00D3                  ??_DAC_init 0001  
                   ??_fputc 0005                     ??_fputs 000E                     ??_putch 0001  
                __pbssBANK0 00CB                  __pbssBANK1 0100                  ??_LCD_Init 0004  
            _LCD_sendnibble 2304              ?_LEDarray_init 0001              _LCD_sendstring 25AE  
       _daylight_start_hour 00D7                     ?___wmul 0001        __end_of_LCD_sendbyte 25AE  
    __end_of_LCD_sendnibble 236C     __end_of_Interrupts_init 270A                     _HighISR 0008  
    __end_of_LCD_sendstring 25E2                   _ADREFbits 000F58                     __Hparam 0000  
                   __Lparam 0000                 _Timer0_init 26A4                     ___aodiv 1B74  
                   ___aomod 1CFC                     ___lwdiv 2290                     ___lwmod 236C  
                 ?_vfprintf 0054                __psmallconst 0E00                     __pcinit 260E  
                   __ramtop 0E00                     __ptext0 0E28                     __ptext1 23D0  
                   __ptext2 2422                     __ptext3 1606                     __ptext4 18C0  
                   __ptext5 2150                     __ptext6 24BA                     __ptext7 1FBE  
                   __ptext8 2710                     __ptext9 24FE                     _isdigit 25E2  
             ??_check_month 0012                     _isspace 2474                   _LCD_E_TOG 26F2  
           LCD_setline@line 0004                     atoi@neg 000C                     main@day 00C5  
                   _sprintf 23D0                   _LCD_clear 26C4        end_of_initialization 262C  
           ?_LCD_sendnibble 0001       main@OneAmToFiveAmFlag 00BF                     fputc@fp 0003  
           ??_LEDarray_init 0001                     fputs@fp 000C             ?_LCD_sendstring 0004  
         __end_of_vfpfcnvrt 18C0                     postdec2 000FDD                ??_Comp1_init 0001  
                   postinc0 000FEE                     postinc1 000FE6                     postinc2 000FDE  
          vfpfcnvrt@convarg 0048                  ??_vfprintf 005A            _current_day_hour 00DB  
                ?_LCD_E_TOG 0001                   _TRISAbits 000F81                   _TRISBbits 000F82  
                 _TRISCbits 000F83                   _TRISEbits 000F85                   _TRISFbits 000F86  
                 _TRISGbits 000F87                   _TRISHbits 000F88  _calculated_solar_noon_hour 00CF  
          check_month@month 000C                  ?_LCD_clear 0001         __end_of_check_month 1606  
        __end_of_Comp1_init 2682                 _CM1CON0bits 000ED0                 _CM1CON1bits 000ED1  
          ?_Interrupts_init 0001                ??_Light_init 0001                 vfpfcnvrt@ap 0043  
               vfpfcnvrt@cp 0052                 vfpfcnvrt@fp 003F              __end_of___wmul 265C  
      LCD_sendnibble@number 0001         start_initialization 260E                 __end_of_abs 253E  
               __end_of_pad 21FA          __end_of_Light_init 2710                _LCD_sendbyte 2578  
             ??_LCD_setline 0004                 vfprintf@fmt 0056        LCD_sendstring@string 0004  
                  ??___wmul 0005                 __pbssCOMRAM 005C                 _check_month 12D0  
               ??_LCD_E_TOG 0001               __pcstackBANK0 0060            ___aodiv@dividend 0001  
               ??_LCD_clear 0004                    ?_HighISR 0001            ___lwdiv@dividend 0007  
                 _dtoa$1885 002E                ?_Timer0_init 0001          _daylight_start_min 00D5  
                 __pintcode 0008                    ?___aodiv 0001                    ?___aomod 0001  
          ___aodiv@quotient 0013         __end_of_LCD_setline 2578                    ?___lwdiv 0007  
                  ?___lwmod 0007                 __smallconst 0E00                    ?_isdigit 0001  
                  ?_isspace 0001            ??_LCD_sendnibble 0001                    _DAC_init 26DE  
          ___lwdiv@quotient 000B            ??_LCD_sendstring 0006                    ?_sprintf 0060  
          LCD_sendbyte@Byte 0003                    _LCD_Init 21FA            LCD_sendbyte@type 0002  
            ___wmul@product 0005                    _LATAbits 000F79                    _LATBbits 000F7A  
                  _LATCbits 000F7B                    _LATEbits 000F7D                    _LATFbits 000F7E  
                  _LATGbits 000F7F                    _LATHbits 000F80                    i2u240_40 001A  
                  i2u240_41 0016                    i2u241_40 003A                    i2u241_41 0036  
                  i2u242_40 0048                    i2u242_41 0044                    i2u243_40 006C  
                  i2u243_41 0068                    i2u244_40 0090                    i2u244_41 008C  
                  i2u245_40 00A6                    i2u245_41 00A2                    i2u246_40 00B6  
                  i2u246_41 00B2                    _PIR2bits 000E35                   _vfpfcnvrt 1606  
                _ADCON0bits 000F60           ___wmul@multiplier 0001                   main@month 00C7  
              _isspace$1934 0005                  _CM1NCHbits 000ED2                  _CM1PCHbits 000ED3  
     __end_of_LEDarray_init 26A4                 _LCD_setline 253E                    __Hrparam 0000  
                vfprintf@ap 0058                    __Lrparam 0000                  vfprintf@fp 0054  
                ?_vfpfcnvrt 003F             ___aodiv@divisor 0009             ___aodiv@counter 0011  
                _ANSELAbits 000E92                  _ANSELFbits 000EB4                  sprintf@fmt 0062  
                _T0CON0bits 000FD5                  _T0CON1bits 000FD6             ___lwdiv@divisor 0009  
           ___lwdiv@counter 000D                    __ptext10 1CFC                    __ptext11 1B74  
                  __ptext20 270A                    __ptext12 1E60                    __ptext21 2682  
                  __ptext13 2474                    __ptext30 2700                    __ptext22 2088  
                  __ptext14 25E2                    __ptext31 265C                    __ptext23 253E  
                  __ptext15 2636                    __ptext32 26DE                    __ptext24 25AE  
                  __ptext16 12D0                    __ptext25 26C4                    __ptext17 236C  
                  __ptext26 21FA                    __ptext18 2290                    __ptext27 2578  
                  __ptext19 26A4                    __ptext28 2304                    __ptext29 26F2  
   LEDarray_disp_bin@number 0001                    isa$xinst 000000                    int$flags 005F  
                  _vfprintf 2422                    main@year 00C3            ___aomod@dividend 0001  
                _INTCONbits 000FF2                ?_check_month 000C                    isdigit@c 0001  
                  intlevel2 0000                   sprintf@ap 0068                _DAC1CON0bits 000EC6  
              _DAC1CON1bits 000EC7            ___lwmod@dividend 0007                    isspace@c 0001  
           ___aomod@divisor 0009                 ??_vfpfcnvrt 0045             ___aomod@counter 0011  
                  sprintf@f 006A                    sprintf@s 0060   _calculated_solar_noon_min 00CD  
           ___lwmod@divisor 0009             ___lwmod@counter 000B                ___aodiv@sign 0012  
              ___aomod@sign 0012  



Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Nov 08 23:19:47 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    50                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    51                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    53   000000                     
    54                           ; Version 2.35
    55                           ; Generated 05/05/2021 GMT
    56                           ; 
    57                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution. Publication is not required when
    71                           ;        this file is used in an embedded application.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F67K40 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89   000000                     
    90                           	psect	idataBANK0
    91   00285C                     __pidataBANK0:
    92                           	callstack 0
    93                           
    94                           ;initializer for _minute
    95   00285C  000F               	dw	15
    96                           
    97                           ;initializer for _hour
    98   00285E  0015               	dw	21
    99   000000                     _TRISEbits	set	3973
   100   000000                     _TRISCbits	set	3971
   101   000000                     _LATEbits	set	3965
   102   000000                     _LATCbits	set	3963
   103   000000                     _T0CON0bits	set	4053
   104   000000                     _T0CON1bits	set	4054
   105   000000                     _CM1CON1bits	set	3793
   106   000000                     _TRISDbits	set	3972
   107   000000                     _LATDbits	set	3964
   108   000000                     _LATHbits	set	3968
   109   000000                     _LATBbits	set	3962
   110   000000                     _LATFbits	set	3966
   111   000000                     _TRISBbits	set	3970
   112   000000                     _TRISFbits	set	3974
   113   000000                     _TRISGbits	set	3975
   114   000000                     _ANSELAbits	set	3730
   115   000000                     _TRISAbits	set	3969
   116   000000                     _TMR0IE	set	29005
   117   000000                     _ANSELFbits	set	3764
   118   000000                     _ADREFbits	set	3928
   119   000000                     _ADPCH	set	3935
   120   000000                     _ADRESH	set	3940
   121   000000                     _ADCON0bits	set	3936
   122   000000                     _LATAbits	set	3961
   123   000000                     _LATGbits	set	3967
   124   000000                     _TMR0L	set	4051
   125   000000                     _TMR0H	set	4052
   126   000000                     _INTCONbits	set	4082
   127   000000                     _TRISHbits	set	3976
   128   000000                     _DAC1CON0bits	set	3782
   129   000000                     _CM1CON0bits	set	3792
   130   000000                     _CM1NCHbits	set	3794
   131   000000                     _DAC1CON1bits	set	3783
   132   000000                     _CM1PCHbits	set	3795
   133   000000                     _TMR0IF	set	29085
   134   000000                     _PIR2bits	set	3637
   135                           
   136                           	psect	smallconst
   137   000E00                     __psmallconst:
   138                           	callstack 0
   139   000E00  00                 	db	0
   140   000E01                     
   141                           ; BSR set to: 14
   142   000E01  56                 	db	86	;'V'
   143   000E02  6F                 	db	111	;'o'
   144   000E03  6C                 	db	108	;'l'
   145   000E04  74                 	db	116	;'t'
   146   000E05  61                 	db	97	;'a'
   147   000E06  67                 	db	103	;'g'
   148   000E07  65                 	db	101	;'e'
   149   000E08  20                 	db	32
   150   000E09  3D                 	db	61	;'='
   151   000E0A  20                 	db	32
   152   000E0B  25                 	db	37
   153   000E0C  64                 	db	100	;'d'
   154   000E0D  2E                 	db	46
   155   000E0E  25                 	db	37
   156   000E0F  30                 	db	48	;'0'
   157   000E10  32                 	db	50	;'2'
   158   000E11  64                 	db	100	;'d'
   159   000E12  00                 	db	0
   160   000E13                     STR_1:
   161                           
   162                           ; BSR set to: 14
   163   000E13  25                 	db	37
   164   000E14  64                 	db	100	;'d'
   165   000E15  2D                 	db	45
   166   000E16  25                 	db	37
   167   000E17  64                 	db	100	;'d'
   168   000E18  2D                 	db	45
   169   000E19  25                 	db	37
   170   000E1A  64                 	db	100	;'d'
   171   000E1B  20                 	db	32
   172   000E1C  20                 	db	32
   173   000E1D  20                 	db	32
   174   000E1E  20                 	db	32
   175   000E1F  20                 	db	32
   176   000E20  25                 	db	37
   177   000E21  64                 	db	100	;'d'
   178   000E22  00                 	db	0
   179   000E23                     
   180                           ; BSR set to: 14
   181   000E23  67                 	db	103	;'g'
   182   000E24  65                 	db	101	;'e'
   183   000E25  74                 	db	116	;'t'
   184   000E26  76                 	db	118	;'v'
   185   000E27  61                 	db	97	;'a'
   186   000E28  6C                 	db	108	;'l'
   187   000E29  20                 	db	32
   188   000E2A  3D                 	db	61	;'='
   189   000E2B  20                 	db	32
   190   000E2C  25                 	db	37
   191   000E2D  64                 	db	100	;'d'
   192   000E2E  00                 	db	0
   193   000E2F                     STR_2:
   194                           
   195                           ; BSR set to: 14
   196   000E2F  25                 	db	37
   197   000E30  64                 	db	100	;'d'
   198   000E31  3A                 	db	58	;':'
   199   000E32  25                 	db	37
   200   000E33  64                 	db	100	;'d'
   201   000E34  00                 	db	0
   202   000E35  00                 	db	0	; dummy byte at the end
   203   000000                     
   204                           ; #config settings
   205                           
   206                           	psect	cinit
   207   00259C                     __pcinit:
   208                           	callstack 0
   209   00259C                     start_initialization:
   210                           	callstack 0
   211   00259C                     __initialization:
   212                           	callstack 0
   213                           
   214                           ; Initialize objects allocated to BANK0 (4 bytes)
   215                           ; load TBLPTR registers with __pidataBANK0
   216   00259C  0E5C               	movlw	low __pidataBANK0
   217   00259E  6EF6               	movwf	tblptrl,c
   218   0025A0  0E28               	movlw	high __pidataBANK0
   219   0025A2  6EF7               	movwf	tblptrh,c
   220   0025A4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   221   0025A6  6EF8               	movwf	tblptru,c
   222   0025A8  EE00  F0E3         	lfsr	0,__pdataBANK0
   223   0025AC  EE10 F004          	lfsr	1,4
   224   0025B0                     copy_data0:
   225   0025B0  0009               	tblrd		*+
   226   0025B2  CFF5 FFEE          	movff	tablat,postinc0
   227   0025B6  50E5               	movf	postdec1,w,c
   228   0025B8  50E1               	movf	fsr1l,w,c
   229   0025BA  E1FA               	bnz	copy_data0
   230                           
   231                           ; Clear objects allocated to BANK1 (32 bytes)
   232   0025BC  EE01  F000         	lfsr	0,__pbssBANK1
   233   0025C0  0E20               	movlw	32
   234   0025C2                     clear_0:
   235   0025C2  6AEE               	clrf	postinc0,c
   236   0025C4  06E8               	decf	wreg,f,c
   237   0025C6  E1FD               	bnz	clear_0
   238                           
   239                           ; Clear objects allocated to BANK0 (18 bytes)
   240   0025C8  EE00  F0D1         	lfsr	0,__pbssBANK0
   241   0025CC  0E12               	movlw	18
   242   0025CE                     clear_1:
   243   0025CE  6AEE               	clrf	postinc0,c
   244   0025D0  06E8               	decf	wreg,f,c
   245   0025D2  E1FD               	bnz	clear_1
   246                           
   247                           ; Clear objects allocated to COMRAM (3 bytes)
   248   0025D4  6A5E               	clrf	(__pbssCOMRAM+2)& (0+255),c
   249   0025D6  6A5D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   250   0025D8  6A5C               	clrf	__pbssCOMRAM& (0+255),c
   251   0025DA                     end_of_initialization:
   252                           	callstack 0
   253   0025DA                     __end_of__initialization:
   254                           	callstack 0
   255   0025DA  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   256   0025DC  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   257   0025DE  0100               	movlb	0
   258   0025E0  EF1B  F007         	goto	_main	;jump to C main() function
   259                           
   260                           	psect	bssCOMRAM
   261   00005C                     __pbssCOMRAM:
   262                           	callstack 0
   263   00005C                     _prec:
   264                           	callstack 0
   265   00005C                     	ds	2
   266   00005E                     _flags:
   267                           	callstack 0
   268   00005E                     	ds	1
   269                           
   270                           	psect	bssBANK0
   271   0000D1                     __pbssBANK0:
   272                           	callstack 0
   273   0000D1                     _width:
   274                           	callstack 0
   275   0000D1                     	ds	2
   276   0000D3                     _calculated_solar_noon_min:
   277                           	callstack 0
   278   0000D3                     	ds	2
   279   0000D5                     _calculated_solar_noon_hour:
   280                           	callstack 0
   281   0000D5                     	ds	2
   282   0000D7                     _daylight_end_min:
   283                           	callstack 0
   284   0000D7                     	ds	2
   285   0000D9                     _daylight_end_hour:
   286                           	callstack 0
   287   0000D9                     	ds	2
   288   0000DB                     _daylight_start_min:
   289                           	callstack 0
   290   0000DB                     	ds	2
   291   0000DD                     _daylight_start_hour:
   292                           	callstack 0
   293   0000DD                     	ds	2
   294   0000DF                     _current_day_min:
   295                           	callstack 0
   296   0000DF                     	ds	2
   297   0000E1                     _current_day_hour:
   298                           	callstack 0
   299   0000E1                     	ds	2
   300                           
   301                           	psect	dataBANK0
   302   0000E3                     __pdataBANK0:
   303                           	callstack 0
   304   0000E3                     _minute:
   305                           	callstack 0
   306   0000E3                     	ds	2
   307   0000E5                     _hour:
   308                           	callstack 0
   309   0000E5                     	ds	2
   310                           
   311                           	psect	bssBANK1
   312   000100                     __pbssBANK1:
   313                           	callstack 0
   314   000100                     _dbuf:
   315                           	callstack 0
   316   000100                     	ds	32
   317                           
   318                           	psect	cstackBANK0
   319   000060                     __pcstackBANK0:
   320                           	callstack 0
   321   000060                     ?_sprintf:
   322                           	callstack 0
   323   000060                     sprintf@s:
   324                           	callstack 0
   325                           
   326                           ; 2 bytes @ 0x0
   327   000060                     	ds	2
   328   000062                     sprintf@fmt:
   329                           	callstack 0
   330                           
   331                           ; 2 bytes @ 0x2
   332   000062                     	ds	10
   333   00006C                     sprintf@ap:
   334                           	callstack 0
   335                           
   336                           ; 2 bytes @ 0xC
   337   00006C                     	ds	2
   338   00006E                     sprintf@f:
   339                           	callstack 0
   340                           
   341                           ; 11 bytes @ 0xE
   342   00006E                     	ds	11
   343   000079                     ??_main:
   344                           
   345                           ; 1 bytes @ 0x19
   346   000079                     	ds	4
   347   00007D                     main@datestr:
   348                           	callstack 0
   349                           
   350                           ; 50 bytes @ 0x1D
   351   00007D                     	ds	50
   352   0000AF                     main@yearstr:
   353                           	callstack 0
   354                           
   355                           ; 20 bytes @ 0x4F
   356   0000AF                     	ds	20
   357   0000C3                     main@OneAmToFiveAmFlag:
   358                           	callstack 0
   359                           
   360                           ; 2 bytes @ 0x63
   361   0000C3                     	ds	2
   362   0000C5                     main@changed:
   363                           	callstack 0
   364                           
   365                           ; 2 bytes @ 0x65
   366   0000C5                     	ds	2
   367   0000C7                     main@year:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0x67
   371   0000C7                     	ds	2
   372   0000C9                     main@daily_correction:
   373                           	callstack 0
   374                           
   375                           ; 2 bytes @ 0x69
   376   0000C9                     	ds	2
   377   0000CB                     main@day:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0x6B
   381   0000CB                     	ds	2
   382   0000CD                     main@month:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0x6D
   386   0000CD                     	ds	2
   387   0000CF                     main@month_day:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x6F
   391   0000CF                     	ds	2
   392                           
   393                           	psect	cstackCOMRAM
   394   000001                     __pcstackCOMRAM:
   395                           	callstack 0
   396   000001                     ?_isdigit:
   397                           	callstack 0
   398   000001                     ?_isspace:
   399                           	callstack 0
   400   000001                     ?___wmul:
   401                           	callstack 0
   402   000001                     ?___aodiv:
   403                           	callstack 0
   404   000001                     ?___aomod:
   405                           	callstack 0
   406   000001                     LCD_sendnibble@number:
   407                           	callstack 0
   408   000001                     LEDarray_disp_bin@number:
   409                           	callstack 0
   410   000001                     ___wmul@multiplier:
   411                           	callstack 0
   412   000001                     isdigit@c:
   413                           	callstack 0
   414   000001                     isspace@c:
   415                           	callstack 0
   416   000001                     fputc@c:
   417                           	callstack 0
   418   000001                     ___aodiv@dividend:
   419                           	callstack 0
   420   000001                     ___aomod@dividend:
   421                           	callstack 0
   422                           
   423                           ; 8 bytes @ 0x0
   424   000001                     	ds	1
   425   000002                     LCD_sendbyte@type:
   426                           	callstack 0
   427                           
   428                           ; 1 bytes @ 0x1
   429   000002                     	ds	1
   430   000003                     ??_isdigit:
   431   000003                     ??_isspace:
   432   000003                     LCD_sendbyte@Byte:
   433                           	callstack 0
   434   000003                     ___wmul@multiplicand:
   435                           	callstack 0
   436   000003                     fputc@fp:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x2
   440   000003                     	ds	1
   441   000004                     ??_LCD_Init:
   442   000004                     ??_LCD_clear:
   443   000004                     LCD_setline@line:
   444                           	callstack 0
   445   000004                     LCD_sendstring@string:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x3
   449   000004                     	ds	1
   450   000005                     ??_fputc:
   451   000005                     _isspace$2034:
   452                           	callstack 0
   453   000005                     ___wmul@product:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0x4
   457   000005                     	ds	1
   458   000006                     
   459                           ; 1 bytes @ 0x5
   460   000006                     	ds	1
   461   000007                     ?_atoi:
   462                           	callstack 0
   463   000007                     ?___lwdiv:
   464                           	callstack 0
   465   000007                     ?___lwmod:
   466                           	callstack 0
   467   000007                     ___lwdiv@dividend:
   468                           	callstack 0
   469   000007                     ___lwmod@dividend:
   470                           	callstack 0
   471   000007                     atoi@s:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0x6
   475   000007                     	ds	2
   476   000009                     ??_atoi:
   477   000009                     ___lwdiv@divisor:
   478                           	callstack 0
   479   000009                     ___lwmod@divisor:
   480                           	callstack 0
   481   000009                     ___aodiv@divisor:
   482                           	callstack 0
   483   000009                     ___aomod@divisor:
   484                           	callstack 0
   485                           
   486                           ; 8 bytes @ 0x8
   487   000009                     	ds	1
   488   00000A                     fputs@s:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0x9
   492   00000A                     	ds	1
   493   00000B                     ___lwmod@counter:
   494                           	callstack 0
   495   00000B                     ___lwdiv@quotient:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0xA
   499   00000B                     	ds	1
   500   00000C                     check_month@month:
   501                           	callstack 0
   502   00000C                     atoi@neg:
   503                           	callstack 0
   504   00000C                     fputs@fp:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0xB
   508   00000C                     	ds	1
   509   00000D                     ___lwdiv@counter:
   510                           	callstack 0
   511                           
   512                           ; 1 bytes @ 0xC
   513   00000D                     	ds	1
   514   00000E                     fputs@c:
   515                           	callstack 0
   516   00000E                     check_month@month_day:
   517                           	callstack 0
   518   00000E                     atoi@n:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0xD
   522   00000E                     	ds	1
   523   00000F                     fputs@i:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0xE
   527   00000F                     	ds	1
   528   000010                     check_month@year:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0xF
   532   000010                     	ds	1
   533   000011                     ___aodiv@counter:
   534                           	callstack 0
   535   000011                     ___aomod@counter:
   536                           	callstack 0
   537   000011                     pad@fp:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x10
   541   000011                     	ds	1
   542   000012                     ??_check_month:
   543   000012                     ___aodiv@sign:
   544                           	callstack 0
   545   000012                     ___aomod@sign:
   546                           	callstack 0
   547                           
   548                           ; 1 bytes @ 0x11
   549   000012                     	ds	1
   550   000013                     ?_abs:
   551                           	callstack 0
   552   000013                     pad@buf:
   553                           	callstack 0
   554   000013                     abs@a:
   555                           	callstack 0
   556   000013                     ___aodiv@quotient:
   557                           	callstack 0
   558                           
   559                           ; 8 bytes @ 0x12
   560   000013                     	ds	1
   561   000014                     check_month@leap_year:
   562                           	callstack 0
   563                           
   564                           ; 2 bytes @ 0x13
   565   000014                     	ds	1
   566   000015                     ??_abs:
   567   000015                     pad@p:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x14
   571   000015                     	ds	2
   572   000017                     ??_pad:
   573                           
   574                           ; 1 bytes @ 0x16
   575   000017                     	ds	1
   576   000018                     pad@i:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x17
   580   000018                     	ds	2
   581   00001A                     pad@w:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x19
   585   00001A                     	ds	2
   586   00001C                     dtoa@fp:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0x1B
   590   00001C                     	ds	2
   591   00001E                     dtoa@d:
   592                           	callstack 0
   593                           
   594                           ; 8 bytes @ 0x1D
   595   00001E                     	ds	8
   596   000026                     ??_dtoa:
   597                           
   598                           ; 1 bytes @ 0x25
   599   000026                     	ds	8
   600   00002E                     _dtoa$1985:
   601                           	callstack 0
   602                           
   603                           ; 2 bytes @ 0x2D
   604   00002E                     	ds	2
   605   000030                     dtoa@p:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x2F
   609   000030                     	ds	2
   610   000032                     dtoa@w:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x31
   614   000032                     	ds	2
   615   000034                     dtoa@n:
   616                           	callstack 0
   617                           
   618                           ; 8 bytes @ 0x33
   619   000034                     	ds	8
   620   00003C                     dtoa@i:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x3B
   624   00003C                     	ds	2
   625   00003E                     dtoa@s:
   626                           	callstack 0
   627                           
   628                           ; 1 bytes @ 0x3D
   629   00003E                     	ds	1
   630   00003F                     vfpfcnvrt@fp:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x3E
   634   00003F                     	ds	2
   635   000041                     vfpfcnvrt@fmt:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x40
   639   000041                     	ds	2
   640   000043                     vfpfcnvrt@ap:
   641                           	callstack 0
   642                           
   643                           ; 2 bytes @ 0x42
   644   000043                     	ds	2
   645   000045                     ??_vfpfcnvrt:
   646                           
   647                           ; 1 bytes @ 0x44
   648   000045                     	ds	3
   649   000048                     vfpfcnvrt@convarg:
   650                           	callstack 0
   651                           
   652                           ; 8 bytes @ 0x47
   653   000048                     	ds	8
   654   000050                     vfpfcnvrt@done:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x4F
   658   000050                     	ds	2
   659   000052                     vfpfcnvrt@cp:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x51
   663   000052                     	ds	2
   664   000054                     ?_vfprintf:
   665                           	callstack 0
   666   000054                     vfprintf@fp:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0x53
   670   000054                     	ds	2
   671   000056                     vfprintf@fmt:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x55
   675   000056                     	ds	2
   676   000058                     vfprintf@ap:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x57
   680   000058                     	ds	2
   681   00005A                     vfprintf@cfmt:
   682                           	callstack 0
   683                           
   684                           ; 2 bytes @ 0x59
   685   00005A                     	ds	2
   686   00005C                     
   687                           ; 1 bytes @ 0x5B
   688 ;;
   689 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   690 ;;
   691 ;; *************** function _main *****************
   692 ;; Defined at:
   693 ;;		line 24 in file "../main.c"
   694 ;; Parameters:    Size  Location     Type
   695 ;;		None
   696 ;; Auto vars:     Size  Location     Type
   697 ;;  datestr        50   29[BANK0 ] unsigned char [50]
   698 ;;  yearstr        20   79[BANK0 ] unsigned char [20]
   699 ;;  month_day       2  111[BANK0 ] unsigned int 
   700 ;;  month           2  109[BANK0 ] unsigned int 
   701 ;;  day             2  107[BANK0 ] unsigned int 
   702 ;;  daily_correc    2  105[BANK0 ] unsigned int 
   703 ;;  year            2  103[BANK0 ] unsigned short 
   704 ;;  changed         2  101[BANK0 ] unsigned int 
   705 ;;  OneAmToFiveA    2   99[BANK0 ] unsigned int 
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      void 
   708 ;; Registers used:
   709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   716 ;;      Locals:         0      84       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   717 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   718 ;;      Totals:         0      88       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   719 ;;Total ram usage:       88 bytes
   720 ;; Hardware stack levels required when called: 9
   721 ;; This function calls:
   722 ;;		_Comp1_init
   723 ;;		_Interrupts_init
   724 ;;		_LCD_Init
   725 ;;		_LCD_clear
   726 ;;		_LCD_sendstring
   727 ;;		_LCD_setline
   728 ;;		_LEDarray_disp_bin
   729 ;;		_LEDarray_init
   730 ;;		_Light_init
   731 ;;		_Timer0_init
   732 ;;		___lwdiv
   733 ;;		___lwmod
   734 ;;		___wmul
   735 ;;		_check_month
   736 ;;		_sprintf
   737 ;; This function is called by:
   738 ;;		Startup code after reset
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742                           	psect	text0
   743   000E36                     __ptext0:
   744                           	callstack 0
   745   000E36                     _main:
   746                           	callstack 22
   747   000E36                     
   748                           ;../main.c: 27:     unsigned int day = 6;
   749   000E36  0E00               	movlw	0
   750   000E38  0100               	movlb	0	; () banked
   751   000E3A  6FCC               	movwf	(main@day+1)& (0+255),b
   752   000E3C  0E06               	movlw	6
   753   000E3E  6FCB               	movwf	main@day& (0+255),b
   754                           
   755                           ;../main.c: 28:     unsigned int month = 3;
   756   000E40  0E00               	movlw	0
   757   000E42  6FCE               	movwf	(main@month+1)& (0+255),b
   758   000E44  0E03               	movlw	3
   759   000E46  6FCD               	movwf	main@month& (0+255),b
   760                           
   761                           ;../main.c: 29:     unsigned int month_day = 26;
   762   000E48  0E00               	movlw	0
   763   000E4A  6FD0               	movwf	(main@month_day+1)& (0+255),b
   764   000E4C  0E1A               	movlw	26
   765   000E4E  6FCF               	movwf	main@month_day& (0+255),b
   766                           
   767                           ;../main.c: 30:     unsigned short year = 2022;
   768   000E50  0E07               	movlw	7
   769   000E52  6FC8               	movwf	(main@year+1)& (0+255),b
   770   000E54  0EE6               	movlw	230
   771   000E56  6FC7               	movwf	main@year& (0+255),b
   772                           
   773                           ;../main.c: 33:     unsigned int changed = 0;
   774   000E58  0E00               	movlw	0
   775   000E5A  6FC6               	movwf	(main@changed+1)& (0+255),b
   776   000E5C  0E00               	movlw	0
   777   000E5E  6FC5               	movwf	main@changed& (0+255),b
   778                           
   779                           ;../main.c: 34:     unsigned int OneAmToFiveAmFlag = 0;
   780   000E60  0E00               	movlw	0
   781   000E62  6FC4               	movwf	(main@OneAmToFiveAmFlag+1)& (0+255),b
   782   000E64  0E00               	movlw	0
   783   000E66  6FC3               	movwf	main@OneAmToFiveAmFlag& (0+255),b
   784                           
   785                           ;../main.c: 35:     unsigned int daily_correction = 0;
   786   000E68  0E00               	movlw	0
   787   000E6A  6FCA               	movwf	(main@daily_correction+1)& (0+255),b
   788   000E6C  0E00               	movlw	0
   789   000E6E  6FC9               	movwf	main@daily_correction& (0+255),b
   790   000E70                     
   791                           ; BSR set to: 0
   792                           ;../main.c: 38:     char datestr[50];;../main.c: 39:     char yearstr[20];;../main.c: 42
      +                          :     Timer0_init();
   793   000E70  ECF6  F013         	call	_Timer0_init	;wreg free
   794                           
   795                           ;../main.c: 43:     LEDarray_init();
   796   000E74  ECE5  F013         	call	_LEDarray_init	;wreg free
   797                           
   798                           ;../main.c: 44:     Interrupts_init();
   799   000E78  EC29  F014         	call	_Interrupts_init	;wreg free
   800                           
   801                           ;../main.c: 45:     LEDarray_init();
   802   000E7C  ECE5  F013         	call	_LEDarray_init	;wreg free
   803   000E80                     
   804                           ;../main.c: 46:     Comp1_init();
   805   000E80  ECD2  F013         	call	_Comp1_init	;wreg free
   806   000E84                     
   807                           ;../main.c: 47:     Light_init();
   808   000E84  EC24  F014         	call	_Light_init	;wreg free
   809   000E88                     
   810                           ;../main.c: 49:     LCD_Init();
   811   000E88  EC91  F011         	call	_LCD_Init	;wreg free
   812   000E8C                     l2606:
   813                           
   814                           ;../main.c: 54:         LCD_setline(1);
   815   000E8C  0E01               	movlw	1
   816   000E8E  EC57  F013         	call	_LCD_setline
   817   000E92                     
   818                           ;../main.c: 55:         sprintf(datestr, "%d-%d-%d     %d", month_day, month, year, day)
      +                          ;
   819   000E92  0E7D               	movlw	low main@datestr
   820   000E94  0100               	movlb	0	; () banked
   821   000E96  6F60               	movwf	sprintf@s& (0+255),b
   822   000E98  0E00               	movlw	high main@datestr
   823   000E9A  6F61               	movwf	(sprintf@s+1)& (0+255),b
   824   000E9C  0E13               	movlw	low STR_1
   825   000E9E  6F62               	movwf	sprintf@fmt& (0+255),b
   826   000EA0  0E0E               	movlw	high STR_1
   827   000EA2  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   828   000EA4  C0CF  F064         	movff	main@month_day,?_sprintf+4
   829   000EA8  C0D0  F065         	movff	main@month_day+1,?_sprintf+5
   830   000EAC  C0CD  F066         	movff	main@month,?_sprintf+6
   831   000EB0  C0CE  F067         	movff	main@month+1,?_sprintf+7
   832   000EB4  C0C7  F068         	movff	main@year,?_sprintf+8
   833   000EB8  C0C8  F069         	movff	main@year+1,?_sprintf+9
   834   000EBC  C0CB  F06A         	movff	main@day,?_sprintf+10
   835   000EC0  C0CC  F06B         	movff	main@day+1,?_sprintf+11
   836   000EC4  EC7C  F012         	call	_sprintf	;wreg free
   837   000EC8                     
   838                           ;../main.c: 56:         LCD_sendstring(datestr);
   839   000EC8  0E7D               	movlw	low main@datestr
   840   000ECA  6E04               	movwf	LCD_sendstring@string^0,c
   841   000ECC  0E00               	movlw	high main@datestr
   842   000ECE  6E05               	movwf	(LCD_sendstring@string+1)^0,c
   843   000ED0  EC8F  F013         	call	_LCD_sendstring	;wreg free
   844   000ED4                     
   845                           ;../main.c: 57:         LCD_setline(2);
   846   000ED4  0E02               	movlw	2
   847   000ED6  EC57  F013         	call	_LCD_setline
   848   000EDA                     
   849                           ;../main.c: 58:         sprintf(yearstr, "%d:%d", hour, minute);
   850   000EDA  0EAF               	movlw	low main@yearstr
   851   000EDC  0100               	movlb	0	; () banked
   852   000EDE  6F60               	movwf	sprintf@s& (0+255),b
   853   000EE0  0E00               	movlw	high main@yearstr
   854   000EE2  6F61               	movwf	(sprintf@s+1)& (0+255),b
   855   000EE4  0E2F               	movlw	low STR_2
   856   000EE6  6F62               	movwf	sprintf@fmt& (0+255),b
   857   000EE8  0E0E               	movlw	high STR_2
   858   000EEA  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   859   000EEC  C0E5  F064         	movff	_hour,?_sprintf+4
   860   000EF0  C0E6  F065         	movff	_hour+1,?_sprintf+5
   861   000EF4  C0E3  F066         	movff	_minute,?_sprintf+6
   862   000EF8  C0E4  F067         	movff	_minute+1,?_sprintf+7
   863   000EFC  EC7C  F012         	call	_sprintf	;wreg free
   864   000F00                     
   865                           ;../main.c: 59:         LCD_sendstring(yearstr);
   866   000F00  0EAF               	movlw	low main@yearstr
   867   000F02  6E04               	movwf	LCD_sendstring@string^0,c
   868   000F04  0E00               	movlw	high main@yearstr
   869   000F06  6E05               	movwf	(LCD_sendstring@string+1)^0,c
   870   000F08  EC8F  F013         	call	_LCD_sendstring	;wreg free
   871   000F0C                     
   872                           ;../main.c: 60:         LEDarray_disp_bin(hour);
   873   000F0C  C0E5  F001         	movff	_hour,LEDarray_disp_bin@number
   874   000F10  C0E6  F002         	movff	_hour+1,LEDarray_disp_bin@number+1
   875   000F14  ECD8  F010         	call	_LEDarray_disp_bin	;wreg free
   876   000F18                     
   877                           ;../main.c: 62:         if (minute == 60) {
   878   000F18  0E3C               	movlw	60
   879   000F1A  0100               	movlb	0	; () banked
   880   000F1C  19E3               	xorwf	_minute& (0+255),w,b
   881   000F1E  11E4               	iorwf	(_minute+1)& (0+255),w,b
   882   000F20  A4D8               	btfss	status,2,c
   883   000F22  EF95  F007         	goto	u2541
   884   000F26  EF97  F007         	goto	u2540
   885   000F2A                     u2541:
   886   000F2A  EFE8  F008         	goto	l2680
   887   000F2E                     u2540:
   888   000F2E                     
   889                           ; BSR set to: 0
   890                           ;../main.c: 63:             hour++;
   891   000F2E  4BE5               	infsnz	_hour& (0+255),f,b
   892   000F30  2BE6               	incf	(_hour+1)& (0+255),f,b
   893   000F32                     
   894                           ; BSR set to: 0
   895                           ;../main.c: 64:             LEDarray_disp_bin(hour);
   896   000F32  C0E5  F001         	movff	_hour,LEDarray_disp_bin@number
   897   000F36  C0E6  F002         	movff	_hour+1,LEDarray_disp_bin@number+1
   898   000F3A  ECD8  F010         	call	_LEDarray_disp_bin	;wreg free
   899   000F3E                     
   900                           ;../main.c: 65:             minute = 0;
   901   000F3E  0E00               	movlw	0
   902   000F40  0100               	movlb	0	; () banked
   903   000F42  6FE4               	movwf	(_minute+1)& (0+255),b
   904   000F44  0E00               	movlw	0
   905   000F46  6FE3               	movwf	_minute& (0+255),b
   906   000F48                     
   907                           ; BSR set to: 0
   908                           ;../main.c: 66:             if (hour == 24){
   909   000F48  0E18               	movlw	24
   910   000F4A  19E5               	xorwf	_hour& (0+255),w,b
   911   000F4C  11E6               	iorwf	(_hour+1)& (0+255),w,b
   912   000F4E  A4D8               	btfss	status,2,c
   913   000F50  EFAC  F007         	goto	u2551
   914   000F54  EFAE  F007         	goto	u2550
   915   000F58                     u2551:
   916   000F58  EFE2  F008         	goto	l2678
   917   000F5C                     u2550:
   918   000F5C                     
   919                           ; BSR set to: 0
   920                           ;../main.c: 67:                 hour = 0;
   921   000F5C  0E00               	movlw	0
   922   000F5E  6FE6               	movwf	(_hour+1)& (0+255),b
   923   000F60  0E00               	movlw	0
   924   000F62  6FE5               	movwf	_hour& (0+255),b
   925   000F64                     
   926                           ; BSR set to: 0
   927                           ;../main.c: 70:                 if (daylight_end_min >= daylight_start_min) {
   928   000F64  51DB               	movf	_daylight_start_min& (0+255),w,b
   929   000F66  5DD7               	subwf	_daylight_end_min& (0+255),w,b
   930   000F68  51DC               	movf	(_daylight_start_min+1)& (0+255),w,b
   931   000F6A  59D8               	subwfb	(_daylight_end_min+1)& (0+255),w,b
   932   000F6C  A0D8               	btfss	status,0,c
   933   000F6E  EFBB  F007         	goto	u2561
   934   000F72  EFBD  F007         	goto	u2560
   935   000F76                     u2561:
   936   000F76  EFCB  F007         	goto	l2636
   937   000F7A                     u2560:
   938   000F7A                     
   939                           ; BSR set to: 0
   940                           ;../main.c: 71:                     current_day_min = daylight_end_min - daylight_start_
      +                          min;
   941   000F7A  51DB               	movf	_daylight_start_min& (0+255),w,b
   942   000F7C  5DD7               	subwf	_daylight_end_min& (0+255),w,b
   943   000F7E  6FDF               	movwf	_current_day_min& (0+255),b
   944   000F80  51DC               	movf	(_daylight_start_min+1)& (0+255),w,b
   945   000F82  59D8               	subwfb	(_daylight_end_min+1)& (0+255),w,b
   946   000F84  6FE0               	movwf	(_current_day_min+1)& (0+255),b
   947                           
   948                           ;../main.c: 72:                     current_day_hour = daylight_end_hour - daylight_star
      +                          t_hour;}
   949   000F86  51DD               	movf	_daylight_start_hour& (0+255),w,b
   950   000F88  5DD9               	subwf	_daylight_end_hour& (0+255),w,b
   951   000F8A  6FE1               	movwf	_current_day_hour& (0+255),b
   952   000F8C  51DE               	movf	(_daylight_start_hour+1)& (0+255),w,b
   953   000F8E  59DA               	subwfb	(_daylight_end_hour+1)& (0+255),w,b
   954   000F90  6FE2               	movwf	(_current_day_hour+1)& (0+255),b
   955   000F92  EFE3  F007         	goto	l2638
   956   000F96                     l2636:
   957                           
   958                           ; BSR set to: 0
   959                           ;../main.c: 74:                     current_day_min = daylight_end_min + (60-daylight_st
      +                          art_min);
   960   000F96  51DB               	movf	_daylight_start_min& (0+255),w,b
   961   000F98  5DD7               	subwf	_daylight_end_min& (0+255),w,b
   962   000F9A  6F79               	movwf	??_main& (0+255),b
   963   000F9C  51DC               	movf	(_daylight_start_min+1)& (0+255),w,b
   964   000F9E  59D8               	subwfb	(_daylight_end_min+1)& (0+255),w,b
   965   000FA0  6F7A               	movwf	(??_main+1)& (0+255),b
   966   000FA2  0E3C               	movlw	60
   967   000FA4  2579               	addwf	??_main& (0+255),w,b
   968   000FA6  6FDF               	movwf	_current_day_min& (0+255),b
   969   000FA8  0E00               	movlw	0
   970   000FAA  217A               	addwfc	(??_main+1)& (0+255),w,b
   971   000FAC  6FE0               	movwf	(_current_day_min+1)& (0+255),b
   972                           
   973                           ;../main.c: 75:                     current_day_hour = daylight_end_hour - daylight_star
      +                          t_hour - 1;}
   974   000FAE  51DD               	movf	_daylight_start_hour& (0+255),w,b
   975   000FB0  5DD9               	subwf	_daylight_end_hour& (0+255),w,b
   976   000FB2  6F79               	movwf	??_main& (0+255),b
   977   000FB4  51DE               	movf	(_daylight_start_hour+1)& (0+255),w,b
   978   000FB6  59DA               	subwfb	(_daylight_end_hour+1)& (0+255),w,b
   979   000FB8  6F7A               	movwf	(??_main+1)& (0+255),b
   980   000FBA  0EFF               	movlw	255
   981   000FBC  2579               	addwf	??_main& (0+255),w,b
   982   000FBE  6FE1               	movwf	_current_day_hour& (0+255),b
   983   000FC0  0EFF               	movlw	255
   984   000FC2  217A               	addwfc	(??_main+1)& (0+255),w,b
   985   000FC4  6FE2               	movwf	(_current_day_hour+1)& (0+255),b
   986   000FC6                     l2638:
   987                           
   988                           ; BSR set to: 0
   989                           ;../main.c: 78:                 calculated_solar_noon_hour = (daylight_start_hour*60 + d
      +                          aylight_start_min + (current_day_hour*60 + current_day_min)/2)/60;
   990   000FC6  C0E1  F001         	movff	_current_day_hour,___wmul@multiplier
   991   000FCA  C0E2  F002         	movff	_current_day_hour+1,___wmul@multiplier+1
   992   000FCE  0E00               	movlw	0
   993   000FD0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   994   000FD2  0E3C               	movlw	60
   995   000FD4  6E03               	movwf	___wmul@multiplicand^0,c
   996   000FD6  ECBF  F013         	call	___wmul	;wreg free
   997   000FDA  0100               	movlb	0	; () banked
   998   000FDC  51DF               	movf	_current_day_min& (0+255),w,b
   999   000FDE  2601               	addwf	?___wmul^0,f,c
  1000   000FE0  51E0               	movf	(_current_day_min+1)& (0+255),w,b
  1001   000FE2  2202               	addwfc	(?___wmul+1)^0,f,c
  1002   000FE4  90D8               	bcf	status,0,c
  1003   000FE6  3002               	rrcf	(?___wmul+1)^0,w,c
  1004   000FE8  6F7A               	movwf	(??_main+1)& (0+255),b
  1005   000FEA  3001               	rrcf	?___wmul^0,w,c
  1006   000FEC  6F79               	movwf	??_main& (0+255),b
  1007   000FEE  C0DD  F001         	movff	_daylight_start_hour,___wmul@multiplier
  1008   000FF2  C0DE  F002         	movff	_daylight_start_hour+1,___wmul@multiplier+1
  1009   000FF6  0E00               	movlw	0
  1010   000FF8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1011   000FFA  0E3C               	movlw	60
  1012   000FFC  6E03               	movwf	___wmul@multiplicand^0,c
  1013   000FFE  ECBF  F013         	call	___wmul	;wreg free
  1014   001002  0100               	movlb	0	; () banked
  1015   001004  5179               	movf	??_main& (0+255),w,b
  1016   001006  2401               	addwf	?___wmul^0,w,c
  1017   001008  6F7B               	movwf	(??_main+2)& (0+255),b
  1018   00100A  517A               	movf	(??_main+1)& (0+255),w,b
  1019   00100C  2002               	addwfc	(?___wmul+1)^0,w,c
  1020   00100E  6F7C               	movwf	(??_main+3)& (0+255),b
  1021   001010  51DB               	movf	_daylight_start_min& (0+255),w,b
  1022   001012  257B               	addwf	(??_main+2)& (0+255),w,b
  1023   001014  6E07               	movwf	___lwdiv@dividend^0,c
  1024   001016  51DC               	movf	(_daylight_start_min+1)& (0+255),w,b
  1025   001018  217C               	addwfc	(??_main+3)& (0+255),w,b
  1026   00101A  6E08               	movwf	(___lwdiv@dividend+1)^0,c
  1027   00101C  0E00               	movlw	0
  1028   00101E  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  1029   001020  0E3C               	movlw	60
  1030   001022  6E09               	movwf	___lwdiv@divisor^0,c
  1031   001024  ECDC  F011         	call	___lwdiv	;wreg free
  1032   001028  C007  F0D5         	movff	?___lwdiv,_calculated_solar_noon_hour
  1033   00102C  C008  F0D6         	movff	?___lwdiv+1,_calculated_solar_noon_hour+1
  1034   001030                     
  1035                           ;../main.c: 79:                 calculated_solar_noon_min = (daylight_start_hour*60 + da
      +                          ylight_start_min + (current_day_hour*60 + current_day_min)/2)%60;
  1036   001030  C0E1  F001         	movff	_current_day_hour,___wmul@multiplier
  1037   001034  C0E2  F002         	movff	_current_day_hour+1,___wmul@multiplier+1
  1038   001038  0E00               	movlw	0
  1039   00103A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1040   00103C  0E3C               	movlw	60
  1041   00103E  6E03               	movwf	___wmul@multiplicand^0,c
  1042   001040  ECBF  F013         	call	___wmul	;wreg free
  1043   001044  0100               	movlb	0	; () banked
  1044   001046  51DF               	movf	_current_day_min& (0+255),w,b
  1045   001048  2601               	addwf	?___wmul^0,f,c
  1046   00104A  51E0               	movf	(_current_day_min+1)& (0+255),w,b
  1047   00104C  2202               	addwfc	(?___wmul+1)^0,f,c
  1048   00104E  90D8               	bcf	status,0,c
  1049   001050  3002               	rrcf	(?___wmul+1)^0,w,c
  1050   001052  6F7A               	movwf	(??_main+1)& (0+255),b
  1051   001054  3001               	rrcf	?___wmul^0,w,c
  1052   001056  6F79               	movwf	??_main& (0+255),b
  1053   001058  C0DD  F001         	movff	_daylight_start_hour,___wmul@multiplier
  1054   00105C  C0DE  F002         	movff	_daylight_start_hour+1,___wmul@multiplier+1
  1055   001060  0E00               	movlw	0
  1056   001062  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1057   001064  0E3C               	movlw	60
  1058   001066  6E03               	movwf	___wmul@multiplicand^0,c
  1059   001068  ECBF  F013         	call	___wmul	;wreg free
  1060   00106C  0100               	movlb	0	; () banked
  1061   00106E  5179               	movf	??_main& (0+255),w,b
  1062   001070  2401               	addwf	?___wmul^0,w,c
  1063   001072  6F7B               	movwf	(??_main+2)& (0+255),b
  1064   001074  517A               	movf	(??_main+1)& (0+255),w,b
  1065   001076  2002               	addwfc	(?___wmul+1)^0,w,c
  1066   001078  6F7C               	movwf	(??_main+3)& (0+255),b
  1067   00107A  51DB               	movf	_daylight_start_min& (0+255),w,b
  1068   00107C  257B               	addwf	(??_main+2)& (0+255),w,b
  1069   00107E  6E07               	movwf	___lwmod@dividend^0,c
  1070   001080  51DC               	movf	(_daylight_start_min+1)& (0+255),w,b
  1071   001082  217C               	addwfc	(??_main+3)& (0+255),w,b
  1072   001084  6E08               	movwf	(___lwmod@dividend+1)^0,c
  1073   001086  0E00               	movlw	0
  1074   001088  6E0A               	movwf	(___lwmod@divisor+1)^0,c
  1075   00108A  0E3C               	movlw	60
  1076   00108C  6E09               	movwf	___lwmod@divisor^0,c
  1077   00108E  EC4A  F012         	call	___lwmod	;wreg free
  1078   001092  C007  F0D3         	movff	?___lwmod,_calculated_solar_noon_min
  1079   001096  C008  F0D4         	movff	?___lwmod+1,_calculated_solar_noon_min+1
  1080                           
  1081                           ;../main.c: 82:                 if (calculated_solar_noon_hour >= 12 && calculated_solar
      +                          _noon_min != 0 && daily_correction == 0) {
  1082   00109A  0100               	movlb	0	; () banked
  1083   00109C  51D6               	movf	(_calculated_solar_noon_hour+1)& (0+255),w,b
  1084   00109E  E109               	bnz	u2570
  1085   0010A0  0E0C               	movlw	12
  1086   0010A2  5DD5               	subwf	_calculated_solar_noon_hour& (0+255),w,b
  1087   0010A4  A0D8               	btfss	status,0,c
  1088   0010A6  EF57  F008         	goto	u2571
  1089   0010AA  EF59  F008         	goto	u2570
  1090   0010AE                     u2571:
  1091   0010AE  EF82  F008         	goto	l2654
  1092   0010B2                     u2570:
  1093   0010B2                     
  1094                           ; BSR set to: 0
  1095   0010B2  51D3               	movf	_calculated_solar_noon_min& (0+255),w,b
  1096   0010B4  11D4               	iorwf	(_calculated_solar_noon_min+1)& (0+255),w,b
  1097   0010B6  B4D8               	btfsc	status,2,c
  1098   0010B8  EF60  F008         	goto	u2581
  1099   0010BC  EF62  F008         	goto	u2580
  1100   0010C0                     u2581:
  1101   0010C0  EF82  F008         	goto	l2654
  1102   0010C4                     u2580:
  1103   0010C4                     
  1104                           ; BSR set to: 0
  1105   0010C4  51C9               	movf	main@daily_correction& (0+255),w,b
  1106   0010C6  11CA               	iorwf	(main@daily_correction+1)& (0+255),w,b
  1107   0010C8  A4D8               	btfss	status,2,c
  1108   0010CA  EF69  F008         	goto	u2591
  1109   0010CE  EF6B  F008         	goto	u2590
  1110   0010D2                     u2591:
  1111   0010D2  EF82  F008         	goto	l2654
  1112   0010D6                     u2590:
  1113   0010D6                     
  1114                           ; BSR set to: 0
  1115                           ;../main.c: 83:                     daily_correction = 1;
  1116   0010D6  0E00               	movlw	0
  1117   0010D8  6FCA               	movwf	(main@daily_correction+1)& (0+255),b
  1118   0010DA  0E01               	movlw	1
  1119   0010DC  6FC9               	movwf	main@daily_correction& (0+255),b
  1120   0010DE                     
  1121                           ; BSR set to: 0
  1122                           ;../main.c: 84:                     LATDbits.LATD7=1;
  1123   0010DE  8E7C               	bsf	124,7,c	;volatile
  1124   0010E0                     
  1125                           ; BSR set to: 0
  1126                           ;../main.c: 85:                     hour = 23 - (calculated_solar_noon_hour - 12);
  1127   0010E0  51D5               	movf	_calculated_solar_noon_hour& (0+255),w,b
  1128   0010E2  0823               	sublw	35
  1129   0010E4  6FE5               	movwf	_hour& (0+255),b
  1130   0010E6  51D6               	movf	(_calculated_solar_noon_hour+1)& (0+255),w,b
  1131   0010E8  A0D8               	btfss	status,0,c
  1132   0010EA  2AE8               	incf	wreg,f,c
  1133   0010EC  0800               	sublw	0
  1134   0010EE  6FE6               	movwf	(_hour+1)& (0+255),b
  1135   0010F0                     
  1136                           ; BSR set to: 0
  1137                           ;../main.c: 86:                     minute = 60 - calculated_solar_noon_min;
  1138   0010F0  51D3               	movf	_calculated_solar_noon_min& (0+255),w,b
  1139   0010F2  083C               	sublw	60
  1140   0010F4  6FE3               	movwf	_minute& (0+255),b
  1141   0010F6  51D4               	movf	(_calculated_solar_noon_min+1)& (0+255),w,b
  1142   0010F8  A0D8               	btfss	status,0,c
  1143   0010FA  2AE8               	incf	wreg,f,c
  1144   0010FC  0800               	sublw	0
  1145   0010FE  6FE4               	movwf	(_minute+1)& (0+255),b
  1146                           
  1147                           ;../main.c: 87:                 }
  1148   001100  EFB6  F008         	goto	l2666
  1149   001104                     l2654:
  1150                           
  1151                           ; BSR set to: 0
  1152   001104  51D6               	movf	(_calculated_solar_noon_hour+1)& (0+255),w,b
  1153   001106  E107               	bnz	u2601
  1154   001108  0E0C               	movlw	12
  1155   00110A  5DD5               	subwf	_calculated_solar_noon_hour& (0+255),w,b
  1156   00110C  B0D8               	btfsc	status,0,c
  1157   00110E  EF8B  F008         	goto	u2601
  1158   001112  EF8D  F008         	goto	u2600
  1159   001116                     u2601:
  1160   001116  EF9F  F008         	goto	l2658
  1161   00111A                     u2600:
  1162   00111A                     
  1163                           ; BSR set to: 0
  1164                           ;../main.c: 89:                    hour = 11 - calculated_solar_noon_hour;
  1165   00111A  51D5               	movf	_calculated_solar_noon_hour& (0+255),w,b
  1166   00111C  080B               	sublw	11
  1167   00111E  6FE5               	movwf	_hour& (0+255),b
  1168   001120  51D6               	movf	(_calculated_solar_noon_hour+1)& (0+255),w,b
  1169   001122  A0D8               	btfss	status,0,c
  1170   001124  2AE8               	incf	wreg,f,c
  1171   001126  0800               	sublw	0
  1172   001128  6FE6               	movwf	(_hour+1)& (0+255),b
  1173                           
  1174                           ;../main.c: 90:                    minute = 60 - calculated_solar_noon_min;
  1175   00112A  51D3               	movf	_calculated_solar_noon_min& (0+255),w,b
  1176   00112C  083C               	sublw	60
  1177   00112E  6FE3               	movwf	_minute& (0+255),b
  1178   001130  51D4               	movf	(_calculated_solar_noon_min+1)& (0+255),w,b
  1179   001132  A0D8               	btfss	status,0,c
  1180   001134  2AE8               	incf	wreg,f,c
  1181   001136  0800               	sublw	0
  1182   001138  6FE4               	movwf	(_minute+1)& (0+255),b
  1183                           
  1184                           ;../main.c: 91:                 }
  1185   00113A  EFB6  F008         	goto	l2666
  1186   00113E                     l2658:
  1187                           
  1188                           ; BSR set to: 0
  1189   00113E  51E5               	movf	_hour& (0+255),w,b
  1190   001140  11E6               	iorwf	(_hour+1)& (0+255),w,b
  1191   001142  A4D8               	btfss	status,2,c
  1192   001144  EFA6  F008         	goto	u2611
  1193   001148  EFA8  F008         	goto	u2610
  1194   00114C                     u2611:
  1195   00114C  EFB6  F008         	goto	l2666
  1196   001150                     u2610:
  1197   001150                     
  1198                           ; BSR set to: 0
  1199   001150  05C9               	decf	main@daily_correction& (0+255),w,b
  1200   001152  11CA               	iorwf	(main@daily_correction+1)& (0+255),w,b
  1201   001154  A4D8               	btfss	status,2,c
  1202   001156  EFAF  F008         	goto	u2621
  1203   00115A  EFB1  F008         	goto	u2620
  1204   00115E                     u2621:
  1205   00115E  EFB6  F008         	goto	l2666
  1206   001162                     u2620:
  1207   001162                     
  1208                           ; BSR set to: 0
  1209   001162  0E00               	movlw	0
  1210   001164  6FCA               	movwf	(main@daily_correction+1)& (0+255),b
  1211   001166  0E00               	movlw	0
  1212   001168  6FC9               	movwf	main@daily_correction& (0+255),b
  1213   00116A                     
  1214                           ; BSR set to: 0
  1215                           ;../main.c: 93:                     LATDbits.LATD7=0;}
  1216   00116A  9E7C               	bcf	124,7,c	;volatile
  1217   00116C                     l2666:
  1218                           
  1219                           ; BSR set to: 0
  1220                           ;../main.c: 95:                 if (daily_correction != 1){
  1221   00116C  05C9               	decf	main@daily_correction& (0+255),w,b
  1222   00116E  11CA               	iorwf	(main@daily_correction+1)& (0+255),w,b
  1223   001170  B4D8               	btfsc	status,2,c
  1224   001172  EFBD  F008         	goto	u2631
  1225   001176  EFBF  F008         	goto	u2630
  1226   00117A                     u2631:
  1227   00117A  EFE2  F008         	goto	l2678
  1228   00117E                     u2630:
  1229   00117E                     
  1230                           ; BSR set to: 0
  1231                           ;../main.c: 96:                 day++;
  1232   00117E  4BCB               	infsnz	main@day& (0+255),f,b
  1233   001180  2BCC               	incf	(main@day+1)& (0+255),f,b
  1234                           
  1235                           ;../main.c: 97:                 month_day++;
  1236   001182  4BCF               	infsnz	main@month_day& (0+255),f,b
  1237   001184  2BD0               	incf	(main@month_day+1)& (0+255),f,b
  1238   001186                     
  1239                           ; BSR set to: 0
  1240                           ;../main.c: 98:                 check_month(&month, &month_day, &year);
  1241   001186  0ECD               	movlw	low main@month
  1242   001188  6E0C               	movwf	check_month@month^0,c
  1243   00118A  0E00               	movlw	high main@month
  1244   00118C  6E0D               	movwf	(check_month@month+1)^0,c
  1245   00118E  0ECF               	movlw	low main@month_day
  1246   001190  6E0E               	movwf	check_month@month_day^0,c
  1247   001192  0E00               	movlw	high main@month_day
  1248   001194  6E0F               	movwf	(check_month@month_day+1)^0,c
  1249   001196  0EC7               	movlw	low main@year
  1250   001198  6E10               	movwf	check_month@year^0,c
  1251   00119A  0E00               	movlw	high main@year
  1252   00119C  6E11               	movwf	(check_month@year+1)^0,c
  1253   00119E  ECFC  F009         	call	_check_month	;wreg free
  1254   0011A2                     
  1255                           ;../main.c: 99:                 if (day == 7){day = 0;}
  1256   0011A2  0E07               	movlw	7
  1257   0011A4  0100               	movlb	0	; () banked
  1258   0011A6  19CB               	xorwf	main@day& (0+255),w,b
  1259   0011A8  11CC               	iorwf	(main@day+1)& (0+255),w,b
  1260   0011AA  A4D8               	btfss	status,2,c
  1261   0011AC  EFDA  F008         	goto	u2641
  1262   0011B0  EFDC  F008         	goto	u2640
  1263   0011B4                     u2641:
  1264   0011B4  EFE0  F008         	goto	l2676
  1265   0011B8                     u2640:
  1266   0011B8                     
  1267                           ; BSR set to: 0
  1268   0011B8  0E00               	movlw	0
  1269   0011BA  6FCC               	movwf	(main@day+1)& (0+255),b
  1270   0011BC  0E00               	movlw	0
  1271   0011BE  6FCB               	movwf	main@day& (0+255),b
  1272   0011C0                     l2676:
  1273                           
  1274                           ; BSR set to: 0
  1275                           ;../main.c: 100:                 LCD_clear();
  1276   0011C0  EC06  F014         	call	_LCD_clear	;wreg free
  1277   0011C4                     l2678:
  1278                           
  1279                           ;../main.c: 104:             LEDarray_disp_bin(hour);
  1280   0011C4  C0E5  F001         	movff	_hour,LEDarray_disp_bin@number
  1281   0011C8  C0E6  F002         	movff	_hour+1,LEDarray_disp_bin@number+1
  1282   0011CC  ECD8  F010         	call	_LEDarray_disp_bin	;wreg free
  1283   0011D0                     l2680:
  1284                           
  1285                           ;../main.c: 107:         if (hour >= 1 && hour < 5){
  1286   0011D0  0100               	movlb	0	; () banked
  1287   0011D2  51E5               	movf	_hour& (0+255),w,b
  1288   0011D4  11E6               	iorwf	(_hour+1)& (0+255),w,b
  1289   0011D6  B4D8               	btfsc	status,2,c
  1290   0011D8  EFF0  F008         	goto	u2651
  1291   0011DC  EFF2  F008         	goto	u2650
  1292   0011E0                     u2651:
  1293   0011E0  EF02  F009         	goto	l2688
  1294   0011E4                     u2650:
  1295   0011E4                     
  1296                           ; BSR set to: 0
  1297   0011E4  51E6               	movf	(_hour+1)& (0+255),w,b
  1298   0011E6  E107               	bnz	u2661
  1299   0011E8  0E05               	movlw	5
  1300   0011EA  5DE5               	subwf	_hour& (0+255),w,b
  1301   0011EC  B0D8               	btfsc	status,0,c
  1302   0011EE  EFFB  F008         	goto	u2661
  1303   0011F2  EFFD  F008         	goto	u2660
  1304   0011F6                     u2661:
  1305   0011F6  EF02  F009         	goto	l2688
  1306   0011FA                     u2660:
  1307   0011FA                     
  1308                           ; BSR set to: 0
  1309                           ;../main.c: 108:             LATHbits.LATH3=0;
  1310   0011FA  9680               	bcf	128,3,c	;volatile
  1311   0011FC                     
  1312                           ; BSR set to: 0
  1313                           ;../main.c: 109:             OneAmToFiveAmFlag = 1;}
  1314   0011FC  0E00               	movlw	0
  1315   0011FE  6FC4               	movwf	(main@OneAmToFiveAmFlag+1)& (0+255),b
  1316   001200  0E01               	movlw	1
  1317   001202  6FC3               	movwf	main@OneAmToFiveAmFlag& (0+255),b
  1318   001204                     l2688:
  1319                           
  1320                           ; BSR set to: 0
  1321                           ;../main.c: 110:         if (hour == 5 && OneAmToFiveAmFlag == 1 && CM1CON0bits.OUT == 1
      +                          ){
  1322   001204  0E05               	movlw	5
  1323   001206  19E5               	xorwf	_hour& (0+255),w,b
  1324   001208  11E6               	iorwf	(_hour+1)& (0+255),w,b
  1325   00120A  A4D8               	btfss	status,2,c
  1326   00120C  EF0A  F009         	goto	u2671
  1327   001210  EF0C  F009         	goto	u2670
  1328   001214                     u2671:
  1329   001214  EF23  F009         	goto	l2698
  1330   001218                     u2670:
  1331   001218                     
  1332                           ; BSR set to: 0
  1333   001218  05C3               	decf	main@OneAmToFiveAmFlag& (0+255),w,b
  1334   00121A  11C4               	iorwf	(main@OneAmToFiveAmFlag+1)& (0+255),w,b
  1335   00121C  A4D8               	btfss	status,2,c
  1336   00121E  EF13  F009         	goto	u2681
  1337   001222  EF15  F009         	goto	u2680
  1338   001226                     u2681:
  1339   001226  EF23  F009         	goto	l2698
  1340   00122A                     u2680:
  1341   00122A                     
  1342                           ; BSR set to: 0
  1343   00122A  010E               	movlb	14	; () banked
  1344   00122C  ADD0               	btfss	208,6,b	;volatile
  1345   00122E  EF1B  F009         	goto	u2691
  1346   001232  EF1D  F009         	goto	u2690
  1347   001236                     u2691:
  1348   001236  EF23  F009         	goto	l2698
  1349   00123A                     u2690:
  1350   00123A                     
  1351                           ; BSR set to: 14
  1352                           ;../main.c: 111:                 LATHbits.LATH3=1;
  1353   00123A  8680               	bsf	128,3,c	;volatile
  1354   00123C                     
  1355                           ; BSR set to: 14
  1356                           ;../main.c: 112:                 OneAmToFiveAmFlag = 0;}
  1357   00123C  0E00               	movlw	0
  1358   00123E  0100               	movlb	0	; () banked
  1359   001240  6FC4               	movwf	(main@OneAmToFiveAmFlag+1)& (0+255),b
  1360   001242  0E00               	movlw	0
  1361   001244  6FC3               	movwf	main@OneAmToFiveAmFlag& (0+255),b
  1362   001246                     l2698:
  1363                           
  1364                           ;../main.c: 114:         if (day == 0 && month == 3 && hour == 1 && minute == 0 && month
      +                          _day >=25 && month_day <= 31) {hour++;}
  1365   001246  0100               	movlb	0	; () banked
  1366   001248  51CB               	movf	main@day& (0+255),w,b
  1367   00124A  11CC               	iorwf	(main@day+1)& (0+255),w,b
  1368   00124C  A4D8               	btfss	status,2,c
  1369   00124E  EF2B  F009         	goto	u2701
  1370   001252  EF2D  F009         	goto	u2700
  1371   001256                     u2701:
  1372   001256  EF61  F009         	goto	l2712
  1373   00125A                     u2700:
  1374   00125A                     
  1375                           ; BSR set to: 0
  1376   00125A  0E03               	movlw	3
  1377   00125C  19CD               	xorwf	main@month& (0+255),w,b
  1378   00125E  11CE               	iorwf	(main@month+1)& (0+255),w,b
  1379   001260  A4D8               	btfss	status,2,c
  1380   001262  EF35  F009         	goto	u2711
  1381   001266  EF37  F009         	goto	u2710
  1382   00126A                     u2711:
  1383   00126A  EF61  F009         	goto	l2712
  1384   00126E                     u2710:
  1385   00126E                     
  1386                           ; BSR set to: 0
  1387   00126E  05E5               	decf	_hour& (0+255),w,b
  1388   001270  11E6               	iorwf	(_hour+1)& (0+255),w,b
  1389   001272  A4D8               	btfss	status,2,c
  1390   001274  EF3E  F009         	goto	u2721
  1391   001278  EF40  F009         	goto	u2720
  1392   00127C                     u2721:
  1393   00127C  EF61  F009         	goto	l2712
  1394   001280                     u2720:
  1395   001280                     
  1396                           ; BSR set to: 0
  1397   001280  51E3               	movf	_minute& (0+255),w,b
  1398   001282  11E4               	iorwf	(_minute+1)& (0+255),w,b
  1399   001284  A4D8               	btfss	status,2,c
  1400   001286  EF47  F009         	goto	u2731
  1401   00128A  EF49  F009         	goto	u2730
  1402   00128E                     u2731:
  1403   00128E  EF61  F009         	goto	l2712
  1404   001292                     u2730:
  1405   001292                     
  1406                           ; BSR set to: 0
  1407   001292  51D0               	movf	(main@month_day+1)& (0+255),w,b
  1408   001294  E109               	bnz	u2740
  1409   001296  0E19               	movlw	25
  1410   001298  5DCF               	subwf	main@month_day& (0+255),w,b
  1411   00129A  A0D8               	btfss	status,0,c
  1412   00129C  EF52  F009         	goto	u2741
  1413   0012A0  EF54  F009         	goto	u2740
  1414   0012A4                     u2741:
  1415   0012A4  EF61  F009         	goto	l2712
  1416   0012A8                     u2740:
  1417   0012A8                     
  1418                           ; BSR set to: 0
  1419   0012A8  51D0               	movf	(main@month_day+1)& (0+255),w,b
  1420   0012AA  E107               	bnz	u2751
  1421   0012AC  0E20               	movlw	32
  1422   0012AE  5DCF               	subwf	main@month_day& (0+255),w,b
  1423   0012B0  B0D8               	btfsc	status,0,c
  1424   0012B2  EF5D  F009         	goto	u2751
  1425   0012B6  EF5F  F009         	goto	u2750
  1426   0012BA                     u2751:
  1427   0012BA  EF61  F009         	goto	l2712
  1428   0012BE                     u2750:
  1429   0012BE                     
  1430                           ; BSR set to: 0
  1431   0012BE  4BE5               	infsnz	_hour& (0+255),f,b
  1432   0012C0  2BE6               	incf	(_hour+1)& (0+255),f,b
  1433   0012C2                     l2712:
  1434                           
  1435                           ; BSR set to: 0
  1436                           ;../main.c: 116:         if (day == 0 && month == 10 && hour == 2 && minute == 0 && mont
      +                          h_day >=25 && month_day <= 31 && changed == 0) {
  1437   0012C2  51CB               	movf	main@day& (0+255),w,b
  1438   0012C4  11CC               	iorwf	(main@day+1)& (0+255),w,b
  1439   0012C6  A4D8               	btfss	status,2,c
  1440   0012C8  EF68  F009         	goto	u2761
  1441   0012CC  EF6A  F009         	goto	u2760
  1442   0012D0                     u2761:
  1443   0012D0  EFAF  F009         	goto	l2730
  1444   0012D4                     u2760:
  1445   0012D4                     
  1446                           ; BSR set to: 0
  1447   0012D4  0E0A               	movlw	10
  1448   0012D6  19CD               	xorwf	main@month& (0+255),w,b
  1449   0012D8  11CE               	iorwf	(main@month+1)& (0+255),w,b
  1450   0012DA  A4D8               	btfss	status,2,c
  1451   0012DC  EF72  F009         	goto	u2771
  1452   0012E0  EF74  F009         	goto	u2770
  1453   0012E4                     u2771:
  1454   0012E4  EFAF  F009         	goto	l2730
  1455   0012E8                     u2770:
  1456   0012E8                     
  1457                           ; BSR set to: 0
  1458   0012E8  0E02               	movlw	2
  1459   0012EA  19E5               	xorwf	_hour& (0+255),w,b
  1460   0012EC  11E6               	iorwf	(_hour+1)& (0+255),w,b
  1461   0012EE  A4D8               	btfss	status,2,c
  1462   0012F0  EF7C  F009         	goto	u2781
  1463   0012F4  EF7E  F009         	goto	u2780
  1464   0012F8                     u2781:
  1465   0012F8  EFAF  F009         	goto	l2730
  1466   0012FC                     u2780:
  1467   0012FC                     
  1468                           ; BSR set to: 0
  1469   0012FC  51E3               	movf	_minute& (0+255),w,b
  1470   0012FE  11E4               	iorwf	(_minute+1)& (0+255),w,b
  1471   001300  A4D8               	btfss	status,2,c
  1472   001302  EF85  F009         	goto	u2791
  1473   001306  EF87  F009         	goto	u2790
  1474   00130A                     u2791:
  1475   00130A  EFAF  F009         	goto	l2730
  1476   00130E                     u2790:
  1477   00130E                     
  1478                           ; BSR set to: 0
  1479   00130E  51D0               	movf	(main@month_day+1)& (0+255),w,b
  1480   001310  E109               	bnz	u2800
  1481   001312  0E19               	movlw	25
  1482   001314  5DCF               	subwf	main@month_day& (0+255),w,b
  1483   001316  A0D8               	btfss	status,0,c
  1484   001318  EF90  F009         	goto	u2801
  1485   00131C  EF92  F009         	goto	u2800
  1486   001320                     u2801:
  1487   001320  EFAF  F009         	goto	l2730
  1488   001324                     u2800:
  1489   001324                     
  1490                           ; BSR set to: 0
  1491   001324  51D0               	movf	(main@month_day+1)& (0+255),w,b
  1492   001326  E107               	bnz	u2811
  1493   001328  0E20               	movlw	32
  1494   00132A  5DCF               	subwf	main@month_day& (0+255),w,b
  1495   00132C  B0D8               	btfsc	status,0,c
  1496   00132E  EF9B  F009         	goto	u2811
  1497   001332  EF9D  F009         	goto	u2810
  1498   001336                     u2811:
  1499   001336  EFAF  F009         	goto	l2730
  1500   00133A                     u2810:
  1501   00133A                     
  1502                           ; BSR set to: 0
  1503   00133A  51C5               	movf	main@changed& (0+255),w,b
  1504   00133C  11C6               	iorwf	(main@changed+1)& (0+255),w,b
  1505   00133E  A4D8               	btfss	status,2,c
  1506   001340  EFA4  F009         	goto	u2821
  1507   001344  EFA6  F009         	goto	u2820
  1508   001348                     u2821:
  1509   001348  EFAF  F009         	goto	l2730
  1510   00134C                     u2820:
  1511   00134C                     
  1512                           ; BSR set to: 0
  1513                           ;../main.c: 117:             hour--;
  1514   00134C  07E5               	decf	_hour& (0+255),f,b
  1515   00134E  A0D8               	btfss	status,0,c
  1516   001350  07E6               	decf	(_hour+1)& (0+255),f,b
  1517   001352                     
  1518                           ; BSR set to: 0
  1519                           ;../main.c: 118:             changed = 1;
  1520   001352  0E00               	movlw	0
  1521   001354  6FC6               	movwf	(main@changed+1)& (0+255),b
  1522   001356  0E01               	movlw	1
  1523   001358  6FC5               	movwf	main@changed& (0+255),b
  1524                           
  1525                           ;../main.c: 119:         }
  1526   00135A  EF46  F007         	goto	l2606
  1527   00135E                     l2730:
  1528                           
  1529                           ; BSR set to: 0
  1530   00135E  51CB               	movf	main@day& (0+255),w,b
  1531   001360  11CC               	iorwf	(main@day+1)& (0+255),w,b
  1532   001362  A4D8               	btfss	status,2,c
  1533   001364  EFB6  F009         	goto	u2831
  1534   001368  EFB8  F009         	goto	u2830
  1535   00136C                     u2831:
  1536   00136C  EF46  F007         	goto	l2606
  1537   001370                     u2830:
  1538   001370                     
  1539                           ; BSR set to: 0
  1540   001370  0E0A               	movlw	10
  1541   001372  19CD               	xorwf	main@month& (0+255),w,b
  1542   001374  11CE               	iorwf	(main@month+1)& (0+255),w,b
  1543   001376  A4D8               	btfss	status,2,c
  1544   001378  EFC0  F009         	goto	u2841
  1545   00137C  EFC2  F009         	goto	u2840
  1546   001380                     u2841:
  1547   001380  EF46  F007         	goto	l2606
  1548   001384                     u2840:
  1549   001384                     
  1550                           ; BSR set to: 0
  1551   001384  0E04               	movlw	4
  1552   001386  19E5               	xorwf	_hour& (0+255),w,b
  1553   001388  11E6               	iorwf	(_hour+1)& (0+255),w,b
  1554   00138A  A4D8               	btfss	status,2,c
  1555   00138C  EFCA  F009         	goto	u2851
  1556   001390  EFCC  F009         	goto	u2850
  1557   001394                     u2851:
  1558   001394  EF46  F007         	goto	l2606
  1559   001398                     u2850:
  1560   001398                     
  1561                           ; BSR set to: 0
  1562   001398  51E3               	movf	_minute& (0+255),w,b
  1563   00139A  11E4               	iorwf	(_minute+1)& (0+255),w,b
  1564   00139C  A4D8               	btfss	status,2,c
  1565   00139E  EFD3  F009         	goto	u2861
  1566   0013A2  EFD5  F009         	goto	u2860
  1567   0013A6                     u2861:
  1568   0013A6  EF46  F007         	goto	l2606
  1569   0013AA                     u2860:
  1570   0013AA                     
  1571                           ; BSR set to: 0
  1572   0013AA  51D0               	movf	(main@month_day+1)& (0+255),w,b
  1573   0013AC  E109               	bnz	u2870
  1574   0013AE  0E19               	movlw	25
  1575   0013B0  5DCF               	subwf	main@month_day& (0+255),w,b
  1576   0013B2  A0D8               	btfss	status,0,c
  1577   0013B4  EFDE  F009         	goto	u2871
  1578   0013B8  EFE0  F009         	goto	u2870
  1579   0013BC                     u2871:
  1580   0013BC  EF46  F007         	goto	l2606
  1581   0013C0                     u2870:
  1582   0013C0                     
  1583                           ; BSR set to: 0
  1584   0013C0  51D0               	movf	(main@month_day+1)& (0+255),w,b
  1585   0013C2  E107               	bnz	u2881
  1586   0013C4  0E20               	movlw	32
  1587   0013C6  5DCF               	subwf	main@month_day& (0+255),w,b
  1588   0013C8  B0D8               	btfsc	status,0,c
  1589   0013CA  EFE9  F009         	goto	u2881
  1590   0013CE  EFEB  F009         	goto	u2880
  1591   0013D2                     u2881:
  1592   0013D2  EF46  F007         	goto	l2606
  1593   0013D6                     u2880:
  1594   0013D6                     
  1595                           ; BSR set to: 0
  1596   0013D6  05C5               	decf	main@changed& (0+255),w,b
  1597   0013D8  11C6               	iorwf	(main@changed+1)& (0+255),w,b
  1598   0013DA  A4D8               	btfss	status,2,c
  1599   0013DC  EFF2  F009         	goto	u2891
  1600   0013E0  EFF4  F009         	goto	u2890
  1601   0013E4                     u2891:
  1602   0013E4  EF46  F007         	goto	l2606
  1603   0013E8                     u2890:
  1604   0013E8                     
  1605                           ; BSR set to: 0
  1606   0013E8  0E00               	movlw	0
  1607   0013EA  6FC6               	movwf	(main@changed+1)& (0+255),b
  1608   0013EC  0E00               	movlw	0
  1609   0013EE  6FC5               	movwf	main@changed& (0+255),b
  1610   0013F0  EF46  F007         	goto	l2606
  1611   0013F4  EF63  F000         	goto	start
  1612   0013F8                     __end_of_main:
  1613                           	callstack 0
  1614                           
  1615 ;; *************** function _sprintf *****************
  1616 ;; Defined at:
  1617 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1620 ;;		 -> main@yearstr(20), main@datestr(50), 
  1621 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1622 ;;		 -> STR_4(12), STR_3(18), STR_2(6), STR_1(16), 
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;  f              11   14[BANK0 ] struct _IO_FILE
  1625 ;;  ap              2   12[BANK0 ] PTR void [1]
  1626 ;;		 -> ?_sprintf(2), 
  1627 ;;  ret             2    0        int 
  1628 ;; Return value:  Size  Location     Type
  1629 ;;                  2    0[BANK0 ] int 
  1630 ;; Registers used:
  1631 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1637 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1638 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1640 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1641 ;;Total ram usage:       25 bytes
  1642 ;; Hardware stack levels used: 1
  1643 ;; Hardware stack levels required when called: 8
  1644 ;; This function calls:
  1645 ;;		_vfprintf
  1646 ;; This function is called by:
  1647 ;;		_main
  1648 ;;		_ADC2String
  1649 ;;		_LDR2String
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653                           	psect	text1
  1654   0024F8                     __ptext1:
  1655                           	callstack 0
  1656   0024F8                     _sprintf:
  1657                           	callstack 22
  1658   0024F8  0E64               	movlw	low (?_sprintf+4)
  1659   0024FA  0100               	movlb	0	; () banked
  1660   0024FC  6F6C               	movwf	sprintf@ap& (0+255),b
  1661   0024FE  0E00               	movlw	high (?_sprintf+4)
  1662   002500  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  1663   002502  C060  F06E         	movff	sprintf@s,sprintf@f
  1664   002506  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  1665   00250A                     
  1666                           ; BSR set to: 0
  1667   00250A  0E00               	movlw	0
  1668   00250C  6F72               	movwf	(sprintf@f+4)& (0+255),b
  1669   00250E  0E00               	movlw	0
  1670   002510  6F71               	movwf	(sprintf@f+3)& (0+255),b
  1671   002512                     
  1672                           ; BSR set to: 0
  1673   002512  0E00               	movlw	0
  1674   002514  6F78               	movwf	(sprintf@f+10)& (0+255),b
  1675   002516  0E00               	movlw	0
  1676   002518  6F77               	movwf	(sprintf@f+9)& (0+255),b
  1677   00251A                     
  1678                           ; BSR set to: 0
  1679   00251A  0E6E               	movlw	low sprintf@f
  1680   00251C  6E54               	movwf	vfprintf@fp^0,c
  1681   00251E  0E00               	movlw	high sprintf@f
  1682   002520  6E55               	movwf	(vfprintf@fp+1)^0,c
  1683   002522  C062  F056         	movff	sprintf@fmt,vfprintf@fmt
  1684   002526  C063  F057         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1685   00252A  0E6C               	movlw	low sprintf@ap
  1686   00252C  6E58               	movwf	vfprintf@ap^0,c
  1687   00252E  0E00               	movlw	high sprintf@ap
  1688   002530  6E59               	movwf	(vfprintf@ap+1)^0,c
  1689   002532  ECA5  F012         	call	_vfprintf	;wreg free
  1690   002536  0100               	movlb	0	; () banked
  1691   002538  5171               	movf	(sprintf@f+3)& (0+255),w,b
  1692   00253A  2560               	addwf	sprintf@s& (0+255),w,b
  1693   00253C  6ED9               	movwf	fsr2l,c
  1694   00253E  5172               	movf	(sprintf@f+4)& (0+255),w,b
  1695   002540  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  1696   002542  6EDA               	movwf	fsr2h,c
  1697   002544  0E00               	movlw	0
  1698   002546  6EDF               	movwf	indf2,c
  1699   002548                     
  1700                           ; BSR set to: 0
  1701   002548  0012               	return		;funcret
  1702   00254A                     __end_of_sprintf:
  1703                           	callstack 0
  1704                           
  1705 ;; *************** function _vfprintf *****************
  1706 ;; Defined at:
  1707 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;  fp              2   83[COMRAM] PTR struct _IO_FILE
  1710 ;;		 -> sprintf@f(11), 
  1711 ;;  fmt             2   85[COMRAM] PTR const unsigned char 
  1712 ;;		 -> STR_4(12), STR_3(18), STR_2(6), STR_1(16), 
  1713 ;;  ap              2   87[COMRAM] PTR PTR void 
  1714 ;;		 -> sprintf@ap(2), 
  1715 ;; Auto vars:     Size  Location     Type
  1716 ;;  cfmt            2   89[COMRAM] PTR unsigned char 
  1717 ;;		 -> STR_4(12), STR_3(18), STR_2(6), STR_1(16), 
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  2   83[COMRAM] int 
  1720 ;; Registers used:
  1721 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1727 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1728 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1730 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1731 ;;Total ram usage:        8 bytes
  1732 ;; Hardware stack levels used: 1
  1733 ;; Hardware stack levels required when called: 7
  1734 ;; This function calls:
  1735 ;;		_vfpfcnvrt
  1736 ;; This function is called by:
  1737 ;;		_sprintf
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           	psect	text2
  1742   00254A                     __ptext2:
  1743                           	callstack 0
  1744   00254A                     _vfprintf:
  1745                           	callstack 22
  1746   00254A                     
  1747                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1748   00254A  C056  F05A         	movff	vfprintf@fmt,vfprintf@cfmt
  1749   00254E  C057  F05B         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1750                           
  1751                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1752   002552  EFB9  F012         	goto	l2354
  1753   002556                     l2352:
  1754                           
  1755                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1756   002556  C054  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  1757   00255A  C055  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1758   00255E  0E5A               	movlw	low vfprintf@cfmt
  1759   002560  6E41               	movwf	vfpfcnvrt@fmt^0,c
  1760   002562  0E00               	movlw	high vfprintf@cfmt
  1761   002564  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1762   002566  C058  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  1763   00256A  C059  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1764   00256E  EC97  F00B         	call	_vfpfcnvrt	;wreg free
  1765   002572                     l2354:
  1766                           
  1767                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1768   002572  C05A  FFF6         	movff	vfprintf@cfmt,tblptrl
  1769   002576  C05B  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1770   00257A                     	if	0	;tblptru may be non-zero
  1771   00257A                     	endif
  1772   00257A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1773   00257A  0E00               	movlw	low (__mediumconst shr (0+16))
  1774   00257C  6EF8               	movwf	tblptru,c
  1775   00257E                     	endif
  1776   00257E  0008               	tblrd		*
  1777   002580  50F5               	movf	tablat,w,c
  1778   002582  0900               	iorlw	0
  1779   002584  A4D8               	btfss	status,2,c
  1780   002586  EFC7  F012         	goto	u2051
  1781   00258A  EFC9  F012         	goto	u2050
  1782   00258E                     u2051:
  1783   00258E  EFAB  F012         	goto	l2352
  1784   002592                     u2050:
  1785   002592                     
  1786                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1787   002592  0E00               	movlw	0
  1788   002594  6E55               	movwf	(?_vfprintf+1)^0,c
  1789   002596  0E00               	movlw	0
  1790   002598  6E54               	movwf	?_vfprintf^0,c
  1791   00259A  0012               	return		;funcret
  1792   00259C                     __end_of_vfprintf:
  1793                           	callstack 0
  1794                           
  1795 ;; *************** function _vfpfcnvrt *****************
  1796 ;; Defined at:
  1797 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  1800 ;;		 -> sprintf@f(11), 
  1801 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  1802 ;;		 -> vfprintf@cfmt(2), 
  1803 ;;  ap              2   66[COMRAM] PTR PTR void 
  1804 ;;		 -> sprintf@ap(2), 
  1805 ;; Auto vars:     Size  Location     Type
  1806 ;;  convarg         8   71[COMRAM] struct .
  1807 ;;  cp              2   81[COMRAM] PTR unsigned char 
  1808 ;;		 -> STR_4(12), STR_3(18), STR_2(6), STR_1(16), 
  1809 ;;  done            2   79[COMRAM] int 
  1810 ;;  i               2    0        int 
  1811 ;;  c               1    0        unsigned char 
  1812 ;; Return value:  Size  Location     Type
  1813 ;;                  1    wreg      void 
  1814 ;; Registers used:
  1815 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1816 ;; Tracked objects:
  1817 ;;		On entry : 0/0
  1818 ;;		On exit  : 0/0
  1819 ;;		Unchanged: 0/0
  1820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1821 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1822 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1823 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1824 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1825 ;;Total ram usage:       21 bytes
  1826 ;; Hardware stack levels used: 1
  1827 ;; Hardware stack levels required when called: 6
  1828 ;; This function calls:
  1829 ;;		_atoi
  1830 ;;		_dtoa
  1831 ;;		_fputc
  1832 ;;		_isdigit
  1833 ;; This function is called by:
  1834 ;;		_vfprintf
  1835 ;; This function uses a non-reentrant model
  1836 ;;
  1837                           
  1838                           	psect	text3
  1839   00172E                     __ptext3:
  1840                           	callstack 0
  1841   00172E                     _vfpfcnvrt:
  1842                           	callstack 22
  1843   00172E                     
  1844                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1845   00172E  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1846   001732  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1847   001736  CFDE FFF6          	movff	postinc2,tblptrl
  1848   00173A  CFDD FFF7          	movff	postdec2,tblptrh
  1849   00173E                     	if	0	;tblptru may be non-zero
  1850   00173E                     	endif
  1851   00173E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1852   00173E  0E00               	movlw	low (__mediumconst shr (0+16))
  1853   001740  6EF8               	movwf	tblptru,c
  1854   001742                     	endif
  1855   001742  0008               	tblrd		*
  1856   001744  50F5               	movf	tablat,w,c
  1857   001746  0A25               	xorlw	37
  1858   001748  A4D8               	btfss	status,2,c
  1859   00174A  EFA9  F00B         	goto	u1941
  1860   00174E  EFAB  F00B         	goto	u1940
  1861   001752                     u1941:
  1862   001752  EFDD  F00C         	goto	l2310
  1863   001756                     u1940:
  1864   001756                     
  1865                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1866   001756  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1867   00175A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1868   00175E  2ADE               	incf	postinc2,f,c
  1869   001760  0E00               	movlw	0
  1870   001762  22DD               	addwfc	postdec2,f,c
  1871   001764                     
  1872                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1873   001764  0E00               	movlw	0
  1874   001766  0100               	movlb	0	; () banked
  1875   001768  6FD2               	movwf	(_width+1)& (0+255),b
  1876   00176A  0E00               	movlw	0
  1877   00176C  6FD1               	movwf	_width& (0+255),b
  1878   00176E  C0D1  F05E         	movff	_width,_flags
  1879   001772                     
  1880                           ; BSR set to: 0
  1881                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1882   001772  685C               	setf	_prec^0,c
  1883   001774  685D               	setf	(_prec+1)^0,c
  1884   001776                     
  1885                           ; BSR set to: 0
  1886                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  1887   001776  0E00               	movlw	0
  1888   001778  6E51               	movwf	(vfpfcnvrt@done+1)^0,c
  1889   00177A  0E00               	movlw	0
  1890   00177C  6E50               	movwf	vfpfcnvrt@done^0,c
  1891                           
  1892                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  1893   00177E  EFED  F00B         	goto	l2276
  1894   001782                     l2266:
  1895                           
  1896                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  1897   001782  825E               	bsf	_flags^0,1,c
  1898   001784                     
  1899                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  1900   001784  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1901   001788  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1902   00178C  2ADE               	incf	postinc2,f,c
  1903   00178E  0E00               	movlw	0
  1904   001790  22DD               	addwfc	postdec2,f,c
  1905                           
  1906                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  1907   001792  EFED  F00B         	goto	l2276
  1908   001796                     l2270:
  1909                           
  1910                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  1911   001796  0E00               	movlw	0
  1912   001798  6E51               	movwf	(vfpfcnvrt@done+1)^0,c
  1913   00179A  0E01               	movlw	1
  1914   00179C  6E50               	movwf	vfpfcnvrt@done^0,c
  1915                           
  1916                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  1917   00179E  EFED  F00B         	goto	l2276
  1918   0017A2                     l2274:
  1919   0017A2  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1920   0017A6  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1921   0017AA  CFDE FFF6          	movff	postinc2,tblptrl
  1922   0017AE  CFDD FFF7          	movff	postdec2,tblptrh
  1923   0017B2                     	if	0	;tblptru may be non-zero
  1924   0017B2                     	endif
  1925   0017B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1926   0017B2  0E00               	movlw	low (__mediumconst shr (0+16))
  1927   0017B4  6EF8               	movwf	tblptru,c
  1928   0017B6                     	endif
  1929   0017B6  0008               	tblrd		*
  1930   0017B8  50F5               	movf	tablat,w,c
  1931   0017BA  6E45               	movwf	??_vfpfcnvrt^0,c
  1932   0017BC  6A46               	clrf	(??_vfpfcnvrt+1)^0,c
  1933                           
  1934                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1935                           ; Switch size 1, requested type "simple"
  1936                           ; Number of cases is 1, Range of values is 0 to 0
  1937                           ; switch strategies available:
  1938                           ; Name         Instructions Cycles
  1939                           ; simple_byte            4     3 (average)
  1940                           ;	Chosen strategy is simple_byte
  1941   0017BE  5046               	movf	(??_vfpfcnvrt+1)^0,w,c
  1942   0017C0  0A00               	xorlw	0	; case 0
  1943   0017C2  B4D8               	btfsc	status,2,c
  1944   0017C4  EFE6  F00B         	goto	l2796
  1945   0017C8  EFCB  F00B         	goto	l2270
  1946   0017CC                     l2796:
  1947                           
  1948                           ; Switch size 1, requested type "simple"
  1949                           ; Number of cases is 1, Range of values is 48 to 48
  1950                           ; switch strategies available:
  1951                           ; Name         Instructions Cycles
  1952                           ; simple_byte            4     3 (average)
  1953                           ;	Chosen strategy is simple_byte
  1954   0017CC  5045               	movf	??_vfpfcnvrt^0,w,c
  1955   0017CE  0A30               	xorlw	48	; case 48
  1956   0017D0  B4D8               	btfsc	status,2,c
  1957   0017D2  EFC1  F00B         	goto	l2266
  1958   0017D6  EFCB  F00B         	goto	l2270
  1959   0017DA                     l2276:
  1960                           
  1961                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  1962   0017DA  5050               	movf	vfpfcnvrt@done^0,w,c
  1963   0017DC  1051               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  1964   0017DE  B4D8               	btfsc	status,2,c
  1965   0017E0  EFF4  F00B         	goto	u1951
  1966   0017E4  EFF6  F00B         	goto	u1950
  1967   0017E8                     u1951:
  1968   0017E8  EFD1  F00B         	goto	l2274
  1969   0017EC                     u1950:
  1970   0017EC                     
  1971                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1074:         if 
      +                          ((*fmt)[0] == '*') {
  1972   0017EC  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1973   0017F0  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1974   0017F4  CFDE FFF6          	movff	postinc2,tblptrl
  1975   0017F8  CFDD FFF7          	movff	postdec2,tblptrh
  1976   0017FC                     	if	0	;tblptru may be non-zero
  1977   0017FC                     	endif
  1978   0017FC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1979   0017FC  0E00               	movlw	low (__mediumconst shr (0+16))
  1980   0017FE  6EF8               	movwf	tblptru,c
  1981   001800                     	endif
  1982   001800  0008               	tblrd		*
  1983   001802  50F5               	movf	tablat,w,c
  1984   001804  0A2A               	xorlw	42
  1985   001806  A4D8               	btfss	status,2,c
  1986   001808  EF08  F00C         	goto	u1961
  1987   00180C  EF0A  F00C         	goto	u1960
  1988   001810                     u1961:
  1989   001810  EF34  F00C         	goto	l2286
  1990   001814                     u1960:
  1991   001814                     
  1992                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1075:            
      +                           ++*fmt;
  1993   001814  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1994   001818  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1995   00181C  2ADE               	incf	postinc2,f,c
  1996   00181E  0E00               	movlw	0
  1997   001820  22DD               	addwfc	postdec2,f,c
  1998                           
  1999                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1076:            
      +                           width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2000   001822  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2001   001826  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2002   00182A  CFDF F045          	movff	indf2,??_vfpfcnvrt
  2003   00182E  0E02               	movlw	2
  2004   001830  26DE               	addwf	postinc2,f,c
  2005   001832  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  2006   001836  0E00               	movlw	0
  2007   001838  22DD               	addwfc	postdec2,f,c
  2008   00183A  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2009   00183E  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2010   001842  CFDE F0D1          	movff	postinc2,_width
  2011   001846  CFDD F0D2          	movff	postdec2,_width+1
  2012   00184A                     
  2013                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1077:            
      +                           if (width < 0) {
  2014   00184A  0100               	movlb	0	; () banked
  2015   00184C  BFD2               	btfsc	(_width+1)& (0+255),7,b
  2016   00184E  EF2D  F00C         	goto	u1970
  2017   001852  EF2B  F00C         	goto	u1971
  2018   001856                     u1971:
  2019   001856  EF69  F00C         	goto	l2294
  2020   00185A                     u1970:
  2021   00185A                     
  2022                           ; BSR set to: 0
  2023                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1078:            
      +                               flags |= (1 << 0);
  2024   00185A  805E               	bsf	_flags^0,0,c
  2025                           
  2026                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1079:            
      +                               width = -width;
  2027   00185C  6DD1               	negf	_width& (0+255),b
  2028   00185E  1FD2               	comf	(_width+1)& (0+255),f,b
  2029   001860  B0D8               	btfsc	status,0,c
  2030   001862  2BD2               	incf	(_width+1)& (0+255),f,b
  2031   001864  EF69  F00C         	goto	l2294
  2032   001868                     l2286:
  2033                           
  2034                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1082:            
      +                           width = atoi(*fmt);
  2035   001868  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2036   00186C  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2037   001870  CFDE F007          	movff	postinc2,atoi@s
  2038   001874  CFDD F008          	movff	postdec2,atoi@s+1
  2039   001878  ECC4  F00F         	call	_atoi	;wreg free
  2040   00187C  C007  F0D1         	movff	?_atoi,_width
  2041   001880  C008  F0D2         	movff	?_atoi+1,_width+1
  2042                           
  2043                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1083:            
      +                           while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2044   001884  EF4B  F00C         	goto	l2292
  2045   001888                     l2288:
  2046                           
  2047                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1084:            
      +                               ++*fmt;
  2048   001888  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2049   00188C  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2050   001890  2ADE               	incf	postinc2,f,c
  2051   001892  0E00               	movlw	0
  2052   001894  22DD               	addwfc	postdec2,f,c
  2053   001896                     l2292:
  2054   001896  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2055   00189A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2056   00189E  CFDE FFF6          	movff	postinc2,tblptrl
  2057   0018A2  CFDD FFF7          	movff	postdec2,tblptrh
  2058   0018A6                     	if	0	;tblptru may be non-zero
  2059   0018A6                     	endif
  2060   0018A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2061   0018A6  0E00               	movlw	low (__mediumconst shr (0+16))
  2062   0018A8  6EF8               	movwf	tblptru,c
  2063   0018AA                     	endif
  2064   0018AA  0008               	tblrd		*
  2065   0018AC  CFF5 F045          	movff	tablat,??_vfpfcnvrt
  2066   0018B0  0ED0               	movlw	208
  2067   0018B2  2445               	addwf	??_vfpfcnvrt^0,w,c
  2068   0018B4  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  2069   0018B6  6A47               	clrf	(??_vfpfcnvrt+2)^0,c
  2070   0018B8  0EFF               	movlw	255
  2071   0018BA  2247               	addwfc	(??_vfpfcnvrt+2)^0,f,c
  2072   0018BC  5047               	movf	(??_vfpfcnvrt+2)^0,w,c
  2073   0018BE  E109               	bnz	u1980
  2074   0018C0  0E0A               	movlw	10
  2075   0018C2  5C46               	subwf	(??_vfpfcnvrt+1)^0,w,c
  2076   0018C4  A0D8               	btfss	status,0,c
  2077   0018C6  EF67  F00C         	goto	u1981
  2078   0018CA  EF69  F00C         	goto	u1980
  2079   0018CE                     u1981:
  2080   0018CE  EF44  F00C         	goto	l2288
  2081   0018D2                     u1980:
  2082   0018D2                     l2294:
  2083                           
  2084                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2085   0018D2  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2086   0018D6  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2087   0018DA  CFDE F052          	movff	postinc2,vfpfcnvrt@cp
  2088   0018DE  CFDD F053          	movff	postdec2,vfpfcnvrt@cp+1
  2089   0018E2                     
  2090                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2091   0018E2  C052  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2092   0018E6  C053  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2093   0018EA                     	if	0	;tblptru may be non-zero
  2094   0018EA                     	endif
  2095   0018EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2096   0018EA  0E00               	movlw	low (__mediumconst shr (0+16))
  2097   0018EC  6EF8               	movwf	tblptru,c
  2098   0018EE                     	endif
  2099   0018EE  0008               	tblrd		*
  2100   0018F0  50F5               	movf	tablat,w,c
  2101   0018F2  0A64               	xorlw	100
  2102   0018F4  B4D8               	btfsc	status,2,c
  2103   0018F6  EF7F  F00C         	goto	u1991
  2104   0018FA  EF81  F00C         	goto	u1990
  2105   0018FE                     u1991:
  2106   0018FE  EF91  F00C         	goto	l2300
  2107   001902                     u1990:
  2108   001902  C052  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2109   001906  C053  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2110   00190A                     	if	0	;tblptru may be non-zero
  2111   00190A                     	endif
  2112   00190A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2113   00190A  0E00               	movlw	low (__mediumconst shr (0+16))
  2114   00190C  6EF8               	movwf	tblptru,c
  2115   00190E                     	endif
  2116   00190E  0008               	tblrd		*
  2117   001910  50F5               	movf	tablat,w,c
  2118   001912  0A69               	xorlw	105
  2119   001914  A4D8               	btfss	status,2,c
  2120   001916  EF8F  F00C         	goto	u2001
  2121   00191A  EF91  F00C         	goto	u2000
  2122   00191E                     u2001:
  2123   00191E  EFD4  F00C         	goto	l2306
  2124   001922                     u2000:
  2125   001922                     l2300:
  2126                           
  2127                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2128   001922  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2129   001926  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2130   00192A  CFDF F045          	movff	indf2,??_vfpfcnvrt
  2131   00192E  0E02               	movlw	2
  2132   001930  26DE               	addwf	postinc2,f,c
  2133   001932  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  2134   001936  0E00               	movlw	0
  2135   001938  22DD               	addwfc	postdec2,f,c
  2136   00193A  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2137   00193E  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2138   001942  CFDE F048          	movff	postinc2,vfpfcnvrt@convarg
  2139   001946  CFDD F049          	movff	postdec2,vfpfcnvrt@convarg+1
  2140   00194A  0E00               	movlw	0
  2141   00194C  BE49               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2142   00194E  0EFF               	movlw	-1
  2143   001950  6E4A               	movwf	(vfpfcnvrt@convarg+2)^0,c
  2144   001952  6E4B               	movwf	(vfpfcnvrt@convarg+3)^0,c
  2145   001954  6E4C               	movwf	(vfpfcnvrt@convarg+4)^0,c
  2146   001956  6E4D               	movwf	(vfpfcnvrt@convarg+5)^0,c
  2147   001958  6E4E               	movwf	(vfpfcnvrt@convarg+6)^0,c
  2148   00195A  6E4F               	movwf	(vfpfcnvrt@convarg+7)^0,c
  2149                           
  2150                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2151   00195C  0E01               	movlw	1
  2152   00195E  2452               	addwf	vfpfcnvrt@cp^0,w,c
  2153   001960  6E45               	movwf	??_vfpfcnvrt^0,c
  2154   001962  0E00               	movlw	0
  2155   001964  2053               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2156   001966  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  2157   001968  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2158   00196C  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2159   001970  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  2160   001974  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2161   001978                     
  2162                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2163   001978  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2164   00197C  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2165   001980  C048  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2166   001984  C049  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2167   001988  C04A  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2168   00198C  C04B  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2169   001990  C04C  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2170   001994  C04D  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2171   001998  C04E  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2172   00199C  C04F  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2173   0019A0  ECF4  F00C         	call	_dtoa	;wreg free
  2174   0019A4  EFF3  F00C         	goto	l1085
  2175   0019A8                     l2306:
  2176                           
  2177                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2178   0019A8  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2179   0019AC  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2180   0019B0  2ADE               	incf	postinc2,f,c
  2181   0019B2  0E00               	movlw	0
  2182   0019B4  22DD               	addwfc	postdec2,f,c
  2183   0019B6  EFF3  F00C         	goto	l1085
  2184   0019BA                     l2310:
  2185                           
  2186                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2187   0019BA  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2188   0019BE  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2189   0019C2  CFDE FFF6          	movff	postinc2,tblptrl
  2190   0019C6  CFDD FFF7          	movff	postdec2,tblptrh
  2191   0019CA                     	if	0	;tblptru may be non-zero
  2192   0019CA                     	endif
  2193   0019CA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2194   0019CA  0E00               	movlw	low (__mediumconst shr (0+16))
  2195   0019CC  6EF8               	movwf	tblptru,c
  2196   0019CE                     	endif
  2197   0019CE  0008               	tblrd		*
  2198   0019D0  50F5               	movf	tablat,w,c
  2199   0019D2  6E01               	movwf	fputc@c^0,c
  2200   0019D4  6A02               	clrf	(fputc@c+1)^0,c
  2201   0019D6  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2202   0019DA  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2203   0019DE  EC73  F010         	call	_fputc	;wreg free
  2204   0019E2  EFD4  F00C         	goto	l2306
  2205   0019E6                     l1085:
  2206   0019E6  0012               	return		;funcret
  2207   0019E8                     __end_of_vfpfcnvrt:
  2208                           	callstack 0
  2209                           
  2210 ;; *************** function _dtoa *****************
  2211 ;; Defined at:
  2212 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2215 ;;		 -> sprintf@f(11), 
  2216 ;;  d               8   29[COMRAM] long long 
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;  n               8   51[COMRAM] long long 
  2219 ;;  i               2   59[COMRAM] int 
  2220 ;;  w               2   49[COMRAM] int 
  2221 ;;  p               2   47[COMRAM] int 
  2222 ;;  s               1   61[COMRAM] unsigned char 
  2223 ;; Return value:  Size  Location     Type
  2224 ;;                  1    wreg      void 
  2225 ;; Registers used:
  2226 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2227 ;; Tracked objects:
  2228 ;;		On entry : 0/0
  2229 ;;		On exit  : 0/0
  2230 ;;		Unchanged: 0/0
  2231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2232 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2233 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2234 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2235 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2236 ;;Total ram usage:       35 bytes
  2237 ;; Hardware stack levels used: 1
  2238 ;; Hardware stack levels required when called: 5
  2239 ;; This function calls:
  2240 ;;		___aodiv
  2241 ;;		___aomod
  2242 ;;		_abs
  2243 ;;		_pad
  2244 ;; This function is called by:
  2245 ;;		_vfpfcnvrt
  2246 ;; This function uses a non-reentrant model
  2247 ;;
  2248                           
  2249                           	psect	text4
  2250   0019E8                     __ptext4:
  2251                           	callstack 0
  2252   0019E8                     _dtoa:
  2253                           	callstack 22
  2254   0019E8                     
  2255                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  2256   0019E8  C01E  F034         	movff	dtoa@d,dtoa@n
  2257   0019EC  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  2258   0019F0  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  2259   0019F4  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  2260   0019F8  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  2261   0019FC  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  2262   001A00  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  2263   001A04  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  2264   001A08                     
  2265                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  2266   001A08  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  2267   001A0A  EF09  F00D         	goto	u1731
  2268   001A0E  EF0C  F00D         	goto	u1730
  2269   001A12                     u1731:
  2270   001A12  0E01               	movlw	1
  2271   001A14  EF0D  F00D         	goto	u1740
  2272   001A18                     u1730:
  2273   001A18  0E00               	movlw	0
  2274   001A1A                     u1740:
  2275   001A1A  6E3E               	movwf	dtoa@s^0,c
  2276   001A1C                     
  2277                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  2278   001A1C  503E               	movf	dtoa@s^0,w,c
  2279   001A1E  B4D8               	btfsc	status,2,c
  2280   001A20  EF14  F00D         	goto	u1751
  2281   001A24  EF16  F00D         	goto	u1750
  2282   001A28                     u1751:
  2283   001A28  EF26  F00D         	goto	l2152
  2284   001A2C                     u1750:
  2285   001A2C                     
  2286                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  2287   001A2C  1E3B               	comf	(dtoa@n+7)^0,f,c
  2288   001A2E  1E3A               	comf	(dtoa@n+6)^0,f,c
  2289   001A30  1E39               	comf	(dtoa@n+5)^0,f,c
  2290   001A32  1E38               	comf	(dtoa@n+4)^0,f,c
  2291   001A34  1E37               	comf	(dtoa@n+3)^0,f,c
  2292   001A36  1E36               	comf	(dtoa@n+2)^0,f,c
  2293   001A38  1E35               	comf	(dtoa@n+1)^0,f,c
  2294   001A3A  6C34               	negf	dtoa@n^0,c
  2295   001A3C  0E00               	movlw	0
  2296   001A3E  2235               	addwfc	(dtoa@n+1)^0,f,c
  2297   001A40  2236               	addwfc	(dtoa@n+2)^0,f,c
  2298   001A42  2237               	addwfc	(dtoa@n+3)^0,f,c
  2299   001A44  2238               	addwfc	(dtoa@n+4)^0,f,c
  2300   001A46  2239               	addwfc	(dtoa@n+5)^0,f,c
  2301   001A48  223A               	addwfc	(dtoa@n+6)^0,f,c
  2302   001A4A  223B               	addwfc	(dtoa@n+7)^0,f,c
  2303   001A4C                     l2152:
  2304                           
  2305                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 458:     if (!(pr
      +                          ec < 0)) {
  2306   001A4C  BE5D               	btfsc	(_prec+1)^0,7,c
  2307   001A4E  EF2B  F00D         	goto	u1761
  2308   001A52  EF2D  F00D         	goto	u1760
  2309   001A56                     u1761:
  2310   001A56  EF2E  F00D         	goto	l2156
  2311   001A5A                     u1760:
  2312   001A5A                     
  2313                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 459:         flag
      +                          s &= ~(1 << 1);
  2314   001A5A  925E               	bcf	_flags^0,1,c
  2315   001A5C                     l2156:
  2316                           
  2317                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  2318   001A5C  BE5D               	btfsc	(_prec+1)^0,7,c
  2319   001A5E  EF3B  F00D         	goto	u1770
  2320   001A62  505D               	movf	(_prec+1)^0,w,c
  2321   001A64  E106               	bnz	u1771
  2322   001A66  045C               	decf	_prec^0,w,c
  2323   001A68  B0D8               	btfsc	status,0,c
  2324   001A6A  EF39  F00D         	goto	u1771
  2325   001A6E  EF3B  F00D         	goto	u1770
  2326   001A72                     u1771:
  2327   001A72  EF41  F00D         	goto	l1047
  2328   001A76                     u1770:
  2329   001A76  0E00               	movlw	0
  2330   001A78  6E31               	movwf	(dtoa@p+1)^0,c
  2331   001A7A  0E01               	movlw	1
  2332   001A7C  6E30               	movwf	dtoa@p^0,c
  2333   001A7E  EF45  F00D         	goto	l1049
  2334   001A82                     l1047:
  2335   001A82  C05C  F030         	movff	_prec,dtoa@p
  2336   001A86  C05D  F031         	movff	_prec+1,dtoa@p+1
  2337   001A8A                     l1049:
  2338                           
  2339                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  2340   001A8A  C0D1  F032         	movff	_width,dtoa@w
  2341   001A8E  C0D2  F033         	movff	_width+1,dtoa@w+1
  2342   001A92                     
  2343                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  2344   001A92  503E               	movf	dtoa@s^0,w,c
  2345   001A94  B4D8               	btfsc	status,2,c
  2346   001A96  EF4F  F00D         	goto	u1781
  2347   001A9A  EF51  F00D         	goto	u1780
  2348   001A9E                     u1781:
  2349   001A9E  EF68  F00D         	goto	l1050
  2350   001AA2                     u1780:
  2351   001AA2                     
  2352                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  2353   001AA2  0632               	decf	dtoa@w^0,f,c
  2354   001AA4  A0D8               	btfss	status,0,c
  2355   001AA6  0633               	decf	(dtoa@w+1)^0,f,c
  2356   001AA8                     
  2357                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  2358   001AA8  503E               	movf	dtoa@s^0,w,c
  2359   001AAA  A4D8               	btfss	status,2,c
  2360   001AAC  EF5A  F00D         	goto	u1791
  2361   001AB0  EF5C  F00D         	goto	u1790
  2362   001AB4                     u1791:
  2363   001AB4  EF62  F00D         	goto	l2168
  2364   001AB8                     u1790:
  2365   001AB8  0E00               	movlw	0
  2366   001ABA  6E2F               	movwf	(_dtoa$1985+1)^0,c
  2367   001ABC  0E2B               	movlw	43
  2368   001ABE  6E2E               	movwf	_dtoa$1985^0,c
  2369   001AC0  EF66  F00D         	goto	l2170
  2370   001AC4                     l2168:
  2371   001AC4  0E00               	movlw	0
  2372   001AC6  6E2F               	movwf	(_dtoa$1985+1)^0,c
  2373   001AC8  0E2D               	movlw	45
  2374   001ACA  6E2E               	movwf	_dtoa$1985^0,c
  2375   001ACC                     l2170:
  2376   001ACC  C02E  F03E         	movff	_dtoa$1985,dtoa@s
  2377   001AD0                     l1050:
  2378                           
  2379                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  2380   001AD0  0E00               	movlw	0
  2381   001AD2  6E3D               	movwf	(dtoa@i+1)^0,c
  2382   001AD4  0E1F               	movlw	31
  2383   001AD6  6E3C               	movwf	dtoa@i^0,c
  2384   001AD8                     
  2385                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  2386   001AD8  0E00               	movlw	0
  2387   001ADA  0101               	movlb	1	; () banked
  2388   001ADC  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2389                           
  2390                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2391   001ADE  EFED  F00D         	goto	l2184
  2392   001AE2                     l2174:
  2393                           
  2394                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  2395   001AE2  063C               	decf	dtoa@i^0,f,c
  2396   001AE4  A0D8               	btfss	status,0,c
  2397   001AE6  063D               	decf	(dtoa@i+1)^0,f,c
  2398   001AE8                     
  2399                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2400   001AE8  0E00               	movlw	low _dbuf
  2401   001AEA  243C               	addwf	dtoa@i^0,w,c
  2402   001AEC  6ED9               	movwf	fsr2l,c
  2403   001AEE  0E01               	movlw	high _dbuf
  2404   001AF0  203D               	addwfc	(dtoa@i+1)^0,w,c
  2405   001AF2  6EDA               	movwf	fsr2h,c
  2406   001AF4  C034  F001         	movff	dtoa@n,___aomod@dividend
  2407   001AF8  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2408   001AFC  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2409   001B00  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2410   001B04  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2411   001B08  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2412   001B0C  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2413   001B10  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2414   001B14  0E0A               	movlw	10
  2415   001B16  6E09               	movwf	___aomod@divisor^0,c
  2416   001B18  0E00               	movlw	0
  2417   001B1A  6E0A               	movwf	(___aomod@divisor+1)^0,c
  2418   001B1C  0E00               	movlw	0
  2419   001B1E  6E0B               	movwf	(___aomod@divisor+2)^0,c
  2420   001B20  0E00               	movlw	0
  2421   001B22  6E0C               	movwf	(___aomod@divisor+3)^0,c
  2422   001B24  0E00               	movlw	0
  2423   001B26  6E0D               	movwf	(___aomod@divisor+4)^0,c
  2424   001B28  0E00               	movlw	0
  2425   001B2A  6E0E               	movwf	(___aomod@divisor+5)^0,c
  2426   001B2C  0E00               	movlw	0
  2427   001B2E  6E0F               	movwf	(___aomod@divisor+6)^0,c
  2428   001B30  0E00               	movlw	0
  2429   001B32  6E10               	movwf	(___aomod@divisor+7)^0,c
  2430   001B34  EC12  F00F         	call	___aomod	;wreg free
  2431   001B38  C001  F026         	movff	?___aomod,??_dtoa
  2432   001B3C  C002  F027         	movff	?___aomod+1,??_dtoa+1
  2433   001B40  C003  F028         	movff	?___aomod+2,??_dtoa+2
  2434   001B44  C004  F029         	movff	?___aomod+3,??_dtoa+3
  2435   001B48  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  2436   001B4C  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  2437   001B50  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  2438   001B54  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  2439   001B58  C026  F013         	movff	??_dtoa,abs@a
  2440   001B5C  C027  F014         	movff	??_dtoa+1,abs@a+1
  2441   001B60  EC37  F013         	call	_abs	;wreg free
  2442   001B64  5013               	movf	?_abs^0,w,c
  2443   001B66  0F30               	addlw	48
  2444   001B68  6EDF               	movwf	indf2,c
  2445   001B6A                     
  2446                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  2447   001B6A  0630               	decf	dtoa@p^0,f,c
  2448   001B6C  A0D8               	btfss	status,0,c
  2449   001B6E  0631               	decf	(dtoa@p+1)^0,f,c
  2450   001B70                     
  2451                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  2452   001B70  0632               	decf	dtoa@w^0,f,c
  2453   001B72  A0D8               	btfss	status,0,c
  2454   001B74  0633               	decf	(dtoa@w+1)^0,f,c
  2455   001B76                     
  2456                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  2457   001B76  C034  F001         	movff	dtoa@n,___aodiv@dividend
  2458   001B7A  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2459   001B7E  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2460   001B82  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2461   001B86  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2462   001B8A  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2463   001B8E  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2464   001B92  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2465   001B96  0E0A               	movlw	10
  2466   001B98  6E09               	movwf	___aodiv@divisor^0,c
  2467   001B9A  0E00               	movlw	0
  2468   001B9C  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2469   001B9E  0E00               	movlw	0
  2470   001BA0  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2471   001BA2  0E00               	movlw	0
  2472   001BA4  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2473   001BA6  0E00               	movlw	0
  2474   001BA8  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2475   001BAA  0E00               	movlw	0
  2476   001BAC  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2477   001BAE  0E00               	movlw	0
  2478   001BB0  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2479   001BB2  0E00               	movlw	0
  2480   001BB4  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2481   001BB6  EC4E  F00E         	call	___aodiv	;wreg free
  2482   001BBA  C001  F034         	movff	?___aodiv,dtoa@n
  2483   001BBE  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  2484   001BC2  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  2485   001BC6  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  2486   001BCA  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  2487   001BCE  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  2488   001BD2  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  2489   001BD6  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  2490   001BDA                     l2184:
  2491                           
  2492                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2493   001BDA  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  2494   001BDC  EFF8  F00D         	goto	u1801
  2495   001BE0  503D               	movf	(dtoa@i+1)^0,w,c
  2496   001BE2  E108               	bnz	u1800
  2497   001BE4  043C               	decf	dtoa@i^0,w,c
  2498   001BE6  A0D8               	btfss	status,0,c
  2499   001BE8  EFF8  F00D         	goto	u1801
  2500   001BEC  EFFA  F00D         	goto	u1800
  2501   001BF0                     u1801:
  2502   001BF0  EF2A  F00E         	goto	l2194
  2503   001BF4                     u1800:
  2504   001BF4  5034               	movf	dtoa@n^0,w,c
  2505   001BF6  1035               	iorwf	(dtoa@n+1)^0,w,c
  2506   001BF8  1036               	iorwf	(dtoa@n+2)^0,w,c
  2507   001BFA  1037               	iorwf	(dtoa@n+3)^0,w,c
  2508   001BFC  1038               	iorwf	(dtoa@n+4)^0,w,c
  2509   001BFE  1039               	iorwf	(dtoa@n+5)^0,w,c
  2510   001C00  103A               	iorwf	(dtoa@n+6)^0,w,c
  2511   001C02  103B               	iorwf	(dtoa@n+7)^0,w,c
  2512   001C04  A4D8               	btfss	status,2,c
  2513   001C06  EF07  F00E         	goto	u1811
  2514   001C0A  EF09  F00E         	goto	u1810
  2515   001C0E                     u1811:
  2516   001C0E  EF71  F00D         	goto	l2174
  2517   001C12                     u1810:
  2518   001C12  BE31               	btfsc	(dtoa@p+1)^0,7,c
  2519   001C14  EF16  F00E         	goto	u1820
  2520   001C18  5031               	movf	(dtoa@p+1)^0,w,c
  2521   001C1A  E106               	bnz	u1821
  2522   001C1C  0430               	decf	dtoa@p^0,w,c
  2523   001C1E  B0D8               	btfsc	status,0,c
  2524   001C20  EF14  F00E         	goto	u1821
  2525   001C24  EF16  F00E         	goto	u1820
  2526   001C28                     u1821:
  2527   001C28  EF71  F00D         	goto	l2174
  2528   001C2C                     u1820:
  2529   001C2C  BE33               	btfsc	(dtoa@w+1)^0,7,c
  2530   001C2E  EF21  F00E         	goto	u1831
  2531   001C32  5033               	movf	(dtoa@w+1)^0,w,c
  2532   001C34  E108               	bnz	u1830
  2533   001C36  0432               	decf	dtoa@w^0,w,c
  2534   001C38  A0D8               	btfss	status,0,c
  2535   001C3A  EF21  F00E         	goto	u1831
  2536   001C3E  EF23  F00E         	goto	u1830
  2537   001C42                     u1831:
  2538   001C42  EF2A  F00E         	goto	l2194
  2539   001C46                     u1830:
  2540   001C46  B25E               	btfsc	_flags^0,1,c
  2541   001C48  EF28  F00E         	goto	u1841
  2542   001C4C  EF2A  F00E         	goto	u1840
  2543   001C50                     u1841:
  2544   001C50  EF71  F00D         	goto	l2174
  2545   001C54                     u1840:
  2546   001C54                     l2194:
  2547                           
  2548                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  2549   001C54  503E               	movf	dtoa@s^0,w,c
  2550   001C56  B4D8               	btfsc	status,2,c
  2551   001C58  EF30  F00E         	goto	u1851
  2552   001C5C  EF32  F00E         	goto	u1850
  2553   001C60                     u1851:
  2554   001C60  EF3D  F00E         	goto	l2200
  2555   001C64                     u1850:
  2556   001C64                     
  2557                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  2558   001C64  063C               	decf	dtoa@i^0,f,c
  2559   001C66  A0D8               	btfss	status,0,c
  2560   001C68  063D               	decf	(dtoa@i+1)^0,f,c
  2561   001C6A                     
  2562                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  2563   001C6A  0E00               	movlw	low _dbuf
  2564   001C6C  243C               	addwf	dtoa@i^0,w,c
  2565   001C6E  6ED9               	movwf	fsr2l,c
  2566   001C70  0E01               	movlw	high _dbuf
  2567   001C72  203D               	addwfc	(dtoa@i+1)^0,w,c
  2568   001C74  6EDA               	movwf	fsr2h,c
  2569   001C76  C03E  FFDF         	movff	dtoa@s,indf2
  2570   001C7A                     l2200:
  2571                           
  2572                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2573   001C7A  C01C  F011         	movff	dtoa@fp,pad@fp
  2574   001C7E  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2575   001C82  0E00               	movlw	low _dbuf
  2576   001C84  243C               	addwf	dtoa@i^0,w,c
  2577   001C86  6E13               	movwf	pad@buf^0,c
  2578   001C88  0E01               	movlw	high _dbuf
  2579   001C8A  203D               	addwfc	(dtoa@i+1)^0,w,c
  2580   001C8C  6E14               	movwf	(pad@buf+1)^0,c
  2581   001C8E  C032  F015         	movff	dtoa@w,pad@p
  2582   001C92  C033  F016         	movff	dtoa@w+1,pad@p+1
  2583   001C96  EC3C  F011         	call	_pad	;wreg free
  2584   001C9A  0012               	return		;funcret
  2585   001C9C                     __end_of_dtoa:
  2586                           	callstack 0
  2587                           
  2588 ;; *************** function _pad *****************
  2589 ;; Defined at:
  2590 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2591 ;; Parameters:    Size  Location     Type
  2592 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2593 ;;		 -> sprintf@f(11), 
  2594 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2595 ;;		 -> dbuf(32), 
  2596 ;;  p               2   20[COMRAM] int 
  2597 ;; Auto vars:     Size  Location     Type
  2598 ;;  w               2   25[COMRAM] int 
  2599 ;;  i               2   23[COMRAM] int 
  2600 ;; Return value:  Size  Location     Type
  2601 ;;                  1    wreg      void 
  2602 ;; Registers used:
  2603 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2609 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2610 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2611 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2612 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2613 ;;Total ram usage:       11 bytes
  2614 ;; Hardware stack levels used: 1
  2615 ;; Hardware stack levels required when called: 4
  2616 ;; This function calls:
  2617 ;;		_fputc
  2618 ;;		_fputs
  2619 ;; This function is called by:
  2620 ;;		_dtoa
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623                           
  2624                           	psect	text5
  2625   002278                     __ptext5:
  2626                           	callstack 0
  2627   002278                     _pad:
  2628                           	callstack 22
  2629   002278                     
  2630                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 139:     if (flags & (1 << 0)) {
  2631   002278  A05E               	btfss	_flags^0,0,c
  2632   00227A  EF41  F011         	goto	u1641
  2633   00227E  EF43  F011         	goto	u1640
  2634   002282                     u1641:
  2635   002282  EF4D  F011         	goto	l2104
  2636   002286                     u1640:
  2637   002286                     
  2638                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 140:         fput
      +                          s((const char *)buf, fp);
  2639   002286  C013  F00A         	movff	pad@buf,fputs@s
  2640   00228A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2641   00228E  C011  F00C         	movff	pad@fp,fputs@fp
  2642   002292  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2643   002296  EC15  F013         	call	_fputs	;wreg free
  2644   00229A                     l2104:
  2645                           
  2646                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 145:     w = (p <
      +                           0) ? 0 : p;
  2647   00229A  BE16               	btfsc	(pad@p+1)^0,7,c
  2648   00229C  EF52  F011         	goto	u1651
  2649   0022A0  EF54  F011         	goto	u1650
  2650   0022A4                     u1651:
  2651   0022A4  EF5A  F011         	goto	l2108
  2652   0022A8                     u1650:
  2653   0022A8  C015  F01A         	movff	pad@p,pad@w
  2654   0022AC  C016  F01B         	movff	pad@p+1,pad@w+1
  2655   0022B0  EF5E  F011         	goto	l1036
  2656   0022B4                     l2108:
  2657   0022B4  0E00               	movlw	0
  2658   0022B6  6E1B               	movwf	(pad@w+1)^0,c
  2659   0022B8  0E00               	movlw	0
  2660   0022BA  6E1A               	movwf	pad@w^0,c
  2661   0022BC                     l1036:
  2662                           
  2663                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2664   0022BC  0E00               	movlw	0
  2665   0022BE  6E19               	movwf	(pad@i+1)^0,c
  2666   0022C0  0E00               	movlw	0
  2667   0022C2  6E18               	movwf	pad@i^0,c
  2668                           
  2669                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2670   0022C4  EF70  F011         	goto	l2114
  2671   0022C8                     l2110:
  2672                           
  2673                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2674   0022C8  0E00               	movlw	0
  2675   0022CA  6E02               	movwf	(fputc@c+1)^0,c
  2676   0022CC  0E20               	movlw	32
  2677   0022CE  6E01               	movwf	fputc@c^0,c
  2678   0022D0  C011  F003         	movff	pad@fp,fputc@fp
  2679   0022D4  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2680   0022D8  EC73  F010         	call	_fputc	;wreg free
  2681   0022DC                     
  2682                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2683   0022DC  4A18               	infsnz	pad@i^0,f,c
  2684   0022DE  2A19               	incf	(pad@i+1)^0,f,c
  2685   0022E0                     l2114:
  2686                           
  2687                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2688   0022E0  501A               	movf	pad@w^0,w,c
  2689   0022E2  5C18               	subwf	pad@i^0,w,c
  2690   0022E4  5019               	movf	(pad@i+1)^0,w,c
  2691   0022E6  0A80               	xorlw	128
  2692   0022E8  6E17               	movwf	??_pad^0,c
  2693   0022EA  501B               	movf	(pad@w+1)^0,w,c
  2694   0022EC  0A80               	xorlw	128
  2695   0022EE  5817               	subwfb	??_pad^0,w,c
  2696   0022F0  A0D8               	btfss	status,0,c
  2697   0022F2  EF7D  F011         	goto	u1661
  2698   0022F6  EF7F  F011         	goto	u1660
  2699   0022FA                     u1661:
  2700   0022FA  EF64  F011         	goto	l2110
  2701   0022FE                     u1660:
  2702   0022FE                     
  2703                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 154:     if (!(fl
      +                          ags & (1 << 0))) {
  2704   0022FE  B05E               	btfsc	_flags^0,0,c
  2705   002300  EF84  F011         	goto	u1671
  2706   002304  EF86  F011         	goto	u1670
  2707   002308                     u1671:
  2708   002308  EF90  F011         	goto	l1041
  2709   00230C                     u1670:
  2710   00230C                     
  2711                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2712   00230C  C013  F00A         	movff	pad@buf,fputs@s
  2713   002310  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2714   002314  C011  F00C         	movff	pad@fp,fputs@fp
  2715   002318  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2716   00231C  EC15  F013         	call	_fputs	;wreg free
  2717   002320                     l1041:
  2718   002320  0012               	return		;funcret
  2719   002322                     __end_of_pad:
  2720                           	callstack 0
  2721                           
  2722 ;; *************** function _fputs *****************
  2723 ;; Defined at:
  2724 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2727 ;;		 -> dbuf(32), 
  2728 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2729 ;;		 -> sprintf@f(11), 
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;  i               2   14[COMRAM] int 
  2732 ;;  c               1   13[COMRAM] unsigned char 
  2733 ;; Return value:  Size  Location     Type
  2734 ;;                  2    9[COMRAM] int 
  2735 ;; Registers used:
  2736 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2737 ;; Tracked objects:
  2738 ;;		On entry : 0/0
  2739 ;;		On exit  : 0/0
  2740 ;;		Unchanged: 0/0
  2741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2742 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2743 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2745 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2746 ;;Total ram usage:        7 bytes
  2747 ;; Hardware stack levels used: 1
  2748 ;; Hardware stack levels required when called: 3
  2749 ;; This function calls:
  2750 ;;		_fputc
  2751 ;; This function is called by:
  2752 ;;		_pad
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756                           	psect	text6
  2757   00262A                     __ptext6:
  2758                           	callstack 0
  2759   00262A                     _fputs:
  2760                           	callstack 22
  2761   00262A  0E00               	movlw	0
  2762   00262C  6E10               	movwf	(fputs@i+1)^0,c
  2763   00262E  0E00               	movlw	0
  2764   002630  6E0F               	movwf	fputs@i^0,c
  2765   002632  EF26  F013         	goto	l2012
  2766   002636                     l2008:
  2767   002636  C00E  F001         	movff	fputs@c,fputc@c
  2768   00263A  6A02               	clrf	(fputc@c+1)^0,c
  2769   00263C  C00C  F003         	movff	fputs@fp,fputc@fp
  2770   002640  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2771   002644  EC73  F010         	call	_fputc	;wreg free
  2772   002648  4A0F               	infsnz	fputs@i^0,f,c
  2773   00264A  2A10               	incf	(fputs@i+1)^0,f,c
  2774   00264C                     l2012:
  2775   00264C  500F               	movf	fputs@i^0,w,c
  2776   00264E  240A               	addwf	fputs@s^0,w,c
  2777   002650  6ED9               	movwf	fsr2l,c
  2778   002652  5010               	movf	(fputs@i+1)^0,w,c
  2779   002654  200B               	addwfc	(fputs@s+1)^0,w,c
  2780   002656  6EDA               	movwf	fsr2h,c
  2781   002658  50DF               	movf	indf2,w,c
  2782   00265A  6E0E               	movwf	fputs@c^0,c
  2783   00265C  500E               	movf	fputs@c^0,w,c
  2784   00265E  A4D8               	btfss	status,2,c
  2785   002660  EF34  F013         	goto	u1501
  2786   002664  EF36  F013         	goto	u1500
  2787   002668                     u1501:
  2788   002668  EF1B  F013         	goto	l2008
  2789   00266C                     u1500:
  2790   00266C  0012               	return		;funcret
  2791   00266E                     __end_of_fputs:
  2792                           	callstack 0
  2793                           
  2794 ;; *************** function _fputc *****************
  2795 ;; Defined at:
  2796 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;  c               2    0[COMRAM] int 
  2799 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2800 ;;		 -> sprintf@f(11), 
  2801 ;; Auto vars:     Size  Location     Type
  2802 ;;		None
  2803 ;; Return value:  Size  Location     Type
  2804 ;;                  2    0[COMRAM] int 
  2805 ;; Registers used:
  2806 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2807 ;; Tracked objects:
  2808 ;;		On entry : 0/0
  2809 ;;		On exit  : 0/0
  2810 ;;		Unchanged: 0/0
  2811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2812 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2814 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2815 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2816 ;;Total ram usage:        9 bytes
  2817 ;; Hardware stack levels used: 1
  2818 ;; Hardware stack levels required when called: 2
  2819 ;; This function calls:
  2820 ;;		_putch
  2821 ;; This function is called by:
  2822 ;;		_pad
  2823 ;;		_vfpfcnvrt
  2824 ;;		_fputs
  2825 ;; This function uses a non-reentrant model
  2826 ;;
  2827                           
  2828                           	psect	text7
  2829   0020E6                     __ptext7:
  2830                           	callstack 0
  2831   0020E6                     _fputc:
  2832                           	callstack 25
  2833   0020E6  5003               	movf	fputc@fp^0,w,c
  2834   0020E8  1004               	iorwf	(fputc@fp+1)^0,w,c
  2835   0020EA  B4D8               	btfsc	status,2,c
  2836   0020EC  EF7A  F010         	goto	u1461
  2837   0020F0  EF7C  F010         	goto	u1460
  2838   0020F4                     u1461:
  2839   0020F4  EF85  F010         	goto	l1996
  2840   0020F8                     u1460:
  2841   0020F8  5003               	movf	fputc@fp^0,w,c
  2842   0020FA  1004               	iorwf	(fputc@fp+1)^0,w,c
  2843   0020FC  A4D8               	btfss	status,2,c
  2844   0020FE  EF83  F010         	goto	u1471
  2845   002102  EF85  F010         	goto	u1470
  2846   002106                     u1471:
  2847   002106  EF8A  F010         	goto	l1998
  2848   00210A                     u1470:
  2849   00210A                     l1996:
  2850   00210A  5001               	movf	fputc@c^0,w,c
  2851   00210C  EC30  F014         	call	_putch
  2852   002110  EFD7  F010         	goto	l1149
  2853   002114                     l1998:
  2854   002114  EE20 F009          	lfsr	2,9
  2855   002118  5003               	movf	fputc@fp^0,w,c
  2856   00211A  26D9               	addwf	fsr2l,f,c
  2857   00211C  5004               	movf	(fputc@fp+1)^0,w,c
  2858   00211E  22DA               	addwfc	fsr2h,f,c
  2859   002120  50DE               	movf	postinc2,w,c
  2860   002122  10DE               	iorwf	postinc2,w,c
  2861   002124  B4D8               	btfsc	status,2,c
  2862   002126  EF97  F010         	goto	u1481
  2863   00212A  EF99  F010         	goto	u1480
  2864   00212E                     u1481:
  2865   00212E  EFB4  F010         	goto	l2002
  2866   002132                     u1480:
  2867   002132  EE20 F009          	lfsr	2,9
  2868   002136  5003               	movf	fputc@fp^0,w,c
  2869   002138  26D9               	addwf	fsr2l,f,c
  2870   00213A  5004               	movf	(fputc@fp+1)^0,w,c
  2871   00213C  22DA               	addwfc	fsr2h,f,c
  2872   00213E  EE10 F003          	lfsr	1,3
  2873   002142  5003               	movf	fputc@fp^0,w,c
  2874   002144  26E1               	addwf	fsr1l,f,c
  2875   002146  5004               	movf	(fputc@fp+1)^0,w,c
  2876   002148  22E2               	addwfc	fsr1h,f,c
  2877   00214A  50DE               	movf	postinc2,w,c
  2878   00214C  5CE6               	subwf	postinc1,w,c
  2879   00214E  50E6               	movf	postinc1,w,c
  2880   002150  0A80               	xorlw	128
  2881   002152  6E09               	movwf	(??_fputc+4)^0,c
  2882   002154  50DE               	movf	postinc2,w,c
  2883   002156  0A80               	xorlw	128
  2884   002158  5809               	subwfb	(??_fputc+4)^0,w,c
  2885   00215A  B0D8               	btfsc	status,0,c
  2886   00215C  EFB2  F010         	goto	u1491
  2887   002160  EFB4  F010         	goto	u1490
  2888   002164                     u1491:
  2889   002164  EFD7  F010         	goto	l1149
  2890   002168                     u1490:
  2891   002168                     l2002:
  2892   002168  EE20 F003          	lfsr	2,3
  2893   00216C  5003               	movf	fputc@fp^0,w,c
  2894   00216E  26D9               	addwf	fsr2l,f,c
  2895   002170  5004               	movf	(fputc@fp+1)^0,w,c
  2896   002172  22DA               	addwfc	fsr2h,f,c
  2897   002174  CFDE F005          	movff	postinc2,??_fputc
  2898   002178  CFDD F006          	movff	postdec2,??_fputc+1
  2899   00217C  C003  FFD9         	movff	fputc@fp,fsr2l
  2900   002180  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2901   002184  CFDE F007          	movff	postinc2,??_fputc+2
  2902   002188  CFDD F008          	movff	postdec2,??_fputc+3
  2903   00218C  5005               	movf	??_fputc^0,w,c
  2904   00218E  2407               	addwf	(??_fputc+2)^0,w,c
  2905   002190  6ED9               	movwf	fsr2l,c
  2906   002192  5006               	movf	(??_fputc+1)^0,w,c
  2907   002194  2008               	addwfc	(??_fputc+3)^0,w,c
  2908   002196  6EDA               	movwf	fsr2h,c
  2909   002198  C001  FFDF         	movff	fputc@c,indf2
  2910   00219C  EE20 F003          	lfsr	2,3
  2911   0021A0  5003               	movf	fputc@fp^0,w,c
  2912   0021A2  26D9               	addwf	fsr2l,f,c
  2913   0021A4  5004               	movf	(fputc@fp+1)^0,w,c
  2914   0021A6  22DA               	addwfc	fsr2h,f,c
  2915   0021A8  2ADE               	incf	postinc2,f,c
  2916   0021AA  0E00               	movlw	0
  2917   0021AC  22DD               	addwfc	postdec2,f,c
  2918   0021AE                     l1149:
  2919   0021AE  0012               	return		;funcret
  2920   0021B0                     __end_of_fputc:
  2921                           	callstack 0
  2922                           
  2923 ;; *************** function _putch *****************
  2924 ;; Defined at:
  2925 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;  c               1    wreg     unsigned char 
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;  c               1    0[COMRAM] unsigned char 
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  1    wreg      void 
  2932 ;; Registers used:
  2933 ;;		wreg
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2943 ;;Total ram usage:        0 bytes
  2944 ;; Hardware stack levels used: 1
  2945 ;; Hardware stack levels required when called: 1
  2946 ;; This function calls:
  2947 ;;		Nothing
  2948 ;; This function is called by:
  2949 ;;		_fputc
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           	psect	text8
  2954   002860                     __ptext8:
  2955                           	callstack 0
  2956   002860                     _putch:
  2957                           	callstack 25
  2958   002860  0012               	return		;funcret
  2959   002862                     __end_of_putch:
  2960                           	callstack 0
  2961                           
  2962 ;; *************** function _abs *****************
  2963 ;; Defined at:
  2964 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  2965 ;; Parameters:    Size  Location     Type
  2966 ;;  a               2   18[COMRAM] int 
  2967 ;; Auto vars:     Size  Location     Type
  2968 ;;		None
  2969 ;; Return value:  Size  Location     Type
  2970 ;;                  2   18[COMRAM] int 
  2971 ;; Registers used:
  2972 ;;		wreg, status,2, status,0
  2973 ;; Tracked objects:
  2974 ;;		On entry : 0/0
  2975 ;;		On exit  : 0/0
  2976 ;;		Unchanged: 0/0
  2977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2978 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2980 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2981 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2982 ;;Total ram usage:        4 bytes
  2983 ;; Hardware stack levels used: 1
  2984 ;; Hardware stack levels required when called: 1
  2985 ;; This function calls:
  2986 ;;		Nothing
  2987 ;; This function is called by:
  2988 ;;		_dtoa
  2989 ;; This function uses a non-reentrant model
  2990 ;;
  2991                           
  2992                           	psect	text9
  2993   00266E                     __ptext9:
  2994                           	callstack 0
  2995   00266E                     _abs:
  2996                           	callstack 25
  2997   00266E  BE14               	btfsc	(abs@a+1)^0,7,c
  2998   002670  EF44  F013         	goto	u1680
  2999   002674  5014               	movf	(abs@a+1)^0,w,c
  3000   002676  E106               	bnz	u1681
  3001   002678  0413               	decf	abs@a^0,w,c
  3002   00267A  B0D8               	btfsc	status,0,c
  3003   00267C  EF42  F013         	goto	u1681
  3004   002680  EF44  F013         	goto	u1680
  3005   002684                     u1681:
  3006   002684  EF52  F013         	goto	l1095
  3007   002688                     u1680:
  3008   002688  C013  F015         	movff	abs@a,??_abs
  3009   00268C  C014  F016         	movff	abs@a+1,??_abs+1
  3010   002690  1E15               	comf	??_abs^0,f,c
  3011   002692  1E16               	comf	(??_abs+1)^0,f,c
  3012   002694  4A15               	infsnz	??_abs^0,f,c
  3013   002696  2A16               	incf	(??_abs+1)^0,f,c
  3014   002698  C015  F013         	movff	??_abs,?_abs
  3015   00269C  C016  F014         	movff	??_abs+1,?_abs+1
  3016   0026A0  EF56  F013         	goto	l1098
  3017   0026A4                     l1095:
  3018   0026A4  C013  F013         	movff	abs@a,?_abs
  3019   0026A8  C014  F014         	movff	abs@a+1,?_abs+1
  3020   0026AC                     l1098:
  3021   0026AC  0012               	return		;funcret
  3022   0026AE                     __end_of_abs:
  3023                           	callstack 0
  3024                           
  3025 ;; *************** function ___aomod *****************
  3026 ;; Defined at:
  3027 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  3028 ;; Parameters:    Size  Location     Type
  3029 ;;  dividend        8    0[COMRAM] long long 
  3030 ;;  divisor         8    8[COMRAM] long long 
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;  sign            1   17[COMRAM] unsigned char 
  3033 ;;  counter         1   16[COMRAM] unsigned char 
  3034 ;; Return value:  Size  Location     Type
  3035 ;;                  8    0[COMRAM] long long 
  3036 ;; Registers used:
  3037 ;;		wreg, status,2, status,0
  3038 ;; Tracked objects:
  3039 ;;		On entry : 0/0
  3040 ;;		On exit  : 0/0
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3043 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3044 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3046 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3047 ;;Total ram usage:       18 bytes
  3048 ;; Hardware stack levels used: 1
  3049 ;; Hardware stack levels required when called: 1
  3050 ;; This function calls:
  3051 ;;		Nothing
  3052 ;; This function is called by:
  3053 ;;		_dtoa
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           	psect	text10
  3058   001E24                     __ptext10:
  3059                           	callstack 0
  3060   001E24                     ___aomod:
  3061                           	callstack 25
  3062   001E24  0E00               	movlw	0
  3063   001E26  6E12               	movwf	___aomod@sign^0,c
  3064   001E28  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  3065   001E2A  EF1B  F00F         	goto	u1580
  3066   001E2E  EF19  F00F         	goto	u1581
  3067   001E32                     u1581:
  3068   001E32  EF2D  F00F         	goto	l2072
  3069   001E36                     u1580:
  3070   001E36  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3071   001E38  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3072   001E3A  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3073   001E3C  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3074   001E3E  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3075   001E40  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3076   001E42  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3077   001E44  6C01               	negf	___aomod@dividend^0,c
  3078   001E46  0E00               	movlw	0
  3079   001E48  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3080   001E4A  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3081   001E4C  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3082   001E4E  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3083   001E50  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3084   001E52  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3085   001E54  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3086   001E56  0E01               	movlw	1
  3087   001E58  6E12               	movwf	___aomod@sign^0,c
  3088   001E5A                     l2072:
  3089   001E5A  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  3090   001E5C  EF34  F00F         	goto	u1590
  3091   001E60  EF32  F00F         	goto	u1591
  3092   001E64                     u1591:
  3093   001E64  EF44  F00F         	goto	l2076
  3094   001E68                     u1590:
  3095   001E68  1E10               	comf	(___aomod@divisor+7)^0,f,c
  3096   001E6A  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  3097   001E6C  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  3098   001E6E  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  3099   001E70  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  3100   001E72  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  3101   001E74  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  3102   001E76  6C09               	negf	___aomod@divisor^0,c
  3103   001E78  0E00               	movlw	0
  3104   001E7A  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  3105   001E7C  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  3106   001E7E  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  3107   001E80  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  3108   001E82  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  3109   001E84  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  3110   001E86  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  3111   001E88                     l2076:
  3112   001E88  5009               	movf	___aomod@divisor^0,w,c
  3113   001E8A  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  3114   001E8C  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  3115   001E8E  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  3116   001E90  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  3117   001E92  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  3118   001E94  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  3119   001E96  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  3120   001E98  B4D8               	btfsc	status,2,c
  3121   001E9A  EF51  F00F         	goto	u1601
  3122   001E9E  EF53  F00F         	goto	u1600
  3123   001EA2                     u1601:
  3124   001EA2  EF9B  F00F         	goto	l2092
  3125   001EA6                     u1600:
  3126   001EA6  0E01               	movlw	1
  3127   001EA8  6E11               	movwf	___aomod@counter^0,c
  3128   001EAA  EF61  F00F         	goto	l2082
  3129   001EAE                     l2080:
  3130   001EAE  90D8               	bcf	status,0,c
  3131   001EB0  3609               	rlcf	___aomod@divisor^0,f,c
  3132   001EB2  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  3133   001EB4  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  3134   001EB6  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  3135   001EB8  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  3136   001EBA  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  3137   001EBC  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  3138   001EBE  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  3139   001EC0  2A11               	incf	___aomod@counter^0,f,c
  3140   001EC2                     l2082:
  3141   001EC2  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  3142   001EC4  EF66  F00F         	goto	u1611
  3143   001EC8  EF68  F00F         	goto	u1610
  3144   001ECC                     u1611:
  3145   001ECC  EF57  F00F         	goto	l2080
  3146   001ED0                     u1610:
  3147   001ED0                     l2084:
  3148   001ED0  5009               	movf	___aomod@divisor^0,w,c
  3149   001ED2  5C01               	subwf	___aomod@dividend^0,w,c
  3150   001ED4  500A               	movf	(___aomod@divisor+1)^0,w,c
  3151   001ED6  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  3152   001ED8  500B               	movf	(___aomod@divisor+2)^0,w,c
  3153   001EDA  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  3154   001EDC  500C               	movf	(___aomod@divisor+3)^0,w,c
  3155   001EDE  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  3156   001EE0  500D               	movf	(___aomod@divisor+4)^0,w,c
  3157   001EE2  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  3158   001EE4  500E               	movf	(___aomod@divisor+5)^0,w,c
  3159   001EE6  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  3160   001EE8  500F               	movf	(___aomod@divisor+6)^0,w,c
  3161   001EEA  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  3162   001EEC  5010               	movf	(___aomod@divisor+7)^0,w,c
  3163   001EEE  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  3164   001EF0  A0D8               	btfss	status,0,c
  3165   001EF2  EF7D  F00F         	goto	u1621
  3166   001EF6  EF7F  F00F         	goto	u1620
  3167   001EFA                     u1621:
  3168   001EFA  EF8F  F00F         	goto	l2088
  3169   001EFE                     u1620:
  3170   001EFE  5009               	movf	___aomod@divisor^0,w,c
  3171   001F00  5E01               	subwf	___aomod@dividend^0,f,c
  3172   001F02  500A               	movf	(___aomod@divisor+1)^0,w,c
  3173   001F04  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  3174   001F06  500B               	movf	(___aomod@divisor+2)^0,w,c
  3175   001F08  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  3176   001F0A  500C               	movf	(___aomod@divisor+3)^0,w,c
  3177   001F0C  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  3178   001F0E  500D               	movf	(___aomod@divisor+4)^0,w,c
  3179   001F10  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  3180   001F12  500E               	movf	(___aomod@divisor+5)^0,w,c
  3181   001F14  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  3182   001F16  500F               	movf	(___aomod@divisor+6)^0,w,c
  3183   001F18  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  3184   001F1A  5010               	movf	(___aomod@divisor+7)^0,w,c
  3185   001F1C  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  3186   001F1E                     l2088:
  3187   001F1E  90D8               	bcf	status,0,c
  3188   001F20  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  3189   001F22  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  3190   001F24  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  3191   001F26  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  3192   001F28  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  3193   001F2A  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  3194   001F2C  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  3195   001F2E  3209               	rrcf	___aomod@divisor^0,f,c
  3196   001F30  2E11               	decfsz	___aomod@counter^0,f,c
  3197   001F32  EF68  F00F         	goto	l2084
  3198   001F36                     l2092:
  3199   001F36  5012               	movf	___aomod@sign^0,w,c
  3200   001F38  B4D8               	btfsc	status,2,c
  3201   001F3A  EFA1  F00F         	goto	u1631
  3202   001F3E  EFA3  F00F         	goto	u1630
  3203   001F42                     u1631:
  3204   001F42  EFB3  F00F         	goto	l2096
  3205   001F46                     u1630:
  3206   001F46  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3207   001F48  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3208   001F4A  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3209   001F4C  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3210   001F4E  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3211   001F50  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3212   001F52  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3213   001F54  6C01               	negf	___aomod@dividend^0,c
  3214   001F56  0E00               	movlw	0
  3215   001F58  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3216   001F5A  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3217   001F5C  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3218   001F5E  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3219   001F60  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3220   001F62  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3221   001F64  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3222   001F66                     l2096:
  3223   001F66  C001  F001         	movff	___aomod@dividend,?___aomod
  3224   001F6A  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3225   001F6E  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3226   001F72  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3227   001F76  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3228   001F7A  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3229   001F7E  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3230   001F82  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3231   001F86  0012               	return		;funcret
  3232   001F88                     __end_of___aomod:
  3233                           	callstack 0
  3234                           
  3235 ;; *************** function ___aodiv *****************
  3236 ;; Defined at:
  3237 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  3238 ;; Parameters:    Size  Location     Type
  3239 ;;  dividend        8    0[COMRAM] long long 
  3240 ;;  divisor         8    8[COMRAM] long long 
  3241 ;; Auto vars:     Size  Location     Type
  3242 ;;  quotient        8   18[COMRAM] long long 
  3243 ;;  sign            1   17[COMRAM] unsigned char 
  3244 ;;  counter         1   16[COMRAM] unsigned char 
  3245 ;; Return value:  Size  Location     Type
  3246 ;;                  8    0[COMRAM] long long 
  3247 ;; Registers used:
  3248 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3249 ;; Tracked objects:
  3250 ;;		On entry : 0/0
  3251 ;;		On exit  : 0/0
  3252 ;;		Unchanged: 0/0
  3253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3254 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3255 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3257 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3258 ;;Total ram usage:       26 bytes
  3259 ;; Hardware stack levels used: 1
  3260 ;; Hardware stack levels required when called: 1
  3261 ;; This function calls:
  3262 ;;		Nothing
  3263 ;; This function is called by:
  3264 ;;		_dtoa
  3265 ;; This function uses a non-reentrant model
  3266 ;;
  3267                           
  3268                           	psect	text11
  3269   001C9C                     __ptext11:
  3270                           	callstack 0
  3271   001C9C                     ___aodiv:
  3272                           	callstack 25
  3273   001C9C  0E00               	movlw	0
  3274   001C9E  6E12               	movwf	___aodiv@sign^0,c
  3275   001CA0  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3276   001CA2  EF57  F00E         	goto	u1510
  3277   001CA6  EF55  F00E         	goto	u1511
  3278   001CAA                     u1511:
  3279   001CAA  EF69  F00E         	goto	l2028
  3280   001CAE                     u1510:
  3281   001CAE  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3282   001CB0  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3283   001CB2  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3284   001CB4  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3285   001CB6  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3286   001CB8  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3287   001CBA  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3288   001CBC  6C09               	negf	___aodiv@divisor^0,c
  3289   001CBE  0E00               	movlw	0
  3290   001CC0  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3291   001CC2  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3292   001CC4  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3293   001CC6  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3294   001CC8  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3295   001CCA  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3296   001CCC  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3297   001CCE  0E01               	movlw	1
  3298   001CD0  6E12               	movwf	___aodiv@sign^0,c
  3299   001CD2                     l2028:
  3300   001CD2  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3301   001CD4  EF70  F00E         	goto	u1520
  3302   001CD8  EF6E  F00E         	goto	u1521
  3303   001CDC                     u1521:
  3304   001CDC  EF82  F00E         	goto	l2034
  3305   001CE0                     u1520:
  3306   001CE0  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3307   001CE2  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3308   001CE4  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3309   001CE6  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3310   001CE8  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3311   001CEA  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3312   001CEC  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3313   001CEE  6C01               	negf	___aodiv@dividend^0,c
  3314   001CF0  0E00               	movlw	0
  3315   001CF2  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3316   001CF4  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3317   001CF6  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3318   001CF8  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3319   001CFA  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3320   001CFC  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3321   001CFE  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3322   001D00  0E01               	movlw	1
  3323   001D02  1A12               	xorwf	___aodiv@sign^0,f,c
  3324   001D04                     l2034:
  3325   001D04  EE20  F013         	lfsr	2,___aodiv@quotient
  3326   001D08  0E07               	movlw	7
  3327   001D0A                     u1531:
  3328   001D0A  6ADE               	clrf	postinc2,c
  3329   001D0C  06E8               	decf	wreg,f,c
  3330   001D0E  E2FD               	bc	u1531
  3331   001D10  5009               	movf	___aodiv@divisor^0,w,c
  3332   001D12  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3333   001D14  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3334   001D16  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3335   001D18  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3336   001D1A  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3337   001D1C  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3338   001D1E  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3339   001D20  B4D8               	btfsc	status,2,c
  3340   001D22  EF95  F00E         	goto	u1541
  3341   001D26  EF97  F00E         	goto	u1540
  3342   001D2A                     u1541:
  3343   001D2A  EFE9  F00E         	goto	l2056
  3344   001D2E                     u1540:
  3345   001D2E  0E01               	movlw	1
  3346   001D30  6E11               	movwf	___aodiv@counter^0,c
  3347   001D32  EFA5  F00E         	goto	l2042
  3348   001D36                     l2040:
  3349   001D36  90D8               	bcf	status,0,c
  3350   001D38  3609               	rlcf	___aodiv@divisor^0,f,c
  3351   001D3A  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3352   001D3C  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3353   001D3E  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3354   001D40  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3355   001D42  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3356   001D44  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3357   001D46  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3358   001D48  2A11               	incf	___aodiv@counter^0,f,c
  3359   001D4A                     l2042:
  3360   001D4A  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3361   001D4C  EFAA  F00E         	goto	u1551
  3362   001D50  EFAC  F00E         	goto	u1550
  3363   001D54                     u1551:
  3364   001D54  EF9B  F00E         	goto	l2040
  3365   001D58                     u1550:
  3366   001D58                     l2044:
  3367   001D58  90D8               	bcf	status,0,c
  3368   001D5A  3613               	rlcf	___aodiv@quotient^0,f,c
  3369   001D5C  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3370   001D5E  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3371   001D60  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3372   001D62  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3373   001D64  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3374   001D66  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3375   001D68  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3376   001D6A  5009               	movf	___aodiv@divisor^0,w,c
  3377   001D6C  5C01               	subwf	___aodiv@dividend^0,w,c
  3378   001D6E  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3379   001D70  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3380   001D72  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3381   001D74  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3382   001D76  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3383   001D78  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3384   001D7A  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3385   001D7C  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3386   001D7E  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3387   001D80  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3388   001D82  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3389   001D84  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3390   001D86  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3391   001D88  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3392   001D8A  A0D8               	btfss	status,0,c
  3393   001D8C  EFCA  F00E         	goto	u1561
  3394   001D90  EFCC  F00E         	goto	u1560
  3395   001D94                     u1561:
  3396   001D94  EFDD  F00E         	goto	l2052
  3397   001D98                     u1560:
  3398   001D98  5009               	movf	___aodiv@divisor^0,w,c
  3399   001D9A  5E01               	subwf	___aodiv@dividend^0,f,c
  3400   001D9C  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3401   001D9E  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3402   001DA0  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3403   001DA2  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3404   001DA4  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3405   001DA6  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3406   001DA8  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3407   001DAA  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3408   001DAC  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3409   001DAE  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3410   001DB0  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3411   001DB2  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3412   001DB4  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3413   001DB6  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3414   001DB8  8013               	bsf	___aodiv@quotient^0,0,c
  3415   001DBA                     l2052:
  3416   001DBA  90D8               	bcf	status,0,c
  3417   001DBC  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3418   001DBE  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3419   001DC0  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3420   001DC2  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3421   001DC4  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3422   001DC6  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3423   001DC8  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3424   001DCA  3209               	rrcf	___aodiv@divisor^0,f,c
  3425   001DCC  2E11               	decfsz	___aodiv@counter^0,f,c
  3426   001DCE  EFAC  F00E         	goto	l2044
  3427   001DD2                     l2056:
  3428   001DD2  5012               	movf	___aodiv@sign^0,w,c
  3429   001DD4  B4D8               	btfsc	status,2,c
  3430   001DD6  EFEF  F00E         	goto	u1571
  3431   001DDA  EFF1  F00E         	goto	u1570
  3432   001DDE                     u1571:
  3433   001DDE  EF01  F00F         	goto	l2060
  3434   001DE2                     u1570:
  3435   001DE2  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3436   001DE4  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3437   001DE6  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3438   001DE8  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3439   001DEA  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3440   001DEC  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3441   001DEE  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3442   001DF0  6C13               	negf	___aodiv@quotient^0,c
  3443   001DF2  0E00               	movlw	0
  3444   001DF4  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3445   001DF6  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3446   001DF8  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3447   001DFA  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3448   001DFC  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3449   001DFE  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3450   001E00  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3451   001E02                     l2060:
  3452   001E02  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3453   001E06  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3454   001E0A  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3455   001E0E  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3456   001E12  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3457   001E16  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3458   001E1A  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3459   001E1E  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3460   001E22  0012               	return		;funcret
  3461   001E24                     __end_of___aodiv:
  3462                           	callstack 0
  3463                           
  3464 ;; *************** function _atoi *****************
  3465 ;; Defined at:
  3466 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  3467 ;; Parameters:    Size  Location     Type
  3468 ;;  s               2    6[COMRAM] PTR const unsigned char 
  3469 ;;		 -> STR_4(12), STR_3(18), STR_2(6), STR_1(16), 
  3470 ;; Auto vars:     Size  Location     Type
  3471 ;;  n               2   13[COMRAM] int 
  3472 ;;  neg             2   11[COMRAM] int 
  3473 ;; Return value:  Size  Location     Type
  3474 ;;                  2    6[COMRAM] int 
  3475 ;; Registers used:
  3476 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3477 ;; Tracked objects:
  3478 ;;		On entry : 0/0
  3479 ;;		On exit  : 0/0
  3480 ;;		Unchanged: 0/0
  3481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3482 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3483 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3484 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3485 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3486 ;;Total ram usage:        9 bytes
  3487 ;; Hardware stack levels used: 1
  3488 ;; Hardware stack levels required when called: 2
  3489 ;; This function calls:
  3490 ;;		___wmul
  3491 ;;		_isdigit
  3492 ;;		_isspace
  3493 ;; This function is called by:
  3494 ;;		_vfpfcnvrt
  3495 ;; This function uses a non-reentrant model
  3496 ;;
  3497                           
  3498                           	psect	text12
  3499   001F88                     __ptext12:
  3500                           	callstack 0
  3501   001F88                     _atoi:
  3502                           	callstack 25
  3503   001F88  0E00               	movlw	0
  3504   001F8A  6E0F               	movwf	(atoi@n+1)^0,c
  3505   001F8C  0E00               	movlw	0
  3506   001F8E  6E0E               	movwf	atoi@n^0,c
  3507   001F90  0E00               	movlw	0
  3508   001F92  6E0D               	movwf	(atoi@neg+1)^0,c
  3509   001F94  0E00               	movlw	0
  3510   001F96  6E0C               	movwf	atoi@neg^0,c
  3511   001F98  EFD0  F00F         	goto	l2210
  3512   001F9C                     l2206:
  3513   001F9C  4A07               	infsnz	atoi@s^0,f,c
  3514   001F9E  2A08               	incf	(atoi@s+1)^0,f,c
  3515   001FA0                     l2210:
  3516   001FA0  C007  FFF6         	movff	atoi@s,tblptrl
  3517   001FA4  C008  FFF7         	movff	atoi@s+1,tblptrh
  3518   001FA8                     	if	0	;tblptru may be non-zero
  3519   001FA8                     	endif
  3520   001FA8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3521   001FA8  0E00               	movlw	low (__mediumconst shr (0+16))
  3522   001FAA  6EF8               	movwf	tblptru,c
  3523   001FAC                     	endif
  3524   001FAC  0008               	tblrd		*
  3525   001FAE  50F5               	movf	tablat,w,c
  3526   001FB0  0A20               	xorlw	32
  3527   001FB2  B4D8               	btfsc	status,2,c
  3528   001FB4  EFDE  F00F         	goto	u1861
  3529   001FB8  EFE0  F00F         	goto	u1860
  3530   001FBC                     u1861:
  3531   001FBC  EFCE  F00F         	goto	l2206
  3532   001FC0                     u1860:
  3533   001FC0  C007  FFF6         	movff	atoi@s,tblptrl
  3534   001FC4  C008  FFF7         	movff	atoi@s+1,tblptrh
  3535   001FC8                     	if	0	;tblptru may be non-zero
  3536   001FC8                     	endif
  3537   001FC8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3538   001FC8  0E00               	movlw	low (__mediumconst shr (0+16))
  3539   001FCA  6EF8               	movwf	tblptru,c
  3540   001FCC                     	endif
  3541   001FCC  0008               	tblrd		*
  3542   001FCE  CFF5 F009          	movff	tablat,??_atoi
  3543   001FD2  0EF7               	movlw	247
  3544   001FD4  2409               	addwf	??_atoi^0,w,c
  3545   001FD6  6E0A               	movwf	(??_atoi+1)^0,c
  3546   001FD8  6A0B               	clrf	(??_atoi+2)^0,c
  3547   001FDA  0EFF               	movlw	255
  3548   001FDC  220B               	addwfc	(??_atoi+2)^0,f,c
  3549   001FDE  500B               	movf	(??_atoi+2)^0,w,c
  3550   001FE0  E109               	bnz	u1870
  3551   001FE2  0E05               	movlw	5
  3552   001FE4  5C0A               	subwf	(??_atoi+1)^0,w,c
  3553   001FE6  A0D8               	btfss	status,0,c
  3554   001FE8  EFF8  F00F         	goto	u1871
  3555   001FEC  EFFA  F00F         	goto	u1870
  3556   001FF0                     u1871:
  3557   001FF0  EFCE  F00F         	goto	l2206
  3558   001FF4                     u1870:
  3559   001FF4  EF04  F010         	goto	l2218
  3560   001FF8                     l2214:
  3561   001FF8  0E00               	movlw	0
  3562   001FFA  6E0D               	movwf	(atoi@neg+1)^0,c
  3563   001FFC  0E01               	movlw	1
  3564   001FFE  6E0C               	movwf	atoi@neg^0,c
  3565   002000                     l2216:
  3566   002000  4A07               	infsnz	atoi@s^0,f,c
  3567   002002  2A08               	incf	(atoi@s+1)^0,f,c
  3568   002004  EF3D  F010         	goto	l2226
  3569   002008                     l2218:
  3570   002008  C007  FFF6         	movff	atoi@s,tblptrl
  3571   00200C  C008  FFF7         	movff	atoi@s+1,tblptrh
  3572   002010                     	if	0	;tblptru may be non-zero
  3573   002010                     	endif
  3574   002010                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3575   002010  0E00               	movlw	low (__mediumconst shr (0+16))
  3576   002012  6EF8               	movwf	tblptru,c
  3577   002014                     	endif
  3578   002014  0008               	tblrd		*
  3579   002016  50F5               	movf	tablat,w,c
  3580   002018  6E09               	movwf	??_atoi^0,c
  3581   00201A  6A0A               	clrf	(??_atoi+1)^0,c
  3582                           
  3583                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3584                           ; Switch size 1, requested type "simple"
  3585                           ; Number of cases is 1, Range of values is 0 to 0
  3586                           ; switch strategies available:
  3587                           ; Name         Instructions Cycles
  3588                           ; simple_byte            4     3 (average)
  3589                           ;	Chosen strategy is simple_byte
  3590   00201C  500A               	movf	(??_atoi+1)^0,w,c
  3591   00201E  0A00               	xorlw	0	; case 0
  3592   002020  B4D8               	btfsc	status,2,c
  3593   002022  EF15  F010         	goto	l2798
  3594   002026  EF3D  F010         	goto	l2226
  3595   00202A                     l2798:
  3596                           
  3597                           ; Switch size 1, requested type "simple"
  3598                           ; Number of cases is 2, Range of values is 43 to 45
  3599                           ; switch strategies available:
  3600                           ; Name         Instructions Cycles
  3601                           ; simple_byte            7     4 (average)
  3602                           ;	Chosen strategy is simple_byte
  3603   00202A  5009               	movf	??_atoi^0,w,c
  3604   00202C  0A2B               	xorlw	43	; case 43
  3605   00202E  B4D8               	btfsc	status,2,c
  3606   002030  EF00  F010         	goto	l2216
  3607   002034  0A06               	xorlw	6	; case 45
  3608   002036  B4D8               	btfsc	status,2,c
  3609   002038  EFFC  F00F         	goto	l2214
  3610   00203C  EF3D  F010         	goto	l2226
  3611   002040                     l2220:
  3612   002040  C00E  F001         	movff	atoi@n,___wmul@multiplier
  3613   002044  C00F  F002         	movff	atoi@n+1,___wmul@multiplier+1
  3614   002048  0E00               	movlw	0
  3615   00204A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3616   00204C  0E0A               	movlw	10
  3617   00204E  6E03               	movwf	___wmul@multiplicand^0,c
  3618   002050  ECBF  F013         	call	___wmul	;wreg free
  3619   002054  C007  FFF6         	movff	atoi@s,tblptrl
  3620   002058  C008  FFF7         	movff	atoi@s+1,tblptrh
  3621   00205C                     	if	0	;tblptru may be non-zero
  3622   00205C                     	endif
  3623   00205C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3624   00205C  0E00               	movlw	low (__mediumconst shr (0+16))
  3625   00205E  6EF8               	movwf	tblptru,c
  3626   002060                     	endif
  3627   002060  0008               	tblrd		*
  3628   002062  50F5               	movf	tablat,w,c
  3629   002064  5E01               	subwf	?___wmul^0,f,c
  3630   002066  0E00               	movlw	0
  3631   002068  5A02               	subwfb	(?___wmul+1)^0,f,c
  3632   00206A  0E30               	movlw	48
  3633   00206C  2401               	addwf	?___wmul^0,w,c
  3634   00206E  6E0E               	movwf	atoi@n^0,c
  3635   002070  0E00               	movlw	0
  3636   002072  2002               	addwfc	(?___wmul+1)^0,w,c
  3637   002074  6E0F               	movwf	(atoi@n+1)^0,c
  3638   002076  EF00  F010         	goto	l2216
  3639   00207A                     l2226:
  3640   00207A  C007  FFF6         	movff	atoi@s,tblptrl
  3641   00207E  C008  FFF7         	movff	atoi@s+1,tblptrh
  3642   002082                     	if	0	;tblptru may be non-zero
  3643   002082                     	endif
  3644   002082                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3645   002082  0E00               	movlw	low (__mediumconst shr (0+16))
  3646   002084  6EF8               	movwf	tblptru,c
  3647   002086                     	endif
  3648   002086  0008               	tblrd		*
  3649   002088  CFF5 F009          	movff	tablat,??_atoi
  3650   00208C  0ED0               	movlw	208
  3651   00208E  2409               	addwf	??_atoi^0,w,c
  3652   002090  6E0A               	movwf	(??_atoi+1)^0,c
  3653   002092  6A0B               	clrf	(??_atoi+2)^0,c
  3654   002094  0EFF               	movlw	255
  3655   002096  220B               	addwfc	(??_atoi+2)^0,f,c
  3656   002098  500B               	movf	(??_atoi+2)^0,w,c
  3657   00209A  E109               	bnz	u1880
  3658   00209C  0E0A               	movlw	10
  3659   00209E  5C0A               	subwf	(??_atoi+1)^0,w,c
  3660   0020A0  A0D8               	btfss	status,0,c
  3661   0020A2  EF55  F010         	goto	u1881
  3662   0020A6  EF57  F010         	goto	u1880
  3663   0020AA                     u1881:
  3664   0020AA  EF20  F010         	goto	l2220
  3665   0020AE                     u1880:
  3666   0020AE  500C               	movf	atoi@neg^0,w,c
  3667   0020B0  100D               	iorwf	(atoi@neg+1)^0,w,c
  3668   0020B2  A4D8               	btfss	status,2,c
  3669   0020B4  EF5E  F010         	goto	u1891
  3670   0020B8  EF60  F010         	goto	u1890
  3671   0020BC                     u1891:
  3672   0020BC  EF6E  F010         	goto	l1120
  3673   0020C0                     u1890:
  3674   0020C0  C00E  F009         	movff	atoi@n,??_atoi
  3675   0020C4  C00F  F00A         	movff	atoi@n+1,??_atoi+1
  3676   0020C8  1E09               	comf	??_atoi^0,f,c
  3677   0020CA  1E0A               	comf	(??_atoi+1)^0,f,c
  3678   0020CC  4A09               	infsnz	??_atoi^0,f,c
  3679   0020CE  2A0A               	incf	(??_atoi+1)^0,f,c
  3680   0020D0  C009  F007         	movff	??_atoi,?_atoi
  3681   0020D4  C00A  F008         	movff	??_atoi+1,?_atoi+1
  3682   0020D8  EF72  F010         	goto	l1123
  3683   0020DC                     l1120:
  3684   0020DC  C00E  F007         	movff	atoi@n,?_atoi
  3685   0020E0  C00F  F008         	movff	atoi@n+1,?_atoi+1
  3686   0020E4                     l1123:
  3687   0020E4  0012               	return		;funcret
  3688   0020E6                     __end_of_atoi:
  3689                           	callstack 0
  3690                           
  3691 ;; *************** function _isspace *****************
  3692 ;; Defined at:
  3693 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  3694 ;; Parameters:    Size  Location     Type
  3695 ;;  c               2    0[COMRAM] int 
  3696 ;; Auto vars:     Size  Location     Type
  3697 ;;		None
  3698 ;; Return value:  Size  Location     Type
  3699 ;;                  2    0[COMRAM] int 
  3700 ;; Registers used:
  3701 ;;		wreg, status,2, status,0
  3702 ;; Tracked objects:
  3703 ;;		On entry : 0/0
  3704 ;;		On exit  : 0/0
  3705 ;;		Unchanged: 0/0
  3706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3707 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3708 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3709 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3710 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3711 ;;Total ram usage:        5 bytes
  3712 ;; Hardware stack levels used: 1
  3713 ;; Hardware stack levels required when called: 1
  3714 ;; This function calls:
  3715 ;;		Nothing
  3716 ;; This function is called by:
  3717 ;;		_atoi
  3718 ;; This function uses a non-reentrant model
  3719 ;;
  3720                           
  3721                           	psect	text13
  3722   0025E4                     __ptext13:
  3723                           	callstack 0
  3724   0025E4                     _isspace:
  3725                           	callstack 25
  3726   0025E4  0E01               	movlw	1
  3727   0025E6  6E05               	movwf	_isspace$2034^0,c
  3728   0025E8  0E20               	movlw	32
  3729   0025EA  1801               	xorwf	isspace@c^0,w,c
  3730   0025EC  1002               	iorwf	(isspace@c+1)^0,w,c
  3731   0025EE  B4D8               	btfsc	status,2,c
  3732   0025F0  EFFC  F012         	goto	u1711
  3733   0025F4  EFFE  F012         	goto	u1710
  3734   0025F8                     u1711:
  3735   0025F8  EF11  F013         	goto	l2134
  3736   0025FC                     u1710:
  3737   0025FC  0EF7               	movlw	247
  3738   0025FE  2401               	addwf	isspace@c^0,w,c
  3739   002600  6E03               	movwf	??_isspace^0,c
  3740   002602  0EFF               	movlw	255
  3741   002604  2002               	addwfc	(isspace@c+1)^0,w,c
  3742   002606  6E04               	movwf	(??_isspace+1)^0,c
  3743   002608  5004               	movf	(??_isspace+1)^0,w,c
  3744   00260A  E109               	bnz	u1720
  3745   00260C  0E05               	movlw	5
  3746   00260E  5C03               	subwf	??_isspace^0,w,c
  3747   002610  A0D8               	btfss	status,0,c
  3748   002612  EF0D  F013         	goto	u1721
  3749   002616  EF0F  F013         	goto	u1720
  3750   00261A                     u1721:
  3751   00261A  EF11  F013         	goto	l2134
  3752   00261E                     u1720:
  3753   00261E  0E00               	movlw	0
  3754   002620  6E05               	movwf	_isspace$2034^0,c
  3755   002622                     l2134:
  3756   002622  C005  F001         	movff	_isspace$2034,?_isspace
  3757   002626  6A02               	clrf	(?_isspace+1)^0,c
  3758   002628  0012               	return		;funcret
  3759   00262A                     __end_of_isspace:
  3760                           	callstack 0
  3761                           
  3762 ;; *************** function _isdigit *****************
  3763 ;; Defined at:
  3764 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;  c               2    0[COMRAM] int 
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;		None
  3769 ;; Return value:  Size  Location     Type
  3770 ;;                  2    0[COMRAM] int 
  3771 ;; Registers used:
  3772 ;;		wreg, status,2, status,0
  3773 ;; Tracked objects:
  3774 ;;		On entry : 0/0
  3775 ;;		On exit  : 0/0
  3776 ;;		Unchanged: 0/0
  3777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3778 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3780 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3781 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3782 ;;Total ram usage:        4 bytes
  3783 ;; Hardware stack levels used: 1
  3784 ;; Hardware stack levels required when called: 1
  3785 ;; This function calls:
  3786 ;;		Nothing
  3787 ;; This function is called by:
  3788 ;;		_vfpfcnvrt
  3789 ;;		_atoi
  3790 ;; This function uses a non-reentrant model
  3791 ;;
  3792                           
  3793                           	psect	text14
  3794   002752                     __ptext14:
  3795                           	callstack 0
  3796   002752                     _isdigit:
  3797                           	callstack 26
  3798   002752  0ED0               	movlw	208
  3799   002754  2401               	addwf	isdigit@c^0,w,c
  3800   002756  6E03               	movwf	??_isdigit^0,c
  3801   002758  0EFF               	movlw	255
  3802   00275A  2002               	addwfc	(isdigit@c+1)^0,w,c
  3803   00275C  6E04               	movwf	(??_isdigit+1)^0,c
  3804   00275E  5004               	movf	(??_isdigit+1)^0,w,c
  3805   002760  E10A               	bnz	u1690
  3806   002762  0E0A               	movlw	10
  3807   002764  5C03               	subwf	??_isdigit^0,w,c
  3808   002766  A0D8               	btfss	status,0,c
  3809   002768  EFB8  F013         	goto	u1691
  3810   00276C  EFBB  F013         	goto	u1690
  3811   002770                     u1691:
  3812   002770  0E01               	movlw	1
  3813   002772  EFBC  F013         	goto	u1700
  3814   002776                     u1690:
  3815   002776  0E00               	movlw	0
  3816   002778                     u1700:
  3817   002778  6E01               	movwf	?_isdigit^0,c
  3818   00277A  6A02               	clrf	(?_isdigit+1)^0,c
  3819   00277C  0012               	return		;funcret
  3820   00277E                     __end_of_isdigit:
  3821                           	callstack 0
  3822                           
  3823 ;; *************** function ___wmul *****************
  3824 ;; Defined at:
  3825 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  3826 ;; Parameters:    Size  Location     Type
  3827 ;;  multiplier      2    0[COMRAM] unsigned int 
  3828 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3829 ;; Auto vars:     Size  Location     Type
  3830 ;;  product         2    4[COMRAM] unsigned int 
  3831 ;; Return value:  Size  Location     Type
  3832 ;;                  2    0[COMRAM] unsigned int 
  3833 ;; Registers used:
  3834 ;;		wreg, status,2, status,0, prodl, prodh
  3835 ;; Tracked objects:
  3836 ;;		On entry : 0/0
  3837 ;;		On exit  : 0/0
  3838 ;;		Unchanged: 0/0
  3839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3840 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3841 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3843 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3844 ;;Total ram usage:        6 bytes
  3845 ;; Hardware stack levels used: 1
  3846 ;; Hardware stack levels required when called: 1
  3847 ;; This function calls:
  3848 ;;		Nothing
  3849 ;; This function is called by:
  3850 ;;		_main
  3851 ;;		_atoi
  3852 ;;		_ADC2String
  3853 ;; This function uses a non-reentrant model
  3854 ;;
  3855                           
  3856                           	psect	text15
  3857   00277E                     __ptext15:
  3858                           	callstack 0
  3859   00277E                     ___wmul:
  3860                           	callstack 25
  3861   00277E  5001               	movf	___wmul@multiplier^0,w,c
  3862   002780  0203               	mulwf	___wmul@multiplicand^0,c
  3863   002782  CFF3 F005          	movff	prodl,___wmul@product
  3864   002786  CFF4 F006          	movff	prodh,___wmul@product+1
  3865   00278A  5001               	movf	___wmul@multiplier^0,w,c
  3866   00278C  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3867   00278E  50F3               	movf	243,w,c
  3868   002790  2606               	addwf	(___wmul@product+1)^0,f,c
  3869   002792  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3870   002794  0203               	mulwf	___wmul@multiplicand^0,c
  3871   002796  50F3               	movf	243,w,c
  3872   002798  2606               	addwf	(___wmul@product+1)^0,f,c
  3873   00279A  C005  F001         	movff	___wmul@product,?___wmul
  3874   00279E  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3875   0027A2  0012               	return		;funcret
  3876   0027A4                     __end_of___wmul:
  3877                           	callstack 0
  3878                           
  3879 ;; *************** function _check_month *****************
  3880 ;; Defined at:
  3881 ;;		line 12 in file "../MonthTracker.c"
  3882 ;; Parameters:    Size  Location     Type
  3883 ;;  month           2   11[COMRAM] PTR unsigned int 
  3884 ;;		 -> main@month(2), 
  3885 ;;  month_day       2   13[COMRAM] PTR unsigned int 
  3886 ;;		 -> main@month_day(2), 
  3887 ;;  year            2   15[COMRAM] PTR unsigned short 
  3888 ;;		 -> main@year(2), 
  3889 ;; Auto vars:     Size  Location     Type
  3890 ;;  leap_year       2   19[COMRAM] int 
  3891 ;; Return value:  Size  Location     Type
  3892 ;;                  1    wreg      void 
  3893 ;; Registers used:
  3894 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3895 ;; Tracked objects:
  3896 ;;		On entry : 0/0
  3897 ;;		On exit  : 0/0
  3898 ;;		Unchanged: 0/0
  3899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3900 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3901 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3902 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3903 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3904 ;;Total ram usage:       10 bytes
  3905 ;; Hardware stack levels used: 1
  3906 ;; Hardware stack levels required when called: 2
  3907 ;; This function calls:
  3908 ;;		___lwmod
  3909 ;; This function is called by:
  3910 ;;		_main
  3911 ;; This function uses a non-reentrant model
  3912 ;;
  3913                           
  3914                           	psect	text16
  3915   0013F8                     __ptext16:
  3916                           	callstack 0
  3917   0013F8                     _check_month:
  3918                           	callstack 28
  3919   0013F8                     
  3920                           ;../MonthTracker.c: 16:         if ((*month == 1 || *month == 3 || *month == 5 || *month
      +                           == 7 || *month == 8|| *month == 10 || *month == 12) && *month_day == 32){
  3921   0013F8  C00C  FFD9         	movff	check_month@month,fsr2l
  3922   0013FC  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3923   001400  04DE               	decf	postinc2,w,c
  3924   001402  10DE               	iorwf	postinc2,w,c
  3925   001404  B4D8               	btfsc	status,2,c
  3926   001406  EF07  F00A         	goto	u2181
  3927   00140A  EF09  F00A         	goto	u2180
  3928   00140E                     u2181:
  3929   00140E  EF5D  F00A         	goto	l2480
  3930   001412                     u2180:
  3931   001412  C00C  FFD9         	movff	check_month@month,fsr2l
  3932   001416  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3933   00141A  0E03               	movlw	3
  3934   00141C  18DE               	xorwf	postinc2,w,c
  3935   00141E  10DE               	iorwf	postinc2,w,c
  3936   001420  B4D8               	btfsc	status,2,c
  3937   001422  EF15  F00A         	goto	u2191
  3938   001426  EF17  F00A         	goto	u2190
  3939   00142A                     u2191:
  3940   00142A  EF5D  F00A         	goto	l2480
  3941   00142E                     u2190:
  3942   00142E  C00C  FFD9         	movff	check_month@month,fsr2l
  3943   001432  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3944   001436  0E05               	movlw	5
  3945   001438  18DE               	xorwf	postinc2,w,c
  3946   00143A  10DE               	iorwf	postinc2,w,c
  3947   00143C  B4D8               	btfsc	status,2,c
  3948   00143E  EF23  F00A         	goto	u2201
  3949   001442  EF25  F00A         	goto	u2200
  3950   001446                     u2201:
  3951   001446  EF5D  F00A         	goto	l2480
  3952   00144A                     u2200:
  3953   00144A  C00C  FFD9         	movff	check_month@month,fsr2l
  3954   00144E  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3955   001452  0E07               	movlw	7
  3956   001454  18DE               	xorwf	postinc2,w,c
  3957   001456  10DE               	iorwf	postinc2,w,c
  3958   001458  B4D8               	btfsc	status,2,c
  3959   00145A  EF31  F00A         	goto	u2211
  3960   00145E  EF33  F00A         	goto	u2210
  3961   001462                     u2211:
  3962   001462  EF5D  F00A         	goto	l2480
  3963   001466                     u2210:
  3964   001466  C00C  FFD9         	movff	check_month@month,fsr2l
  3965   00146A  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3966   00146E  0E08               	movlw	8
  3967   001470  18DE               	xorwf	postinc2,w,c
  3968   001472  10DE               	iorwf	postinc2,w,c
  3969   001474  B4D8               	btfsc	status,2,c
  3970   001476  EF3F  F00A         	goto	u2221
  3971   00147A  EF41  F00A         	goto	u2220
  3972   00147E                     u2221:
  3973   00147E  EF5D  F00A         	goto	l2480
  3974   001482                     u2220:
  3975   001482  C00C  FFD9         	movff	check_month@month,fsr2l
  3976   001486  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3977   00148A  0E0A               	movlw	10
  3978   00148C  18DE               	xorwf	postinc2,w,c
  3979   00148E  10DE               	iorwf	postinc2,w,c
  3980   001490  B4D8               	btfsc	status,2,c
  3981   001492  EF4D  F00A         	goto	u2231
  3982   001496  EF4F  F00A         	goto	u2230
  3983   00149A                     u2231:
  3984   00149A  EF5D  F00A         	goto	l2480
  3985   00149E                     u2230:
  3986   00149E  C00C  FFD9         	movff	check_month@month,fsr2l
  3987   0014A2  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3988   0014A6  0E0C               	movlw	12
  3989   0014A8  18DE               	xorwf	postinc2,w,c
  3990   0014AA  10DE               	iorwf	postinc2,w,c
  3991   0014AC  A4D8               	btfss	status,2,c
  3992   0014AE  EF5B  F00A         	goto	u2241
  3993   0014B2  EF5D  F00A         	goto	u2240
  3994   0014B6                     u2241:
  3995   0014B6  EF97  F00A         	goto	l2492
  3996   0014BA                     u2240:
  3997   0014BA                     l2480:
  3998   0014BA  C00E  FFD9         	movff	check_month@month_day,fsr2l
  3999   0014BE  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  4000   0014C2  0E20               	movlw	32
  4001   0014C4  18DE               	xorwf	postinc2,w,c
  4002   0014C6  10DE               	iorwf	postinc2,w,c
  4003   0014C8  A4D8               	btfss	status,2,c
  4004   0014CA  EF69  F00A         	goto	u2251
  4005   0014CE  EF6B  F00A         	goto	u2250
  4006   0014D2                     u2251:
  4007   0014D2  EF97  F00A         	goto	l2492
  4008   0014D6                     u2250:
  4009   0014D6                     
  4010                           ;../MonthTracker.c: 18:             *month_day = 1;
  4011   0014D6  C00E  FFD9         	movff	check_month@month_day,fsr2l
  4012   0014DA  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  4013   0014DE  0E01               	movlw	1
  4014   0014E0  6EDE               	movwf	postinc2,c
  4015   0014E2  0E00               	movlw	0
  4016   0014E4  6EDD               	movwf	postdec2,c
  4017   0014E6                     
  4018                           ;../MonthTracker.c: 19:             (*month)++;
  4019   0014E6  C00C  FFD9         	movff	check_month@month,fsr2l
  4020   0014EA  C00D  FFDA         	movff	check_month@month+1,fsr2h
  4021   0014EE  2ADE               	incf	postinc2,f,c
  4022   0014F0  0E00               	movlw	0
  4023   0014F2  22DD               	addwfc	postdec2,f,c
  4024   0014F4                     
  4025                           ;../MonthTracker.c: 20:             if (*month == 13){
  4026   0014F4  C00C  FFD9         	movff	check_month@month,fsr2l
  4027   0014F8  C00D  FFDA         	movff	check_month@month+1,fsr2h
  4028   0014FC  0E0D               	movlw	13
  4029   0014FE  18DE               	xorwf	postinc2,w,c
  4030   001500  10DE               	iorwf	postinc2,w,c
  4031   001502  A4D8               	btfss	status,2,c
  4032   001504  EF86  F00A         	goto	u2261
  4033   001508  EF88  F00A         	goto	u2260
  4034   00150C                     u2261:
  4035   00150C  EF97  F00A         	goto	l2492
  4036   001510                     u2260:
  4037   001510                     
  4038                           ;../MonthTracker.c: 21:                 *month = 1;
  4039   001510  C00C  FFD9         	movff	check_month@month,fsr2l
  4040   001514  C00D  FFDA         	movff	check_month@month+1,fsr2h
  4041   001518  0E01               	movlw	1
  4042   00151A  6EDE               	movwf	postinc2,c
  4043   00151C  0E00               	movlw	0
  4044   00151E  6EDD               	movwf	postdec2,c
  4045   001520                     
  4046                           ;../MonthTracker.c: 22:                 (*year)++;
  4047   001520  C010  FFD9         	movff	check_month@year,fsr2l
  4048   001524  C011  FFDA         	movff	check_month@year+1,fsr2h
  4049   001528  2ADE               	incf	postinc2,f,c
  4050   00152A  0E00               	movlw	0
  4051   00152C  22DD               	addwfc	postdec2,f,c
  4052   00152E                     l2492:
  4053                           
  4054                           ;../MonthTracker.c: 26:         if ((*month == 4 || *month == 6 || *month == 9 || *month
      +                           == 11) && *month_day == 31){
  4055   00152E  C00C  FFD9         	movff	check_month@month,fsr2l
  4056   001532  C00D  FFDA         	movff	check_month@month+1,fsr2h
  4057   001536  0E04               	movlw	4
  4058   001538  18DE               	xorwf	postinc2,w,c
  4059   00153A  10DE               	iorwf	postinc2,w,c
  4060   00153C  B4D8               	btfsc	status,2,c
  4061   00153E  EFA3  F00A         	goto	u2271
  4062   001542  EFA5  F00A         	goto	u2270
  4063   001546                     u2271:
  4064   001546  EFCF  F00A         	goto	l2500
  4065   00154A                     u2270:
  4066   00154A  C00C  FFD9         	movff	check_month@month,fsr2l
  4067   00154E  C00D  FFDA         	movff	check_month@month+1,fsr2h
  4068   001552  0E06               	movlw	6
  4069   001554  18DE               	xorwf	postinc2,w,c
  4070   001556  10DE               	iorwf	postinc2,w,c
  4071   001558  B4D8               	btfsc	status,2,c
  4072   00155A  EFB1  F00A         	goto	u2281
  4073   00155E  EFB3  F00A         	goto	u2280
  4074   001562                     u2281:
  4075   001562  EFCF  F00A         	goto	l2500
  4076   001566                     u2280:
  4077   001566  C00C  FFD9         	movff	check_month@month,fsr2l
  4078   00156A  C00D  FFDA         	movff	check_month@month+1,fsr2h
  4079   00156E  0E09               	movlw	9
  4080   001570  18DE               	xorwf	postinc2,w,c
  4081   001572  10DE               	iorwf	postinc2,w,c
  4082   001574  B4D8               	btfsc	status,2,c
  4083   001576  EFBF  F00A         	goto	u2291
  4084   00157A  EFC1  F00A         	goto	u2290
  4085   00157E                     u2291:
  4086   00157E  EFCF  F00A         	goto	l2500
  4087   001582                     u2290:
  4088   001582  C00C  FFD9         	movff	check_month@month,fsr2l
  4089   001586  C00D  FFDA         	movff	check_month@month+1,fsr2h
  4090   00158A  0E0B               	movlw	11
  4091   00158C  18DE               	xorwf	postinc2,w,c
  4092   00158E  10DE               	iorwf	postinc2,w,c
  4093   001590  A4D8               	btfss	status,2,c
  4094   001592  EFCD  F00A         	goto	u2301
  4095   001596  EFCF  F00A         	goto	u2300
  4096   00159A                     u2301:
  4097   00159A  EFEC  F00A         	goto	l2506
  4098   00159E                     u2300:
  4099   00159E                     l2500:
  4100   00159E  C00E  FFD9         	movff	check_month@month_day,fsr2l
  4101   0015A2  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  4102   0015A6  0E1F               	movlw	31
  4103   0015A8  18DE               	xorwf	postinc2,w,c
  4104   0015AA  10DE               	iorwf	postinc2,w,c
  4105   0015AC  A4D8               	btfss	status,2,c
  4106   0015AE  EFDB  F00A         	goto	u2311
  4107   0015B2  EFDD  F00A         	goto	u2310
  4108   0015B6                     u2311:
  4109   0015B6  EFEC  F00A         	goto	l2506
  4110   0015BA                     u2310:
  4111   0015BA                     
  4112                           ;../MonthTracker.c: 28:             *month_day = 1;
  4113   0015BA  C00E  FFD9         	movff	check_month@month_day,fsr2l
  4114   0015BE  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  4115   0015C2  0E01               	movlw	1
  4116   0015C4  6EDE               	movwf	postinc2,c
  4117   0015C6  0E00               	movlw	0
  4118   0015C8  6EDD               	movwf	postdec2,c
  4119   0015CA                     
  4120                           ;../MonthTracker.c: 29:             (*month)++;
  4121   0015CA  C00C  FFD9         	movff	check_month@month,fsr2l
  4122   0015CE  C00D  FFDA         	movff	check_month@month+1,fsr2h
  4123   0015D2  2ADE               	incf	postinc2,f,c
  4124   0015D4  0E00               	movlw	0
  4125   0015D6  22DD               	addwfc	postdec2,f,c
  4126   0015D8                     l2506:
  4127                           
  4128                           ;../MonthTracker.c: 33:         if ((*year % 4 == 0 && *year % 100 != 0) || *year % 400 
      +                          == 0) {leap_year = 1;}
  4129   0015D8  C010  FFD9         	movff	check_month@year,fsr2l
  4130   0015DC  C011  FFDA         	movff	check_month@year+1,fsr2h
  4131   0015E0  CFDE F012          	movff	postinc2,??_check_month
  4132   0015E4  CFDD F013          	movff	postdec2,??_check_month+1
  4133   0015E8  0E03               	movlw	3
  4134   0015EA  1612               	andwf	??_check_month^0,f,c
  4135   0015EC  0E00               	movlw	0
  4136   0015EE  1613               	andwf	(??_check_month+1)^0,f,c
  4137   0015F0  5012               	movf	??_check_month^0,w,c
  4138   0015F2  1013               	iorwf	(??_check_month+1)^0,w,c
  4139   0015F4  A4D8               	btfss	status,2,c
  4140   0015F6  EFFF  F00A         	goto	u2321
  4141   0015FA  EF01  F00B         	goto	u2320
  4142   0015FE                     u2321:
  4143   0015FE  EF18  F00B         	goto	l2510
  4144   001602                     u2320:
  4145   001602  C010  FFD9         	movff	check_month@year,fsr2l
  4146   001606  C011  FFDA         	movff	check_month@year+1,fsr2h
  4147   00160A  CFDE F007          	movff	postinc2,___lwmod@dividend
  4148   00160E  CFDD F008          	movff	postdec2,___lwmod@dividend+1
  4149   001612  0E00               	movlw	0
  4150   001614  6E0A               	movwf	(___lwmod@divisor+1)^0,c
  4151   001616  0E64               	movlw	100
  4152   001618  6E09               	movwf	___lwmod@divisor^0,c
  4153   00161A  EC4A  F012         	call	___lwmod	;wreg free
  4154   00161E  5007               	movf	?___lwmod^0,w,c
  4155   001620  1008               	iorwf	(?___lwmod+1)^0,w,c
  4156   001622  A4D8               	btfss	status,2,c
  4157   001624  EF16  F00B         	goto	u2331
  4158   001628  EF18  F00B         	goto	u2330
  4159   00162C                     u2331:
  4160   00162C  EF2F  F00B         	goto	l2512
  4161   001630                     u2330:
  4162   001630                     l2510:
  4163   001630  C010  FFD9         	movff	check_month@year,fsr2l
  4164   001634  C011  FFDA         	movff	check_month@year+1,fsr2h
  4165   001638  CFDE F007          	movff	postinc2,___lwmod@dividend
  4166   00163C  CFDD F008          	movff	postdec2,___lwmod@dividend+1
  4167   001640  0E01               	movlw	1
  4168   001642  6E0A               	movwf	(___lwmod@divisor+1)^0,c
  4169   001644  0E90               	movlw	144
  4170   001646  6E09               	movwf	___lwmod@divisor^0,c
  4171   001648  EC4A  F012         	call	___lwmod	;wreg free
  4172   00164C  5007               	movf	?___lwmod^0,w,c
  4173   00164E  1008               	iorwf	(?___lwmod+1)^0,w,c
  4174   001650  A4D8               	btfss	status,2,c
  4175   001652  EF2D  F00B         	goto	u2341
  4176   001656  EF2F  F00B         	goto	u2340
  4177   00165A                     u2341:
  4178   00165A  EF35  F00B         	goto	l2514
  4179   00165E                     u2340:
  4180   00165E                     l2512:
  4181   00165E  0E00               	movlw	0
  4182   001660  6E15               	movwf	(check_month@leap_year+1)^0,c
  4183   001662  0E01               	movlw	1
  4184   001664  6E14               	movwf	check_month@leap_year^0,c
  4185   001666  EF39  F00B         	goto	l2516
  4186   00166A                     l2514:
  4187   00166A  0E00               	movlw	0
  4188   00166C  6E15               	movwf	(check_month@leap_year+1)^0,c
  4189   00166E  0E00               	movlw	0
  4190   001670  6E14               	movwf	check_month@leap_year^0,c
  4191   001672                     l2516:
  4192                           
  4193                           ;../MonthTracker.c: 36:         if (*month == 2 && leap_year == 1){
  4194   001672  C00C  FFD9         	movff	check_month@month,fsr2l
  4195   001676  C00D  FFDA         	movff	check_month@month+1,fsr2h
  4196   00167A  0E02               	movlw	2
  4197   00167C  18DE               	xorwf	postinc2,w,c
  4198   00167E  10DE               	iorwf	postinc2,w,c
  4199   001680  A4D8               	btfss	status,2,c
  4200   001682  EF45  F00B         	goto	u2351
  4201   001686  EF47  F00B         	goto	u2350
  4202   00168A                     u2351:
  4203   00168A  EF6F  F00B         	goto	l2526
  4204   00168E                     u2350:
  4205   00168E  0414               	decf	check_month@leap_year^0,w,c
  4206   001690  1015               	iorwf	(check_month@leap_year+1)^0,w,c
  4207   001692  A4D8               	btfss	status,2,c
  4208   001694  EF4E  F00B         	goto	u2361
  4209   001698  EF50  F00B         	goto	u2360
  4210   00169C                     u2361:
  4211   00169C  EF6F  F00B         	goto	l2526
  4212   0016A0                     u2360:
  4213   0016A0                     
  4214                           ;../MonthTracker.c: 38:             if (*month_day == 30){
  4215   0016A0  C00E  FFD9         	movff	check_month@month_day,fsr2l
  4216   0016A4  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  4217   0016A8  0E1E               	movlw	30
  4218   0016AA  18DE               	xorwf	postinc2,w,c
  4219   0016AC  10DE               	iorwf	postinc2,w,c
  4220   0016AE  A4D8               	btfss	status,2,c
  4221   0016B0  EF5C  F00B         	goto	u2371
  4222   0016B4  EF5E  F00B         	goto	u2370
  4223   0016B8                     u2371:
  4224   0016B8  EF96  F00B         	goto	l267
  4225   0016BC                     u2370:
  4226   0016BC                     l2522:
  4227                           
  4228                           ;../MonthTracker.c: 39:                 *month_day = 1;
  4229   0016BC  C00E  FFD9         	movff	check_month@month_day,fsr2l
  4230   0016C0  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  4231   0016C4  0E01               	movlw	1
  4232   0016C6  6EDE               	movwf	postinc2,c
  4233   0016C8  0E00               	movlw	0
  4234   0016CA  6EDD               	movwf	postdec2,c
  4235   0016CC                     
  4236                           ;../MonthTracker.c: 40:                 (*month)++;
  4237   0016CC  C00C  FFD9         	movff	check_month@month,fsr2l
  4238   0016D0  C00D  FFDA         	movff	check_month@month+1,fsr2h
  4239   0016D4  2ADE               	incf	postinc2,f,c
  4240   0016D6  0E00               	movlw	0
  4241   0016D8  22DD               	addwfc	postdec2,f,c
  4242   0016DA  EF96  F00B         	goto	l267
  4243   0016DE                     l2526:
  4244   0016DE  C00C  FFD9         	movff	check_month@month,fsr2l
  4245   0016E2  C00D  FFDA         	movff	check_month@month+1,fsr2h
  4246   0016E6  0E02               	movlw	2
  4247   0016E8  18DE               	xorwf	postinc2,w,c
  4248   0016EA  10DE               	iorwf	postinc2,w,c
  4249   0016EC  A4D8               	btfss	status,2,c
  4250   0016EE  EF7B  F00B         	goto	u2381
  4251   0016F2  EF7D  F00B         	goto	u2380
  4252   0016F6                     u2381:
  4253   0016F6  EF96  F00B         	goto	l267
  4254   0016FA                     u2380:
  4255   0016FA  5014               	movf	check_month@leap_year^0,w,c
  4256   0016FC  1015               	iorwf	(check_month@leap_year+1)^0,w,c
  4257   0016FE  A4D8               	btfss	status,2,c
  4258   001700  EF84  F00B         	goto	u2391
  4259   001704  EF86  F00B         	goto	u2390
  4260   001708                     u2391:
  4261   001708  EF96  F00B         	goto	l267
  4262   00170C                     u2390:
  4263   00170C                     
  4264                           ;../MonthTracker.c: 44:             if (*month_day == 29){
  4265   00170C  C00E  FFD9         	movff	check_month@month_day,fsr2l
  4266   001710  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  4267   001714  0E1D               	movlw	29
  4268   001716  18DE               	xorwf	postinc2,w,c
  4269   001718  10DE               	iorwf	postinc2,w,c
  4270   00171A  A4D8               	btfss	status,2,c
  4271   00171C  EF92  F00B         	goto	u2401
  4272   001720  EF94  F00B         	goto	u2400
  4273   001724                     u2401:
  4274   001724  EF96  F00B         	goto	l267
  4275   001728                     u2400:
  4276   001728  EF5E  F00B         	goto	l2522
  4277   00172C                     l267:
  4278   00172C  0012               	return		;funcret
  4279   00172E                     __end_of_check_month:
  4280                           	callstack 0
  4281                           
  4282 ;; *************** function ___lwmod *****************
  4283 ;; Defined at:
  4284 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwmod.c"
  4285 ;; Parameters:    Size  Location     Type
  4286 ;;  dividend        2    6[COMRAM] unsigned int 
  4287 ;;  divisor         2    8[COMRAM] unsigned int 
  4288 ;; Auto vars:     Size  Location     Type
  4289 ;;  counter         1   10[COMRAM] unsigned char 
  4290 ;; Return value:  Size  Location     Type
  4291 ;;                  2    6[COMRAM] unsigned int 
  4292 ;; Registers used:
  4293 ;;		wreg, status,2, status,0
  4294 ;; Tracked objects:
  4295 ;;		On entry : 0/0
  4296 ;;		On exit  : 0/0
  4297 ;;		Unchanged: 0/0
  4298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4299 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4300 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4302 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4303 ;;Total ram usage:        5 bytes
  4304 ;; Hardware stack levels used: 1
  4305 ;; Hardware stack levels required when called: 1
  4306 ;; This function calls:
  4307 ;;		Nothing
  4308 ;; This function is called by:
  4309 ;;		_main
  4310 ;;		_check_month
  4311 ;; This function uses a non-reentrant model
  4312 ;;
  4313                           
  4314                           	psect	text17
  4315   002494                     __ptext17:
  4316                           	callstack 0
  4317   002494                     ___lwmod:
  4318                           	callstack 28
  4319   002494  5009               	movf	___lwmod@divisor^0,w,c
  4320   002496  100A               	iorwf	(___lwmod@divisor+1)^0,w,c
  4321   002498  B4D8               	btfsc	status,2,c
  4322   00249A  EF51  F012         	goto	u2021
  4323   00249E  EF53  F012         	goto	u2020
  4324   0024A2                     u2021:
  4325   0024A2  EF77  F012         	goto	l832
  4326   0024A6                     u2020:
  4327   0024A6  0E01               	movlw	1
  4328   0024A8  6E0B               	movwf	___lwmod@counter^0,c
  4329   0024AA  EF5B  F012         	goto	l2340
  4330   0024AE                     l2338:
  4331   0024AE  90D8               	bcf	status,0,c
  4332   0024B0  3609               	rlcf	___lwmod@divisor^0,f,c
  4333   0024B2  360A               	rlcf	(___lwmod@divisor+1)^0,f,c
  4334   0024B4  2A0B               	incf	___lwmod@counter^0,f,c
  4335   0024B6                     l2340:
  4336   0024B6  AE0A               	btfss	(___lwmod@divisor+1)^0,7,c
  4337   0024B8  EF60  F012         	goto	u2031
  4338   0024BC  EF62  F012         	goto	u2030
  4339   0024C0                     u2031:
  4340   0024C0  EF57  F012         	goto	l2338
  4341   0024C4                     u2030:
  4342   0024C4                     l2342:
  4343   0024C4  5009               	movf	___lwmod@divisor^0,w,c
  4344   0024C6  5C07               	subwf	___lwmod@dividend^0,w,c
  4345   0024C8  500A               	movf	(___lwmod@divisor+1)^0,w,c
  4346   0024CA  5808               	subwfb	(___lwmod@dividend+1)^0,w,c
  4347   0024CC  A0D8               	btfss	status,0,c
  4348   0024CE  EF6B  F012         	goto	u2041
  4349   0024D2  EF6D  F012         	goto	u2040
  4350   0024D6                     u2041:
  4351   0024D6  EF71  F012         	goto	l2346
  4352   0024DA                     u2040:
  4353   0024DA  5009               	movf	___lwmod@divisor^0,w,c
  4354   0024DC  5E07               	subwf	___lwmod@dividend^0,f,c
  4355   0024DE  500A               	movf	(___lwmod@divisor+1)^0,w,c
  4356   0024E0  5A08               	subwfb	(___lwmod@dividend+1)^0,f,c
  4357   0024E2                     l2346:
  4358   0024E2  90D8               	bcf	status,0,c
  4359   0024E4  320A               	rrcf	(___lwmod@divisor+1)^0,f,c
  4360   0024E6  3209               	rrcf	___lwmod@divisor^0,f,c
  4361   0024E8  2E0B               	decfsz	___lwmod@counter^0,f,c
  4362   0024EA  EF62  F012         	goto	l2342
  4363   0024EE                     l832:
  4364   0024EE  C007  F007         	movff	___lwmod@dividend,?___lwmod
  4365   0024F2  C008  F008         	movff	___lwmod@dividend+1,?___lwmod+1
  4366   0024F6  0012               	return		;funcret
  4367   0024F8                     __end_of___lwmod:
  4368                           	callstack 0
  4369                           
  4370 ;; *************** function ___lwdiv *****************
  4371 ;; Defined at:
  4372 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  4373 ;; Parameters:    Size  Location     Type
  4374 ;;  dividend        2    6[COMRAM] unsigned int 
  4375 ;;  divisor         2    8[COMRAM] unsigned int 
  4376 ;; Auto vars:     Size  Location     Type
  4377 ;;  quotient        2   10[COMRAM] unsigned int 
  4378 ;;  counter         1   12[COMRAM] unsigned char 
  4379 ;; Return value:  Size  Location     Type
  4380 ;;                  2    6[COMRAM] unsigned int 
  4381 ;; Registers used:
  4382 ;;		wreg, status,2, status,0
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/0
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4388 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4389 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4391 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4392 ;;Total ram usage:        7 bytes
  4393 ;; Hardware stack levels used: 1
  4394 ;; Hardware stack levels required when called: 1
  4395 ;; This function calls:
  4396 ;;		Nothing
  4397 ;; This function is called by:
  4398 ;;		_main
  4399 ;;		_LEDarray_disp_dec
  4400 ;;		_LEDarray_disp_PPM
  4401 ;;		_ADC2String
  4402 ;; This function uses a non-reentrant model
  4403 ;;
  4404                           
  4405                           	psect	text18
  4406   0023B8                     __ptext18:
  4407                           	callstack 0
  4408   0023B8                     ___lwdiv:
  4409                           	callstack 29
  4410   0023B8  0E00               	movlw	0
  4411   0023BA  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  4412   0023BC  0E00               	movlw	0
  4413   0023BE  6E0B               	movwf	___lwdiv@quotient^0,c
  4414   0023C0  5009               	movf	___lwdiv@divisor^0,w,c
  4415   0023C2  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4416   0023C4  B4D8               	btfsc	status,2,c
  4417   0023C6  EFE7  F011         	goto	u2411
  4418   0023CA  EFE9  F011         	goto	u2410
  4419   0023CE                     u2411:
  4420   0023CE  EF11  F012         	goto	l822
  4421   0023D2                     u2410:
  4422   0023D2  0E01               	movlw	1
  4423   0023D4  6E0D               	movwf	___lwdiv@counter^0,c
  4424   0023D6  EFF1  F011         	goto	l2548
  4425   0023DA                     l2546:
  4426   0023DA  90D8               	bcf	status,0,c
  4427   0023DC  3609               	rlcf	___lwdiv@divisor^0,f,c
  4428   0023DE  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4429   0023E0  2A0D               	incf	___lwdiv@counter^0,f,c
  4430   0023E2                     l2548:
  4431   0023E2  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  4432   0023E4  EFF6  F011         	goto	u2421
  4433   0023E8  EFF8  F011         	goto	u2420
  4434   0023EC                     u2421:
  4435   0023EC  EFED  F011         	goto	l2546
  4436   0023F0                     u2420:
  4437   0023F0                     l2550:
  4438   0023F0  90D8               	bcf	status,0,c
  4439   0023F2  360B               	rlcf	___lwdiv@quotient^0,f,c
  4440   0023F4  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4441   0023F6  5009               	movf	___lwdiv@divisor^0,w,c
  4442   0023F8  5C07               	subwf	___lwdiv@dividend^0,w,c
  4443   0023FA  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  4444   0023FC  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4445   0023FE  A0D8               	btfss	status,0,c
  4446   002400  EF04  F012         	goto	u2431
  4447   002404  EF06  F012         	goto	u2430
  4448   002408                     u2431:
  4449   002408  EF0B  F012         	goto	l2558
  4450   00240C                     u2430:
  4451   00240C  5009               	movf	___lwdiv@divisor^0,w,c
  4452   00240E  5E07               	subwf	___lwdiv@dividend^0,f,c
  4453   002410  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  4454   002412  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4455   002414  800B               	bsf	___lwdiv@quotient^0,0,c
  4456   002416                     l2558:
  4457   002416  90D8               	bcf	status,0,c
  4458   002418  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4459   00241A  3209               	rrcf	___lwdiv@divisor^0,f,c
  4460   00241C  2E0D               	decfsz	___lwdiv@counter^0,f,c
  4461   00241E  EFF8  F011         	goto	l2550
  4462   002422                     l822:
  4463   002422  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  4464   002426  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4465   00242A  0012               	return		;funcret
  4466   00242C                     __end_of___lwdiv:
  4467                           	callstack 0
  4468                           
  4469 ;; *************** function _Timer0_init *****************
  4470 ;; Defined at:
  4471 ;;		line 7 in file "../timers.c"
  4472 ;; Parameters:    Size  Location     Type
  4473 ;;		None
  4474 ;; Auto vars:     Size  Location     Type
  4475 ;;		None
  4476 ;; Return value:  Size  Location     Type
  4477 ;;                  1    wreg      void 
  4478 ;; Registers used:
  4479 ;;		wreg, status,2
  4480 ;; Tracked objects:
  4481 ;;		On entry : 0/0
  4482 ;;		On exit  : 0/0
  4483 ;;		Unchanged: 0/0
  4484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4489 ;;Total ram usage:        0 bytes
  4490 ;; Hardware stack levels used: 1
  4491 ;; Hardware stack levels required when called: 1
  4492 ;; This function calls:
  4493 ;;		Nothing
  4494 ;; This function is called by:
  4495 ;;		_main
  4496 ;; This function uses a non-reentrant model
  4497 ;;
  4498                           
  4499                           	psect	text19
  4500   0027EC                     __ptext19:
  4501                           	callstack 0
  4502   0027EC                     _Timer0_init:
  4503                           	callstack 29
  4504   0027EC                     
  4505                           ;../timers.c: 9:     T0CON1bits.T0CS=0b010;
  4506   0027EC  50D6               	movf	214,w,c	;volatile
  4507   0027EE  0B1F               	andlw	-225
  4508   0027F0  0940               	iorlw	64
  4509   0027F2  6ED6               	movwf	214,c	;volatile
  4510   0027F4                     
  4511                           ;../timers.c: 10:     T0CON1bits.T0ASYNC=1;
  4512   0027F4  88D6               	bsf	214,4,c	;volatile
  4513                           
  4514                           ;../timers.c: 11:     T0CON1bits.T0CKPS=0b0010;
  4515   0027F6  50D6               	movf	214,w,c	;volatile
  4516   0027F8  0BF0               	andlw	-16
  4517   0027FA  0902               	iorlw	2
  4518   0027FC  6ED6               	movwf	214,c	;volatile
  4519   0027FE                     
  4520                           ;../timers.c: 12:     T0CON0bits.T016BIT=1;
  4521   0027FE  88D5               	bsf	213,4,c	;volatile
  4522                           
  4523                           ;../timers.c: 16:     TMR0H=0b00001011;
  4524   002800  0E0B               	movlw	11
  4525   002802  6ED4               	movwf	212,c	;volatile
  4526                           
  4527                           ;../timers.c: 17:     TMR0L=0b00001011;
  4528   002804  0E0B               	movlw	11
  4529   002806  6ED3               	movwf	211,c	;volatile
  4530   002808                     
  4531                           ;../timers.c: 22:     T0CON0bits.T0EN=1;
  4532   002808  8ED5               	bsf	213,7,c	;volatile
  4533   00280A  0012               	return		;funcret
  4534   00280C                     __end_of_Timer0_init:
  4535                           	callstack 0
  4536                           
  4537 ;; *************** function _Light_init *****************
  4538 ;; Defined at:
  4539 ;;		line 8 in file "../comparator.c"
  4540 ;; Parameters:    Size  Location     Type
  4541 ;;		None
  4542 ;; Auto vars:     Size  Location     Type
  4543 ;;		None
  4544 ;; Return value:  Size  Location     Type
  4545 ;;                  1    wreg      void 
  4546 ;; Registers used:
  4547 ;;		None
  4548 ;; Tracked objects:
  4549 ;;		On entry : 0/0
  4550 ;;		On exit  : 0/0
  4551 ;;		Unchanged: 0/0
  4552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4557 ;;Total ram usage:        0 bytes
  4558 ;; Hardware stack levels used: 1
  4559 ;; Hardware stack levels required when called: 1
  4560 ;; This function calls:
  4561 ;;		Nothing
  4562 ;; This function is called by:
  4563 ;;		_main
  4564 ;; This function uses a non-reentrant model
  4565 ;;
  4566                           
  4567                           	psect	text20
  4568   002848                     __ptext20:
  4569                           	callstack 0
  4570   002848                     _Light_init:
  4571                           	callstack 29
  4572   002848                     
  4573                           ;../comparator.c: 10:    LATHbits.LATH3=1;
  4574   002848  8680               	bsf	128,3,c	;volatile
  4575                           
  4576                           ;../comparator.c: 11:    TRISHbits.TRISH3=0;
  4577   00284A  9688               	bcf	136,3,c	;volatile
  4578                           
  4579                           ;../comparator.c: 12:    LATDbits.LATD7=0;
  4580   00284C  9E7C               	bcf	124,7,c	;volatile
  4581                           
  4582                           ;../comparator.c: 13:    TRISDbits.TRISD7=0;
  4583   00284E  9E84               	bcf	132,7,c	;volatile
  4584   002850  0012               	return		;funcret
  4585   002852                     __end_of_Light_init:
  4586                           	callstack 0
  4587                           
  4588 ;; *************** function _LEDarray_init *****************
  4589 ;; Defined at:
  4590 ;;		line 8 in file "../LEDarray.c"
  4591 ;; Parameters:    Size  Location     Type
  4592 ;;		None
  4593 ;; Auto vars:     Size  Location     Type
  4594 ;;		None
  4595 ;; Return value:  Size  Location     Type
  4596 ;;                  1    wreg      void 
  4597 ;; Registers used:
  4598 ;;		None
  4599 ;; Tracked objects:
  4600 ;;		On entry : 0/0
  4601 ;;		On exit  : 0/0
  4602 ;;		Unchanged: 0/0
  4603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4608 ;;Total ram usage:        0 bytes
  4609 ;; Hardware stack levels used: 1
  4610 ;; Hardware stack levels required when called: 1
  4611 ;; This function calls:
  4612 ;;		Nothing
  4613 ;; This function is called by:
  4614 ;;		_main
  4615 ;; This function uses a non-reentrant model
  4616 ;;
  4617                           
  4618                           	psect	text21
  4619   0027CA                     __ptext21:
  4620                           	callstack 0
  4621   0027CA                     _LEDarray_init:
  4622                           	callstack 29
  4623   0027CA                     
  4624                           ;../LEDarray.c: 9:     TRISGbits.TRISG0 = 0;
  4625   0027CA  9087               	bcf	135,0,c	;volatile
  4626                           
  4627                           ;../LEDarray.c: 10:     TRISGbits.TRISG1 = 0;
  4628   0027CC  9287               	bcf	135,1,c	;volatile
  4629                           
  4630                           ;../LEDarray.c: 11:     TRISAbits.TRISA2 = 0;
  4631   0027CE  9481               	bcf	129,2,c	;volatile
  4632                           
  4633                           ;../LEDarray.c: 12:     TRISFbits.TRISF6 = 0;
  4634   0027D0  9C86               	bcf	134,6,c	;volatile
  4635                           
  4636                           ;../LEDarray.c: 13:     TRISAbits.TRISA4 = 0;
  4637   0027D2  9881               	bcf	129,4,c	;volatile
  4638                           
  4639                           ;../LEDarray.c: 14:     TRISAbits.TRISA5 = 0;
  4640   0027D4  9A81               	bcf	129,5,c	;volatile
  4641                           
  4642                           ;../LEDarray.c: 15:     TRISFbits.TRISF0 = 0;
  4643   0027D6  9086               	bcf	134,0,c	;volatile
  4644                           
  4645                           ;../LEDarray.c: 16:     TRISBbits.TRISB0 = 0;
  4646   0027D8  9082               	bcf	130,0,c	;volatile
  4647                           
  4648                           ;../LEDarray.c: 18:     LATGbits.LATG0 = 0;
  4649   0027DA  907F               	bcf	127,0,c	;volatile
  4650                           
  4651                           ;../LEDarray.c: 19:     LATGbits.LATG1 = 0;
  4652   0027DC  927F               	bcf	127,1,c	;volatile
  4653                           
  4654                           ;../LEDarray.c: 20:     LATAbits.LATA2 = 0;
  4655   0027DE  9479               	bcf	121,2,c	;volatile
  4656                           
  4657                           ;../LEDarray.c: 21:     LATFbits.LATF6 = 0;
  4658   0027E0  9C7E               	bcf	126,6,c	;volatile
  4659                           
  4660                           ;../LEDarray.c: 22:     LATAbits.LATA4 = 0;
  4661   0027E2  9879               	bcf	121,4,c	;volatile
  4662                           
  4663                           ;../LEDarray.c: 23:     LATAbits.LATA5 = 0;
  4664   0027E4  9A79               	bcf	121,5,c	;volatile
  4665                           
  4666                           ;../LEDarray.c: 24:     LATFbits.LATF0 = 0;
  4667   0027E6  907E               	bcf	126,0,c	;volatile
  4668                           
  4669                           ;../LEDarray.c: 25:     LATBbits.LATB0 = 0;
  4670   0027E8  907A               	bcf	122,0,c	;volatile
  4671   0027EA  0012               	return		;funcret
  4672   0027EC                     __end_of_LEDarray_init:
  4673                           	callstack 0
  4674                           
  4675 ;; *************** function _LEDarray_disp_bin *****************
  4676 ;; Defined at:
  4677 ;;		line 37 in file "../LEDarray.c"
  4678 ;; Parameters:    Size  Location     Type
  4679 ;;  number          2    0[COMRAM] unsigned int 
  4680 ;; Auto vars:     Size  Location     Type
  4681 ;;		None
  4682 ;; Return value:  Size  Location     Type
  4683 ;;                  1    wreg      void 
  4684 ;; Registers used:
  4685 ;;		None
  4686 ;; Tracked objects:
  4687 ;;		On entry : 0/0
  4688 ;;		On exit  : 0/0
  4689 ;;		Unchanged: 0/0
  4690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4691 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4694 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4695 ;;Total ram usage:        2 bytes
  4696 ;; Hardware stack levels used: 1
  4697 ;; Hardware stack levels required when called: 1
  4698 ;; This function calls:
  4699 ;;		Nothing
  4700 ;; This function is called by:
  4701 ;;		_main
  4702 ;;		_LEDarray_disp_dec
  4703 ;;		_LEDarray_disp_PPM
  4704 ;; This function uses a non-reentrant model
  4705 ;;
  4706                           
  4707                           	psect	text22
  4708   0021B0                     __ptext22:
  4709                           	callstack 0
  4710   0021B0                     _LEDarray_disp_bin:
  4711                           	callstack 29
  4712   0021B0                     
  4713                           ;../LEDarray.c: 38:     if (number & 0b000000001) {LATGbits.LATG0=1;} else {LATGbits.LAT
      +                          G0=0;}
  4714   0021B0  A001               	btfss	LEDarray_disp_bin@number^0,0,c
  4715   0021B2  EFDD  F010         	goto	u2061
  4716   0021B6  EFDF  F010         	goto	u2060
  4717   0021BA                     u2061:
  4718   0021BA  EFE2  F010         	goto	l48
  4719   0021BE                     u2060:
  4720   0021BE  807F               	bsf	127,0,c	;volatile
  4721   0021C0  EFE3  F010         	goto	l49
  4722   0021C4                     l48:
  4723   0021C4  907F               	bcf	127,0,c	;volatile
  4724   0021C6                     l49:
  4725                           
  4726                           ;../LEDarray.c: 39:     if (number & 0b000000010) {LATGbits.LATG1=1;} else {LATGbits.LAT
      +                          G1=0;}
  4727   0021C6  A201               	btfss	LEDarray_disp_bin@number^0,1,c
  4728   0021C8  EFE8  F010         	goto	u2071
  4729   0021CC  EFEA  F010         	goto	u2070
  4730   0021D0                     u2071:
  4731   0021D0  EFED  F010         	goto	l50
  4732   0021D4                     u2070:
  4733   0021D4  827F               	bsf	127,1,c	;volatile
  4734   0021D6  EFEE  F010         	goto	l51
  4735   0021DA                     l50:
  4736   0021DA  927F               	bcf	127,1,c	;volatile
  4737   0021DC                     l51:
  4738                           
  4739                           ;../LEDarray.c: 40:     if (number & 0b000000100) {LATAbits.LATA2=1;} else {LATAbits.LAT
      +                          A2=0;}
  4740   0021DC  A401               	btfss	LEDarray_disp_bin@number^0,2,c
  4741   0021DE  EFF3  F010         	goto	u2081
  4742   0021E2  EFF5  F010         	goto	u2080
  4743   0021E6                     u2081:
  4744   0021E6  EFF8  F010         	goto	l52
  4745   0021EA                     u2080:
  4746   0021EA  8479               	bsf	121,2,c	;volatile
  4747   0021EC  EFF9  F010         	goto	l53
  4748   0021F0                     l52:
  4749   0021F0  9479               	bcf	121,2,c	;volatile
  4750   0021F2                     l53:
  4751                           
  4752                           ;../LEDarray.c: 41:     if (number & 0b000001000) {LATFbits.LATF6=1;} else {LATFbits.LAT
      +                          F6=0;}
  4753   0021F2  A601               	btfss	LEDarray_disp_bin@number^0,3,c
  4754   0021F4  EFFE  F010         	goto	u2091
  4755   0021F8  EF00  F011         	goto	u2090
  4756   0021FC                     u2091:
  4757   0021FC  EF03  F011         	goto	l54
  4758   002200                     u2090:
  4759   002200  8C7E               	bsf	126,6,c	;volatile
  4760   002202  EF04  F011         	goto	l55
  4761   002206                     l54:
  4762   002206  9C7E               	bcf	126,6,c	;volatile
  4763   002208                     l55:
  4764                           
  4765                           ;../LEDarray.c: 42:     if (number & 0b000010000) {LATAbits.LATA4=1;} else {LATAbits.LAT
      +                          A4=0;}
  4766   002208  A801               	btfss	LEDarray_disp_bin@number^0,4,c
  4767   00220A  EF09  F011         	goto	u2101
  4768   00220E  EF0B  F011         	goto	u2100
  4769   002212                     u2101:
  4770   002212  EF0E  F011         	goto	l56
  4771   002216                     u2100:
  4772   002216  8879               	bsf	121,4,c	;volatile
  4773   002218  EF0F  F011         	goto	l57
  4774   00221C                     l56:
  4775   00221C  9879               	bcf	121,4,c	;volatile
  4776   00221E                     l57:
  4777                           
  4778                           ;../LEDarray.c: 43:     if (number & 0b000100000) {LATAbits.LATA5=1;} else {LATAbits.LAT
      +                          A5=0;}
  4779   00221E  AA01               	btfss	LEDarray_disp_bin@number^0,5,c
  4780   002220  EF14  F011         	goto	u2111
  4781   002224  EF16  F011         	goto	u2110
  4782   002228                     u2111:
  4783   002228  EF19  F011         	goto	l58
  4784   00222C                     u2110:
  4785   00222C  8A79               	bsf	121,5,c	;volatile
  4786   00222E  EF1A  F011         	goto	l59
  4787   002232                     l58:
  4788   002232  9A79               	bcf	121,5,c	;volatile
  4789   002234                     l59:
  4790                           
  4791                           ;../LEDarray.c: 44:     if (number & 0b001000000) {LATFbits.LATF0=1;} else {LATFbits.LAT
      +                          F0=0;}
  4792   002234  AC01               	btfss	LEDarray_disp_bin@number^0,6,c
  4793   002236  EF1F  F011         	goto	u2121
  4794   00223A  EF21  F011         	goto	u2120
  4795   00223E                     u2121:
  4796   00223E  EF24  F011         	goto	l60
  4797   002242                     u2120:
  4798   002242  807E               	bsf	126,0,c	;volatile
  4799   002244  EF25  F011         	goto	l61
  4800   002248                     l60:
  4801   002248  907E               	bcf	126,0,c	;volatile
  4802   00224A                     l61:
  4803                           
  4804                           ;../LEDarray.c: 45:     if (number & 0b010000000) {LATBbits.LATB0=1;} else {LATBbits.LAT
      +                          B0=0;}
  4805   00224A  AE01               	btfss	LEDarray_disp_bin@number^0,7,c
  4806   00224C  EF2A  F011         	goto	u2131
  4807   002250  EF2C  F011         	goto	u2130
  4808   002254                     u2131:
  4809   002254  EF2F  F011         	goto	l62
  4810   002258                     u2130:
  4811   002258  807A               	bsf	122,0,c	;volatile
  4812   00225A  EF30  F011         	goto	l63
  4813   00225E                     l62:
  4814   00225E  907A               	bcf	122,0,c	;volatile
  4815   002260                     l63:
  4816                           
  4817                           ;../LEDarray.c: 46:     if (number & 0b100000000) {LATBbits.LATB1=1;} else {LATBbits.LAT
      +                          B1=0;}
  4818   002260  A002               	btfss	(LEDarray_disp_bin@number+1)^0,0,c
  4819   002262  EF35  F011         	goto	u2141
  4820   002266  EF37  F011         	goto	u2140
  4821   00226A                     u2141:
  4822   00226A  EF3A  F011         	goto	l64
  4823   00226E                     u2140:
  4824   00226E  827A               	bsf	122,1,c	;volatile
  4825   002270  EF3B  F011         	goto	l66
  4826   002274                     l64:
  4827   002274  927A               	bcf	122,1,c	;volatile
  4828   002276                     l66:
  4829   002276  0012               	return		;funcret
  4830   002278                     __end_of_LEDarray_disp_bin:
  4831                           	callstack 0
  4832                           
  4833 ;; *************** function _LCD_setline *****************
  4834 ;; Defined at:
  4835 ;;		line 96 in file "../LCD.c"
  4836 ;; Parameters:    Size  Location     Type
  4837 ;;  line            1    wreg     unsigned char 
  4838 ;; Auto vars:     Size  Location     Type
  4839 ;;  line            1    3[COMRAM] unsigned char 
  4840 ;; Return value:  Size  Location     Type
  4841 ;;                  1    wreg      void 
  4842 ;; Registers used:
  4843 ;;		wreg, status,2, status,0, cstack
  4844 ;; Tracked objects:
  4845 ;;		On entry : 0/0
  4846 ;;		On exit  : 0/0
  4847 ;;		Unchanged: 0/0
  4848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4850 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4852 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4853 ;;Total ram usage:        1 bytes
  4854 ;; Hardware stack levels used: 1
  4855 ;; Hardware stack levels required when called: 4
  4856 ;; This function calls:
  4857 ;;		_LCD_sendbyte
  4858 ;; This function is called by:
  4859 ;;		_main
  4860 ;; This function uses a non-reentrant model
  4861 ;;
  4862                           
  4863                           	psect	text23
  4864   0026AE                     __ptext23:
  4865                           	callstack 0
  4866   0026AE                     _LCD_setline:
  4867                           	callstack 26
  4868                           
  4869                           ;incstack = 0
  4870                           ;LCD_setline@line stored from wreg
  4871   0026AE  6E04               	movwf	LCD_setline@line^0,c
  4872   0026B0                     
  4873                           ;../LCD.c: 96: void LCD_setline (char line);../LCD.c: 97: {;../LCD.c: 98:     if (line =
      +                          = 1) {LCD_sendbyte(0x80,0);};
  4874   0026B0  0404               	decf	LCD_setline@line^0,w,c
  4875   0026B2  A4D8               	btfss	status,2,c
  4876   0026B4  EF5E  F013         	goto	u2151
  4877   0026B8  EF60  F013         	goto	u2150
  4878   0026BC                     u2151:
  4879   0026BC  EF65  F013         	goto	l2440
  4880   0026C0                     u2150:
  4881   0026C0  0E00               	movlw	0
  4882   0026C2  6E02               	movwf	LCD_sendbyte@type^0,c
  4883   0026C4  0E80               	movlw	128
  4884   0026C6  EC74  F013         	call	_LCD_sendbyte
  4885   0026CA                     l2440:
  4886                           
  4887                           ;../LCD.c: 99:     if (line == 2) {LCD_sendbyte(0xC0,0);}
  4888   0026CA  0E02               	movlw	2
  4889   0026CC  1804               	xorwf	LCD_setline@line^0,w,c
  4890   0026CE  A4D8               	btfss	status,2,c
  4891   0026D0  EF6C  F013         	goto	u2161
  4892   0026D4  EF6E  F013         	goto	u2160
  4893   0026D8                     u2161:
  4894   0026D8  EF73  F013         	goto	l313
  4895   0026DC                     u2160:
  4896   0026DC  0E00               	movlw	0
  4897   0026DE  6E02               	movwf	LCD_sendbyte@type^0,c
  4898   0026E0  0EC0               	movlw	192
  4899   0026E2  EC74  F013         	call	_LCD_sendbyte
  4900   0026E6                     l313:
  4901   0026E6  0012               	return		;funcret
  4902   0026E8                     __end_of_LCD_setline:
  4903                           	callstack 0
  4904                           
  4905 ;; *************** function _LCD_sendstring *****************
  4906 ;; Defined at:
  4907 ;;		line 105 in file "../LCD.c"
  4908 ;; Parameters:    Size  Location     Type
  4909 ;;  string          2    3[COMRAM] PTR unsigned char 
  4910 ;;		 -> main@yearstr(20), main@datestr(50), 
  4911 ;; Auto vars:     Size  Location     Type
  4912 ;;		None
  4913 ;; Return value:  Size  Location     Type
  4914 ;;                  1    wreg      void 
  4915 ;; Registers used:
  4916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4917 ;; Tracked objects:
  4918 ;;		On entry : 0/0
  4919 ;;		On exit  : 0/0
  4920 ;;		Unchanged: 0/0
  4921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4922 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4925 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4926 ;;Total ram usage:        2 bytes
  4927 ;; Hardware stack levels used: 1
  4928 ;; Hardware stack levels required when called: 4
  4929 ;; This function calls:
  4930 ;;		_LCD_sendbyte
  4931 ;; This function is called by:
  4932 ;;		_main
  4933 ;; This function uses a non-reentrant model
  4934 ;;
  4935                           
  4936                           	psect	text24
  4937   00271E                     __ptext24:
  4938                           	callstack 0
  4939   00271E                     _LCD_sendstring:
  4940                           	callstack 26
  4941   00271E                     
  4942                           ;../LCD.c: 105: void LCD_sendstring(char *string);../LCD.c: 106: {;../LCD.c: 107:  while
      +                          (*string != 0) {
  4943   00271E  EF9C  F013         	goto	l2462
  4944   002722                     l2458:
  4945                           
  4946                           ;../LCD.c: 108:         LCD_sendbyte(*string++,1);
  4947   002722  0E01               	movlw	1
  4948   002724  6E02               	movwf	LCD_sendbyte@type^0,c
  4949   002726  C004  FFD9         	movff	LCD_sendstring@string,fsr2l
  4950   00272A  C005  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  4951   00272E  50DF               	movf	indf2,w,c
  4952   002730  EC74  F013         	call	_LCD_sendbyte
  4953   002734  4A04               	infsnz	LCD_sendstring@string^0,f,c
  4954   002736  2A05               	incf	(LCD_sendstring@string+1)^0,f,c
  4955   002738                     l2462:
  4956                           
  4957                           ;../LCD.c: 107:  while(*string != 0) {
  4958   002738  C004  FFD9         	movff	LCD_sendstring@string,fsr2l
  4959   00273C  C005  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  4960   002740  50DF               	movf	indf2,w,c
  4961   002742  A4D8               	btfss	status,2,c
  4962   002744  EFA6  F013         	goto	u2171
  4963   002748  EFA8  F013         	goto	u2170
  4964   00274C                     u2171:
  4965   00274C  EF91  F013         	goto	l2458
  4966   002750                     u2170:
  4967   002750  0012               	return		;funcret
  4968   002752                     __end_of_LCD_sendstring:
  4969                           	callstack 0
  4970                           
  4971 ;; *************** function _LCD_clear *****************
  4972 ;; Defined at:
  4973 ;;		line 87 in file "../LCD.c"
  4974 ;; Parameters:    Size  Location     Type
  4975 ;;		None
  4976 ;; Auto vars:     Size  Location     Type
  4977 ;;		None
  4978 ;; Return value:  Size  Location     Type
  4979 ;;                  1    wreg      void 
  4980 ;; Registers used:
  4981 ;;		wreg, status,2, status,0, cstack
  4982 ;; Tracked objects:
  4983 ;;		On entry : 0/0
  4984 ;;		On exit  : 0/0
  4985 ;;		Unchanged: 0/0
  4986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4989 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4990 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4991 ;;Total ram usage:        1 bytes
  4992 ;; Hardware stack levels used: 1
  4993 ;; Hardware stack levels required when called: 4
  4994 ;; This function calls:
  4995 ;;		_LCD_sendbyte
  4996 ;; This function is called by:
  4997 ;;		_main
  4998 ;; This function uses a non-reentrant model
  4999 ;;
  5000                           
  5001                           	psect	text25
  5002   00280C                     __ptext25:
  5003                           	callstack 0
  5004   00280C                     _LCD_clear:
  5005                           	callstack 26
  5006   00280C                     
  5007                           ;../LCD.c: 89:     LCD_sendbyte(0b00000001,0);
  5008   00280C  0E00               	movlw	0
  5009   00280E  6E02               	movwf	LCD_sendbyte@type^0,c
  5010   002810  0E01               	movlw	1
  5011   002812  EC74  F013         	call	_LCD_sendbyte
  5012   002816                     
  5013                           ;../LCD.c: 90:     _delay((unsigned long)((2)*(64000000/4000.0)));
  5014   002816  0E2A               	movlw	42
  5015   002818  6E04               	movwf	??_LCD_clear^0,c
  5016   00281A  0E8E               	movlw	142
  5017   00281C                     u2907:
  5018   00281C  2EE8               	decfsz	wreg,f,c
  5019   00281E  D7FE               	bra	u2907
  5020   002820  2E04               	decfsz	??_LCD_clear^0,f,c
  5021   002822  D7FC               	bra	u2907
  5022   002824  0012               	return		;funcret
  5023   002826                     __end_of_LCD_clear:
  5024                           	callstack 0
  5025                           
  5026 ;; *************** function _LCD_Init *****************
  5027 ;; Defined at:
  5028 ;;		line 48 in file "../LCD.c"
  5029 ;; Parameters:    Size  Location     Type
  5030 ;;		None
  5031 ;; Auto vars:     Size  Location     Type
  5032 ;;		None
  5033 ;; Return value:  Size  Location     Type
  5034 ;;                  1    wreg      void 
  5035 ;; Registers used:
  5036 ;;		wreg, status,2, status,0, cstack
  5037 ;; Tracked objects:
  5038 ;;		On entry : 0/0
  5039 ;;		On exit  : 0/0
  5040 ;;		Unchanged: 0/0
  5041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5044 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5045 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5046 ;;Total ram usage:        2 bytes
  5047 ;; Hardware stack levels used: 1
  5048 ;; Hardware stack levels required when called: 4
  5049 ;; This function calls:
  5050 ;;		_LCD_sendbyte
  5051 ;;		_LCD_sendnibble
  5052 ;; This function is called by:
  5053 ;;		_main
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057                           	psect	text26
  5058   002322                     __ptext26:
  5059                           	callstack 0
  5060   002322                     _LCD_Init:
  5061                           	callstack 26
  5062   002322                     
  5063                           ;../LCD.c: 51:     TRISCbits.TRISC6 = 0;
  5064   002322  9C83               	bcf	131,6,c	;volatile
  5065                           
  5066                           ;../LCD.c: 52:     TRISCbits.TRISC2 = 0;
  5067   002324  9483               	bcf	131,2,c	;volatile
  5068                           
  5069                           ;../LCD.c: 53:     TRISBbits.TRISB3 = 0;
  5070   002326  9682               	bcf	130,3,c	;volatile
  5071                           
  5072                           ;../LCD.c: 54:     TRISBbits.TRISB2 = 0;
  5073   002328  9482               	bcf	130,2,c	;volatile
  5074                           
  5075                           ;../LCD.c: 55:     TRISEbits.TRISE3 = 0;
  5076   00232A  9685               	bcf	133,3,c	;volatile
  5077                           
  5078                           ;../LCD.c: 56:     TRISEbits.TRISE1 = 0;
  5079   00232C  9285               	bcf	133,1,c	;volatile
  5080                           
  5081                           ;../LCD.c: 58:     LATCbits.LATC6 = 0;
  5082   00232E  9C7B               	bcf	123,6,c	;volatile
  5083                           
  5084                           ;../LCD.c: 59:     LATCbits.LATC2 = 0;
  5085   002330  947B               	bcf	123,2,c	;volatile
  5086                           
  5087                           ;../LCD.c: 60:     LATBbits.LATB3 = 0;
  5088   002332  967A               	bcf	122,3,c	;volatile
  5089                           
  5090                           ;../LCD.c: 61:     LATBbits.LATB2 = 0;
  5091   002334  947A               	bcf	122,2,c	;volatile
  5092                           
  5093                           ;../LCD.c: 62:     LATEbits.LATE3 = 0;
  5094   002336  967D               	bcf	125,3,c	;volatile
  5095                           
  5096                           ;../LCD.c: 63:     LATEbits.LATE1 = 0;
  5097   002338  927D               	bcf	125,1,c	;volatile
  5098   00233A                     
  5099                           ;../LCD.c: 66:  _delay((unsigned long)((50)*(64000000/4000.0)));
  5100   00233A  0E05               	movlw	5
  5101   00233C  6E05               	movwf	(??_LCD_Init+1)^0,c
  5102   00233E  0E0F               	movlw	15
  5103   002340  6E04               	movwf	??_LCD_Init^0,c
  5104   002342  0EF1               	movlw	241
  5105   002344                     u2917:
  5106   002344  2EE8               	decfsz	wreg,f,c
  5107   002346  D7FE               	bra	u2917
  5108   002348  2E04               	decfsz	??_LCD_Init^0,f,c
  5109   00234A  D7FC               	bra	u2917
  5110   00234C  2E05               	decfsz	(??_LCD_Init+1)^0,f,c
  5111   00234E  D7FA               	bra	u2917
  5112   002350  F000               	nop	
  5113   002352                     
  5114                           ;../LCD.c: 67:  LCD_sendnibble(0b0011);
  5115   002352  0E03               	movlw	3
  5116   002354  EC16  F012         	call	_LCD_sendnibble
  5117   002358                     
  5118                           ;../LCD.c: 68:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  5119   002358  0EF0               	movlw	240
  5120   00235A                     u2927:
  5121   00235A  2EE8               	decfsz	wreg,f,c
  5122   00235C  D7FE               	bra	u2927
  5123                           
  5124                           ;../LCD.c: 69:     LCD_sendnibble(0b0010);
  5125   00235E  0E02               	movlw	2
  5126   002360  EC16  F012         	call	_LCD_sendnibble
  5127   002364                     
  5128                           ;../LCD.c: 70:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  5129   002364  0EF0               	movlw	240
  5130   002366                     u2937:
  5131   002366  2EE8               	decfsz	wreg,f,c
  5132   002368  D7FE               	bra	u2937
  5133   00236A                     
  5134                           ;../LCD.c: 71:     LCD_sendbyte(0b00101000,0);
  5135   00236A  0E00               	movlw	0
  5136   00236C  6E02               	movwf	LCD_sendbyte@type^0,c
  5137   00236E  0E28               	movlw	40
  5138   002370  EC74  F013         	call	_LCD_sendbyte
  5139   002374                     
  5140                           ;../LCD.c: 72:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  5141   002374  0EF0               	movlw	240
  5142   002376                     u2947:
  5143   002376  2EE8               	decfsz	wreg,f,c
  5144   002378  D7FE               	bra	u2947
  5145   00237A                     
  5146                           ;../LCD.c: 74:     LCD_sendbyte(0b00001000,0);
  5147   00237A  0E00               	movlw	0
  5148   00237C  6E02               	movwf	LCD_sendbyte@type^0,c
  5149   00237E  0E08               	movlw	8
  5150   002380  EC74  F013         	call	_LCD_sendbyte
  5151   002384                     
  5152                           ;../LCD.c: 75:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  5153   002384  0EF0               	movlw	240
  5154   002386                     u2957:
  5155   002386  2EE8               	decfsz	wreg,f,c
  5156   002388  D7FE               	bra	u2957
  5157   00238A                     
  5158                           ;../LCD.c: 76:     LCD_sendbyte(0b00000001,0);
  5159   00238A  0E00               	movlw	0
  5160   00238C  6E02               	movwf	LCD_sendbyte@type^0,c
  5161   00238E  0E01               	movlw	1
  5162   002390  EC74  F013         	call	_LCD_sendbyte
  5163   002394                     
  5164                           ;../LCD.c: 77:     _delay((unsigned long)((2)*(64000000/4000.0)));
  5165   002394  0E2A               	movlw	42
  5166   002396  6E04               	movwf	??_LCD_Init^0,c
  5167   002398  0E8E               	movlw	142
  5168   00239A                     u2967:
  5169   00239A  2EE8               	decfsz	wreg,f,c
  5170   00239C  D7FE               	bra	u2967
  5171   00239E  2E04               	decfsz	??_LCD_Init^0,f,c
  5172   0023A0  D7FC               	bra	u2967
  5173   0023A2                     
  5174                           ;../LCD.c: 78:     LCD_sendbyte(0b0000110,0);
  5175   0023A2  0E00               	movlw	0
  5176   0023A4  6E02               	movwf	LCD_sendbyte@type^0,c
  5177   0023A6  0E06               	movlw	6
  5178   0023A8  EC74  F013         	call	_LCD_sendbyte
  5179   0023AC                     
  5180                           ;../LCD.c: 81:     LCD_sendbyte(0b00001100,0);
  5181   0023AC  0E00               	movlw	0
  5182   0023AE  6E02               	movwf	LCD_sendbyte@type^0,c
  5183   0023B0  0E0C               	movlw	12
  5184   0023B2  EC74  F013         	call	_LCD_sendbyte
  5185   0023B6  0012               	return		;funcret
  5186   0023B8                     __end_of_LCD_Init:
  5187                           	callstack 0
  5188                           
  5189 ;; *************** function _LCD_sendbyte *****************
  5190 ;; Defined at:
  5191 ;;		line 36 in file "../LCD.c"
  5192 ;; Parameters:    Size  Location     Type
  5193 ;;  Byte            1    wreg     unsigned char 
  5194 ;;  type            1    1[COMRAM] unsigned char 
  5195 ;; Auto vars:     Size  Location     Type
  5196 ;;  Byte            1    2[COMRAM] unsigned char 
  5197 ;; Return value:  Size  Location     Type
  5198 ;;                  1    wreg      void 
  5199 ;; Registers used:
  5200 ;;		wreg, status,2, status,0, cstack
  5201 ;; Tracked objects:
  5202 ;;		On entry : 0/0
  5203 ;;		On exit  : 0/0
  5204 ;;		Unchanged: 0/0
  5205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5206 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5207 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5209 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5210 ;;Total ram usage:        2 bytes
  5211 ;; Hardware stack levels used: 1
  5212 ;; Hardware stack levels required when called: 3
  5213 ;; This function calls:
  5214 ;;		_LCD_sendnibble
  5215 ;; This function is called by:
  5216 ;;		_LCD_Init
  5217 ;;		_LCD_clear
  5218 ;;		_LCD_setline
  5219 ;;		_LCD_sendstring
  5220 ;;		_LCD_scroll
  5221 ;; This function uses a non-reentrant model
  5222 ;;
  5223                           
  5224                           	psect	text27
  5225   0026E8                     __ptext27:
  5226                           	callstack 0
  5227   0026E8                     _LCD_sendbyte:
  5228                           	callstack 26
  5229                           
  5230                           ;incstack = 0
  5231                           ;LCD_sendbyte@Byte stored from wreg
  5232   0026E8  6E03               	movwf	LCD_sendbyte@Byte^0,c
  5233   0026EA                     
  5234                           ;../LCD.c: 36: void LCD_sendbyte(unsigned char Byte, char type);../LCD.c: 37: {;../LCD.c
      +                          : 38:     if (type) {LATCbits.LATC6 = 1;} else {LATCbits.LATC6 = 0;}
  5235   0026EA  5002               	movf	LCD_sendbyte@type^0,w,c
  5236   0026EC  B4D8               	btfsc	status,2,c
  5237   0026EE  EF7B  F013         	goto	u2011
  5238   0026F2  EF7D  F013         	goto	u2010
  5239   0026F6                     u2011:
  5240   0026F6  EF80  F013         	goto	l300
  5241   0026FA                     u2010:
  5242   0026FA  8C7B               	bsf	123,6,c	;volatile
  5243   0026FC  EF81  F013         	goto	l2330
  5244   002700                     l300:
  5245   002700  9C7B               	bcf	123,6,c	;volatile
  5246   002702                     l2330:
  5247                           
  5248                           ;../LCD.c: 39:     LCD_sendnibble((Byte >> 4)& 0b1111);
  5249   002702  3803               	swapf	LCD_sendbyte@Byte^0,w,c
  5250   002704  0B0F               	andlw	15
  5251   002706  0B0F               	andlw	15
  5252   002708  EC16  F012         	call	_LCD_sendnibble
  5253                           
  5254                           ;../LCD.c: 40:     LCD_sendnibble(Byte & 0b00001111);
  5255   00270C  5003               	movf	LCD_sendbyte@Byte^0,w,c
  5256   00270E  0B0F               	andlw	15
  5257   002710  EC16  F012         	call	_LCD_sendnibble
  5258   002714                     
  5259                           ;../LCD.c: 42:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  5260   002714  0EA0               	movlw	160
  5261   002716                     u2977:
  5262   002716  D000               	nop2	
  5263   002718  2EE8               	decfsz	wreg,f,c
  5264   00271A  D7FD               	bra	u2977
  5265   00271C  0012               	return		;funcret
  5266   00271E                     __end_of_LCD_sendbyte:
  5267                           	callstack 0
  5268                           
  5269 ;; *************** function _LCD_sendnibble *****************
  5270 ;; Defined at:
  5271 ;;		line 19 in file "../LCD.c"
  5272 ;; Parameters:    Size  Location     Type
  5273 ;;  number          1    wreg     unsigned char 
  5274 ;; Auto vars:     Size  Location     Type
  5275 ;;  number          1    0[COMRAM] unsigned char 
  5276 ;; Return value:  Size  Location     Type
  5277 ;;                  1    wreg      void 
  5278 ;; Registers used:
  5279 ;;		wreg, cstack
  5280 ;; Tracked objects:
  5281 ;;		On entry : 0/0
  5282 ;;		On exit  : 0/0
  5283 ;;		Unchanged: 0/0
  5284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5286 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5288 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5289 ;;Total ram usage:        1 bytes
  5290 ;; Hardware stack levels used: 1
  5291 ;; Hardware stack levels required when called: 2
  5292 ;; This function calls:
  5293 ;;		_LCD_E_TOG
  5294 ;; This function is called by:
  5295 ;;		_LCD_sendbyte
  5296 ;;		_LCD_Init
  5297 ;; This function uses a non-reentrant model
  5298 ;;
  5299                           
  5300                           	psect	text28
  5301   00242C                     __ptext28:
  5302                           	callstack 0
  5303   00242C                     _LCD_sendnibble:
  5304                           	callstack 26
  5305                           
  5306                           ;incstack = 0
  5307                           ;LCD_sendnibble@number stored from wreg
  5308   00242C  6E01               	movwf	LCD_sendnibble@number^0,c
  5309   00242E                     
  5310                           ;../LCD.c: 19: void LCD_sendnibble(unsigned char number);../LCD.c: 20: {;../LCD.c: 22:  
      +                          if (number & 0b0001) {LATBbits.LATB3 = 1;} else {LATBbits.LATB3 = 0;}
  5311   00242E  A001               	btfss	LCD_sendnibble@number^0,0,c
  5312   002430  EF1C  F012         	goto	u1901
  5313   002434  EF1E  F012         	goto	u1900
  5314   002438                     u1901:
  5315   002438  EF21  F012         	goto	l289
  5316   00243C                     u1900:
  5317   00243C  867A               	bsf	122,3,c	;volatile
  5318   00243E  EF22  F012         	goto	l2240
  5319   002442                     l289:
  5320   002442  967A               	bcf	122,3,c	;volatile
  5321   002444                     l2240:
  5322                           
  5323                           ;../LCD.c: 23:     if (number & 0b0010) {LATBbits.LATB2 = 1;} else {LATBbits.LATB2 = 0;}
  5324   002444  A201               	btfss	LCD_sendnibble@number^0,1,c
  5325   002446  EF27  F012         	goto	u1911
  5326   00244A  EF29  F012         	goto	u1910
  5327   00244E                     u1911:
  5328   00244E  EF2C  F012         	goto	l291
  5329   002452                     u1910:
  5330   002452  847A               	bsf	122,2,c	;volatile
  5331   002454  EF2D  F012         	goto	l2244
  5332   002458                     l291:
  5333   002458  947A               	bcf	122,2,c	;volatile
  5334   00245A                     l2244:
  5335                           
  5336                           ;../LCD.c: 24:     if (number & 0b0100) {LATEbits.LATE3 = 1;} else {LATEbits.LATE3 = 0;}
  5337   00245A  A401               	btfss	LCD_sendnibble@number^0,2,c
  5338   00245C  EF32  F012         	goto	u1921
  5339   002460  EF34  F012         	goto	u1920
  5340   002464                     u1921:
  5341   002464  EF37  F012         	goto	l293
  5342   002468                     u1920:
  5343   002468  867D               	bsf	125,3,c	;volatile
  5344   00246A  EF38  F012         	goto	l2248
  5345   00246E                     l293:
  5346   00246E  967D               	bcf	125,3,c	;volatile
  5347   002470                     l2248:
  5348                           
  5349                           ;../LCD.c: 25:     if (number & 0b1000) {LATEbits.LATE1 = 1;} else {LATEbits.LATE1 = 0;}
  5350   002470  A601               	btfss	LCD_sendnibble@number^0,3,c
  5351   002472  EF3D  F012         	goto	u1931
  5352   002476  EF3F  F012         	goto	u1930
  5353   00247A                     u1931:
  5354   00247A  EF42  F012         	goto	l295
  5355   00247E                     u1930:
  5356   00247E  827D               	bsf	125,1,c	;volatile
  5357   002480  EF43  F012         	goto	l2252
  5358   002484                     l295:
  5359   002484  927D               	bcf	125,1,c	;volatile
  5360   002486                     l2252:
  5361                           
  5362                           ;../LCD.c: 27:     LCD_E_TOG();
  5363   002486  EC1D  F014         	call	_LCD_E_TOG	;wreg free
  5364   00248A                     
  5365                           ;../LCD.c: 28:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  5366   00248A  0E1A               	movlw	26
  5367   00248C                     u2987:
  5368   00248C  2EE8               	decfsz	wreg,f,c
  5369   00248E  D7FE               	bra	u2987
  5370   002490  D000               	nop2	
  5371   002492  0012               	return		;funcret
  5372   002494                     __end_of_LCD_sendnibble:
  5373                           	callstack 0
  5374                           
  5375 ;; *************** function _LCD_E_TOG *****************
  5376 ;; Defined at:
  5377 ;;		line 9 in file "../LCD.c"
  5378 ;; Parameters:    Size  Location     Type
  5379 ;;		None
  5380 ;; Auto vars:     Size  Location     Type
  5381 ;;		None
  5382 ;; Return value:  Size  Location     Type
  5383 ;;                  1    wreg      void 
  5384 ;; Registers used:
  5385 ;;		wreg
  5386 ;; Tracked objects:
  5387 ;;		On entry : 0/0
  5388 ;;		On exit  : 0/0
  5389 ;;		Unchanged: 0/0
  5390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5395 ;;Total ram usage:        0 bytes
  5396 ;; Hardware stack levels used: 1
  5397 ;; Hardware stack levels required when called: 1
  5398 ;; This function calls:
  5399 ;;		Nothing
  5400 ;; This function is called by:
  5401 ;;		_LCD_sendnibble
  5402 ;; This function uses a non-reentrant model
  5403 ;;
  5404                           
  5405                           	psect	text29
  5406   00283A                     __ptext29:
  5407                           	callstack 0
  5408   00283A                     _LCD_E_TOG:
  5409                           	callstack 26
  5410   00283A                     
  5411                           ;../LCD.c: 11:  LATCbits.LATC2 = 1;
  5412   00283A  847B               	bsf	123,2,c	;volatile
  5413   00283C                     
  5414                           ;../LCD.c: 12:  _delay((unsigned long)((2)*(64000000/4000000.0)));
  5415   00283C  0E0A               	movlw	10
  5416   00283E                     u2997:
  5417   00283E  2EE8               	decfsz	wreg,f,c
  5418   002840  D7FE               	bra	u2997
  5419   002842  D000               	nop2	
  5420   002844                     
  5421                           ;../LCD.c: 13:  LATCbits.LATC2 = 0;
  5422   002844  947B               	bcf	123,2,c	;volatile
  5423   002846  0012               	return		;funcret
  5424   002848                     __end_of_LCD_E_TOG:
  5425                           	callstack 0
  5426                           
  5427 ;; *************** function _Interrupts_init *****************
  5428 ;; Defined at:
  5429 ;;		line 11 in file "../interrupts.c"
  5430 ;; Parameters:    Size  Location     Type
  5431 ;;		None
  5432 ;; Auto vars:     Size  Location     Type
  5433 ;;		None
  5434 ;; Return value:  Size  Location     Type
  5435 ;;                  1    wreg      void 
  5436 ;; Registers used:
  5437 ;;		None
  5438 ;; Tracked objects:
  5439 ;;		On entry : 0/0
  5440 ;;		On exit  : 0/0
  5441 ;;		Unchanged: 0/0
  5442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5447 ;;Total ram usage:        0 bytes
  5448 ;; Hardware stack levels used: 1
  5449 ;; Hardware stack levels required when called: 1
  5450 ;; This function calls:
  5451 ;;		Nothing
  5452 ;; This function is called by:
  5453 ;;		_main
  5454 ;; This function uses a non-reentrant model
  5455 ;;
  5456                           
  5457                           	psect	text30
  5458   002852                     __ptext30:
  5459                           	callstack 0
  5460   002852                     _Interrupts_init:
  5461                           	callstack 29
  5462   002852                     
  5463                           ;../interrupts.c: 14:     TMR0IE=1;
  5464   002852  010E               	movlb	14	; () banked
  5465   002854  8B29               	bsf	41,5,b	;volatile
  5466                           
  5467                           ;../interrupts.c: 15:     INTCONbits.GIEH=1;
  5468   002856  8EF2               	bsf	242,7,c	;volatile
  5469                           
  5470                           ;../interrupts.c: 16:     INTCONbits.GIEL = 1;
  5471   002858  8CF2               	bsf	242,6,c	;volatile
  5472   00285A                     
  5473                           ; BSR set to: 14
  5474   00285A  0012               	return		;funcret
  5475   00285C                     __end_of_Interrupts_init:
  5476                           	callstack 0
  5477                           
  5478 ;; *************** function _Comp1_init *****************
  5479 ;; Defined at:
  5480 ;;		line 31 in file "../comparator.c"
  5481 ;; Parameters:    Size  Location     Type
  5482 ;;		None
  5483 ;; Auto vars:     Size  Location     Type
  5484 ;;		None
  5485 ;; Return value:  Size  Location     Type
  5486 ;;                  1    wreg      void 
  5487 ;; Registers used:
  5488 ;;		wreg, status,2, cstack
  5489 ;; Tracked objects:
  5490 ;;		On entry : 0/0
  5491 ;;		On exit  : 0/0
  5492 ;;		Unchanged: 0/0
  5493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5498 ;;Total ram usage:        0 bytes
  5499 ;; Hardware stack levels used: 1
  5500 ;; Hardware stack levels required when called: 2
  5501 ;; This function calls:
  5502 ;;		_DAC_init
  5503 ;; This function is called by:
  5504 ;;		_main
  5505 ;; This function uses a non-reentrant model
  5506 ;;
  5507                           
  5508                           	psect	text31
  5509   0027A4                     __ptext31:
  5510                           	callstack 0
  5511   0027A4                     _Comp1_init:
  5512                           	callstack 28
  5513   0027A4                     
  5514                           ;../comparator.c: 33:     TRISAbits.TRISA3=1;
  5515   0027A4  8681               	bsf	129,3,c	;volatile
  5516   0027A6                     
  5517                           ;../comparator.c: 34:     CM1NCHbits.NCH=0b011;
  5518   0027A6  010E               	movlb	14	; () banked
  5519   0027A8  51D2               	movf	210,w,b	;volatile
  5520   0027AA  0BF8               	andlw	-8
  5521   0027AC  0903               	iorlw	3
  5522   0027AE  6FD2               	movwf	210,b	;volatile
  5523                           
  5524                           ;../comparator.c: 35:     CM1PCHbits.PCH=0b101;
  5525   0027B0  51D3               	movf	211,w,b	;volatile
  5526   0027B2  0BF8               	andlw	-8
  5527   0027B4  0905               	iorlw	5
  5528   0027B6  6FD3               	movwf	211,b	;volatile
  5529   0027B8                     
  5530                           ; BSR set to: 14
  5531                           ;../comparator.c: 36:     CM1CON0bits.HYS=1;
  5532   0027B8  83D0               	bsf	208,1,b	;volatile
  5533   0027BA                     
  5534                           ; BSR set to: 14
  5535                           ;../comparator.c: 37:     CM1CON0bits.POL=1;
  5536   0027BA  89D0               	bsf	208,4,b	;volatile
  5537   0027BC                     
  5538                           ; BSR set to: 14
  5539                           ;../comparator.c: 38:     CM1CON1bits.INTP=1;
  5540   0027BC  83D1               	bsf	209,1,b	;volatile
  5541   0027BE                     
  5542                           ; BSR set to: 14
  5543                           ;../comparator.c: 39:     CM1CON1bits.INTN=1;
  5544   0027BE  81D1               	bsf	209,0,b	;volatile
  5545   0027C0                     
  5546                           ; BSR set to: 14
  5547                           ;../comparator.c: 40:     DAC_init();
  5548   0027C0  EC13  F014         	call	_DAC_init	;wreg free
  5549   0027C4                     
  5550                           ;../comparator.c: 41:     CM1CON0bits.EN=1;
  5551   0027C4  010E               	movlb	14	; () banked
  5552   0027C6  8FD0               	bsf	208,7,b	;volatile
  5553   0027C8                     
  5554                           ; BSR set to: 14
  5555   0027C8  0012               	return		;funcret
  5556   0027CA                     __end_of_Comp1_init:
  5557                           	callstack 0
  5558                           
  5559 ;; *************** function _DAC_init *****************
  5560 ;; Defined at:
  5561 ;;		line 16 in file "../comparator.c"
  5562 ;; Parameters:    Size  Location     Type
  5563 ;;		None
  5564 ;; Auto vars:     Size  Location     Type
  5565 ;;		None
  5566 ;; Return value:  Size  Location     Type
  5567 ;;                  1    wreg      void 
  5568 ;; Registers used:
  5569 ;;		wreg, status,2
  5570 ;; Tracked objects:
  5571 ;;		On entry : 0/0
  5572 ;;		On exit  : 0/0
  5573 ;;		Unchanged: 0/0
  5574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5579 ;;Total ram usage:        0 bytes
  5580 ;; Hardware stack levels used: 1
  5581 ;; Hardware stack levels required when called: 1
  5582 ;; This function calls:
  5583 ;;		Nothing
  5584 ;; This function is called by:
  5585 ;;		_Comp1_init
  5586 ;; This function uses a non-reentrant model
  5587 ;;
  5588                           
  5589                           	psect	text32
  5590   002826                     __ptext32:
  5591                           	callstack 0
  5592   002826                     _DAC_init:
  5593                           	callstack 28
  5594   002826                     
  5595                           ;../comparator.c: 18:     DAC1CON0bits.PSS=0b00;
  5596   002826  0EF3               	movlw	-13
  5597   002828  010E               	movlb	14	; () banked
  5598   00282A  17C6               	andwf	198,f,b	;volatile
  5599   00282C                     
  5600                           ; BSR set to: 14
  5601                           ;../comparator.c: 19:     DAC1CON0bits.NSS=0b0;
  5602   00282C  91C6               	bcf	198,0,b	;volatile
  5603                           
  5604                           ;../comparator.c: 23:     DAC1CON1bits.DAC1R=27;
  5605   00282E  51C7               	movf	199,w,b	;volatile
  5606   002830  0BE0               	andlw	-32
  5607   002832  091B               	iorlw	27
  5608   002834  6FC7               	movwf	199,b	;volatile
  5609   002836                     
  5610                           ; BSR set to: 14
  5611                           ;../comparator.c: 24:     DAC1CON0bits.DAC1EN=1;
  5612   002836  8FC6               	bsf	198,7,b	;volatile
  5613   002838                     
  5614                           ; BSR set to: 14
  5615   002838  0012               	return		;funcret
  5616   00283A                     __end_of_DAC_init:
  5617                           	callstack 0
  5618                           
  5619 ;; *************** function _HighISR *****************
  5620 ;; Defined at:
  5621 ;;		line 23 in file "../interrupts.c"
  5622 ;; Parameters:    Size  Location     Type
  5623 ;;		None
  5624 ;; Auto vars:     Size  Location     Type
  5625 ;;		None
  5626 ;; Return value:  Size  Location     Type
  5627 ;;                  1    wreg      void 
  5628 ;; Registers used:
  5629 ;;		wreg, status,2, status,0
  5630 ;; Tracked objects:
  5631 ;;		On entry : 0/0
  5632 ;;		On exit  : 0/0
  5633 ;;		Unchanged: 0/0
  5634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5639 ;;Total ram usage:        0 bytes
  5640 ;; Hardware stack levels used: 1
  5641 ;; This function calls:
  5642 ;;		Nothing
  5643 ;; This function is called by:
  5644 ;;		Interrupt level 2
  5645 ;; This function uses a non-reentrant model
  5646 ;;
  5647                           
  5648                           	psect	intcode
  5649   000008                     __pintcode:
  5650                           	callstack 0
  5651   000008                     _HighISR:
  5652                           	callstack 22
  5653                           
  5654                           ; BSR set to: 14
  5655                           ;incstack = 0
  5656   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5657   00000A                     
  5658                           ;../interrupts.c: 27:     if (TMR0IF) {
  5659   00000A  010E               	movlb	14	; () banked
  5660   00000C  AB33               	btfss	51,5,b	;volatile
  5661   00000E  EF0B  F000         	goto	i2u247_41
  5662   000012  EF0D  F000         	goto	i2u247_40
  5663   000016                     i2u247_41:
  5664   000016  EF16  F000         	goto	i2l2582
  5665   00001A                     i2u247_40:
  5666   00001A                     
  5667                           ; BSR set to: 14
  5668                           ;../interrupts.c: 28:         TMR0H=0b00001011;
  5669   00001A  0E0B               	movlw	11
  5670   00001C  6ED4               	movwf	212,c	;volatile
  5671                           
  5672                           ;../interrupts.c: 29:         TMR0L=0b00001011;
  5673   00001E  0E0B               	movlw	11
  5674   000020  6ED3               	movwf	211,c	;volatile
  5675   000022                     
  5676                           ; BSR set to: 14
  5677                           ;../interrupts.c: 33:         minute += 1;
  5678   000022  0100               	movlb	0	; () banked
  5679   000024  4BE3               	infsnz	_minute& (0+255),f,b
  5680   000026  2BE4               	incf	(_minute+1)& (0+255),f,b
  5681   000028                     
  5682                           ; BSR set to: 0
  5683                           ;../interrupts.c: 34:         TMR0IF=0;
  5684   000028  010E               	movlb	14	; () banked
  5685   00002A  9B33               	bcf	51,5,b	;volatile
  5686   00002C                     i2l2582:
  5687                           
  5688                           ; BSR set to: 14
  5689                           ;../interrupts.c: 37:     if (PIR2bits.C1IF){
  5690   00002C  A135               	btfss	53,0,b	;volatile
  5691   00002E  EF1B  F000         	goto	i2u248_41
  5692   000032  EF1D  F000         	goto	i2u248_40
  5693   000036                     i2u248_41:
  5694   000036  EF61  F000         	goto	i2l157
  5695   00003A                     i2u248_40:
  5696   00003A                     
  5697                           ; BSR set to: 14
  5698                           ;../interrupts.c: 38:         if (CM1CON0bits.OUT == 0) {
  5699   00003A  BDD0               	btfsc	208,6,b	;volatile
  5700   00003C  EF22  F000         	goto	i2u249_41
  5701   000040  EF24  F000         	goto	i2u249_40
  5702   000044                     i2u249_41:
  5703   000044  EF2F  F000         	goto	i2l149
  5704   000048                     i2u249_40:
  5705   000048                     
  5706                           ; BSR set to: 14
  5707                           ;../interrupts.c: 39:             daylight_start_hour = hour;
  5708   000048  C0E5  F0DD         	movff	_hour,_daylight_start_hour
  5709   00004C  C0E6  F0DE         	movff	_hour+1,_daylight_start_hour+1
  5710                           
  5711                           ;../interrupts.c: 40:             daylight_start_min = minute;
  5712   000050  C0E3  F0DB         	movff	_minute,_daylight_start_min
  5713   000054  C0E4  F0DC         	movff	_minute+1,_daylight_start_min+1
  5714                           
  5715                           ;../interrupts.c: 41:             LATHbits.LATH3=0;
  5716   000058  9680               	bcf	128,3,c	;volatile
  5717                           
  5718                           ;../interrupts.c: 42:             }
  5719   00005A  EF5F  F000         	goto	i2l150
  5720   00005E                     i2l149:
  5721                           
  5722                           ; BSR set to: 14
  5723   00005E  ADD0               	btfss	208,6,b	;volatile
  5724   000060  EF34  F000         	goto	i2u250_41
  5725   000064  EF36  F000         	goto	i2u250_40
  5726   000068                     i2u250_41:
  5727   000068  EF5F  F000         	goto	i2l150
  5728   00006C                     i2u250_40:
  5729   00006C                     
  5730                           ; BSR set to: 14
  5731                           ;../interrupts.c: 44:             daylight_end_hour = hour;
  5732   00006C  C0E5  F0D9         	movff	_hour,_daylight_end_hour
  5733   000070  C0E6  F0DA         	movff	_hour+1,_daylight_end_hour+1
  5734                           
  5735                           ;../interrupts.c: 45:             daylight_end_min = minute;
  5736   000074  C0E3  F0D7         	movff	_minute,_daylight_end_min
  5737   000078  C0E4  F0D8         	movff	_minute+1,_daylight_end_min+1
  5738   00007C                     
  5739                           ; BSR set to: 14
  5740                           ;../interrupts.c: 46:         if (hour <1 || hour >=5){
  5741   00007C  0100               	movlb	0	; () banked
  5742   00007E  51E5               	movf	_hour& (0+255),w,b
  5743   000080  11E6               	iorwf	(_hour+1)& (0+255),w,b
  5744   000082  B4D8               	btfsc	status,2,c
  5745   000084  EF46  F000         	goto	i2u251_41
  5746   000088  EF48  F000         	goto	i2u251_40
  5747   00008C                     i2u251_41:
  5748   00008C  EF53  F000         	goto	i2l154
  5749   000090                     i2u251_40:
  5750   000090                     
  5751                           ; BSR set to: 0
  5752   000090  51E6               	movf	(_hour+1)& (0+255),w,b
  5753   000092  E109               	bnz	i2u252_40
  5754   000094  0E05               	movlw	5
  5755   000096  5DE5               	subwf	_hour& (0+255),w,b
  5756   000098  A0D8               	btfss	status,0,c
  5757   00009A  EF51  F000         	goto	i2u252_41
  5758   00009E  EF53  F000         	goto	i2u252_40
  5759   0000A2                     i2u252_41:
  5760   0000A2  EF5F  F000         	goto	i2l150
  5761   0000A6                     i2u252_40:
  5762   0000A6                     i2l154:
  5763                           
  5764                           ; BSR set to: 0
  5765                           ;../interrupts.c: 47:             if (CM1CON0bits.OUT == 1) {LATHbits.LATH3=1;}
  5766   0000A6  010E               	movlb	14	; () banked
  5767   0000A8  ADD0               	btfss	208,6,b	;volatile
  5768   0000AA  EF59  F000         	goto	i2u253_41
  5769   0000AE  EF5B  F000         	goto	i2u253_40
  5770   0000B2                     i2u253_41:
  5771   0000B2  EF5E  F000         	goto	i2l155
  5772   0000B6                     i2u253_40:
  5773   0000B6                     
  5774                           ; BSR set to: 14
  5775   0000B6  8680               	bsf	128,3,c	;volatile
  5776   0000B8  EF5F  F000         	goto	i2l150
  5777   0000BC                     i2l155:
  5778                           
  5779                           ; BSR set to: 14
  5780   0000BC  9680               	bcf	128,3,c	;volatile
  5781   0000BE                     i2l150:
  5782                           
  5783                           ;../interrupts.c: 51:         PIR2bits.C1IF=0;
  5784   0000BE  010E               	movlb	14	; () banked
  5785   0000C0  9135               	bcf	53,0,b	;volatile
  5786   0000C2                     i2l157:
  5787                           
  5788                           ; BSR set to: 14
  5789   0000C2  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5790   0000C4  0011               	retfie		f
  5791   0000C6                     __end_of_HighISR:
  5792                           	callstack 0
  5793                           
  5794                           	psect	rparam
  5795   000000                     
  5796                           	psect	temp
  5797   00005F                     btemp:
  5798                           	callstack 0
  5799   00005F                     	ds	1
  5800   000000                     int$flags	set	btemp
  5801   000000                     wtemp8	set	btemp+1
  5802   000000                     ttemp5	set	btemp+1
  5803   000000                     ttemp6	set	btemp+4
  5804   000000                     ttemp7	set	btemp+8
  5805                           
  5806                           	psect	idloc
  5807                           
  5808                           ;Config register IDLOC0 @ 0x200000
  5809                           ;	unspecified, using default values
  5810   200000                     	org	2097152
  5811   200000  0FFF               	dw	4095
  5812                           
  5813                           ;Config register IDLOC1 @ 0x200002
  5814                           ;	unspecified, using default values
  5815   200002                     	org	2097154
  5816   200002  0FFF               	dw	4095
  5817                           
  5818                           ;Config register IDLOC2 @ 0x200004
  5819                           ;	unspecified, using default values
  5820   200004                     	org	2097156
  5821   200004  0FFF               	dw	4095
  5822                           
  5823                           ;Config register IDLOC3 @ 0x200006
  5824                           ;	unspecified, using default values
  5825   200006                     	org	2097158
  5826   200006  0FFF               	dw	4095
  5827                           
  5828                           ;Config register IDLOC4 @ 0x200008
  5829                           ;	unspecified, using default values
  5830   200008                     	org	2097160
  5831   200008  0FFF               	dw	4095
  5832                           
  5833                           ;Config register IDLOC5 @ 0x20000A
  5834                           ;	unspecified, using default values
  5835   20000A                     	org	2097162
  5836   20000A  0FFF               	dw	4095
  5837                           
  5838                           ;Config register IDLOC6 @ 0x20000C
  5839                           ;	unspecified, using default values
  5840   20000C                     	org	2097164
  5841   20000C  0FFF               	dw	4095
  5842                           
  5843                           ;Config register IDLOC7 @ 0x20000E
  5844                           ;	unspecified, using default values
  5845   20000E                     	org	2097166
  5846   20000E  0FFF               	dw	4095
  5847                           
  5848                           	psect	config
  5849                           
  5850                           ;Config register CONFIG1L @ 0x300000
  5851                           ;	External Oscillator mode Selection bits
  5852                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5853                           ;	Power-up default value for COSC bits
  5854                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5855   300000                     	org	3145728
  5856   300000  AA                 	db	170
  5857                           
  5858                           ;Config register CONFIG1H @ 0x300001
  5859                           ;	unspecified, using default values
  5860                           ;	Clock Out Enable bit
  5861                           ;	CLKOUTEN = 0x1, unprogrammed default
  5862                           ;	Clock Switch Enable bit
  5863                           ;	CSWEN = 0x1, unprogrammed default
  5864                           ;	Fail-Safe Clock Monitor Enable bit
  5865                           ;	FCMEN = 0x1, unprogrammed default
  5866   300001                     	org	3145729
  5867   300001  FF                 	db	255
  5868                           
  5869                           ;Config register CONFIG2L @ 0x300002
  5870                           ;	unspecified, using default values
  5871                           ;	Master Clear Enable bit
  5872                           ;	MCLRE = 0x1, unprogrammed default
  5873                           ;	Power-up Timer Enable bit
  5874                           ;	PWRTE = 0x1, unprogrammed default
  5875                           ;	Low-power BOR enable bit
  5876                           ;	LPBOREN = 0x1, unprogrammed default
  5877                           ;	Brown-out Reset Enable bits
  5878                           ;	BOREN = 0x3, unprogrammed default
  5879   300002                     	org	3145730
  5880   300002  FF                 	db	255
  5881                           
  5882                           ;Config register CONFIG2H @ 0x300003
  5883                           ;	unspecified, using default values
  5884                           ;	Brown Out Reset Voltage selection bits
  5885                           ;	BORV = 0x3, unprogrammed default
  5886                           ;	ZCD Disable bit
  5887                           ;	ZCD = 0x1, unprogrammed default
  5888                           ;	PPSLOCK bit One-Way Set Enable bit
  5889                           ;	PPS1WAY = 0x1, unprogrammed default
  5890                           ;	Stack Full/Underflow Reset Enable bit
  5891                           ;	STVREN = 0x1, unprogrammed default
  5892                           ;	Debugger Enable bit
  5893                           ;	DEBUG = 0x1, unprogrammed default
  5894                           ;	Extended Instruction Set Enable bit
  5895                           ;	XINST = 0x1, unprogrammed default
  5896   300003                     	org	3145731
  5897   300003  FF                 	db	255
  5898                           
  5899                           ;Config register CONFIG3L @ 0x300004
  5900                           ;	WDT Period Select bits
  5901                           ;	WDTCPS = 0x1F, unprogrammed default
  5902                           ;	WDT operating mode
  5903                           ;	WDTE = OFF, WDT Disabled
  5904   300004                     	org	3145732
  5905   300004  9F                 	db	159
  5906                           
  5907                           ;Config register CONFIG3H @ 0x300005
  5908                           ;	unspecified, using default values
  5909                           ;	WDT Window Select bits
  5910                           ;	WDTCWS = 0x7, unprogrammed default
  5911                           ;	WDT input clock selector
  5912                           ;	WDTCCS = 0x7, unprogrammed default
  5913   300005                     	org	3145733
  5914   300005  FF                 	db	255
  5915                           
  5916                           ;Config register CONFIG4L @ 0x300006
  5917                           ;	unspecified, using default values
  5918                           ;	Write Protection Block 0
  5919                           ;	WRT0 = 0x1, unprogrammed default
  5920                           ;	Write Protection Block 1
  5921                           ;	WRT1 = 0x1, unprogrammed default
  5922                           ;	Write Protection Block 2
  5923                           ;	WRT2 = 0x1, unprogrammed default
  5924                           ;	Write Protection Block 3
  5925                           ;	WRT3 = 0x1, unprogrammed default
  5926                           ;	Write Protection Block 3
  5927                           ;	WRT4 = 0x1, unprogrammed default
  5928                           ;	Write Protection Block 3
  5929                           ;	WRT5 = 0x1, unprogrammed default
  5930                           ;	Write Protection Block 3
  5931                           ;	WRT6 = 0x1, unprogrammed default
  5932                           ;	Write Protection Block 3
  5933                           ;	WRT7 = 0x1, unprogrammed default
  5934   300006                     	org	3145734
  5935   300006  FF                 	db	255
  5936                           
  5937                           ;Config register CONFIG4H @ 0x300007
  5938                           ;	unspecified, using default values
  5939                           ;	Configuration Register Write Protection bit
  5940                           ;	WRTC = 0x1, unprogrammed default
  5941                           ;	Boot Block Write Protection bit
  5942                           ;	WRTB = 0x1, unprogrammed default
  5943                           ;	Data EEPROM Write Protection bit
  5944                           ;	WRTD = 0x1, unprogrammed default
  5945                           ;	Scanner Enable bit
  5946                           ;	SCANE = 0x1, unprogrammed default
  5947                           ;	Low Voltage Programming Enable bit
  5948                           ;	LVP = 0x1, unprogrammed default
  5949   300007                     	org	3145735
  5950   300007  FF                 	db	255
  5951                           
  5952                           ;Config register CONFIG5L @ 0x300008
  5953                           ;	unspecified, using default values
  5954                           ;	UserNVM Program Memory Code Protection bit
  5955                           ;	CP = 0x1, unprogrammed default
  5956                           ;	DataNVM Memory Code Protection bit
  5957                           ;	CPD = 0x1, unprogrammed default
  5958   300008                     	org	3145736
  5959   300008  FF                 	db	255
  5960                           
  5961                           ;Config register CONFIG5H @ 0x300009
  5962                           ;	unspecified, using default values
  5963   300009                     	org	3145737
  5964   300009  FF                 	db	255
  5965                           
  5966                           ;Config register CONFIG6L @ 0x30000A
  5967                           ;	unspecified, using default values
  5968                           ;	Table Read Protection Block 0
  5969                           ;	EBTR0 = 0x1, unprogrammed default
  5970                           ;	Table Read Protection Block 1
  5971                           ;	EBTR1 = 0x1, unprogrammed default
  5972                           ;	Table Read Protection Block 2
  5973                           ;	EBTR2 = 0x1, unprogrammed default
  5974                           ;	Table Read Protection Block 3
  5975                           ;	EBTR3 = 0x1, unprogrammed default
  5976                           ;	Table Read Protection Block 4
  5977                           ;	EBTR4 = 0x1, unprogrammed default
  5978                           ;	Table Read Protection Block 5
  5979                           ;	EBTR5 = 0x1, unprogrammed default
  5980                           ;	Table Read Protection Block 6
  5981                           ;	EBTR6 = 0x1, unprogrammed default
  5982                           ;	Table Read Protection Block 7
  5983                           ;	EBTR7 = 0x1, unprogrammed default
  5984   30000A                     	org	3145738
  5985   30000A  FF                 	db	255
  5986                           
  5987                           ;Config register CONFIG6H @ 0x30000B
  5988                           ;	unspecified, using default values
  5989                           ;	Boot Block Table Read Protection bit
  5990                           ;	EBTRB = 0x1, unprogrammed default
  5991   30000B                     	org	3145739
  5992   30000B  FF                 	db	255
  5993                           tosu	equ	0xFFF
  5994                           tosh	equ	0xFFE
  5995                           tosl	equ	0xFFD
  5996                           stkptr	equ	0xFFC
  5997                           pclatu	equ	0xFFB
  5998                           pclath	equ	0xFFA
  5999                           pcl	equ	0xFF9
  6000                           tblptru	equ	0xFF8
  6001                           tblptrh	equ	0xFF7
  6002                           tblptrl	equ	0xFF6
  6003                           tablat	equ	0xFF5
  6004                           prodh	equ	0xFF4
  6005                           prodl	equ	0xFF3
  6006                           indf0	equ	0xFEF
  6007                           postinc0	equ	0xFEE
  6008                           postdec0	equ	0xFED
  6009                           preinc0	equ	0xFEC
  6010                           plusw0	equ	0xFEB
  6011                           fsr0h	equ	0xFEA
  6012                           fsr0l	equ	0xFE9
  6013                           wreg	equ	0xFE8
  6014                           indf1	equ	0xFE7
  6015                           postinc1	equ	0xFE6
  6016                           postdec1	equ	0xFE5
  6017                           preinc1	equ	0xFE4
  6018                           plusw1	equ	0xFE3
  6019                           fsr1h	equ	0xFE2
  6020                           fsr1l	equ	0xFE1
  6021                           bsr	equ	0xFE0
  6022                           indf2	equ	0xFDF
  6023                           postinc2	equ	0xFDE
  6024                           postdec2	equ	0xFDD
  6025                           preinc2	equ	0xFDC
  6026                           plusw2	equ	0xFDB
  6027                           fsr2h	equ	0xFDA
  6028                           fsr2l	equ	0xFD9
  6029                           status	equ	0xFD8

Data Sizes:
    Strings     52
    Constant    0
    Data        4
    BSS         53
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     91      94
    BANK0           160    113     135
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[12]), STR_3(CODE[18]), STR_2(CODE[6]), STR_1(CODE[16]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[12]), STR_3(CODE[18]), STR_2(CODE[6]), STR_1(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[12]), STR_3(CODE[18]), STR_2(CODE[6]), STR_1(CODE[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[12]), STR_3(CODE[18]), STR_2(CODE[6]), STR_1(CODE[16]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1947$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[12]), STR_3(CODE[18]), STR_2(CODE[6]), STR_1(CODE[16]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> main@yearstr(BANK0[20]), main@datestr(BANK0[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1894$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1894$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    LCD_sendstring@string	PTR unsigned char  size(2) Largest target is 50
		 -> main@yearstr(BANK0[20]), main@datestr(BANK0[50]), 

    check_month@year	PTR unsigned short  size(2) Largest target is 2
		 -> main@year(BANK0[2]), 

    check_month@month_day	PTR unsigned int  size(2) Largest target is 2
		 -> main@month_day(BANK0[2]), 

    check_month@month	PTR unsigned int  size(2) Largest target is 2
		 -> main@month(BANK0[2]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    _check_month->___lwmod
    ___lwmod->___wmul
    ___lwdiv->___wmul
    _LCD_setline->_LCD_sendbyte
    _LCD_sendstring->_LCD_sendbyte
    _LCD_clear->_LCD_sendbyte
    _LCD_Init->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                88    88      0   18484
                                             25 BANK0     88    88      0
                         _Comp1_init
                    _Interrupts_init
                           _LCD_Init
                          _LCD_clear
                     _LCD_sendstring
                        _LCD_setline
                  _LEDarray_disp_bin
                      _LEDarray_init
                         _Light_init
                        _Timer0_init
                            ___lwdiv
                            ___lwmod
                             ___wmul
                        _check_month
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12    8708
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7899
                                             83 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           24    18      6    7538
                                             62 COMRAM    21    15      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3867
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2195
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1083
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1992
                                              6 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     207
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              4     2      2     237
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1223
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _check_month                                         10     4      6    1572
                                             11 COMRAM    10     4      6
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                              6 COMRAM     5     1      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4    1074
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Light_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    2     0      2     578
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LCD_setline                                          1     1      0     958
                                              3 COMRAM     1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_sendstring                                       2     0      2    1111
                                              3 COMRAM     2     0      2
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_clear                                            1     1      0     914
                                              3 COMRAM     1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0    1002
                                              3 COMRAM     2     2      0
                       _LCD_sendbyte
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (2) _LCD_sendbyte                                         2     1      1     914
                                              1 COMRAM     2     1      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (3) _LCD_sendnibble                                       1     1      0      88
                                              0 COMRAM     1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (4) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comp1_init                                           0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Comp1_init
     _DAC_init
   _Interrupts_init
   _LCD_Init
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
     _LCD_sendnibble
   _LCD_clear
     _LCD_sendbyte
   _LCD_sendstring
     _LCD_sendbyte
   _LCD_setline
     _LCD_sendbyte
   _LEDarray_disp_bin
   _LEDarray_init
   _Light_init
   _Timer0_init
   ___lwdiv
     ___wmul (ARG)
   ___lwmod
     ___wmul (ARG)
   ___wmul
   _check_month
     ___lwmod
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
         _isdigit

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      47        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     71      87       5       84.4%
BITBIGSFRlhlhhh     84      0       0      38        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5B      5E       1      100.0%
BITBIGSFRllhhh      5C      0       0      42        0.0%
BITBIGSFRhhll       4A      0       0      34        0.0%
BITBIGSFRlll        3A      0       0      45        0.0%
BITBIGSFRlhll       21      0       0      41        0.0%
BITBIGSFRhhlhh      1B      0       0      33        0.0%
BITBIGSFRlhhhhl     14      0       0      35        0.0%
BITBIGSFRlhlhl      11      0       0      40        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRllhl        9      0       0      44        0.0%
BITBIGSFRlhlhhl      8      0       0      39        0.0%
BITBIGSFRlhhl        6      0       0      37        0.0%
BITBIGSFRlhhhl       3      0       0      36        0.0%
BITBIGSFRllhhl       1      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     105      46        0.0%
DATA                 0      0     105       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Nov 08 23:19:47 2022

                        l50 21DA                          l42 27EA                          l51 21DC  
                        l60 2248                          l52 21F0                          l61 224A  
                        l53 21F2                          l62 225E                          l54 2206  
                        l63 2260                          l55 2208                          l64 2274  
                        l56 221C                          l48 21C4                          l57 221E  
                        l49 21C6                          l66 2276                          l58 2232  
                        l59 2234                          l97 2850         ___wmul@multiplicand 0003  
         ??_Interrupts_init 0001                         l100 2838                         l103 27C8  
                       l300 2700                         l142 285A                         l302 271C  
                       l305 23B6                         l313 26E6                         l243 280A  
                       l331 27A2                         l308 2824                         l319 2750  
                       l291 2458                         l267 172C                         l293 246E  
                       l445 1E22                         l286 2846                         l295 2484  
                       l297 2492                         l289 2442                         l458 1F86  
                       l822 2422                         l832 24EE                         l829 242A  
                       l839 24F6                         _abs 266E                         _pad 2278  
                       wreg 000FE8                 main@changed 00C5                 main@datestr 007D  
                      l1120 20DC                        l2000 2132                        l1041 2320  
                      l1009 2548                        l2002 2168                        l2010 2648  
                      l1050 1AD0                        l1123 20E4                        ?_abs 0013  
                      l2020 1C9C                        l2012 264C                        l1036 22BC  
                      l2100 2278                        l2014 277E                        l1126 277C  
                      l1134 2628                        l2030 1CE0                        l2022 1CA0  
                      l2006 262A                        l2110 22C8                        l2102 2286  
                      l1039 22FE                        l1063 1C9A                        l1047 1A82  
                      l2016 279A                        l2040 1D36                        l2032 1D00  
                      l2024 1CAE                        l2120 2688                        l1160 2860  
                      l2008 2636                        l2112 22DC                        l2104 229A  
                      l2200 1C7A                        l1049 1A8A                        l2122 2752  
                      l2130 25FC                        l2210 1FA0                        l2050 1DB8  
                      l2042 1D4A                        l2034 1D04                        l2026 1CCE  
                      l2114 22E0                        l2106 22A8                        l1091 259A  
                      l2140 283C                        l2132 261E                        l2220 2040  
                      l2212 1FC0                        l2204 1F88                        l2060 1E02  
                      l2052 1DBA                        l2044 1D58                        l2036 1D10  
                      l2028 1CD2                        l2116 230C                        l2108 22B4  
                      l2300 1922                        l1149 21AE                        l1157 266C  
                      l1085 19E6                        l2142 2844                        l2134 2622  
                      l2126 25E4                        l2230 20C0                        l2214 1FF8  
                      l2206 1F9C                        l2054 1DCC                        l2046 1D6A  
                      l2038 1D2E                        l2070 1E56                        l2118 266E  
                      l2150 1A2C                        l2302 1978                        l2310 19BA  
                      l1095 26A4                        l2320 2826                        l2400 2852  
                      l2240 2444                        l2128 25E8                        l2216 2000  
                      l2048 1D98                        l2056 1DD2                        l2080 1EAE  
                      l2072 1E5A                        l2064 1E24                        l2160 1A92  
                      l2152 1A4C                        l2144 19E8                        l2322 282C  
                      l2138 283A                        l2250 247E                        l2242 2452  
                      l2330 2702                        l2410 2322                        l2402 27EC  
                      l2226 207A                        l2218 2008                        l2058 1DE2  
                      l2090 1F30                        l2082 1EC2                        l2074 1E68  
                      l2066 1E28                        l1098 26AC                        l2170 1ACC  
                      l2162 1AA2                        l2154 1A5A                        l2146 1A08  
                      l2306 19A8                        l2324 2836                        l2252 2486  
                      l2244 245A                        l2236 242E                        l2332 2714  
                      l2420 236A                        l2412 233A                        l2404 27F4  
                      l2340 24B6                        l2500 159E                        l2228 20AE  
                      l2084 1ED0                        l2092 1F36                        l2076 1E88  
                      l2068 1E36                        l2180 1B70                        l2172 1AD8  
                      l2164 1AA8                        l2156 1A5C                        l2148 1A1C  
                      l2260 1764                        l2254 248A                        l2246 2468  
                      l2238 243C                        l2326 26EA                        l2430 2394  
                      l2422 2374                        l2414 2352                        l2406 27FE  
                      l2342 24C4                        l2334 2494                        l2510 1630  
                      l2502 15BA                        l2094 1F46                        l2086 1EFE  
                      l2078 1EA6                        l2190 1C2C                        l2182 1B76  
                      l2174 1AE2                        l2166 1AB8                        l2158 1A76  
                      l2270 1796                        l2262 1772                        l2350 254A  
                      l2248 2470                        l2328 26FA                        l2432 23A2  
                      l2424 237A                        l2416 2358                        l2440 26CA  
                      l2360 27CA                        l2408 2808                        l2344 24DA  
                      l2336 24A6                        l2520 16A0                        l2512 165E  
                      l2504 15CA                        l2096 1F66                        l2088 1F1E  
                      l2192 1C46                        l2176 1AE8                        l2184 1BDA  
                      l2168 1AC4                        l2280 1814                        l2264 1776  
                      l2256 172E                        l2352 2556                        l2600 0E80  
                      l2434 23AC                        l2426 2384                        l2418 2364  
                      l2442 26DC                        l2370 2200                        l2362 21B0  
                      l2346 24E2                        l2338 24AE                        l2530 170C  
                      l2522 16BC                        l2514 166A                        l2506 15D8  
                      l2186 1BF4                        l2194 1C54                        l2178 1B6A  
                      l2282 184A                        l2274 17A2                        l2266 1782  
                      l2258 1756                        l2354 2572                        l2450 251A  
                      l2610 0EC8                        l2602 0E84                        l2428 238A  
                      l2460 2734                        l2436 26B0                        l2380 226E  
                      l2372 2216                        l2364 21BE                        l2540 23B8  
                      l2348 24E8                        l2524 16CC                        l2516 1672  
                      l2508 1602                        l2196 1C64                        l2188 1C12  
                      l2292 1896                        l2284 185A                        l2268 1784  
                      l2276 17DA                        l2356 2592                        l2452 2536  
                      l2444 24F8                        l2700 125A                        l2620 0F18  
                      l2612 0ED4                        l2604 0E88                        l2390 27BA  
                      l2462 2738                        l2438 26C0                        l2374 222C  
                      l2366 21D4                        l2382 2848                        l2550 23F0  
                      l2542 23C0                        l2518 168E                        l2526 16DE  
                      l2470 142E                        l2198 1C6A                        l2294 18D2  
                      l2286 1868                        l2278 17EC                        l2446 250A  
                      l2710 12BE                        l2702 126E                        l2630 0F5C  
                      l2622 0F2E                        l2614 0EDA                        l2606 0E8C  
                      l2392 27BC                        l2384 27A4                        l2536 280C  
                      l2456 271E                        l2376 2242                        l2368 21EA  
                      l2560 241C                        l2552 23F6                        l2544 23D2  
                      l2528 16FA                        l2472 144A                        l2480 14BA  
                      l2464 13F8                        l2296 18E2                        l2288 1888  
                      l2448 2512                        l2720 130E                        l2704 1280  
                      l2712 12C2                        l2640 1030                        l2632 0F64  
                      l2624 0F32                        l2616 0F00                        l2608 0E92  
                      l2394 27BE                        l2386 27A6                        l2538 2816  
                      l2458 2722                        l2378 2258                        l2554 240C  
                      l2546 23DA                        l2490 1520                        l2482 14D6  
                      l2474 1466                        l2466 13F8                        l2298 1902  
                      l2722 1324                        l2714 12D4                        l2730 135E  
                      l2706 1292                        l2650 10E0                        l2642 10B2  
                      l2634 0F7A                        l2626 0F3E                        l2618 0F0C  
                      l2396 27C0                        l2388 27B8                        l2556 2414  
                      l2548 23E2                        l2484 14E6                        l2492 152E  
                      l2476 1482                        l2468 1412                        l2740 13C0  
                      l2732 1370                        l2724 133A                        l2716 12E8  
                      l2708 12A8                        l2660 1150                        l2652 10F0  
                      l2644 10C4                        l2636 0F96                        l2628 0F48  
                      l2398 27C4                        l2558 2416                        l2494 154A  
                      l2486 14F4                        l2478 149E                        l2742 13D6  
                      l2734 1384                        l2726 134C                        l2718 12FC  
                      l2670 1186                        l2662 1162                        l2646 10D6  
                      l2654 1104                        l2638 0FC6                        l2496 1566  
                      l2488 1510                        l2744 13E8                        l2736 1398  
                      l2728 1352                        l2672 11A2                        l2664 116A  
                      l2656 111A                        l2648 10DE                        l2680 11D0  
                      l2498 1582                        l2738 13AA                        l2690 1218  
                      l2682 11E4                        l2674 11B8                        l2658 113E  
                      l2666 116C                        l2692 122A                        l2684 11FA  
                      l2676 11C0                        l2668 117E                        l2596 0E36  
                      l2694 123A                        l2686 11FC                        l2678 11C4  
                      l2598 0E70                        ?_pad 0011                        l1992 20E6  
                      l2696 123C                        l2688 1204                        l1994 20F8  
                      l2698 1246                        l1996 210A                        l2796 17CC  
                      l2798 202A                        l1998 2114                        STR_1 0E13  
                      STR_2 0E2F                        STR_3 0E01                        STR_4 0E23  
                      u2000 1922                        u2001 191E                        u2010 26FA  
                      u2011 26F6                        u2100 2216                        u2020 24A6  
                      u2101 2212                        u2021 24A2                        u2110 222C  
                      u2030 24C4                        u2111 2228                        u2031 24C0  
                      u2120 2242                        u2040 24DA                        u2200 144A  
                      u2121 223E                        u2041 24D6                        u2201 1446  
                      u2130 2258                        u2210 1466                        u2050 2592  
                      u2131 2254                        u2211 1462                        u2051 258E  
                      u2140 226E                        u2060 21BE                        u2300 159E  
                      u2220 1482                        u1500 266C                        u2141 226A  
                      u2061 21BA                        u2301 159A                        u2221 147E  
                      u1501 2668                        u2150 26C0                        u2070 21D4  
                      u2310 15BA                        u2230 149E                        u1510 1CAE  
                      u2151 26BC                        u2071 21D0                        u2311 15B6  
                      u2231 149A                        u1511 1CAA                        u2160 26DC  
                      u2080 21EA                        u2400 1728                        u2320 1602  
                      u2240 14BA                        u1520 1CE0                        u1600 1EA6  
                      u2161 26D8                        u2081 21E6                        u2401 1724  
                      u2321 15FE                        u2241 14B6                        u1521 1CDC  
                      u1601 1EA2                        u2170 2750                        u2090 2200  
                      u2410 23D2                        u2330 1630                        u2250 14D6  
                      u1610 1ED0                        u2171 274C                        u2091 21FC  
                      u2411 23CE                        u2331 162C                        u2251 14D2  
                      u1531 1D0A                        u1611 1ECC                        u2420 23F0  
                      u2340 165E                        u2260 1510                        u2180 1412  
                      u1700 2778                        u1540 1D2E                        u1620 1EFE  
                      u1460 20F8                        u2421 23EC                        u2341 165A  
                      u2261 150C                        u2181 140E                        u1541 1D2A  
                      u1621 1EFA                        u1461 20F4                        u2430 240C  
                      u2350 168E                        u2270 154A                        u2190 142E  
                      u1710 25FC                        u1550 1D58                        u1630 1F46  
                      u1470 210A                        u2431 2408                        u2351 168A  
                      u2271 1546                        u2191 142A                        u1711 25F8  
                      u1551 1D54                        u1631 1F42                        u1471 2106  
                      u2360 16A0                        u2280 1566                        u1720 261E  
                      u1560 1D98                        u1480 2132                        u1640 2286  
                      u1800 1BF4                        u2600 111A                        u2361 169C  
                      u2281 1562                        u1721 261A                        u1561 1D94  
                      u1481 212E                        u1641 2282                        u1801 1BF0  
                      u2601 1116                        u2370 16BC                        u2290 1582  
                      u1570 1DE2                        u1490 2168                        u1650 22A8  
                      u1810 1C12                        u1730 1A18                        u2610 1150  
                      u2371 16B8                        u2291 157E                        u1571 1DDE  
                      u1491 2164                        u1651 22A4                        u1811 1C0E  
                      u1731 1A12                        u2611 114C                        u1900 243C  
                      u2380 16FA                        u1580 1E36                        u1660 22FE  
                      u1820 1C2C                        u1740 1A1A                        u2700 125A  
                      u2620 1162                        u2540 0F2E                        u1901 2438  
                      u2381 16F6                        u1581 1E32                        u1661 22FA  
                      u1821 1C28                        u2701 1256                        u2621 115E  
                      u2541 0F2A                        u1910 2452                        u2390 170C  
                      u1590 1E68                        u1670 230C                        u1830 1C46  
                      u1750 1A2C                        u2710 126E                        u2630 117E  
                      u2550 0F5C                        u1911 244E                        u2391 1708  
                      u1591 1E64                        u1671 2308                        u1831 1C42  
                      u1751 1A28                        u2711 126A                        u2631 117A  
                      u2551 0F58                        u1920 2468                        u1680 2688  
                      u1840 1C54                        u1760 1A5A                        u2800 1324  
                      u2720 1280                        u2640 11B8                        u2560 0F7A  
                      u1921 2464                        u1681 2684                        u1841 1C50  
                      u1761 1A56                        u2801 1320                        u2721 127C  
                      u2641 11B4                        u2561 0F76                        u1930 247E  
                      u1690 2776                        u1850 1C64                        u1770 1A76  
                      u2810 133A                        u2730 1292                        u2650 11E4  
                      u2570 10B2                        u1931 247A                        u1691 2770  
                      u1851 1C60                        u1771 1A72                        u2811 1336  
                      u2731 128E                        u2651 11E0                        u2571 10AE  
                      u1860 1FC0                        u1780 1AA2                        u1940 1756  
                      u2820 134C                        u2740 12A8                        u2660 11FA  
                      u2580 10C4                        u1861 1FBC                        u1781 1A9E  
                      u1941 1752                        u2821 1348                        u2741 12A4  
                      u2661 11F6                        u2581 10C0                        u1870 1FF4  
                      u1790 1AB8                        u1950 17EC                        u2830 1370  
                      u2750 12BE                        u2670 1218                        u2590 10D6  
                      u1871 1FF0                        u1791 1AB4                        u1951 17E8  
                      u2831 136C                        u2751 12BA                        u2671 1214  
                      u2591 10D2                        u1880 20AE                        u1960 1814  
                      u2840 1384                        u2760 12D4                        u2680 122A  
                      u1881 20AA                        u1961 1810                        u2841 1380  
                      u2761 12D0                        u2681 1226                        u1890 20C0  
                      u1970 185A                        u2850 1398                        u2770 12E8  
                      u2690 123A                        u2907 281C                        u1891 20BC  
                      u1971 1856                        u2851 1394                        u2771 12E4  
                      u2691 1236                        u1980 18D2                        u2860 13AA  
                      u2780 12FC                        u2917 2344                        u1981 18CE  
                      u2861 13A6                        u2781 12F8                        u1990 1902  
                      u2870 13C0                        u2790 130E                        u2927 235A  
                      u1991 18FE                        u2871 13BC                        u2791 130A  
                      u2880 13D6                        u2937 2366                        u2881 13D2  
                      u2890 13E8                        u2947 2376                        u2891 13E4  
                      u2957 2386                        u2967 239A                        u2977 2716  
                      u2987 248C                        u2997 283E                        abs@a 0013  
                      _dbuf 0100                        _atoi 1F88                        _main 0E36  
                      _dtoa 19E8                        _hour 00E5                        _prec 005C  
                      pad@i 0018                        pad@p 0015                        fsr1h 000FE2  
                      fsr2h 000FDA                        indf2 000FDF                        fsr1l 000FE1  
                      pad@w 001A                        fsr2l 000FD9                        btemp 005F  
              ?_LCD_setline 0001                        prodh 000FF4                        prodl 000FF3  
               main@yearstr 00AF                        start 00C6            __end_of_DAC_init 283A  
           __end_of_HighISR 00C6                ___param_bank 000000                  _Comp1_init 27A4  
                     ??_abs 0015                       ??_pad 0017            __end_of_LCD_Init 23B8  
           __end_of___aodiv 1E24                       ?_atoi 0007                       ?_main 0001  
                     ?_dtoa 001C             __end_of___aomod 1F88                       _ADPCH 000F5F  
           __end_of___lwdiv 242C             __end_of___lwmod 24F8                       i2l150 00BE  
                     i2l154 00A6                       i2l155 00BC                       i2l149 005E  
                     i2l157 00C2                vfpfcnvrt@fmt 0041                       _TMR0H 000FD4  
                     _TMR0L 000FD3        check_month@leap_year 0014                       _flags 005E  
                     _fputc 20E6                       _fputs 262A             __end_of_isdigit 277E  
                     atoi@n 000E                       pad@fp 0011                       atoi@s 0007  
                     _width 00D1                       _putch 2860                       dtoa@d 001E  
                     dtoa@i 003C                       dtoa@n 0034                       dtoa@p 0030  
                     dtoa@s 003E                       dtoa@w 0032             __end_of_isspace 262A  
             ?_LCD_sendbyte 0002                       tablat 000FF5                       ttemp5 0060  
                     ttemp6 0063                       ttemp7 0067                       status 000FD8  
                     wtemp8 0060             __end_of_sprintf 254A        check_month@month_day 000E  
           __initialization 259C                __end_of_atoi 20E6                __end_of_main 13F8  
              __end_of_dtoa 1C9C                  _Light_init 2848            _daylight_end_min 00D7  
         __end_of_LCD_E_TOG 2848                      ??_atoi 0009                      ??_main 0079  
                    ??_dtoa 0026               __activetblptr 000003           __end_of_LCD_clear 2826  
                    ?_fputc 0001                      ?_fputs 000A                      _ADRESH 000F64  
            ??_LCD_sendbyte 0003                      ?_putch 0001                      i2l2580 0028  
                    i2l2590 007C                      i2l2582 002C                      i2l2574 000A  
                    i2l2592 0090                      i2l2584 003A                      i2l2576 001A  
                    i2l2594 00B6                      i2l2586 0048                      i2l2578 0022  
                    i2l2588 006C               vfpfcnvrt@done 0050                   ??_HighISR 0001  
                    _TMR0IE 00714D                      _TMR0IF 00719D           _LEDarray_disp_bin 21B0  
        ?_LEDarray_disp_bin 0001               ??_Timer0_init 0001                vfprintf@cfmt 005A  
                 ??___aodiv 0011                   ??___aomod 0011                      ___wmul 277E  
               ?_Comp1_init 0001                   ??___lwdiv 000B                   ??___lwmod 000B  
       ??_LEDarray_disp_bin 0003                      clear_0 25C2                      clear_1 25CE  
             main@month_day 00CF                      _minute 00E3                      isa$std 000001  
                    pad@buf 0013                      dtoa@fp 001C        main@daily_correction 00C9  
                    fputc@c 0001                      fputs@c 000E                      fputs@i 000F  
                    fputs@s 000A                   ??_isdigit 0003                __mediumconst 0000  
                 ??_isspace 0003                      tblptrh 000FF7                      tblptrl 000FF6  
                    tblptru 000FF8                      putch@c 0001                   ?_DAC_init 0001  
          __end_of_vfprintf 259C                   ??_sprintf 005C             _current_day_min 00DF  
 __end_of_LEDarray_disp_bin 2278                  __accesstop 0060     __end_of__initialization 25DA  
                 ?_LCD_Init 0001             check_month@year 0010               ___rparam_used 000001  
             _LEDarray_init 27CA             _Interrupts_init 2852              __pcstackCOMRAM 0001  
               ?_Light_init 0001                __pidataBANK0 285C               __end_of_fputc 21B0  
             __end_of_fputs 266E               __end_of_putch 2862         __end_of_Timer0_init 280C  
         _daylight_end_hour 00D9                  ??_DAC_init 0001                     ??_fputc 0005  
                   ??_fputs 000E                     ??_putch 0001                  __pbssBANK0 00D1  
                __pbssBANK1 0100                  ??_LCD_Init 0004              _LCD_sendnibble 242C  
            ?_LEDarray_init 0001              _LCD_sendstring 271E         _daylight_start_hour 00DD  
                   ?___wmul 0001        __end_of_LCD_sendbyte 271E      __end_of_LCD_sendnibble 2494  
   __end_of_Interrupts_init 285C                     _HighISR 0008      __end_of_LCD_sendstring 2752  
                 _ADREFbits 000F58                     __Hparam 0000                     __Lparam 0000  
               _Timer0_init 27EC                     ___aodiv 1C9C                     ___aomod 1E24  
                   ___lwdiv 23B8                     ___lwmod 2494                   ?_vfprintf 0054  
              __psmallconst 0E00                     __pcinit 259C                     __ramtop 0E00  
                   __ptext0 0E36                     __ptext1 24F8                     __ptext2 254A  
                   __ptext3 172E                     __ptext4 19E8                     __ptext5 2278  
                   __ptext6 262A                     __ptext7 20E6                     __ptext8 2860  
                   __ptext9 266E                     _isdigit 2752               ??_check_month 0012  
                   _isspace 25E4                   _LCD_E_TOG 283A             LCD_setline@line 0004  
                   atoi@neg 000C                     main@day 00CB                     _sprintf 24F8  
                 _LCD_clear 280C        end_of_initialization 25DA             ?_LCD_sendnibble 0001  
     main@OneAmToFiveAmFlag 00C3                     fputc@fp 0003             ??_LEDarray_init 0001  
                   fputs@fp 000C             ?_LCD_sendstring 0004           __end_of_vfpfcnvrt 19E8  
                   postdec1 000FE5                     postdec2 000FDD                ??_Comp1_init 0001  
                   postinc0 000FEE                     postinc1 000FE6                     postinc2 000FDE  
          vfpfcnvrt@convarg 0048                  ??_vfprintf 005A            _current_day_hour 00E1  
                ?_LCD_E_TOG 0001                   _TRISAbits 000F81                   _TRISBbits 000F82  
                 _TRISCbits 000F83                   _TRISDbits 000F84                   _TRISEbits 000F85  
                 _TRISFbits 000F86                   _TRISGbits 000F87                   _TRISHbits 000F88  
_calculated_solar_noon_hour 00D5            check_month@month 000C                  ?_LCD_clear 0001  
       __end_of_check_month 172E          __end_of_Comp1_init 27CA                 _CM1CON0bits 000ED0  
               _CM1CON1bits 000ED1            ?_Interrupts_init 0001                ??_Light_init 0001  
               vfpfcnvrt@ap 0043                 vfpfcnvrt@cp 0052                 vfpfcnvrt@fp 003F  
            __end_of___wmul 27A4        LCD_sendnibble@number 0001         start_initialization 259C  
               __end_of_abs 26AE                 __end_of_pad 2322          __end_of_Light_init 2852  
              _LCD_sendbyte 26E8               ??_LCD_setline 0004                 vfprintf@fmt 0056  
      LCD_sendstring@string 0004                    ??___wmul 0005                 __pdataBANK0 00E3  
               __pbssCOMRAM 005C                 _check_month 13F8                 ??_LCD_E_TOG 0001  
             __pcstackBANK0 0060            ___aodiv@dividend 0001                 ??_LCD_clear 0004  
                  ?_HighISR 0001            ___lwdiv@dividend 0007                   _dtoa$1985 002E  
              ?_Timer0_init 0001          _daylight_start_min 00DB                   __pintcode 0008  
                  ?___aodiv 0001                    ?___aomod 0001            ___aodiv@quotient 0013  
       __end_of_LCD_setline 26E8                    ?___lwdiv 0007                    ?___lwmod 0007  
               __smallconst 0E00                    ?_isdigit 0001                    ?_isspace 0001  
          ??_LCD_sendnibble 0001                    _DAC_init 2826            ___lwdiv@quotient 000B  
          ??_LCD_sendstring 0006                    ?_sprintf 0060            LCD_sendbyte@Byte 0003  
                  _LCD_Init 2322            LCD_sendbyte@type 0002              ___wmul@product 0005  
                  _LATAbits 000F79                    _LATBbits 000F7A                    _LATCbits 000F7B  
                  _LATDbits 000F7C                    _LATEbits 000F7D                    _LATFbits 000F7E  
                  _LATGbits 000F7F                    _LATHbits 000F80                    i2u250_40 006C  
                  i2u250_41 0068                    i2u251_40 0090                    i2u251_41 008C  
                  i2u252_40 00A6                    i2u252_41 00A2                    i2u253_40 00B6  
                  i2u253_41 00B2                    i2u247_40 001A                    i2u247_41 0016  
                  i2u248_40 003A                    i2u248_41 0036                    i2u249_40 0048  
                  i2u249_41 0044                    _PIR2bits 000E35                   _vfpfcnvrt 172E  
                _ADCON0bits 000F60           ___wmul@multiplier 0001                   main@month 00CD  
              _isspace$2034 0005                  _CM1NCHbits 000ED2                  _CM1PCHbits 000ED3  
                 copy_data0 25B0       __end_of_LEDarray_init 27EC                 _LCD_setline 26AE  
                  __Hrparam 0000                  vfprintf@ap 0058                    __Lrparam 0000  
                vfprintf@fp 0054                  ?_vfpfcnvrt 003F             ___aodiv@divisor 0009  
           ___aodiv@counter 0011                  _ANSELAbits 000E92                  _ANSELFbits 000EB4  
                sprintf@fmt 0062                  _T0CON0bits 000FD5                  _T0CON1bits 000FD6  
           ___lwdiv@divisor 0009             ___lwdiv@counter 000D                    __ptext10 1E24  
                  __ptext11 1C9C                    __ptext20 2848                    __ptext12 1F88  
                  __ptext21 27CA                    __ptext13 25E4                    __ptext30 2852  
                  __ptext22 21B0                    __ptext14 2752                    __ptext31 27A4  
                  __ptext23 26AE                    __ptext15 277E                    __ptext32 2826  
                  __ptext24 271E                    __ptext16 13F8                    __ptext25 280C  
                  __ptext17 2494                    __ptext26 2322                    __ptext18 23B8  
                  __ptext27 26E8                    __ptext19 27EC                    __ptext28 242C  
                  __ptext29 283A     LEDarray_disp_bin@number 0001                    isa$xinst 000000  
                  int$flags 005F                    _vfprintf 254A                    main@year 00C7  
          ___aomod@dividend 0001                  _INTCONbits 000FF2                ?_check_month 000C  
                  isdigit@c 0001                    intlevel2 0000                   sprintf@ap 006C  
              _DAC1CON0bits 000EC6                _DAC1CON1bits 000EC7            ___lwmod@dividend 0007  
                  isspace@c 0001             ___aomod@divisor 0009                 ??_vfpfcnvrt 0045  
           ___aomod@counter 0011                    sprintf@f 006E                    sprintf@s 0060  
 _calculated_solar_noon_min 00D3             ___lwmod@divisor 0009             ___lwmod@counter 000B  
              ___aodiv@sign 0012                ___aomod@sign 0012  

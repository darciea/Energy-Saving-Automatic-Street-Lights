

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Nov 08 21:34:37 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    50                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    51                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    53   000000                     
    54                           ; Version 2.35
    55                           ; Generated 05/05/2021 GMT
    56                           ; 
    57                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution. Publication is not required when
    71                           ;        this file is used in an embedded application.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F67K40 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89   000000                     
    90                           	psect	idataBANK0
    91   002766                     __pidataBANK0:
    92                           	callstack 0
    93                           
    94                           ;initializer for _minute
    95   002766  000F               	dw	15
    96                           
    97                           ;initializer for _hour
    98   002768  0015               	dw	21
    99   000000                     _T0CON0bits	set	4053
   100   000000                     _T0CON1bits	set	4054
   101   000000                     _CM1CON1bits	set	3793
   102   000000                     _LATHbits	set	3968
   103   000000                     _ANSELAbits	set	3730
   104   000000                     _TRISAbits	set	3969
   105   000000                     _TMR0IE	set	29005
   106   000000                     _TRISEbits	set	3973
   107   000000                     _TRISCbits	set	3971
   108   000000                     _TRISBbits	set	3970
   109   000000                     _TRISFbits	set	3974
   110   000000                     _TRISGbits	set	3975
   111   000000                     _ANSELFbits	set	3764
   112   000000                     _ADREFbits	set	3928
   113   000000                     _ADPCH	set	3935
   114   000000                     _ADRESH	set	3940
   115   000000                     _ADCON0bits	set	3936
   116   000000                     _LATAbits	set	3961
   117   000000                     _LATGbits	set	3967
   118   000000                     _TMR0L	set	4051
   119   000000                     _TMR0H	set	4052
   120   000000                     _INTCONbits	set	4082
   121   000000                     _TRISHbits	set	3976
   122   000000                     _LATEbits	set	3965
   123   000000                     _LATCbits	set	3963
   124   000000                     _LATBbits	set	3962
   125   000000                     _LATFbits	set	3966
   126   000000                     _DAC1CON0bits	set	3782
   127   000000                     _CM1CON0bits	set	3792
   128   000000                     _CM1NCHbits	set	3794
   129   000000                     _DAC1CON1bits	set	3783
   130   000000                     _CM1PCHbits	set	3795
   131   000000                     _TMR0IF	set	29085
   132   000000                     _PIR2bits	set	3637
   133                           
   134                           	psect	smallconst
   135   000E00                     __psmallconst:
   136                           	callstack 0
   137   000E00  00                 	db	0
   138   000E01                     
   139                           ; BSR set to: 14
   140   000E01  56                 	db	86	;'V'
   141   000E02  6F                 	db	111	;'o'
   142   000E03  6C                 	db	108	;'l'
   143   000E04  74                 	db	116	;'t'
   144   000E05  61                 	db	97	;'a'
   145   000E06  67                 	db	103	;'g'
   146   000E07  65                 	db	101	;'e'
   147   000E08  20                 	db	32
   148   000E09  3D                 	db	61	;'='
   149   000E0A  20                 	db	32
   150   000E0B  25                 	db	37
   151   000E0C  64                 	db	100	;'d'
   152   000E0D  2E                 	db	46
   153   000E0E  25                 	db	37
   154   000E0F  30                 	db	48	;'0'
   155   000E10  32                 	db	50	;'2'
   156   000E11  64                 	db	100	;'d'
   157   000E12  00                 	db	0
   158   000E13                     STR_1:
   159                           
   160                           ; BSR set to: 14
   161   000E13  25                 	db	37
   162   000E14  64                 	db	100	;'d'
   163   000E15  2D                 	db	45
   164   000E16  25                 	db	37
   165   000E17  64                 	db	100	;'d'
   166   000E18  2D                 	db	45
   167   000E19  25                 	db	37
   168   000E1A  64                 	db	100	;'d'
   169   000E1B  20                 	db	32
   170   000E1C  20                 	db	32
   171   000E1D  20                 	db	32
   172   000E1E  20                 	db	32
   173   000E1F  20                 	db	32
   174   000E20  25                 	db	37
   175   000E21  64                 	db	100	;'d'
   176   000E22  00                 	db	0
   177   000E23                     
   178                           ; BSR set to: 14
   179   000E23  67                 	db	103	;'g'
   180   000E24  65                 	db	101	;'e'
   181   000E25  74                 	db	116	;'t'
   182   000E26  76                 	db	118	;'v'
   183   000E27  61                 	db	97	;'a'
   184   000E28  6C                 	db	108	;'l'
   185   000E29  20                 	db	32
   186   000E2A  3D                 	db	61	;'='
   187   000E2B  20                 	db	32
   188   000E2C  25                 	db	37
   189   000E2D  64                 	db	100	;'d'
   190   000E2E  00                 	db	0
   191   000E2F                     STR_2:
   192                           
   193                           ; BSR set to: 14
   194   000E2F  25                 	db	37
   195   000E30  64                 	db	100	;'d'
   196   000E31  3A                 	db	58	;':'
   197   000E32  25                 	db	37
   198   000E33  64                 	db	100	;'d'
   199   000E34  00                 	db	0
   200   000E35  00                 	db	0	; dummy byte at the end
   201   000000                     
   202                           ; #config settings
   203                           
   204                           	psect	cinit
   205   0024AA                     __pcinit:
   206                           	callstack 0
   207   0024AA                     start_initialization:
   208                           	callstack 0
   209   0024AA                     __initialization:
   210                           	callstack 0
   211                           
   212                           ; Initialize objects allocated to BANK0 (4 bytes)
   213                           ; load TBLPTR registers with __pidataBANK0
   214   0024AA  0E66               	movlw	low __pidataBANK0
   215   0024AC  6EF6               	movwf	tblptrl,c
   216   0024AE  0E27               	movlw	high __pidataBANK0
   217   0024B0  6EF7               	movwf	tblptrh,c
   218   0024B2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   219   0024B4  6EF8               	movwf	tblptru,c
   220   0024B6  EE00  F0E1         	lfsr	0,__pdataBANK0
   221   0024BA  EE10 F004          	lfsr	1,4
   222   0024BE                     copy_data0:
   223   0024BE  0009               	tblrd		*+
   224   0024C0  CFF5 FFEE          	movff	tablat,postinc0
   225   0024C4  50E5               	movf	postdec1,w,c
   226   0024C6  50E1               	movf	fsr1l,w,c
   227   0024C8  E1FA               	bnz	copy_data0
   228                           
   229                           ; Clear objects allocated to BANK1 (32 bytes)
   230   0024CA  EE01  F000         	lfsr	0,__pbssBANK1
   231   0024CE  0E20               	movlw	32
   232   0024D0                     clear_0:
   233   0024D0  6AEE               	clrf	postinc0,c
   234   0024D2  06E8               	decf	wreg,f,c
   235   0024D4  E1FD               	bnz	clear_0
   236                           
   237                           ; Clear objects allocated to BANK0 (18 bytes)
   238   0024D6  EE00  F0CF         	lfsr	0,__pbssBANK0
   239   0024DA  0E12               	movlw	18
   240   0024DC                     clear_1:
   241   0024DC  6AEE               	clrf	postinc0,c
   242   0024DE  06E8               	decf	wreg,f,c
   243   0024E0  E1FD               	bnz	clear_1
   244                           
   245                           ; Clear objects allocated to COMRAM (3 bytes)
   246   0024E2  6A5E               	clrf	(__pbssCOMRAM+2)& (0+255),c
   247   0024E4  6A5D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   248   0024E6  6A5C               	clrf	__pbssCOMRAM& (0+255),c
   249   0024E8                     end_of_initialization:
   250                           	callstack 0
   251   0024E8                     __end_of__initialization:
   252                           	callstack 0
   253   0024E8  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   254   0024EA  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   255   0024EC  0100               	movlb	0
   256   0024EE  EF1B  F007         	goto	_main	;jump to C main() function
   257                           
   258                           	psect	bssCOMRAM
   259   00005C                     __pbssCOMRAM:
   260                           	callstack 0
   261   00005C                     _prec:
   262                           	callstack 0
   263   00005C                     	ds	2
   264   00005E                     _flags:
   265                           	callstack 0
   266   00005E                     	ds	1
   267                           
   268                           	psect	bssBANK0
   269   0000CF                     __pbssBANK0:
   270                           	callstack 0
   271   0000CF                     _width:
   272                           	callstack 0
   273   0000CF                     	ds	2
   274   0000D1                     _calculated_solar_noon_min:
   275                           	callstack 0
   276   0000D1                     	ds	2
   277   0000D3                     _calculated_solar_noon_hour:
   278                           	callstack 0
   279   0000D3                     	ds	2
   280   0000D5                     _daylight_end_min:
   281                           	callstack 0
   282   0000D5                     	ds	2
   283   0000D7                     _daylight_end_hour:
   284                           	callstack 0
   285   0000D7                     	ds	2
   286   0000D9                     _daylight_start_min:
   287                           	callstack 0
   288   0000D9                     	ds	2
   289   0000DB                     _daylight_start_hour:
   290                           	callstack 0
   291   0000DB                     	ds	2
   292   0000DD                     _current_day_min:
   293                           	callstack 0
   294   0000DD                     	ds	2
   295   0000DF                     _current_day_hour:
   296                           	callstack 0
   297   0000DF                     	ds	2
   298                           
   299                           	psect	dataBANK0
   300   0000E1                     __pdataBANK0:
   301                           	callstack 0
   302   0000E1                     _minute:
   303                           	callstack 0
   304   0000E1                     	ds	2
   305   0000E3                     _hour:
   306                           	callstack 0
   307   0000E3                     	ds	2
   308                           
   309                           	psect	bssBANK1
   310   000100                     __pbssBANK1:
   311                           	callstack 0
   312   000100                     _dbuf:
   313                           	callstack 0
   314   000100                     	ds	32
   315                           
   316                           	psect	cstackBANK0
   317   000060                     __pcstackBANK0:
   318                           	callstack 0
   319   000060                     ?_sprintf:
   320                           	callstack 0
   321   000060                     sprintf@s:
   322                           	callstack 0
   323                           
   324                           ; 2 bytes @ 0x0
   325   000060                     	ds	2
   326   000062                     sprintf@fmt:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0x2
   330   000062                     	ds	10
   331   00006C                     sprintf@ap:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0xC
   335   00006C                     	ds	2
   336   00006E                     sprintf@f:
   337                           	callstack 0
   338                           
   339                           ; 11 bytes @ 0xE
   340   00006E                     	ds	11
   341   000079                     ??_main:
   342                           
   343                           ; 1 bytes @ 0x19
   344   000079                     	ds	4
   345   00007D                     main@datestr:
   346                           	callstack 0
   347                           
   348                           ; 50 bytes @ 0x1D
   349   00007D                     	ds	50
   350   0000AF                     main@yearstr:
   351                           	callstack 0
   352                           
   353                           ; 20 bytes @ 0x4F
   354   0000AF                     	ds	20
   355   0000C3                     main@OneAmToFiveAmFlag:
   356                           	callstack 0
   357                           
   358                           ; 2 bytes @ 0x63
   359   0000C3                     	ds	2
   360   0000C5                     main@changed:
   361                           	callstack 0
   362                           
   363                           ; 2 bytes @ 0x65
   364   0000C5                     	ds	2
   365   0000C7                     main@year:
   366                           	callstack 0
   367                           
   368                           ; 2 bytes @ 0x67
   369   0000C7                     	ds	2
   370   0000C9                     main@day:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0x69
   374   0000C9                     	ds	2
   375   0000CB                     main@month:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0x6B
   379   0000CB                     	ds	2
   380   0000CD                     main@month_day:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x6D
   384   0000CD                     	ds	2
   385                           
   386                           	psect	cstackCOMRAM
   387   000001                     __pcstackCOMRAM:
   388                           	callstack 0
   389   000001                     ?_isdigit:
   390                           	callstack 0
   391   000001                     ?_isspace:
   392                           	callstack 0
   393   000001                     ?___wmul:
   394                           	callstack 0
   395   000001                     ?___aodiv:
   396                           	callstack 0
   397   000001                     ?___aomod:
   398                           	callstack 0
   399   000001                     LCD_sendnibble@number:
   400                           	callstack 0
   401   000001                     LEDarray_disp_bin@number:
   402                           	callstack 0
   403   000001                     ___wmul@multiplier:
   404                           	callstack 0
   405   000001                     isdigit@c:
   406                           	callstack 0
   407   000001                     isspace@c:
   408                           	callstack 0
   409   000001                     fputc@c:
   410                           	callstack 0
   411   000001                     ___aodiv@dividend:
   412                           	callstack 0
   413   000001                     ___aomod@dividend:
   414                           	callstack 0
   415                           
   416                           ; 8 bytes @ 0x0
   417   000001                     	ds	1
   418   000002                     LCD_sendbyte@type:
   419                           	callstack 0
   420                           
   421                           ; 1 bytes @ 0x1
   422   000002                     	ds	1
   423   000003                     ??_isdigit:
   424   000003                     ??_isspace:
   425   000003                     LCD_sendbyte@Byte:
   426                           	callstack 0
   427   000003                     ___wmul@multiplicand:
   428                           	callstack 0
   429   000003                     fputc@fp:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x2
   433   000003                     	ds	1
   434   000004                     ??_LCD_Init:
   435   000004                     ??_LCD_clear:
   436   000004                     LCD_setline@line:
   437                           	callstack 0
   438   000004                     LCD_sendstring@string:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0x3
   442   000004                     	ds	1
   443   000005                     ??_fputc:
   444   000005                     _isspace$1934:
   445                           	callstack 0
   446   000005                     ___wmul@product:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0x4
   450   000005                     	ds	1
   451   000006                     
   452                           ; 1 bytes @ 0x5
   453   000006                     	ds	1
   454   000007                     ?_atoi:
   455                           	callstack 0
   456   000007                     ?___lwdiv:
   457                           	callstack 0
   458   000007                     ?___lwmod:
   459                           	callstack 0
   460   000007                     ___lwdiv@dividend:
   461                           	callstack 0
   462   000007                     ___lwmod@dividend:
   463                           	callstack 0
   464   000007                     atoi@s:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x6
   468   000007                     	ds	2
   469   000009                     ??_atoi:
   470   000009                     ___lwdiv@divisor:
   471                           	callstack 0
   472   000009                     ___lwmod@divisor:
   473                           	callstack 0
   474   000009                     ___aodiv@divisor:
   475                           	callstack 0
   476   000009                     ___aomod@divisor:
   477                           	callstack 0
   478                           
   479                           ; 8 bytes @ 0x8
   480   000009                     	ds	1
   481   00000A                     fputs@s:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x9
   485   00000A                     	ds	1
   486   00000B                     ___lwmod@counter:
   487                           	callstack 0
   488   00000B                     ___lwdiv@quotient:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0xA
   492   00000B                     	ds	1
   493   00000C                     check_month@month:
   494                           	callstack 0
   495   00000C                     atoi@neg:
   496                           	callstack 0
   497   00000C                     fputs@fp:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0xB
   501   00000C                     	ds	1
   502   00000D                     ___lwdiv@counter:
   503                           	callstack 0
   504                           
   505                           ; 1 bytes @ 0xC
   506   00000D                     	ds	1
   507   00000E                     fputs@c:
   508                           	callstack 0
   509   00000E                     check_month@month_day:
   510                           	callstack 0
   511   00000E                     atoi@n:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0xD
   515   00000E                     	ds	1
   516   00000F                     fputs@i:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0xE
   520   00000F                     	ds	1
   521   000010                     check_month@year:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0xF
   525   000010                     	ds	1
   526   000011                     ___aodiv@counter:
   527                           	callstack 0
   528   000011                     ___aomod@counter:
   529                           	callstack 0
   530   000011                     pad@fp:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x10
   534   000011                     	ds	1
   535   000012                     ??_check_month:
   536   000012                     ___aodiv@sign:
   537                           	callstack 0
   538   000012                     ___aomod@sign:
   539                           	callstack 0
   540                           
   541                           ; 1 bytes @ 0x11
   542   000012                     	ds	1
   543   000013                     ?_abs:
   544                           	callstack 0
   545   000013                     pad@buf:
   546                           	callstack 0
   547   000013                     abs@a:
   548                           	callstack 0
   549   000013                     ___aodiv@quotient:
   550                           	callstack 0
   551                           
   552                           ; 8 bytes @ 0x12
   553   000013                     	ds	1
   554   000014                     check_month@leap_year:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x13
   558   000014                     	ds	1
   559   000015                     ??_abs:
   560   000015                     pad@p:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x14
   564   000015                     	ds	2
   565   000017                     ??_pad:
   566                           
   567                           ; 1 bytes @ 0x16
   568   000017                     	ds	1
   569   000018                     pad@i:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x17
   573   000018                     	ds	2
   574   00001A                     pad@w:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x19
   578   00001A                     	ds	2
   579   00001C                     dtoa@fp:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x1B
   583   00001C                     	ds	2
   584   00001E                     dtoa@d:
   585                           	callstack 0
   586                           
   587                           ; 8 bytes @ 0x1D
   588   00001E                     	ds	8
   589   000026                     ??_dtoa:
   590                           
   591                           ; 1 bytes @ 0x25
   592   000026                     	ds	8
   593   00002E                     _dtoa$1885:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x2D
   597   00002E                     	ds	2
   598   000030                     dtoa@p:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0x2F
   602   000030                     	ds	2
   603   000032                     dtoa@w:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x31
   607   000032                     	ds	2
   608   000034                     dtoa@n:
   609                           	callstack 0
   610                           
   611                           ; 8 bytes @ 0x33
   612   000034                     	ds	8
   613   00003C                     dtoa@i:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x3B
   617   00003C                     	ds	2
   618   00003E                     dtoa@s:
   619                           	callstack 0
   620                           
   621                           ; 1 bytes @ 0x3D
   622   00003E                     	ds	1
   623   00003F                     vfpfcnvrt@fp:
   624                           	callstack 0
   625                           
   626                           ; 2 bytes @ 0x3E
   627   00003F                     	ds	2
   628   000041                     vfpfcnvrt@fmt:
   629                           	callstack 0
   630                           
   631                           ; 2 bytes @ 0x40
   632   000041                     	ds	2
   633   000043                     vfpfcnvrt@ap:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0x42
   637   000043                     	ds	2
   638   000045                     ??_vfpfcnvrt:
   639                           
   640                           ; 1 bytes @ 0x44
   641   000045                     	ds	3
   642   000048                     vfpfcnvrt@convarg:
   643                           	callstack 0
   644                           
   645                           ; 8 bytes @ 0x47
   646   000048                     	ds	8
   647   000050                     vfpfcnvrt@done:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x4F
   651   000050                     	ds	2
   652   000052                     vfpfcnvrt@cp:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x51
   656   000052                     	ds	2
   657   000054                     ?_vfprintf:
   658                           	callstack 0
   659   000054                     vfprintf@fp:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x53
   663   000054                     	ds	2
   664   000056                     vfprintf@fmt:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x55
   668   000056                     	ds	2
   669   000058                     vfprintf@ap:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x57
   673   000058                     	ds	2
   674   00005A                     vfprintf@cfmt:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0x59
   678   00005A                     	ds	2
   679   00005C                     
   680                           ; 1 bytes @ 0x5B
   681 ;;
   682 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   683 ;;
   684 ;; *************** function _main *****************
   685 ;; Defined at:
   686 ;;		line 24 in file "../main.c"
   687 ;; Parameters:    Size  Location     Type
   688 ;;		None
   689 ;; Auto vars:     Size  Location     Type
   690 ;;  datestr        50   29[BANK0 ] unsigned char [50]
   691 ;;  yearstr        20   79[BANK0 ] unsigned char [20]
   692 ;;  month_day       2  109[BANK0 ] unsigned int 
   693 ;;  month           2  107[BANK0 ] unsigned int 
   694 ;;  day             2  105[BANK0 ] unsigned int 
   695 ;;  year            2  103[BANK0 ] unsigned short 
   696 ;;  changed         2  101[BANK0 ] unsigned int 
   697 ;;  OneAmToFiveA    2   99[BANK0 ] unsigned int 
   698 ;; Return value:  Size  Location     Type
   699 ;;                  1    wreg      void 
   700 ;; Registers used:
   701 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   702 ;; Tracked objects:
   703 ;;		On entry : 0/0
   704 ;;		On exit  : 0/0
   705 ;;		Unchanged: 0/0
   706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   708 ;;      Locals:         0      82       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   709 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   710 ;;      Totals:         0      86       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   711 ;;Total ram usage:       86 bytes
   712 ;; Hardware stack levels required when called: 9
   713 ;; This function calls:
   714 ;;		_Comp1_init
   715 ;;		_Interrupts_init
   716 ;;		_LCD_Init
   717 ;;		_LCD_clear
   718 ;;		_LCD_sendstring
   719 ;;		_LCD_setline
   720 ;;		_LEDarray_disp_bin
   721 ;;		_LEDarray_init
   722 ;;		_Light_init
   723 ;;		_Timer0_init
   724 ;;		___lwdiv
   725 ;;		___lwmod
   726 ;;		___wmul
   727 ;;		_check_month
   728 ;;		_sprintf
   729 ;; This function is called by:
   730 ;;		Startup code after reset
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734                           	psect	text0
   735   000E36                     __ptext0:
   736                           	callstack 0
   737   000E36                     _main:
   738                           	callstack 22
   739   000E36                     
   740                           ;../main.c: 27:     unsigned int day = 6;
   741   000E36  0E00               	movlw	0
   742   000E38  0100               	movlb	0	; () banked
   743   000E3A  6FCA               	movwf	(main@day+1)& (0+255),b
   744   000E3C  0E06               	movlw	6
   745   000E3E  6FC9               	movwf	main@day& (0+255),b
   746                           
   747                           ;../main.c: 28:     unsigned int month = 3;
   748   000E40  0E00               	movlw	0
   749   000E42  6FCC               	movwf	(main@month+1)& (0+255),b
   750   000E44  0E03               	movlw	3
   751   000E46  6FCB               	movwf	main@month& (0+255),b
   752                           
   753                           ;../main.c: 29:     unsigned int month_day = 26;
   754   000E48  0E00               	movlw	0
   755   000E4A  6FCE               	movwf	(main@month_day+1)& (0+255),b
   756   000E4C  0E1A               	movlw	26
   757   000E4E  6FCD               	movwf	main@month_day& (0+255),b
   758                           
   759                           ;../main.c: 30:     unsigned short year = 2022;
   760   000E50  0E07               	movlw	7
   761   000E52  6FC8               	movwf	(main@year+1)& (0+255),b
   762   000E54  0EE6               	movlw	230
   763   000E56  6FC7               	movwf	main@year& (0+255),b
   764                           
   765                           ;../main.c: 33:     unsigned int changed = 0;
   766   000E58  0E00               	movlw	0
   767   000E5A  6FC6               	movwf	(main@changed+1)& (0+255),b
   768   000E5C  0E00               	movlw	0
   769   000E5E  6FC5               	movwf	main@changed& (0+255),b
   770                           
   771                           ;../main.c: 34:     unsigned int OneAmToFiveAmFlag = 0;
   772   000E60  0E00               	movlw	0
   773   000E62  6FC4               	movwf	(main@OneAmToFiveAmFlag+1)& (0+255),b
   774   000E64  0E00               	movlw	0
   775   000E66  6FC3               	movwf	main@OneAmToFiveAmFlag& (0+255),b
   776   000E68                     
   777                           ; BSR set to: 0
   778                           ;../main.c: 37:     char datestr[50];;../main.c: 38:     char yearstr[20];;../main.c: 41
      +                          :     Timer0_init();
   779   000E68  EC7D  F013         	call	_Timer0_init	;wreg free
   780                           
   781                           ;../main.c: 42:     LEDarray_init();
   782   000E6C  EC6C  F013         	call	_LEDarray_init	;wreg free
   783                           
   784                           ;../main.c: 43:     Interrupts_init();
   785   000E70  ECAB  F013         	call	_Interrupts_init	;wreg free
   786                           
   787                           ;../main.c: 44:     LEDarray_init();
   788   000E74  EC6C  F013         	call	_LEDarray_init	;wreg free
   789   000E78                     
   790                           ;../main.c: 45:     Comp1_init();
   791   000E78  EC59  F013         	call	_Comp1_init	;wreg free
   792   000E7C                     
   793                           ;../main.c: 46:     Light_init();
   794   000E7C  ECB0  F013         	call	_Light_init	;wreg free
   795   000E80                     
   796                           ;../main.c: 48:     LCD_Init();
   797   000E80  EC18  F011         	call	_LCD_Init	;wreg free
   798   000E84                     l2570:
   799                           
   800                           ;../main.c: 53:         LCD_setline(1);
   801   000E84  0E01               	movlw	1
   802   000E86  ECDE  F012         	call	_LCD_setline
   803   000E8A                     
   804                           ;../main.c: 54:         sprintf(datestr, "%d-%d-%d     %d", month_day, month, year, day)
      +                          ;
   805   000E8A  0E7D               	movlw	low main@datestr
   806   000E8C  0100               	movlb	0	; () banked
   807   000E8E  6F60               	movwf	sprintf@s& (0+255),b
   808   000E90  0E00               	movlw	high main@datestr
   809   000E92  6F61               	movwf	(sprintf@s+1)& (0+255),b
   810   000E94  0E13               	movlw	low STR_1
   811   000E96  6F62               	movwf	sprintf@fmt& (0+255),b
   812   000E98  0E0E               	movlw	high STR_1
   813   000E9A  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   814   000E9C  C0CD  F064         	movff	main@month_day,?_sprintf+4
   815   000EA0  C0CE  F065         	movff	main@month_day+1,?_sprintf+5
   816   000EA4  C0CB  F066         	movff	main@month,?_sprintf+6
   817   000EA8  C0CC  F067         	movff	main@month+1,?_sprintf+7
   818   000EAC  C0C7  F068         	movff	main@year,?_sprintf+8
   819   000EB0  C0C8  F069         	movff	main@year+1,?_sprintf+9
   820   000EB4  C0C9  F06A         	movff	main@day,?_sprintf+10
   821   000EB8  C0CA  F06B         	movff	main@day+1,?_sprintf+11
   822   000EBC  EC03  F012         	call	_sprintf	;wreg free
   823   000EC0                     
   824                           ;../main.c: 55:         LCD_sendstring(datestr);
   825   000EC0  0E7D               	movlw	low main@datestr
   826   000EC2  6E04               	movwf	LCD_sendstring@string^0,c
   827   000EC4  0E00               	movlw	high main@datestr
   828   000EC6  6E05               	movwf	(LCD_sendstring@string+1)^0,c
   829   000EC8  EC16  F013         	call	_LCD_sendstring	;wreg free
   830   000ECC                     
   831                           ;../main.c: 56:         LCD_setline(2);
   832   000ECC  0E02               	movlw	2
   833   000ECE  ECDE  F012         	call	_LCD_setline
   834   000ED2                     
   835                           ;../main.c: 57:         sprintf(yearstr, "%d:%d", hour, minute);
   836   000ED2  0EAF               	movlw	low main@yearstr
   837   000ED4  0100               	movlb	0	; () banked
   838   000ED6  6F60               	movwf	sprintf@s& (0+255),b
   839   000ED8  0E00               	movlw	high main@yearstr
   840   000EDA  6F61               	movwf	(sprintf@s+1)& (0+255),b
   841   000EDC  0E2F               	movlw	low STR_2
   842   000EDE  6F62               	movwf	sprintf@fmt& (0+255),b
   843   000EE0  0E0E               	movlw	high STR_2
   844   000EE2  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   845   000EE4  C0E3  F064         	movff	_hour,?_sprintf+4
   846   000EE8  C0E4  F065         	movff	_hour+1,?_sprintf+5
   847   000EEC  C0E1  F066         	movff	_minute,?_sprintf+6
   848   000EF0  C0E2  F067         	movff	_minute+1,?_sprintf+7
   849   000EF4  EC03  F012         	call	_sprintf	;wreg free
   850   000EF8                     
   851                           ;../main.c: 58:         LCD_sendstring(yearstr);
   852   000EF8  0EAF               	movlw	low main@yearstr
   853   000EFA  6E04               	movwf	LCD_sendstring@string^0,c
   854   000EFC  0E00               	movlw	high main@yearstr
   855   000EFE  6E05               	movwf	(LCD_sendstring@string+1)^0,c
   856   000F00  EC16  F013         	call	_LCD_sendstring	;wreg free
   857   000F04                     
   858                           ;../main.c: 59:         LEDarray_disp_bin(hour);
   859   000F04  C0E3  F001         	movff	_hour,LEDarray_disp_bin@number
   860   000F08  C0E4  F002         	movff	_hour+1,LEDarray_disp_bin@number+1
   861   000F0C  EC5F  F010         	call	_LEDarray_disp_bin	;wreg free
   862   000F10                     
   863                           ;../main.c: 61:         if (minute == 60) {
   864   000F10  0E3C               	movlw	60
   865   000F12  0100               	movlb	0	; () banked
   866   000F14  19E1               	xorwf	_minute& (0+255),w,b
   867   000F16  11E2               	iorwf	(_minute+1)& (0+255),w,b
   868   000F18  A4D8               	btfss	status,2,c
   869   000F1A  EF91  F007         	goto	u2471
   870   000F1E  EF93  F007         	goto	u2470
   871   000F22                     u2471:
   872   000F22  EF68  F008         	goto	l2618
   873   000F26                     u2470:
   874   000F26                     
   875                           ; BSR set to: 0
   876                           ;../main.c: 62:             hour++;
   877   000F26  4BE3               	infsnz	_hour& (0+255),f,b
   878   000F28  2BE4               	incf	(_hour+1)& (0+255),f,b
   879   000F2A                     
   880                           ; BSR set to: 0
   881                           ;../main.c: 63:             minute = 0;
   882   000F2A  0E00               	movlw	0
   883   000F2C  6FE2               	movwf	(_minute+1)& (0+255),b
   884   000F2E  0E00               	movlw	0
   885   000F30  6FE1               	movwf	_minute& (0+255),b
   886   000F32                     
   887                           ; BSR set to: 0
   888                           ;../main.c: 64:             if (hour == 24){
   889   000F32  0E18               	movlw	24
   890   000F34  19E3               	xorwf	_hour& (0+255),w,b
   891   000F36  11E4               	iorwf	(_hour+1)& (0+255),w,b
   892   000F38  A4D8               	btfss	status,2,c
   893   000F3A  EFA1  F007         	goto	u2481
   894   000F3E  EFA3  F007         	goto	u2480
   895   000F42                     u2481:
   896   000F42  EF62  F008         	goto	l2616
   897   000F46                     u2480:
   898   000F46                     
   899                           ; BSR set to: 0
   900                           ;../main.c: 65:                 hour = 0;
   901   000F46  0E00               	movlw	0
   902   000F48  6FE4               	movwf	(_hour+1)& (0+255),b
   903   000F4A  0E00               	movlw	0
   904   000F4C  6FE3               	movwf	_hour& (0+255),b
   905   000F4E                     
   906                           ; BSR set to: 0
   907                           ;../main.c: 66:                 day++;
   908   000F4E  4BC9               	infsnz	main@day& (0+255),f,b
   909   000F50  2BCA               	incf	(main@day+1)& (0+255),f,b
   910   000F52                     
   911                           ; BSR set to: 0
   912                           ;../main.c: 67:                 month_day++;
   913   000F52  4BCD               	infsnz	main@month_day& (0+255),f,b
   914   000F54  2BCE               	incf	(main@month_day+1)& (0+255),f,b
   915   000F56                     
   916                           ; BSR set to: 0
   917                           ;../main.c: 68:                 check_month(&month, &month_day, &year);
   918   000F56  0ECB               	movlw	low main@month
   919   000F58  6E0C               	movwf	check_month@month^0,c
   920   000F5A  0E00               	movlw	high main@month
   921   000F5C  6E0D               	movwf	(check_month@month+1)^0,c
   922   000F5E  0ECD               	movlw	low main@month_day
   923   000F60  6E0E               	movwf	check_month@month_day^0,c
   924   000F62  0E00               	movlw	high main@month_day
   925   000F64  6E0F               	movwf	(check_month@month_day+1)^0,c
   926   000F66  0EC7               	movlw	low main@year
   927   000F68  6E10               	movwf	check_month@year^0,c
   928   000F6A  0E00               	movlw	high main@year
   929   000F6C  6E11               	movwf	(check_month@year+1)^0,c
   930   000F6E  EC83  F009         	call	_check_month	;wreg free
   931   000F72                     
   932                           ;../main.c: 69:                 if (day == 7){day = 0;}
   933   000F72  0E07               	movlw	7
   934   000F74  0100               	movlb	0	; () banked
   935   000F76  19C9               	xorwf	main@day& (0+255),w,b
   936   000F78  11CA               	iorwf	(main@day+1)& (0+255),w,b
   937   000F7A  A4D8               	btfss	status,2,c
   938   000F7C  EFC2  F007         	goto	u2491
   939   000F80  EFC4  F007         	goto	u2490
   940   000F84                     u2491:
   941   000F84  EFC8  F007         	goto	l2604
   942   000F88                     u2490:
   943   000F88                     
   944                           ; BSR set to: 0
   945   000F88  0E00               	movlw	0
   946   000F8A  6FCA               	movwf	(main@day+1)& (0+255),b
   947   000F8C  0E00               	movlw	0
   948   000F8E  6FC9               	movwf	main@day& (0+255),b
   949   000F90                     l2604:
   950                           
   951                           ; BSR set to: 0
   952                           ;../main.c: 70:                 LCD_clear();
   953   000F90  EC8D  F013         	call	_LCD_clear	;wreg free
   954   000F94                     
   955                           ;../main.c: 74:                 if (daylight_end_min >= daylight_start_min) {
   956   000F94  0100               	movlb	0	; () banked
   957   000F96  51D9               	movf	_daylight_start_min& (0+255),w,b
   958   000F98  5DD5               	subwf	_daylight_end_min& (0+255),w,b
   959   000F9A  51DA               	movf	(_daylight_start_min+1)& (0+255),w,b
   960   000F9C  59D6               	subwfb	(_daylight_end_min+1)& (0+255),w,b
   961   000F9E  A0D8               	btfss	status,0,c
   962   000FA0  EFD4  F007         	goto	u2501
   963   000FA4  EFD6  F007         	goto	u2500
   964   000FA8                     u2501:
   965   000FA8  EFE4  F007         	goto	l2610
   966   000FAC                     u2500:
   967   000FAC                     
   968                           ; BSR set to: 0
   969                           ;../main.c: 75:                     current_day_min = daylight_end_min - daylight_start_
      +                          min;
   970   000FAC  51D9               	movf	_daylight_start_min& (0+255),w,b
   971   000FAE  5DD5               	subwf	_daylight_end_min& (0+255),w,b
   972   000FB0  6FDD               	movwf	_current_day_min& (0+255),b
   973   000FB2  51DA               	movf	(_daylight_start_min+1)& (0+255),w,b
   974   000FB4  59D6               	subwfb	(_daylight_end_min+1)& (0+255),w,b
   975   000FB6  6FDE               	movwf	(_current_day_min+1)& (0+255),b
   976                           
   977                           ;../main.c: 76:                     current_day_hour = daylight_end_hour - daylight_star
      +                          t_hour;}
   978   000FB8  51DB               	movf	_daylight_start_hour& (0+255),w,b
   979   000FBA  5DD7               	subwf	_daylight_end_hour& (0+255),w,b
   980   000FBC  6FDF               	movwf	_current_day_hour& (0+255),b
   981   000FBE  51DC               	movf	(_daylight_start_hour+1)& (0+255),w,b
   982   000FC0  59D8               	subwfb	(_daylight_end_hour+1)& (0+255),w,b
   983   000FC2  6FE0               	movwf	(_current_day_hour+1)& (0+255),b
   984   000FC4  EFFC  F007         	goto	l2612
   985   000FC8                     l2610:
   986                           
   987                           ; BSR set to: 0
   988                           ;../main.c: 78:                     current_day_min = daylight_end_min + (60-daylight_st
      +                          art_min);
   989   000FC8  51D9               	movf	_daylight_start_min& (0+255),w,b
   990   000FCA  5DD5               	subwf	_daylight_end_min& (0+255),w,b
   991   000FCC  6F79               	movwf	??_main& (0+255),b
   992   000FCE  51DA               	movf	(_daylight_start_min+1)& (0+255),w,b
   993   000FD0  59D6               	subwfb	(_daylight_end_min+1)& (0+255),w,b
   994   000FD2  6F7A               	movwf	(??_main+1)& (0+255),b
   995   000FD4  0E3C               	movlw	60
   996   000FD6  2579               	addwf	??_main& (0+255),w,b
   997   000FD8  6FDD               	movwf	_current_day_min& (0+255),b
   998   000FDA  0E00               	movlw	0
   999   000FDC  217A               	addwfc	(??_main+1)& (0+255),w,b
  1000   000FDE  6FDE               	movwf	(_current_day_min+1)& (0+255),b
  1001                           
  1002                           ;../main.c: 79:                     current_day_hour = daylight_end_hour - daylight_star
      +                          t_hour - 1;
  1003   000FE0  51DB               	movf	_daylight_start_hour& (0+255),w,b
  1004   000FE2  5DD7               	subwf	_daylight_end_hour& (0+255),w,b
  1005   000FE4  6F79               	movwf	??_main& (0+255),b
  1006   000FE6  51DC               	movf	(_daylight_start_hour+1)& (0+255),w,b
  1007   000FE8  59D8               	subwfb	(_daylight_end_hour+1)& (0+255),w,b
  1008   000FEA  6F7A               	movwf	(??_main+1)& (0+255),b
  1009   000FEC  0EFF               	movlw	255
  1010   000FEE  2579               	addwf	??_main& (0+255),w,b
  1011   000FF0  6FDF               	movwf	_current_day_hour& (0+255),b
  1012   000FF2  0EFF               	movlw	255
  1013   000FF4  217A               	addwfc	(??_main+1)& (0+255),w,b
  1014   000FF6  6FE0               	movwf	(_current_day_hour+1)& (0+255),b
  1015   000FF8                     l2612:
  1016                           
  1017                           ; BSR set to: 0
  1018                           ;../main.c: 82:                 calculated_solar_noon_hour = (daylight_start_hour*60 + d
      +                          aylight_start_min + current_day_hour*60 + current_day_min)/60;
  1019   000FF8  C0DB  F001         	movff	_daylight_start_hour,___wmul@multiplier
  1020   000FFC  C0DC  F002         	movff	_daylight_start_hour+1,___wmul@multiplier+1
  1021   001000  0E00               	movlw	0
  1022   001002  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1023   001004  0E3C               	movlw	60
  1024   001006  6E03               	movwf	___wmul@multiplicand^0,c
  1025   001008  EC46  F013         	call	___wmul	;wreg free
  1026   00100C  C001  F079         	movff	?___wmul,??_main
  1027   001010  C002  F07A         	movff	?___wmul+1,??_main+1
  1028   001014  C0DF  F001         	movff	_current_day_hour,___wmul@multiplier
  1029   001018  C0E0  F002         	movff	_current_day_hour+1,___wmul@multiplier+1
  1030   00101C  0E00               	movlw	0
  1031   00101E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1032   001020  0E3C               	movlw	60
  1033   001022  6E03               	movwf	___wmul@multiplicand^0,c
  1034   001024  EC46  F013         	call	___wmul	;wreg free
  1035   001028  5001               	movf	?___wmul^0,w,c
  1036   00102A  0100               	movlb	0	; () banked
  1037   00102C  2579               	addwf	??_main& (0+255),w,b
  1038   00102E  6F7B               	movwf	(??_main+2)& (0+255),b
  1039   001030  5002               	movf	(?___wmul+1)^0,w,c
  1040   001032  217A               	addwfc	(??_main+1)& (0+255),w,b
  1041   001034  6F7C               	movwf	(??_main+3)& (0+255),b
  1042   001036  51D9               	movf	_daylight_start_min& (0+255),w,b
  1043   001038  277B               	addwf	(??_main+2)& (0+255),f,b
  1044   00103A  51DA               	movf	(_daylight_start_min+1)& (0+255),w,b
  1045   00103C  237C               	addwfc	(??_main+3)& (0+255),f,b
  1046   00103E  51DD               	movf	_current_day_min& (0+255),w,b
  1047   001040  257B               	addwf	(??_main+2)& (0+255),w,b
  1048   001042  6E07               	movwf	___lwdiv@dividend^0,c
  1049   001044  51DE               	movf	(_current_day_min+1)& (0+255),w,b
  1050   001046  217C               	addwfc	(??_main+3)& (0+255),w,b
  1051   001048  6E08               	movwf	(___lwdiv@dividend+1)^0,c
  1052   00104A  0E00               	movlw	0
  1053   00104C  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  1054   00104E  0E3C               	movlw	60
  1055   001050  6E09               	movwf	___lwdiv@divisor^0,c
  1056   001052  EC63  F011         	call	___lwdiv	;wreg free
  1057   001056  C007  F0D3         	movff	?___lwdiv,_calculated_solar_noon_hour
  1058   00105A  C008  F0D4         	movff	?___lwdiv+1,_calculated_solar_noon_hour+1
  1059   00105E                     
  1060                           ;../main.c: 83:                 calculated_solar_noon_min = (daylight_start_hour*60 + da
      +                          ylight_start_min + current_day_hour*60 + current_day_min)%60;
  1061   00105E  C0DB  F001         	movff	_daylight_start_hour,___wmul@multiplier
  1062   001062  C0DC  F002         	movff	_daylight_start_hour+1,___wmul@multiplier+1
  1063   001066  0E00               	movlw	0
  1064   001068  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1065   00106A  0E3C               	movlw	60
  1066   00106C  6E03               	movwf	___wmul@multiplicand^0,c
  1067   00106E  EC46  F013         	call	___wmul	;wreg free
  1068   001072  C001  F079         	movff	?___wmul,??_main
  1069   001076  C002  F07A         	movff	?___wmul+1,??_main+1
  1070   00107A  C0DF  F001         	movff	_current_day_hour,___wmul@multiplier
  1071   00107E  C0E0  F002         	movff	_current_day_hour+1,___wmul@multiplier+1
  1072   001082  0E00               	movlw	0
  1073   001084  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1074   001086  0E3C               	movlw	60
  1075   001088  6E03               	movwf	___wmul@multiplicand^0,c
  1076   00108A  EC46  F013         	call	___wmul	;wreg free
  1077   00108E  5001               	movf	?___wmul^0,w,c
  1078   001090  0100               	movlb	0	; () banked
  1079   001092  2579               	addwf	??_main& (0+255),w,b
  1080   001094  6F7B               	movwf	(??_main+2)& (0+255),b
  1081   001096  5002               	movf	(?___wmul+1)^0,w,c
  1082   001098  217A               	addwfc	(??_main+1)& (0+255),w,b
  1083   00109A  6F7C               	movwf	(??_main+3)& (0+255),b
  1084   00109C  51D9               	movf	_daylight_start_min& (0+255),w,b
  1085   00109E  277B               	addwf	(??_main+2)& (0+255),f,b
  1086   0010A0  51DA               	movf	(_daylight_start_min+1)& (0+255),w,b
  1087   0010A2  237C               	addwfc	(??_main+3)& (0+255),f,b
  1088   0010A4  51DD               	movf	_current_day_min& (0+255),w,b
  1089   0010A6  257B               	addwf	(??_main+2)& (0+255),w,b
  1090   0010A8  6E07               	movwf	___lwmod@dividend^0,c
  1091   0010AA  51DE               	movf	(_current_day_min+1)& (0+255),w,b
  1092   0010AC  217C               	addwfc	(??_main+3)& (0+255),w,b
  1093   0010AE  6E08               	movwf	(___lwmod@dividend+1)^0,c
  1094   0010B0  0E00               	movlw	0
  1095   0010B2  6E0A               	movwf	(___lwmod@divisor+1)^0,c
  1096   0010B4  0E3C               	movlw	60
  1097   0010B6  6E09               	movwf	___lwmod@divisor^0,c
  1098   0010B8  ECD1  F011         	call	___lwmod	;wreg free
  1099   0010BC  C007  F0D1         	movff	?___lwmod,_calculated_solar_noon_min
  1100   0010C0  C008  F0D2         	movff	?___lwmod+1,_calculated_solar_noon_min+1
  1101   0010C4                     l2616:
  1102                           
  1103                           ;../main.c: 87:             LEDarray_disp_bin(hour);
  1104   0010C4  C0E3  F001         	movff	_hour,LEDarray_disp_bin@number
  1105   0010C8  C0E4  F002         	movff	_hour+1,LEDarray_disp_bin@number+1
  1106   0010CC  EC5F  F010         	call	_LEDarray_disp_bin	;wreg free
  1107   0010D0                     l2618:
  1108                           
  1109                           ;../main.c: 90:         if (hour >= 1 && hour < 5){
  1110   0010D0  0100               	movlb	0	; () banked
  1111   0010D2  51E3               	movf	_hour& (0+255),w,b
  1112   0010D4  11E4               	iorwf	(_hour+1)& (0+255),w,b
  1113   0010D6  B4D8               	btfsc	status,2,c
  1114   0010D8  EF70  F008         	goto	u2511
  1115   0010DC  EF72  F008         	goto	u2510
  1116   0010E0                     u2511:
  1117   0010E0  EF82  F008         	goto	l2626
  1118   0010E4                     u2510:
  1119   0010E4                     
  1120                           ; BSR set to: 0
  1121   0010E4  51E4               	movf	(_hour+1)& (0+255),w,b
  1122   0010E6  E107               	bnz	u2521
  1123   0010E8  0E05               	movlw	5
  1124   0010EA  5DE3               	subwf	_hour& (0+255),w,b
  1125   0010EC  B0D8               	btfsc	status,0,c
  1126   0010EE  EF7B  F008         	goto	u2521
  1127   0010F2  EF7D  F008         	goto	u2520
  1128   0010F6                     u2521:
  1129   0010F6  EF82  F008         	goto	l2626
  1130   0010FA                     u2520:
  1131   0010FA                     
  1132                           ; BSR set to: 0
  1133                           ;../main.c: 91:             LATHbits.LATH3=0;
  1134   0010FA  9680               	bcf	128,3,c	;volatile
  1135   0010FC                     
  1136                           ; BSR set to: 0
  1137                           ;../main.c: 92:             OneAmToFiveAmFlag = 1;}
  1138   0010FC  0E00               	movlw	0
  1139   0010FE  6FC4               	movwf	(main@OneAmToFiveAmFlag+1)& (0+255),b
  1140   001100  0E01               	movlw	1
  1141   001102  6FC3               	movwf	main@OneAmToFiveAmFlag& (0+255),b
  1142   001104                     l2626:
  1143                           
  1144                           ; BSR set to: 0
  1145                           ;../main.c: 93:         if (hour == 5 && OneAmToFiveAmFlag == 1 && CM1CON0bits.OUT == 1)
      +                          {
  1146   001104  0E05               	movlw	5
  1147   001106  19E3               	xorwf	_hour& (0+255),w,b
  1148   001108  11E4               	iorwf	(_hour+1)& (0+255),w,b
  1149   00110A  A4D8               	btfss	status,2,c
  1150   00110C  EF8A  F008         	goto	u2531
  1151   001110  EF8C  F008         	goto	u2530
  1152   001114                     u2531:
  1153   001114  EFA3  F008         	goto	l2636
  1154   001118                     u2530:
  1155   001118                     
  1156                           ; BSR set to: 0
  1157   001118  05C3               	decf	main@OneAmToFiveAmFlag& (0+255),w,b
  1158   00111A  11C4               	iorwf	(main@OneAmToFiveAmFlag+1)& (0+255),w,b
  1159   00111C  A4D8               	btfss	status,2,c
  1160   00111E  EF93  F008         	goto	u2541
  1161   001122  EF95  F008         	goto	u2540
  1162   001126                     u2541:
  1163   001126  EFA3  F008         	goto	l2636
  1164   00112A                     u2540:
  1165   00112A                     
  1166                           ; BSR set to: 0
  1167   00112A  010E               	movlb	14	; () banked
  1168   00112C  ADD0               	btfss	208,6,b	;volatile
  1169   00112E  EF9B  F008         	goto	u2551
  1170   001132  EF9D  F008         	goto	u2550
  1171   001136                     u2551:
  1172   001136  EFA3  F008         	goto	l2636
  1173   00113A                     u2550:
  1174   00113A                     
  1175                           ; BSR set to: 14
  1176                           ;../main.c: 94:                 LATHbits.LATH3=1;
  1177   00113A  8680               	bsf	128,3,c	;volatile
  1178   00113C                     
  1179                           ; BSR set to: 14
  1180                           ;../main.c: 95:                 OneAmToFiveAmFlag = 0;}
  1181   00113C  0E00               	movlw	0
  1182   00113E  0100               	movlb	0	; () banked
  1183   001140  6FC4               	movwf	(main@OneAmToFiveAmFlag+1)& (0+255),b
  1184   001142  0E00               	movlw	0
  1185   001144  6FC3               	movwf	main@OneAmToFiveAmFlag& (0+255),b
  1186   001146                     l2636:
  1187                           
  1188                           ;../main.c: 98:         if (day == 0 && month == 3 && hour == 1 && minute == 0 && month_
      +                          day >=25 && month_day <= 31) {hour++;}
  1189   001146  0100               	movlb	0	; () banked
  1190   001148  51C9               	movf	main@day& (0+255),w,b
  1191   00114A  11CA               	iorwf	(main@day+1)& (0+255),w,b
  1192   00114C  A4D8               	btfss	status,2,c
  1193   00114E  EFAB  F008         	goto	u2561
  1194   001152  EFAD  F008         	goto	u2560
  1195   001156                     u2561:
  1196   001156  EFE1  F008         	goto	l2650
  1197   00115A                     u2560:
  1198   00115A                     
  1199                           ; BSR set to: 0
  1200   00115A  0E03               	movlw	3
  1201   00115C  19CB               	xorwf	main@month& (0+255),w,b
  1202   00115E  11CC               	iorwf	(main@month+1)& (0+255),w,b
  1203   001160  A4D8               	btfss	status,2,c
  1204   001162  EFB5  F008         	goto	u2571
  1205   001166  EFB7  F008         	goto	u2570
  1206   00116A                     u2571:
  1207   00116A  EFE1  F008         	goto	l2650
  1208   00116E                     u2570:
  1209   00116E                     
  1210                           ; BSR set to: 0
  1211   00116E  05E3               	decf	_hour& (0+255),w,b
  1212   001170  11E4               	iorwf	(_hour+1)& (0+255),w,b
  1213   001172  A4D8               	btfss	status,2,c
  1214   001174  EFBE  F008         	goto	u2581
  1215   001178  EFC0  F008         	goto	u2580
  1216   00117C                     u2581:
  1217   00117C  EFE1  F008         	goto	l2650
  1218   001180                     u2580:
  1219   001180                     
  1220                           ; BSR set to: 0
  1221   001180  51E1               	movf	_minute& (0+255),w,b
  1222   001182  11E2               	iorwf	(_minute+1)& (0+255),w,b
  1223   001184  A4D8               	btfss	status,2,c
  1224   001186  EFC7  F008         	goto	u2591
  1225   00118A  EFC9  F008         	goto	u2590
  1226   00118E                     u2591:
  1227   00118E  EFE1  F008         	goto	l2650
  1228   001192                     u2590:
  1229   001192                     
  1230                           ; BSR set to: 0
  1231   001192  51CE               	movf	(main@month_day+1)& (0+255),w,b
  1232   001194  E109               	bnz	u2600
  1233   001196  0E19               	movlw	25
  1234   001198  5DCD               	subwf	main@month_day& (0+255),w,b
  1235   00119A  A0D8               	btfss	status,0,c
  1236   00119C  EFD2  F008         	goto	u2601
  1237   0011A0  EFD4  F008         	goto	u2600
  1238   0011A4                     u2601:
  1239   0011A4  EFE1  F008         	goto	l2650
  1240   0011A8                     u2600:
  1241   0011A8                     
  1242                           ; BSR set to: 0
  1243   0011A8  51CE               	movf	(main@month_day+1)& (0+255),w,b
  1244   0011AA  E107               	bnz	u2611
  1245   0011AC  0E20               	movlw	32
  1246   0011AE  5DCD               	subwf	main@month_day& (0+255),w,b
  1247   0011B0  B0D8               	btfsc	status,0,c
  1248   0011B2  EFDD  F008         	goto	u2611
  1249   0011B6  EFDF  F008         	goto	u2610
  1250   0011BA                     u2611:
  1251   0011BA  EFE1  F008         	goto	l2650
  1252   0011BE                     u2610:
  1253   0011BE                     
  1254                           ; BSR set to: 0
  1255   0011BE  4BE3               	infsnz	_hour& (0+255),f,b
  1256   0011C0  2BE4               	incf	(_hour+1)& (0+255),f,b
  1257   0011C2                     l2650:
  1258                           
  1259                           ; BSR set to: 0
  1260                           ;../main.c: 100:         if (day == 0 && month == 10 && hour == 2 && minute == 0 && mont
      +                          h_day >=25 && month_day <= 31 && changed == 0) {
  1261   0011C2  51C9               	movf	main@day& (0+255),w,b
  1262   0011C4  11CA               	iorwf	(main@day+1)& (0+255),w,b
  1263   0011C6  A4D8               	btfss	status,2,c
  1264   0011C8  EFE8  F008         	goto	u2621
  1265   0011CC  EFEA  F008         	goto	u2620
  1266   0011D0                     u2621:
  1267   0011D0  EF36  F009         	goto	l2670
  1268   0011D4                     u2620:
  1269   0011D4                     
  1270                           ; BSR set to: 0
  1271   0011D4  0E0A               	movlw	10
  1272   0011D6  19CB               	xorwf	main@month& (0+255),w,b
  1273   0011D8  11CC               	iorwf	(main@month+1)& (0+255),w,b
  1274   0011DA  A4D8               	btfss	status,2,c
  1275   0011DC  EFF2  F008         	goto	u2631
  1276   0011E0  EFF4  F008         	goto	u2630
  1277   0011E4                     u2631:
  1278   0011E4  EF36  F009         	goto	l2670
  1279   0011E8                     u2630:
  1280   0011E8                     
  1281                           ; BSR set to: 0
  1282   0011E8  0E02               	movlw	2
  1283   0011EA  19E3               	xorwf	_hour& (0+255),w,b
  1284   0011EC  11E4               	iorwf	(_hour+1)& (0+255),w,b
  1285   0011EE  A4D8               	btfss	status,2,c
  1286   0011F0  EFFC  F008         	goto	u2641
  1287   0011F4  EFFE  F008         	goto	u2640
  1288   0011F8                     u2641:
  1289   0011F8  EF36  F009         	goto	l2670
  1290   0011FC                     u2640:
  1291   0011FC                     
  1292                           ; BSR set to: 0
  1293   0011FC  51E1               	movf	_minute& (0+255),w,b
  1294   0011FE  11E2               	iorwf	(_minute+1)& (0+255),w,b
  1295   001200  A4D8               	btfss	status,2,c
  1296   001202  EF05  F009         	goto	u2651
  1297   001206  EF07  F009         	goto	u2650
  1298   00120A                     u2651:
  1299   00120A  EF36  F009         	goto	l2670
  1300   00120E                     u2650:
  1301   00120E                     
  1302                           ; BSR set to: 0
  1303   00120E  51CE               	movf	(main@month_day+1)& (0+255),w,b
  1304   001210  E109               	bnz	u2660
  1305   001212  0E19               	movlw	25
  1306   001214  5DCD               	subwf	main@month_day& (0+255),w,b
  1307   001216  A0D8               	btfss	status,0,c
  1308   001218  EF10  F009         	goto	u2661
  1309   00121C  EF12  F009         	goto	u2660
  1310   001220                     u2661:
  1311   001220  EF36  F009         	goto	l2670
  1312   001224                     u2660:
  1313   001224                     
  1314                           ; BSR set to: 0
  1315   001224  51CE               	movf	(main@month_day+1)& (0+255),w,b
  1316   001226  E107               	bnz	u2671
  1317   001228  0E20               	movlw	32
  1318   00122A  5DCD               	subwf	main@month_day& (0+255),w,b
  1319   00122C  B0D8               	btfsc	status,0,c
  1320   00122E  EF1B  F009         	goto	u2671
  1321   001232  EF1D  F009         	goto	u2670
  1322   001236                     u2671:
  1323   001236  EF36  F009         	goto	l2670
  1324   00123A                     u2670:
  1325   00123A                     
  1326                           ; BSR set to: 0
  1327   00123A  51C5               	movf	main@changed& (0+255),w,b
  1328   00123C  11C6               	iorwf	(main@changed+1)& (0+255),w,b
  1329   00123E  A4D8               	btfss	status,2,c
  1330   001240  EF24  F009         	goto	u2681
  1331   001244  EF26  F009         	goto	u2680
  1332   001248                     u2681:
  1333   001248  EF36  F009         	goto	l2670
  1334   00124C                     u2680:
  1335   00124C                     
  1336                           ; BSR set to: 0
  1337                           ;../main.c: 101:             hour--;
  1338   00124C  07E3               	decf	_hour& (0+255),f,b
  1339   00124E  A0D8               	btfss	status,0,c
  1340   001250  07E4               	decf	(_hour+1)& (0+255),f,b
  1341   001252                     
  1342                           ; BSR set to: 0
  1343                           ;../main.c: 102:             LEDarray_disp_bin(hour);
  1344   001252  C0E3  F001         	movff	_hour,LEDarray_disp_bin@number
  1345   001256  C0E4  F002         	movff	_hour+1,LEDarray_disp_bin@number+1
  1346   00125A  EC5F  F010         	call	_LEDarray_disp_bin	;wreg free
  1347   00125E                     
  1348                           ;../main.c: 103:             changed = 1;
  1349   00125E  0E00               	movlw	0
  1350   001260  0100               	movlb	0	; () banked
  1351   001262  6FC6               	movwf	(main@changed+1)& (0+255),b
  1352   001264  0E01               	movlw	1
  1353   001266  6FC5               	movwf	main@changed& (0+255),b
  1354                           
  1355                           ;../main.c: 104:         }
  1356   001268  EF42  F007         	goto	l2570
  1357   00126C                     l2670:
  1358                           
  1359                           ; BSR set to: 0
  1360   00126C  05C9               	decf	main@day& (0+255),w,b
  1361   00126E  11CA               	iorwf	(main@day+1)& (0+255),w,b
  1362   001270  A4D8               	btfss	status,2,c
  1363   001272  EF3D  F009         	goto	u2691
  1364   001276  EF3F  F009         	goto	u2690
  1365   00127A                     u2691:
  1366   00127A  EF42  F007         	goto	l2570
  1367   00127E                     u2690:
  1368   00127E                     
  1369                           ; BSR set to: 0
  1370   00127E  0E0A               	movlw	10
  1371   001280  19CB               	xorwf	main@month& (0+255),w,b
  1372   001282  11CC               	iorwf	(main@month+1)& (0+255),w,b
  1373   001284  A4D8               	btfss	status,2,c
  1374   001286  EF47  F009         	goto	u2701
  1375   00128A  EF49  F009         	goto	u2700
  1376   00128E                     u2701:
  1377   00128E  EF42  F007         	goto	l2570
  1378   001292                     u2700:
  1379   001292                     
  1380                           ; BSR set to: 0
  1381   001292  0E02               	movlw	2
  1382   001294  19E3               	xorwf	_hour& (0+255),w,b
  1383   001296  11E4               	iorwf	(_hour+1)& (0+255),w,b
  1384   001298  A4D8               	btfss	status,2,c
  1385   00129A  EF51  F009         	goto	u2711
  1386   00129E  EF53  F009         	goto	u2710
  1387   0012A2                     u2711:
  1388   0012A2  EF42  F007         	goto	l2570
  1389   0012A6                     u2710:
  1390   0012A6                     
  1391                           ; BSR set to: 0
  1392   0012A6  51E1               	movf	_minute& (0+255),w,b
  1393   0012A8  11E2               	iorwf	(_minute+1)& (0+255),w,b
  1394   0012AA  A4D8               	btfss	status,2,c
  1395   0012AC  EF5A  F009         	goto	u2721
  1396   0012B0  EF5C  F009         	goto	u2720
  1397   0012B4                     u2721:
  1398   0012B4  EF42  F007         	goto	l2570
  1399   0012B8                     u2720:
  1400   0012B8                     
  1401                           ; BSR set to: 0
  1402   0012B8  51CE               	movf	(main@month_day+1)& (0+255),w,b
  1403   0012BA  E109               	bnz	u2730
  1404   0012BC  0E19               	movlw	25
  1405   0012BE  5DCD               	subwf	main@month_day& (0+255),w,b
  1406   0012C0  A0D8               	btfss	status,0,c
  1407   0012C2  EF65  F009         	goto	u2731
  1408   0012C6  EF67  F009         	goto	u2730
  1409   0012CA                     u2731:
  1410   0012CA  EF42  F007         	goto	l2570
  1411   0012CE                     u2730:
  1412   0012CE                     
  1413                           ; BSR set to: 0
  1414   0012CE  51CE               	movf	(main@month_day+1)& (0+255),w,b
  1415   0012D0  E107               	bnz	u2741
  1416   0012D2  0E20               	movlw	32
  1417   0012D4  5DCD               	subwf	main@month_day& (0+255),w,b
  1418   0012D6  B0D8               	btfsc	status,0,c
  1419   0012D8  EF70  F009         	goto	u2741
  1420   0012DC  EF72  F009         	goto	u2740
  1421   0012E0                     u2741:
  1422   0012E0  EF42  F007         	goto	l2570
  1423   0012E4                     u2740:
  1424   0012E4                     
  1425                           ; BSR set to: 0
  1426   0012E4  05C5               	decf	main@changed& (0+255),w,b
  1427   0012E6  11C6               	iorwf	(main@changed+1)& (0+255),w,b
  1428   0012E8  A4D8               	btfss	status,2,c
  1429   0012EA  EF79  F009         	goto	u2751
  1430   0012EE  EF7B  F009         	goto	u2750
  1431   0012F2                     u2751:
  1432   0012F2  EF42  F007         	goto	l2570
  1433   0012F6                     u2750:
  1434   0012F6                     
  1435                           ; BSR set to: 0
  1436   0012F6  0E00               	movlw	0
  1437   0012F8  6FC6               	movwf	(main@changed+1)& (0+255),b
  1438   0012FA  0E00               	movlw	0
  1439   0012FC  6FC5               	movwf	main@changed& (0+255),b
  1440   0012FE  EF42  F007         	goto	l2570
  1441   001302  EF63  F000         	goto	start
  1442   001306                     __end_of_main:
  1443                           	callstack 0
  1444                           
  1445 ;; *************** function _sprintf *****************
  1446 ;; Defined at:
  1447 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1450 ;;		 -> main@yearstr(20), main@datestr(50), 
  1451 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1452 ;;		 -> STR_4(12), STR_3(18), STR_2(6), STR_1(16), 
  1453 ;; Auto vars:     Size  Location     Type
  1454 ;;  f              11   14[BANK0 ] struct _IO_FILE
  1455 ;;  ap              2   12[BANK0 ] PTR void [1]
  1456 ;;		 -> ?_sprintf(2), 
  1457 ;;  ret             2    0        int 
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  2    0[BANK0 ] int 
  1460 ;; Registers used:
  1461 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1467 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1468 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1470 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1471 ;;Total ram usage:       25 bytes
  1472 ;; Hardware stack levels used: 1
  1473 ;; Hardware stack levels required when called: 8
  1474 ;; This function calls:
  1475 ;;		_vfprintf
  1476 ;; This function is called by:
  1477 ;;		_main
  1478 ;;		_ADC2String
  1479 ;;		_LDR2String
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           
  1483                           	psect	text1
  1484   002406                     __ptext1:
  1485                           	callstack 0
  1486   002406                     _sprintf:
  1487                           	callstack 22
  1488   002406  0E64               	movlw	low (?_sprintf+4)
  1489   002408  0100               	movlb	0	; () banked
  1490   00240A  6F6C               	movwf	sprintf@ap& (0+255),b
  1491   00240C  0E00               	movlw	high (?_sprintf+4)
  1492   00240E  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  1493   002410  C060  F06E         	movff	sprintf@s,sprintf@f
  1494   002414  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  1495   002418                     
  1496                           ; BSR set to: 0
  1497   002418  0E00               	movlw	0
  1498   00241A  6F72               	movwf	(sprintf@f+4)& (0+255),b
  1499   00241C  0E00               	movlw	0
  1500   00241E  6F71               	movwf	(sprintf@f+3)& (0+255),b
  1501   002420                     
  1502                           ; BSR set to: 0
  1503   002420  0E00               	movlw	0
  1504   002422  6F78               	movwf	(sprintf@f+10)& (0+255),b
  1505   002424  0E00               	movlw	0
  1506   002426  6F77               	movwf	(sprintf@f+9)& (0+255),b
  1507   002428                     
  1508                           ; BSR set to: 0
  1509   002428  0E6E               	movlw	low sprintf@f
  1510   00242A  6E54               	movwf	vfprintf@fp^0,c
  1511   00242C  0E00               	movlw	high sprintf@f
  1512   00242E  6E55               	movwf	(vfprintf@fp+1)^0,c
  1513   002430  C062  F056         	movff	sprintf@fmt,vfprintf@fmt
  1514   002434  C063  F057         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1515   002438  0E6C               	movlw	low sprintf@ap
  1516   00243A  6E58               	movwf	vfprintf@ap^0,c
  1517   00243C  0E00               	movlw	high sprintf@ap
  1518   00243E  6E59               	movwf	(vfprintf@ap+1)^0,c
  1519   002440  EC2C  F012         	call	_vfprintf	;wreg free
  1520   002444  0100               	movlb	0	; () banked
  1521   002446  5171               	movf	(sprintf@f+3)& (0+255),w,b
  1522   002448  2560               	addwf	sprintf@s& (0+255),w,b
  1523   00244A  6ED9               	movwf	fsr2l,c
  1524   00244C  5172               	movf	(sprintf@f+4)& (0+255),w,b
  1525   00244E  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  1526   002450  6EDA               	movwf	fsr2h,c
  1527   002452  0E00               	movlw	0
  1528   002454  6EDF               	movwf	indf2,c
  1529   002456                     
  1530                           ; BSR set to: 0
  1531   002456  0012               	return		;funcret
  1532   002458                     __end_of_sprintf:
  1533                           	callstack 0
  1534                           
  1535 ;; *************** function _vfprintf *****************
  1536 ;; Defined at:
  1537 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;  fp              2   83[COMRAM] PTR struct _IO_FILE
  1540 ;;		 -> sprintf@f(11), 
  1541 ;;  fmt             2   85[COMRAM] PTR const unsigned char 
  1542 ;;		 -> STR_4(12), STR_3(18), STR_2(6), STR_1(16), 
  1543 ;;  ap              2   87[COMRAM] PTR PTR void 
  1544 ;;		 -> sprintf@ap(2), 
  1545 ;; Auto vars:     Size  Location     Type
  1546 ;;  cfmt            2   89[COMRAM] PTR unsigned char 
  1547 ;;		 -> STR_4(12), STR_3(18), STR_2(6), STR_1(16), 
  1548 ;; Return value:  Size  Location     Type
  1549 ;;                  2   83[COMRAM] int 
  1550 ;; Registers used:
  1551 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1557 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1558 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1560 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1561 ;;Total ram usage:        8 bytes
  1562 ;; Hardware stack levels used: 1
  1563 ;; Hardware stack levels required when called: 7
  1564 ;; This function calls:
  1565 ;;		_vfpfcnvrt
  1566 ;; This function is called by:
  1567 ;;		_sprintf
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571                           	psect	text2
  1572   002458                     __ptext2:
  1573                           	callstack 0
  1574   002458                     _vfprintf:
  1575                           	callstack 22
  1576   002458                     
  1577                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1578   002458  C056  F05A         	movff	vfprintf@fmt,vfprintf@cfmt
  1579   00245C  C057  F05B         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1580                           
  1581                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1582   002460  EF40  F012         	goto	l2318
  1583   002464                     l2316:
  1584                           
  1585                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1586   002464  C054  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  1587   002468  C055  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1588   00246C  0E5A               	movlw	low vfprintf@cfmt
  1589   00246E  6E41               	movwf	vfpfcnvrt@fmt^0,c
  1590   002470  0E00               	movlw	high vfprintf@cfmt
  1591   002472  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1592   002474  C058  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  1593   002478  C059  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1594   00247C  EC1E  F00B         	call	_vfpfcnvrt	;wreg free
  1595   002480                     l2318:
  1596                           
  1597                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1598   002480  C05A  FFF6         	movff	vfprintf@cfmt,tblptrl
  1599   002484  C05B  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1600   002488                     	if	0	;tblptru may be non-zero
  1601   002488                     	endif
  1602   002488                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1603   002488  0E00               	movlw	low (__mediumconst shr (0+16))
  1604   00248A  6EF8               	movwf	tblptru,c
  1605   00248C                     	endif
  1606   00248C  0008               	tblrd		*
  1607   00248E  50F5               	movf	tablat,w,c
  1608   002490  0900               	iorlw	0
  1609   002492  A4D8               	btfss	status,2,c
  1610   002494  EF4E  F012         	goto	u1981
  1611   002498  EF50  F012         	goto	u1980
  1612   00249C                     u1981:
  1613   00249C  EF32  F012         	goto	l2316
  1614   0024A0                     u1980:
  1615   0024A0                     
  1616                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1617   0024A0  0E00               	movlw	0
  1618   0024A2  6E55               	movwf	(?_vfprintf+1)^0,c
  1619   0024A4  0E00               	movlw	0
  1620   0024A6  6E54               	movwf	?_vfprintf^0,c
  1621   0024A8  0012               	return		;funcret
  1622   0024AA                     __end_of_vfprintf:
  1623                           	callstack 0
  1624                           
  1625 ;; *************** function _vfpfcnvrt *****************
  1626 ;; Defined at:
  1627 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  1630 ;;		 -> sprintf@f(11), 
  1631 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  1632 ;;		 -> vfprintf@cfmt(2), 
  1633 ;;  ap              2   66[COMRAM] PTR PTR void 
  1634 ;;		 -> sprintf@ap(2), 
  1635 ;; Auto vars:     Size  Location     Type
  1636 ;;  convarg         8   71[COMRAM] struct .
  1637 ;;  cp              2   81[COMRAM] PTR unsigned char 
  1638 ;;		 -> STR_4(12), STR_3(18), STR_2(6), STR_1(16), 
  1639 ;;  done            2   79[COMRAM] int 
  1640 ;;  i               2    0        int 
  1641 ;;  c               1    0        unsigned char 
  1642 ;; Return value:  Size  Location     Type
  1643 ;;                  1    wreg      void 
  1644 ;; Registers used:
  1645 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1646 ;; Tracked objects:
  1647 ;;		On entry : 0/0
  1648 ;;		On exit  : 0/0
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1651 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1652 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1653 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1654 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1655 ;;Total ram usage:       21 bytes
  1656 ;; Hardware stack levels used: 1
  1657 ;; Hardware stack levels required when called: 6
  1658 ;; This function calls:
  1659 ;;		_atoi
  1660 ;;		_dtoa
  1661 ;;		_fputc
  1662 ;;		_isdigit
  1663 ;; This function is called by:
  1664 ;;		_vfprintf
  1665 ;; This function uses a non-reentrant model
  1666 ;;
  1667                           
  1668                           	psect	text3
  1669   00163C                     __ptext3:
  1670                           	callstack 0
  1671   00163C                     _vfpfcnvrt:
  1672                           	callstack 22
  1673   00163C                     
  1674                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1675   00163C  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1676   001640  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1677   001644  CFDE FFF6          	movff	postinc2,tblptrl
  1678   001648  CFDD FFF7          	movff	postdec2,tblptrh
  1679   00164C                     	if	0	;tblptru may be non-zero
  1680   00164C                     	endif
  1681   00164C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1682   00164C  0E00               	movlw	low (__mediumconst shr (0+16))
  1683   00164E  6EF8               	movwf	tblptru,c
  1684   001650                     	endif
  1685   001650  0008               	tblrd		*
  1686   001652  50F5               	movf	tablat,w,c
  1687   001654  0A25               	xorlw	37
  1688   001656  A4D8               	btfss	status,2,c
  1689   001658  EF30  F00B         	goto	u1871
  1690   00165C  EF32  F00B         	goto	u1870
  1691   001660                     u1871:
  1692   001660  EF64  F00C         	goto	l2274
  1693   001664                     u1870:
  1694   001664                     
  1695                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1696   001664  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1697   001668  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1698   00166C  2ADE               	incf	postinc2,f,c
  1699   00166E  0E00               	movlw	0
  1700   001670  22DD               	addwfc	postdec2,f,c
  1701   001672                     
  1702                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1703   001672  0E00               	movlw	0
  1704   001674  0100               	movlb	0	; () banked
  1705   001676  6FD0               	movwf	(_width+1)& (0+255),b
  1706   001678  0E00               	movlw	0
  1707   00167A  6FCF               	movwf	_width& (0+255),b
  1708   00167C  C0CF  F05E         	movff	_width,_flags
  1709   001680                     
  1710                           ; BSR set to: 0
  1711                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1712   001680  685C               	setf	_prec^0,c
  1713   001682  685D               	setf	(_prec+1)^0,c
  1714   001684                     
  1715                           ; BSR set to: 0
  1716                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  1717   001684  0E00               	movlw	0
  1718   001686  6E51               	movwf	(vfpfcnvrt@done+1)^0,c
  1719   001688  0E00               	movlw	0
  1720   00168A  6E50               	movwf	vfpfcnvrt@done^0,c
  1721                           
  1722                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  1723   00168C  EF74  F00B         	goto	l2240
  1724   001690                     l2230:
  1725                           
  1726                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  1727   001690  825E               	bsf	_flags^0,1,c
  1728   001692                     
  1729                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  1730   001692  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1731   001696  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1732   00169A  2ADE               	incf	postinc2,f,c
  1733   00169C  0E00               	movlw	0
  1734   00169E  22DD               	addwfc	postdec2,f,c
  1735                           
  1736                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  1737   0016A0  EF74  F00B         	goto	l2240
  1738   0016A4                     l2234:
  1739                           
  1740                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  1741   0016A4  0E00               	movlw	0
  1742   0016A6  6E51               	movwf	(vfpfcnvrt@done+1)^0,c
  1743   0016A8  0E01               	movlw	1
  1744   0016AA  6E50               	movwf	vfpfcnvrt@done^0,c
  1745                           
  1746                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  1747   0016AC  EF74  F00B         	goto	l2240
  1748   0016B0                     l2238:
  1749   0016B0  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1750   0016B4  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1751   0016B8  CFDE FFF6          	movff	postinc2,tblptrl
  1752   0016BC  CFDD FFF7          	movff	postdec2,tblptrh
  1753   0016C0                     	if	0	;tblptru may be non-zero
  1754   0016C0                     	endif
  1755   0016C0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1756   0016C0  0E00               	movlw	low (__mediumconst shr (0+16))
  1757   0016C2  6EF8               	movwf	tblptru,c
  1758   0016C4                     	endif
  1759   0016C4  0008               	tblrd		*
  1760   0016C6  50F5               	movf	tablat,w,c
  1761   0016C8  6E45               	movwf	??_vfpfcnvrt^0,c
  1762   0016CA  6A46               	clrf	(??_vfpfcnvrt+1)^0,c
  1763                           
  1764                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1765                           ; Switch size 1, requested type "simple"
  1766                           ; Number of cases is 1, Range of values is 0 to 0
  1767                           ; switch strategies available:
  1768                           ; Name         Instructions Cycles
  1769                           ; simple_byte            4     3 (average)
  1770                           ;	Chosen strategy is simple_byte
  1771   0016CC  5046               	movf	(??_vfpfcnvrt+1)^0,w,c
  1772   0016CE  0A00               	xorlw	0	; case 0
  1773   0016D0  B4D8               	btfsc	status,2,c
  1774   0016D2  EF6D  F00B         	goto	l2736
  1775   0016D6  EF52  F00B         	goto	l2234
  1776   0016DA                     l2736:
  1777                           
  1778                           ; Switch size 1, requested type "simple"
  1779                           ; Number of cases is 1, Range of values is 48 to 48
  1780                           ; switch strategies available:
  1781                           ; Name         Instructions Cycles
  1782                           ; simple_byte            4     3 (average)
  1783                           ;	Chosen strategy is simple_byte
  1784   0016DA  5045               	movf	??_vfpfcnvrt^0,w,c
  1785   0016DC  0A30               	xorlw	48	; case 48
  1786   0016DE  B4D8               	btfsc	status,2,c
  1787   0016E0  EF48  F00B         	goto	l2230
  1788   0016E4  EF52  F00B         	goto	l2234
  1789   0016E8                     l2240:
  1790                           
  1791                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  1792   0016E8  5050               	movf	vfpfcnvrt@done^0,w,c
  1793   0016EA  1051               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  1794   0016EC  B4D8               	btfsc	status,2,c
  1795   0016EE  EF7B  F00B         	goto	u1881
  1796   0016F2  EF7D  F00B         	goto	u1880
  1797   0016F6                     u1881:
  1798   0016F6  EF58  F00B         	goto	l2238
  1799   0016FA                     u1880:
  1800   0016FA                     
  1801                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1074:         if 
      +                          ((*fmt)[0] == '*') {
  1802   0016FA  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1803   0016FE  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1804   001702  CFDE FFF6          	movff	postinc2,tblptrl
  1805   001706  CFDD FFF7          	movff	postdec2,tblptrh
  1806   00170A                     	if	0	;tblptru may be non-zero
  1807   00170A                     	endif
  1808   00170A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1809   00170A  0E00               	movlw	low (__mediumconst shr (0+16))
  1810   00170C  6EF8               	movwf	tblptru,c
  1811   00170E                     	endif
  1812   00170E  0008               	tblrd		*
  1813   001710  50F5               	movf	tablat,w,c
  1814   001712  0A2A               	xorlw	42
  1815   001714  A4D8               	btfss	status,2,c
  1816   001716  EF8F  F00B         	goto	u1891
  1817   00171A  EF91  F00B         	goto	u1890
  1818   00171E                     u1891:
  1819   00171E  EFBB  F00B         	goto	l2250
  1820   001722                     u1890:
  1821   001722                     
  1822                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1075:            
      +                           ++*fmt;
  1823   001722  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1824   001726  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1825   00172A  2ADE               	incf	postinc2,f,c
  1826   00172C  0E00               	movlw	0
  1827   00172E  22DD               	addwfc	postdec2,f,c
  1828                           
  1829                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1076:            
      +                           width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1830   001730  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1831   001734  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1832   001738  CFDF F045          	movff	indf2,??_vfpfcnvrt
  1833   00173C  0E02               	movlw	2
  1834   00173E  26DE               	addwf	postinc2,f,c
  1835   001740  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  1836   001744  0E00               	movlw	0
  1837   001746  22DD               	addwfc	postdec2,f,c
  1838   001748  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1839   00174C  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1840   001750  CFDE F0CF          	movff	postinc2,_width
  1841   001754  CFDD F0D0          	movff	postdec2,_width+1
  1842   001758                     
  1843                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1077:            
      +                           if (width < 0) {
  1844   001758  0100               	movlb	0	; () banked
  1845   00175A  BFD0               	btfsc	(_width+1)& (0+255),7,b
  1846   00175C  EFB4  F00B         	goto	u1900
  1847   001760  EFB2  F00B         	goto	u1901
  1848   001764                     u1901:
  1849   001764  EFF0  F00B         	goto	l2258
  1850   001768                     u1900:
  1851   001768                     
  1852                           ; BSR set to: 0
  1853                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1078:            
      +                               flags |= (1 << 0);
  1854   001768  805E               	bsf	_flags^0,0,c
  1855                           
  1856                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1079:            
      +                               width = -width;
  1857   00176A  6DCF               	negf	_width& (0+255),b
  1858   00176C  1FD0               	comf	(_width+1)& (0+255),f,b
  1859   00176E  B0D8               	btfsc	status,0,c
  1860   001770  2BD0               	incf	(_width+1)& (0+255),f,b
  1861   001772  EFF0  F00B         	goto	l2258
  1862   001776                     l2250:
  1863                           
  1864                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1082:            
      +                           width = atoi(*fmt);
  1865   001776  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1866   00177A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1867   00177E  CFDE F007          	movff	postinc2,atoi@s
  1868   001782  CFDD F008          	movff	postdec2,atoi@s+1
  1869   001786  EC4B  F00F         	call	_atoi	;wreg free
  1870   00178A  C007  F0CF         	movff	?_atoi,_width
  1871   00178E  C008  F0D0         	movff	?_atoi+1,_width+1
  1872                           
  1873                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1083:            
      +                           while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1874   001792  EFD2  F00B         	goto	l2256
  1875   001796                     l2252:
  1876                           
  1877                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1084:            
      +                               ++*fmt;
  1878   001796  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1879   00179A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1880   00179E  2ADE               	incf	postinc2,f,c
  1881   0017A0  0E00               	movlw	0
  1882   0017A2  22DD               	addwfc	postdec2,f,c
  1883   0017A4                     l2256:
  1884   0017A4  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1885   0017A8  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1886   0017AC  CFDE FFF6          	movff	postinc2,tblptrl
  1887   0017B0  CFDD FFF7          	movff	postdec2,tblptrh
  1888   0017B4                     	if	0	;tblptru may be non-zero
  1889   0017B4                     	endif
  1890   0017B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1891   0017B4  0E00               	movlw	low (__mediumconst shr (0+16))
  1892   0017B6  6EF8               	movwf	tblptru,c
  1893   0017B8                     	endif
  1894   0017B8  0008               	tblrd		*
  1895   0017BA  CFF5 F045          	movff	tablat,??_vfpfcnvrt
  1896   0017BE  0ED0               	movlw	208
  1897   0017C0  2445               	addwf	??_vfpfcnvrt^0,w,c
  1898   0017C2  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  1899   0017C4  6A47               	clrf	(??_vfpfcnvrt+2)^0,c
  1900   0017C6  0EFF               	movlw	255
  1901   0017C8  2247               	addwfc	(??_vfpfcnvrt+2)^0,f,c
  1902   0017CA  5047               	movf	(??_vfpfcnvrt+2)^0,w,c
  1903   0017CC  E109               	bnz	u1910
  1904   0017CE  0E0A               	movlw	10
  1905   0017D0  5C46               	subwf	(??_vfpfcnvrt+1)^0,w,c
  1906   0017D2  A0D8               	btfss	status,0,c
  1907   0017D4  EFEE  F00B         	goto	u1911
  1908   0017D8  EFF0  F00B         	goto	u1910
  1909   0017DC                     u1911:
  1910   0017DC  EFCB  F00B         	goto	l2252
  1911   0017E0                     u1910:
  1912   0017E0                     l2258:
  1913                           
  1914                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1915   0017E0  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1916   0017E4  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1917   0017E8  CFDE F052          	movff	postinc2,vfpfcnvrt@cp
  1918   0017EC  CFDD F053          	movff	postdec2,vfpfcnvrt@cp+1
  1919   0017F0                     
  1920                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1921   0017F0  C052  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1922   0017F4  C053  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1923   0017F8                     	if	0	;tblptru may be non-zero
  1924   0017F8                     	endif
  1925   0017F8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1926   0017F8  0E00               	movlw	low (__mediumconst shr (0+16))
  1927   0017FA  6EF8               	movwf	tblptru,c
  1928   0017FC                     	endif
  1929   0017FC  0008               	tblrd		*
  1930   0017FE  50F5               	movf	tablat,w,c
  1931   001800  0A64               	xorlw	100
  1932   001802  B4D8               	btfsc	status,2,c
  1933   001804  EF06  F00C         	goto	u1921
  1934   001808  EF08  F00C         	goto	u1920
  1935   00180C                     u1921:
  1936   00180C  EF18  F00C         	goto	l2264
  1937   001810                     u1920:
  1938   001810  C052  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1939   001814  C053  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1940   001818                     	if	0	;tblptru may be non-zero
  1941   001818                     	endif
  1942   001818                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1943   001818  0E00               	movlw	low (__mediumconst shr (0+16))
  1944   00181A  6EF8               	movwf	tblptru,c
  1945   00181C                     	endif
  1946   00181C  0008               	tblrd		*
  1947   00181E  50F5               	movf	tablat,w,c
  1948   001820  0A69               	xorlw	105
  1949   001822  A4D8               	btfss	status,2,c
  1950   001824  EF16  F00C         	goto	u1931
  1951   001828  EF18  F00C         	goto	u1930
  1952   00182C                     u1931:
  1953   00182C  EF5B  F00C         	goto	l2270
  1954   001830                     u1930:
  1955   001830                     l2264:
  1956                           
  1957                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1958   001830  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1959   001834  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1960   001838  CFDF F045          	movff	indf2,??_vfpfcnvrt
  1961   00183C  0E02               	movlw	2
  1962   00183E  26DE               	addwf	postinc2,f,c
  1963   001840  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  1964   001844  0E00               	movlw	0
  1965   001846  22DD               	addwfc	postdec2,f,c
  1966   001848  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1967   00184C  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1968   001850  CFDE F048          	movff	postinc2,vfpfcnvrt@convarg
  1969   001854  CFDD F049          	movff	postdec2,vfpfcnvrt@convarg+1
  1970   001858  0E00               	movlw	0
  1971   00185A  BE49               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1972   00185C  0EFF               	movlw	-1
  1973   00185E  6E4A               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1974   001860  6E4B               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1975   001862  6E4C               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1976   001864  6E4D               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1977   001866  6E4E               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1978   001868  6E4F               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1979                           
  1980                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1981   00186A  0E01               	movlw	1
  1982   00186C  2452               	addwf	vfpfcnvrt@cp^0,w,c
  1983   00186E  6E45               	movwf	??_vfpfcnvrt^0,c
  1984   001870  0E00               	movlw	0
  1985   001872  2053               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1986   001874  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  1987   001876  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1988   00187A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1989   00187E  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  1990   001882  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1991   001886                     
  1992                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1993   001886  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1994   00188A  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1995   00188E  C048  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  1996   001892  C049  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1997   001896  C04A  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1998   00189A  C04B  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1999   00189E  C04C  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2000   0018A2  C04D  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2001   0018A6  C04E  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2002   0018AA  C04F  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2003   0018AE  EC7B  F00C         	call	_dtoa	;wreg free
  2004   0018B2  EF7A  F00C         	goto	l1073
  2005   0018B6                     l2270:
  2006                           
  2007                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2008   0018B6  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2009   0018BA  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2010   0018BE  2ADE               	incf	postinc2,f,c
  2011   0018C0  0E00               	movlw	0
  2012   0018C2  22DD               	addwfc	postdec2,f,c
  2013   0018C4  EF7A  F00C         	goto	l1073
  2014   0018C8                     l2274:
  2015                           
  2016                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2017   0018C8  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2018   0018CC  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2019   0018D0  CFDE FFF6          	movff	postinc2,tblptrl
  2020   0018D4  CFDD FFF7          	movff	postdec2,tblptrh
  2021   0018D8                     	if	0	;tblptru may be non-zero
  2022   0018D8                     	endif
  2023   0018D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2024   0018D8  0E00               	movlw	low (__mediumconst shr (0+16))
  2025   0018DA  6EF8               	movwf	tblptru,c
  2026   0018DC                     	endif
  2027   0018DC  0008               	tblrd		*
  2028   0018DE  50F5               	movf	tablat,w,c
  2029   0018E0  6E01               	movwf	fputc@c^0,c
  2030   0018E2  6A02               	clrf	(fputc@c+1)^0,c
  2031   0018E4  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2032   0018E8  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2033   0018EC  ECFA  F00F         	call	_fputc	;wreg free
  2034   0018F0  EF5B  F00C         	goto	l2270
  2035   0018F4                     l1073:
  2036   0018F4  0012               	return		;funcret
  2037   0018F6                     __end_of_vfpfcnvrt:
  2038                           	callstack 0
  2039                           
  2040 ;; *************** function _dtoa *****************
  2041 ;; Defined at:
  2042 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2045 ;;		 -> sprintf@f(11), 
  2046 ;;  d               8   29[COMRAM] long long 
  2047 ;; Auto vars:     Size  Location     Type
  2048 ;;  n               8   51[COMRAM] long long 
  2049 ;;  i               2   59[COMRAM] int 
  2050 ;;  w               2   49[COMRAM] int 
  2051 ;;  p               2   47[COMRAM] int 
  2052 ;;  s               1   61[COMRAM] unsigned char 
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  1    wreg      void 
  2055 ;; Registers used:
  2056 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2062 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2063 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2064 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2065 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2066 ;;Total ram usage:       35 bytes
  2067 ;; Hardware stack levels used: 1
  2068 ;; Hardware stack levels required when called: 5
  2069 ;; This function calls:
  2070 ;;		___aodiv
  2071 ;;		___aomod
  2072 ;;		_abs
  2073 ;;		_pad
  2074 ;; This function is called by:
  2075 ;;		_vfpfcnvrt
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079                           	psect	text4
  2080   0018F6                     __ptext4:
  2081                           	callstack 0
  2082   0018F6                     _dtoa:
  2083                           	callstack 22
  2084   0018F6                     
  2085                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  2086   0018F6  C01E  F034         	movff	dtoa@d,dtoa@n
  2087   0018FA  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  2088   0018FE  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  2089   001902  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  2090   001906  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  2091   00190A  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  2092   00190E  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  2093   001912  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  2094   001916                     
  2095                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  2096   001916  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  2097   001918  EF90  F00C         	goto	u1661
  2098   00191C  EF93  F00C         	goto	u1660
  2099   001920                     u1661:
  2100   001920  0E01               	movlw	1
  2101   001922  EF94  F00C         	goto	u1670
  2102   001926                     u1660:
  2103   001926  0E00               	movlw	0
  2104   001928                     u1670:
  2105   001928  6E3E               	movwf	dtoa@s^0,c
  2106   00192A                     
  2107                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  2108   00192A  503E               	movf	dtoa@s^0,w,c
  2109   00192C  B4D8               	btfsc	status,2,c
  2110   00192E  EF9B  F00C         	goto	u1681
  2111   001932  EF9D  F00C         	goto	u1680
  2112   001936                     u1681:
  2113   001936  EFAD  F00C         	goto	l2116
  2114   00193A                     u1680:
  2115   00193A                     
  2116                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  2117   00193A  1E3B               	comf	(dtoa@n+7)^0,f,c
  2118   00193C  1E3A               	comf	(dtoa@n+6)^0,f,c
  2119   00193E  1E39               	comf	(dtoa@n+5)^0,f,c
  2120   001940  1E38               	comf	(dtoa@n+4)^0,f,c
  2121   001942  1E37               	comf	(dtoa@n+3)^0,f,c
  2122   001944  1E36               	comf	(dtoa@n+2)^0,f,c
  2123   001946  1E35               	comf	(dtoa@n+1)^0,f,c
  2124   001948  6C34               	negf	dtoa@n^0,c
  2125   00194A  0E00               	movlw	0
  2126   00194C  2235               	addwfc	(dtoa@n+1)^0,f,c
  2127   00194E  2236               	addwfc	(dtoa@n+2)^0,f,c
  2128   001950  2237               	addwfc	(dtoa@n+3)^0,f,c
  2129   001952  2238               	addwfc	(dtoa@n+4)^0,f,c
  2130   001954  2239               	addwfc	(dtoa@n+5)^0,f,c
  2131   001956  223A               	addwfc	(dtoa@n+6)^0,f,c
  2132   001958  223B               	addwfc	(dtoa@n+7)^0,f,c
  2133   00195A                     l2116:
  2134                           
  2135                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 458:     if (!(pr
      +                          ec < 0)) {
  2136   00195A  BE5D               	btfsc	(_prec+1)^0,7,c
  2137   00195C  EFB2  F00C         	goto	u1691
  2138   001960  EFB4  F00C         	goto	u1690
  2139   001964                     u1691:
  2140   001964  EFB5  F00C         	goto	l2120
  2141   001968                     u1690:
  2142   001968                     
  2143                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 459:         flag
      +                          s &= ~(1 << 1);
  2144   001968  925E               	bcf	_flags^0,1,c
  2145   00196A                     l2120:
  2146                           
  2147                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  2148   00196A  BE5D               	btfsc	(_prec+1)^0,7,c
  2149   00196C  EFC2  F00C         	goto	u1700
  2150   001970  505D               	movf	(_prec+1)^0,w,c
  2151   001972  E106               	bnz	u1701
  2152   001974  045C               	decf	_prec^0,w,c
  2153   001976  B0D8               	btfsc	status,0,c
  2154   001978  EFC0  F00C         	goto	u1701
  2155   00197C  EFC2  F00C         	goto	u1700
  2156   001980                     u1701:
  2157   001980  EFC8  F00C         	goto	l1035
  2158   001984                     u1700:
  2159   001984  0E00               	movlw	0
  2160   001986  6E31               	movwf	(dtoa@p+1)^0,c
  2161   001988  0E01               	movlw	1
  2162   00198A  6E30               	movwf	dtoa@p^0,c
  2163   00198C  EFCC  F00C         	goto	l1037
  2164   001990                     l1035:
  2165   001990  C05C  F030         	movff	_prec,dtoa@p
  2166   001994  C05D  F031         	movff	_prec+1,dtoa@p+1
  2167   001998                     l1037:
  2168                           
  2169                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  2170   001998  C0CF  F032         	movff	_width,dtoa@w
  2171   00199C  C0D0  F033         	movff	_width+1,dtoa@w+1
  2172   0019A0                     
  2173                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  2174   0019A0  503E               	movf	dtoa@s^0,w,c
  2175   0019A2  B4D8               	btfsc	status,2,c
  2176   0019A4  EFD6  F00C         	goto	u1711
  2177   0019A8  EFD8  F00C         	goto	u1710
  2178   0019AC                     u1711:
  2179   0019AC  EFEF  F00C         	goto	l1038
  2180   0019B0                     u1710:
  2181   0019B0                     
  2182                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  2183   0019B0  0632               	decf	dtoa@w^0,f,c
  2184   0019B2  A0D8               	btfss	status,0,c
  2185   0019B4  0633               	decf	(dtoa@w+1)^0,f,c
  2186   0019B6                     
  2187                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  2188   0019B6  503E               	movf	dtoa@s^0,w,c
  2189   0019B8  A4D8               	btfss	status,2,c
  2190   0019BA  EFE1  F00C         	goto	u1721
  2191   0019BE  EFE3  F00C         	goto	u1720
  2192   0019C2                     u1721:
  2193   0019C2  EFE9  F00C         	goto	l2132
  2194   0019C6                     u1720:
  2195   0019C6  0E00               	movlw	0
  2196   0019C8  6E2F               	movwf	(_dtoa$1885+1)^0,c
  2197   0019CA  0E2B               	movlw	43
  2198   0019CC  6E2E               	movwf	_dtoa$1885^0,c
  2199   0019CE  EFED  F00C         	goto	l2134
  2200   0019D2                     l2132:
  2201   0019D2  0E00               	movlw	0
  2202   0019D4  6E2F               	movwf	(_dtoa$1885+1)^0,c
  2203   0019D6  0E2D               	movlw	45
  2204   0019D8  6E2E               	movwf	_dtoa$1885^0,c
  2205   0019DA                     l2134:
  2206   0019DA  C02E  F03E         	movff	_dtoa$1885,dtoa@s
  2207   0019DE                     l1038:
  2208                           
  2209                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  2210   0019DE  0E00               	movlw	0
  2211   0019E0  6E3D               	movwf	(dtoa@i+1)^0,c
  2212   0019E2  0E1F               	movlw	31
  2213   0019E4  6E3C               	movwf	dtoa@i^0,c
  2214   0019E6                     
  2215                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  2216   0019E6  0E00               	movlw	0
  2217   0019E8  0101               	movlb	1	; () banked
  2218   0019EA  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2219                           
  2220                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2221   0019EC  EF74  F00D         	goto	l2148
  2222   0019F0                     l2138:
  2223                           
  2224                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  2225   0019F0  063C               	decf	dtoa@i^0,f,c
  2226   0019F2  A0D8               	btfss	status,0,c
  2227   0019F4  063D               	decf	(dtoa@i+1)^0,f,c
  2228   0019F6                     
  2229                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2230   0019F6  0E00               	movlw	low _dbuf
  2231   0019F8  243C               	addwf	dtoa@i^0,w,c
  2232   0019FA  6ED9               	movwf	fsr2l,c
  2233   0019FC  0E01               	movlw	high _dbuf
  2234   0019FE  203D               	addwfc	(dtoa@i+1)^0,w,c
  2235   001A00  6EDA               	movwf	fsr2h,c
  2236   001A02  C034  F001         	movff	dtoa@n,___aomod@dividend
  2237   001A06  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2238   001A0A  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2239   001A0E  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2240   001A12  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2241   001A16  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2242   001A1A  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2243   001A1E  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2244   001A22  0E0A               	movlw	10
  2245   001A24  6E09               	movwf	___aomod@divisor^0,c
  2246   001A26  0E00               	movlw	0
  2247   001A28  6E0A               	movwf	(___aomod@divisor+1)^0,c
  2248   001A2A  0E00               	movlw	0
  2249   001A2C  6E0B               	movwf	(___aomod@divisor+2)^0,c
  2250   001A2E  0E00               	movlw	0
  2251   001A30  6E0C               	movwf	(___aomod@divisor+3)^0,c
  2252   001A32  0E00               	movlw	0
  2253   001A34  6E0D               	movwf	(___aomod@divisor+4)^0,c
  2254   001A36  0E00               	movlw	0
  2255   001A38  6E0E               	movwf	(___aomod@divisor+5)^0,c
  2256   001A3A  0E00               	movlw	0
  2257   001A3C  6E0F               	movwf	(___aomod@divisor+6)^0,c
  2258   001A3E  0E00               	movlw	0
  2259   001A40  6E10               	movwf	(___aomod@divisor+7)^0,c
  2260   001A42  EC99  F00E         	call	___aomod	;wreg free
  2261   001A46  C001  F026         	movff	?___aomod,??_dtoa
  2262   001A4A  C002  F027         	movff	?___aomod+1,??_dtoa+1
  2263   001A4E  C003  F028         	movff	?___aomod+2,??_dtoa+2
  2264   001A52  C004  F029         	movff	?___aomod+3,??_dtoa+3
  2265   001A56  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  2266   001A5A  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  2267   001A5E  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  2268   001A62  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  2269   001A66  C026  F013         	movff	??_dtoa,abs@a
  2270   001A6A  C027  F014         	movff	??_dtoa+1,abs@a+1
  2271   001A6E  ECBE  F012         	call	_abs	;wreg free
  2272   001A72  5013               	movf	?_abs^0,w,c
  2273   001A74  0F30               	addlw	48
  2274   001A76  6EDF               	movwf	indf2,c
  2275   001A78                     
  2276                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  2277   001A78  0630               	decf	dtoa@p^0,f,c
  2278   001A7A  A0D8               	btfss	status,0,c
  2279   001A7C  0631               	decf	(dtoa@p+1)^0,f,c
  2280   001A7E                     
  2281                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  2282   001A7E  0632               	decf	dtoa@w^0,f,c
  2283   001A80  A0D8               	btfss	status,0,c
  2284   001A82  0633               	decf	(dtoa@w+1)^0,f,c
  2285   001A84                     
  2286                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  2287   001A84  C034  F001         	movff	dtoa@n,___aodiv@dividend
  2288   001A88  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2289   001A8C  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2290   001A90  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2291   001A94  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2292   001A98  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2293   001A9C  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2294   001AA0  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2295   001AA4  0E0A               	movlw	10
  2296   001AA6  6E09               	movwf	___aodiv@divisor^0,c
  2297   001AA8  0E00               	movlw	0
  2298   001AAA  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2299   001AAC  0E00               	movlw	0
  2300   001AAE  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2301   001AB0  0E00               	movlw	0
  2302   001AB2  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2303   001AB4  0E00               	movlw	0
  2304   001AB6  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2305   001AB8  0E00               	movlw	0
  2306   001ABA  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2307   001ABC  0E00               	movlw	0
  2308   001ABE  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2309   001AC0  0E00               	movlw	0
  2310   001AC2  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2311   001AC4  ECD5  F00D         	call	___aodiv	;wreg free
  2312   001AC8  C001  F034         	movff	?___aodiv,dtoa@n
  2313   001ACC  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  2314   001AD0  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  2315   001AD4  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  2316   001AD8  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  2317   001ADC  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  2318   001AE0  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  2319   001AE4  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  2320   001AE8                     l2148:
  2321                           
  2322                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2323   001AE8  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  2324   001AEA  EF7F  F00D         	goto	u1731
  2325   001AEE  503D               	movf	(dtoa@i+1)^0,w,c
  2326   001AF0  E108               	bnz	u1730
  2327   001AF2  043C               	decf	dtoa@i^0,w,c
  2328   001AF4  A0D8               	btfss	status,0,c
  2329   001AF6  EF7F  F00D         	goto	u1731
  2330   001AFA  EF81  F00D         	goto	u1730
  2331   001AFE                     u1731:
  2332   001AFE  EFB1  F00D         	goto	l2158
  2333   001B02                     u1730:
  2334   001B02  5034               	movf	dtoa@n^0,w,c
  2335   001B04  1035               	iorwf	(dtoa@n+1)^0,w,c
  2336   001B06  1036               	iorwf	(dtoa@n+2)^0,w,c
  2337   001B08  1037               	iorwf	(dtoa@n+3)^0,w,c
  2338   001B0A  1038               	iorwf	(dtoa@n+4)^0,w,c
  2339   001B0C  1039               	iorwf	(dtoa@n+5)^0,w,c
  2340   001B0E  103A               	iorwf	(dtoa@n+6)^0,w,c
  2341   001B10  103B               	iorwf	(dtoa@n+7)^0,w,c
  2342   001B12  A4D8               	btfss	status,2,c
  2343   001B14  EF8E  F00D         	goto	u1741
  2344   001B18  EF90  F00D         	goto	u1740
  2345   001B1C                     u1741:
  2346   001B1C  EFF8  F00C         	goto	l2138
  2347   001B20                     u1740:
  2348   001B20  BE31               	btfsc	(dtoa@p+1)^0,7,c
  2349   001B22  EF9D  F00D         	goto	u1750
  2350   001B26  5031               	movf	(dtoa@p+1)^0,w,c
  2351   001B28  E106               	bnz	u1751
  2352   001B2A  0430               	decf	dtoa@p^0,w,c
  2353   001B2C  B0D8               	btfsc	status,0,c
  2354   001B2E  EF9B  F00D         	goto	u1751
  2355   001B32  EF9D  F00D         	goto	u1750
  2356   001B36                     u1751:
  2357   001B36  EFF8  F00C         	goto	l2138
  2358   001B3A                     u1750:
  2359   001B3A  BE33               	btfsc	(dtoa@w+1)^0,7,c
  2360   001B3C  EFA8  F00D         	goto	u1761
  2361   001B40  5033               	movf	(dtoa@w+1)^0,w,c
  2362   001B42  E108               	bnz	u1760
  2363   001B44  0432               	decf	dtoa@w^0,w,c
  2364   001B46  A0D8               	btfss	status,0,c
  2365   001B48  EFA8  F00D         	goto	u1761
  2366   001B4C  EFAA  F00D         	goto	u1760
  2367   001B50                     u1761:
  2368   001B50  EFB1  F00D         	goto	l2158
  2369   001B54                     u1760:
  2370   001B54  B25E               	btfsc	_flags^0,1,c
  2371   001B56  EFAF  F00D         	goto	u1771
  2372   001B5A  EFB1  F00D         	goto	u1770
  2373   001B5E                     u1771:
  2374   001B5E  EFF8  F00C         	goto	l2138
  2375   001B62                     u1770:
  2376   001B62                     l2158:
  2377                           
  2378                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  2379   001B62  503E               	movf	dtoa@s^0,w,c
  2380   001B64  B4D8               	btfsc	status,2,c
  2381   001B66  EFB7  F00D         	goto	u1781
  2382   001B6A  EFB9  F00D         	goto	u1780
  2383   001B6E                     u1781:
  2384   001B6E  EFC4  F00D         	goto	l2164
  2385   001B72                     u1780:
  2386   001B72                     
  2387                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  2388   001B72  063C               	decf	dtoa@i^0,f,c
  2389   001B74  A0D8               	btfss	status,0,c
  2390   001B76  063D               	decf	(dtoa@i+1)^0,f,c
  2391   001B78                     
  2392                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  2393   001B78  0E00               	movlw	low _dbuf
  2394   001B7A  243C               	addwf	dtoa@i^0,w,c
  2395   001B7C  6ED9               	movwf	fsr2l,c
  2396   001B7E  0E01               	movlw	high _dbuf
  2397   001B80  203D               	addwfc	(dtoa@i+1)^0,w,c
  2398   001B82  6EDA               	movwf	fsr2h,c
  2399   001B84  C03E  FFDF         	movff	dtoa@s,indf2
  2400   001B88                     l2164:
  2401                           
  2402                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2403   001B88  C01C  F011         	movff	dtoa@fp,pad@fp
  2404   001B8C  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2405   001B90  0E00               	movlw	low _dbuf
  2406   001B92  243C               	addwf	dtoa@i^0,w,c
  2407   001B94  6E13               	movwf	pad@buf^0,c
  2408   001B96  0E01               	movlw	high _dbuf
  2409   001B98  203D               	addwfc	(dtoa@i+1)^0,w,c
  2410   001B9A  6E14               	movwf	(pad@buf+1)^0,c
  2411   001B9C  C032  F015         	movff	dtoa@w,pad@p
  2412   001BA0  C033  F016         	movff	dtoa@w+1,pad@p+1
  2413   001BA4  ECC3  F010         	call	_pad	;wreg free
  2414   001BA8  0012               	return		;funcret
  2415   001BAA                     __end_of_dtoa:
  2416                           	callstack 0
  2417                           
  2418 ;; *************** function _pad *****************
  2419 ;; Defined at:
  2420 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2423 ;;		 -> sprintf@f(11), 
  2424 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2425 ;;		 -> dbuf(32), 
  2426 ;;  p               2   20[COMRAM] int 
  2427 ;; Auto vars:     Size  Location     Type
  2428 ;;  w               2   25[COMRAM] int 
  2429 ;;  i               2   23[COMRAM] int 
  2430 ;; Return value:  Size  Location     Type
  2431 ;;                  1    wreg      void 
  2432 ;; Registers used:
  2433 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2434 ;; Tracked objects:
  2435 ;;		On entry : 0/0
  2436 ;;		On exit  : 0/0
  2437 ;;		Unchanged: 0/0
  2438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2439 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2440 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2441 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2442 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2443 ;;Total ram usage:       11 bytes
  2444 ;; Hardware stack levels used: 1
  2445 ;; Hardware stack levels required when called: 4
  2446 ;; This function calls:
  2447 ;;		_fputc
  2448 ;;		_fputs
  2449 ;; This function is called by:
  2450 ;;		_dtoa
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454                           	psect	text5
  2455   002186                     __ptext5:
  2456                           	callstack 0
  2457   002186                     _pad:
  2458                           	callstack 22
  2459   002186                     
  2460                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 139:     if (flags & (1 << 0)) {
  2461   002186  A05E               	btfss	_flags^0,0,c
  2462   002188  EFC8  F010         	goto	u1571
  2463   00218C  EFCA  F010         	goto	u1570
  2464   002190                     u1571:
  2465   002190  EFD4  F010         	goto	l2068
  2466   002194                     u1570:
  2467   002194                     
  2468                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 140:         fput
      +                          s((const char *)buf, fp);
  2469   002194  C013  F00A         	movff	pad@buf,fputs@s
  2470   002198  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2471   00219C  C011  F00C         	movff	pad@fp,fputs@fp
  2472   0021A0  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2473   0021A4  EC9C  F012         	call	_fputs	;wreg free
  2474   0021A8                     l2068:
  2475                           
  2476                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 145:     w = (p <
      +                           0) ? 0 : p;
  2477   0021A8  BE16               	btfsc	(pad@p+1)^0,7,c
  2478   0021AA  EFD9  F010         	goto	u1581
  2479   0021AE  EFDB  F010         	goto	u1580
  2480   0021B2                     u1581:
  2481   0021B2  EFE1  F010         	goto	l2072
  2482   0021B6                     u1580:
  2483   0021B6  C015  F01A         	movff	pad@p,pad@w
  2484   0021BA  C016  F01B         	movff	pad@p+1,pad@w+1
  2485   0021BE  EFE5  F010         	goto	l1024
  2486   0021C2                     l2072:
  2487   0021C2  0E00               	movlw	0
  2488   0021C4  6E1B               	movwf	(pad@w+1)^0,c
  2489   0021C6  0E00               	movlw	0
  2490   0021C8  6E1A               	movwf	pad@w^0,c
  2491   0021CA                     l1024:
  2492                           
  2493                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2494   0021CA  0E00               	movlw	0
  2495   0021CC  6E19               	movwf	(pad@i+1)^0,c
  2496   0021CE  0E00               	movlw	0
  2497   0021D0  6E18               	movwf	pad@i^0,c
  2498                           
  2499                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2500   0021D2  EFF7  F010         	goto	l2078
  2501   0021D6                     l2074:
  2502                           
  2503                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2504   0021D6  0E00               	movlw	0
  2505   0021D8  6E02               	movwf	(fputc@c+1)^0,c
  2506   0021DA  0E20               	movlw	32
  2507   0021DC  6E01               	movwf	fputc@c^0,c
  2508   0021DE  C011  F003         	movff	pad@fp,fputc@fp
  2509   0021E2  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2510   0021E6  ECFA  F00F         	call	_fputc	;wreg free
  2511   0021EA                     
  2512                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2513   0021EA  4A18               	infsnz	pad@i^0,f,c
  2514   0021EC  2A19               	incf	(pad@i+1)^0,f,c
  2515   0021EE                     l2078:
  2516                           
  2517                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2518   0021EE  501A               	movf	pad@w^0,w,c
  2519   0021F0  5C18               	subwf	pad@i^0,w,c
  2520   0021F2  5019               	movf	(pad@i+1)^0,w,c
  2521   0021F4  0A80               	xorlw	128
  2522   0021F6  6E17               	movwf	??_pad^0,c
  2523   0021F8  501B               	movf	(pad@w+1)^0,w,c
  2524   0021FA  0A80               	xorlw	128
  2525   0021FC  5817               	subwfb	??_pad^0,w,c
  2526   0021FE  A0D8               	btfss	status,0,c
  2527   002200  EF04  F011         	goto	u1591
  2528   002204  EF06  F011         	goto	u1590
  2529   002208                     u1591:
  2530   002208  EFEB  F010         	goto	l2074
  2531   00220C                     u1590:
  2532   00220C                     
  2533                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 154:     if (!(fl
      +                          ags & (1 << 0))) {
  2534   00220C  B05E               	btfsc	_flags^0,0,c
  2535   00220E  EF0B  F011         	goto	u1601
  2536   002212  EF0D  F011         	goto	u1600
  2537   002216                     u1601:
  2538   002216  EF17  F011         	goto	l1029
  2539   00221A                     u1600:
  2540   00221A                     
  2541                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2542   00221A  C013  F00A         	movff	pad@buf,fputs@s
  2543   00221E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2544   002222  C011  F00C         	movff	pad@fp,fputs@fp
  2545   002226  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2546   00222A  EC9C  F012         	call	_fputs	;wreg free
  2547   00222E                     l1029:
  2548   00222E  0012               	return		;funcret
  2549   002230                     __end_of_pad:
  2550                           	callstack 0
  2551                           
  2552 ;; *************** function _fputs *****************
  2553 ;; Defined at:
  2554 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2555 ;; Parameters:    Size  Location     Type
  2556 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2557 ;;		 -> dbuf(32), 
  2558 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2559 ;;		 -> sprintf@f(11), 
  2560 ;; Auto vars:     Size  Location     Type
  2561 ;;  i               2   14[COMRAM] int 
  2562 ;;  c               1   13[COMRAM] unsigned char 
  2563 ;; Return value:  Size  Location     Type
  2564 ;;                  2    9[COMRAM] int 
  2565 ;; Registers used:
  2566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2572 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2573 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2575 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2576 ;;Total ram usage:        7 bytes
  2577 ;; Hardware stack levels used: 1
  2578 ;; Hardware stack levels required when called: 3
  2579 ;; This function calls:
  2580 ;;		_fputc
  2581 ;; This function is called by:
  2582 ;;		_pad
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586                           	psect	text6
  2587   002538                     __ptext6:
  2588                           	callstack 0
  2589   002538                     _fputs:
  2590                           	callstack 22
  2591   002538  0E00               	movlw	0
  2592   00253A  6E10               	movwf	(fputs@i+1)^0,c
  2593   00253C  0E00               	movlw	0
  2594   00253E  6E0F               	movwf	fputs@i^0,c
  2595   002540  EFAD  F012         	goto	l1976
  2596   002544                     l1972:
  2597   002544  C00E  F001         	movff	fputs@c,fputc@c
  2598   002548  6A02               	clrf	(fputc@c+1)^0,c
  2599   00254A  C00C  F003         	movff	fputs@fp,fputc@fp
  2600   00254E  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2601   002552  ECFA  F00F         	call	_fputc	;wreg free
  2602   002556  4A0F               	infsnz	fputs@i^0,f,c
  2603   002558  2A10               	incf	(fputs@i+1)^0,f,c
  2604   00255A                     l1976:
  2605   00255A  500F               	movf	fputs@i^0,w,c
  2606   00255C  240A               	addwf	fputs@s^0,w,c
  2607   00255E  6ED9               	movwf	fsr2l,c
  2608   002560  5010               	movf	(fputs@i+1)^0,w,c
  2609   002562  200B               	addwfc	(fputs@s+1)^0,w,c
  2610   002564  6EDA               	movwf	fsr2h,c
  2611   002566  50DF               	movf	indf2,w,c
  2612   002568  6E0E               	movwf	fputs@c^0,c
  2613   00256A  500E               	movf	fputs@c^0,w,c
  2614   00256C  A4D8               	btfss	status,2,c
  2615   00256E  EFBB  F012         	goto	u1431
  2616   002572  EFBD  F012         	goto	u1430
  2617   002576                     u1431:
  2618   002576  EFA2  F012         	goto	l1972
  2619   00257A                     u1430:
  2620   00257A  0012               	return		;funcret
  2621   00257C                     __end_of_fputs:
  2622                           	callstack 0
  2623                           
  2624 ;; *************** function _fputc *****************
  2625 ;; Defined at:
  2626 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;  c               2    0[COMRAM] int 
  2629 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2630 ;;		 -> sprintf@f(11), 
  2631 ;; Auto vars:     Size  Location     Type
  2632 ;;		None
  2633 ;; Return value:  Size  Location     Type
  2634 ;;                  2    0[COMRAM] int 
  2635 ;; Registers used:
  2636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2637 ;; Tracked objects:
  2638 ;;		On entry : 0/0
  2639 ;;		On exit  : 0/0
  2640 ;;		Unchanged: 0/0
  2641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2642 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2644 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2645 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2646 ;;Total ram usage:        9 bytes
  2647 ;; Hardware stack levels used: 1
  2648 ;; Hardware stack levels required when called: 2
  2649 ;; This function calls:
  2650 ;;		_putch
  2651 ;; This function is called by:
  2652 ;;		_pad
  2653 ;;		_vfpfcnvrt
  2654 ;;		_fputs
  2655 ;; This function uses a non-reentrant model
  2656 ;;
  2657                           
  2658                           	psect	text7
  2659   001FF4                     __ptext7:
  2660                           	callstack 0
  2661   001FF4                     _fputc:
  2662                           	callstack 25
  2663   001FF4  5003               	movf	fputc@fp^0,w,c
  2664   001FF6  1004               	iorwf	(fputc@fp+1)^0,w,c
  2665   001FF8  B4D8               	btfsc	status,2,c
  2666   001FFA  EF01  F010         	goto	u1391
  2667   001FFE  EF03  F010         	goto	u1390
  2668   002002                     u1391:
  2669   002002  EF0C  F010         	goto	l1960
  2670   002006                     u1390:
  2671   002006  5003               	movf	fputc@fp^0,w,c
  2672   002008  1004               	iorwf	(fputc@fp+1)^0,w,c
  2673   00200A  A4D8               	btfss	status,2,c
  2674   00200C  EF0A  F010         	goto	u1401
  2675   002010  EF0C  F010         	goto	u1400
  2676   002014                     u1401:
  2677   002014  EF11  F010         	goto	l1962
  2678   002018                     u1400:
  2679   002018                     l1960:
  2680   002018  5001               	movf	fputc@c^0,w,c
  2681   00201A  ECB5  F013         	call	_putch
  2682   00201E  EF5E  F010         	goto	l1137
  2683   002022                     l1962:
  2684   002022  EE20 F009          	lfsr	2,9
  2685   002026  5003               	movf	fputc@fp^0,w,c
  2686   002028  26D9               	addwf	fsr2l,f,c
  2687   00202A  5004               	movf	(fputc@fp+1)^0,w,c
  2688   00202C  22DA               	addwfc	fsr2h,f,c
  2689   00202E  50DE               	movf	postinc2,w,c
  2690   002030  10DE               	iorwf	postinc2,w,c
  2691   002032  B4D8               	btfsc	status,2,c
  2692   002034  EF1E  F010         	goto	u1411
  2693   002038  EF20  F010         	goto	u1410
  2694   00203C                     u1411:
  2695   00203C  EF3B  F010         	goto	l1966
  2696   002040                     u1410:
  2697   002040  EE20 F009          	lfsr	2,9
  2698   002044  5003               	movf	fputc@fp^0,w,c
  2699   002046  26D9               	addwf	fsr2l,f,c
  2700   002048  5004               	movf	(fputc@fp+1)^0,w,c
  2701   00204A  22DA               	addwfc	fsr2h,f,c
  2702   00204C  EE10 F003          	lfsr	1,3
  2703   002050  5003               	movf	fputc@fp^0,w,c
  2704   002052  26E1               	addwf	fsr1l,f,c
  2705   002054  5004               	movf	(fputc@fp+1)^0,w,c
  2706   002056  22E2               	addwfc	fsr1h,f,c
  2707   002058  50DE               	movf	postinc2,w,c
  2708   00205A  5CE6               	subwf	postinc1,w,c
  2709   00205C  50E6               	movf	postinc1,w,c
  2710   00205E  0A80               	xorlw	128
  2711   002060  6E09               	movwf	(??_fputc+4)^0,c
  2712   002062  50DE               	movf	postinc2,w,c
  2713   002064  0A80               	xorlw	128
  2714   002066  5809               	subwfb	(??_fputc+4)^0,w,c
  2715   002068  B0D8               	btfsc	status,0,c
  2716   00206A  EF39  F010         	goto	u1421
  2717   00206E  EF3B  F010         	goto	u1420
  2718   002072                     u1421:
  2719   002072  EF5E  F010         	goto	l1137
  2720   002076                     u1420:
  2721   002076                     l1966:
  2722   002076  EE20 F003          	lfsr	2,3
  2723   00207A  5003               	movf	fputc@fp^0,w,c
  2724   00207C  26D9               	addwf	fsr2l,f,c
  2725   00207E  5004               	movf	(fputc@fp+1)^0,w,c
  2726   002080  22DA               	addwfc	fsr2h,f,c
  2727   002082  CFDE F005          	movff	postinc2,??_fputc
  2728   002086  CFDD F006          	movff	postdec2,??_fputc+1
  2729   00208A  C003  FFD9         	movff	fputc@fp,fsr2l
  2730   00208E  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2731   002092  CFDE F007          	movff	postinc2,??_fputc+2
  2732   002096  CFDD F008          	movff	postdec2,??_fputc+3
  2733   00209A  5005               	movf	??_fputc^0,w,c
  2734   00209C  2407               	addwf	(??_fputc+2)^0,w,c
  2735   00209E  6ED9               	movwf	fsr2l,c
  2736   0020A0  5006               	movf	(??_fputc+1)^0,w,c
  2737   0020A2  2008               	addwfc	(??_fputc+3)^0,w,c
  2738   0020A4  6EDA               	movwf	fsr2h,c
  2739   0020A6  C001  FFDF         	movff	fputc@c,indf2
  2740   0020AA  EE20 F003          	lfsr	2,3
  2741   0020AE  5003               	movf	fputc@fp^0,w,c
  2742   0020B0  26D9               	addwf	fsr2l,f,c
  2743   0020B2  5004               	movf	(fputc@fp+1)^0,w,c
  2744   0020B4  22DA               	addwfc	fsr2h,f,c
  2745   0020B6  2ADE               	incf	postinc2,f,c
  2746   0020B8  0E00               	movlw	0
  2747   0020BA  22DD               	addwfc	postdec2,f,c
  2748   0020BC                     l1137:
  2749   0020BC  0012               	return		;funcret
  2750   0020BE                     __end_of_fputc:
  2751                           	callstack 0
  2752                           
  2753 ;; *************** function _putch *****************
  2754 ;; Defined at:
  2755 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;  c               1    wreg     unsigned char 
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;  c               1    0[COMRAM] unsigned char 
  2760 ;; Return value:  Size  Location     Type
  2761 ;;                  1    wreg      void 
  2762 ;; Registers used:
  2763 ;;		wreg
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2773 ;;Total ram usage:        0 bytes
  2774 ;; Hardware stack levels used: 1
  2775 ;; Hardware stack levels required when called: 1
  2776 ;; This function calls:
  2777 ;;		Nothing
  2778 ;; This function is called by:
  2779 ;;		_fputc
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           
  2783                           	psect	text8
  2784   00276A                     __ptext8:
  2785                           	callstack 0
  2786   00276A                     _putch:
  2787                           	callstack 25
  2788   00276A  0012               	return		;funcret
  2789   00276C                     __end_of_putch:
  2790                           	callstack 0
  2791                           
  2792 ;; *************** function _abs *****************
  2793 ;; Defined at:
  2794 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;  a               2   18[COMRAM] int 
  2797 ;; Auto vars:     Size  Location     Type
  2798 ;;		None
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  2   18[COMRAM] int 
  2801 ;; Registers used:
  2802 ;;		wreg, status,2, status,0
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2808 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2810 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2811 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2812 ;;Total ram usage:        4 bytes
  2813 ;; Hardware stack levels used: 1
  2814 ;; Hardware stack levels required when called: 1
  2815 ;; This function calls:
  2816 ;;		Nothing
  2817 ;; This function is called by:
  2818 ;;		_dtoa
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822                           	psect	text9
  2823   00257C                     __ptext9:
  2824                           	callstack 0
  2825   00257C                     _abs:
  2826                           	callstack 25
  2827   00257C  BE14               	btfsc	(abs@a+1)^0,7,c
  2828   00257E  EFCB  F012         	goto	u1610
  2829   002582  5014               	movf	(abs@a+1)^0,w,c
  2830   002584  E106               	bnz	u1611
  2831   002586  0413               	decf	abs@a^0,w,c
  2832   002588  B0D8               	btfsc	status,0,c
  2833   00258A  EFC9  F012         	goto	u1611
  2834   00258E  EFCB  F012         	goto	u1610
  2835   002592                     u1611:
  2836   002592  EFD9  F012         	goto	l1083
  2837   002596                     u1610:
  2838   002596  C013  F015         	movff	abs@a,??_abs
  2839   00259A  C014  F016         	movff	abs@a+1,??_abs+1
  2840   00259E  1E15               	comf	??_abs^0,f,c
  2841   0025A0  1E16               	comf	(??_abs+1)^0,f,c
  2842   0025A2  4A15               	infsnz	??_abs^0,f,c
  2843   0025A4  2A16               	incf	(??_abs+1)^0,f,c
  2844   0025A6  C015  F013         	movff	??_abs,?_abs
  2845   0025AA  C016  F014         	movff	??_abs+1,?_abs+1
  2846   0025AE  EFDD  F012         	goto	l1086
  2847   0025B2                     l1083:
  2848   0025B2  C013  F013         	movff	abs@a,?_abs
  2849   0025B6  C014  F014         	movff	abs@a+1,?_abs+1
  2850   0025BA                     l1086:
  2851   0025BA  0012               	return		;funcret
  2852   0025BC                     __end_of_abs:
  2853                           	callstack 0
  2854                           
  2855 ;; *************** function ___aomod *****************
  2856 ;; Defined at:
  2857 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;  dividend        8    0[COMRAM] long long 
  2860 ;;  divisor         8    8[COMRAM] long long 
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;  sign            1   17[COMRAM] unsigned char 
  2863 ;;  counter         1   16[COMRAM] unsigned char 
  2864 ;; Return value:  Size  Location     Type
  2865 ;;                  8    0[COMRAM] long long 
  2866 ;; Registers used:
  2867 ;;		wreg, status,2, status,0
  2868 ;; Tracked objects:
  2869 ;;		On entry : 0/0
  2870 ;;		On exit  : 0/0
  2871 ;;		Unchanged: 0/0
  2872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2873 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2874 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2876 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2877 ;;Total ram usage:       18 bytes
  2878 ;; Hardware stack levels used: 1
  2879 ;; Hardware stack levels required when called: 1
  2880 ;; This function calls:
  2881 ;;		Nothing
  2882 ;; This function is called by:
  2883 ;;		_dtoa
  2884 ;; This function uses a non-reentrant model
  2885 ;;
  2886                           
  2887                           	psect	text10
  2888   001D32                     __ptext10:
  2889                           	callstack 0
  2890   001D32                     ___aomod:
  2891                           	callstack 25
  2892   001D32  0E00               	movlw	0
  2893   001D34  6E12               	movwf	___aomod@sign^0,c
  2894   001D36  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2895   001D38  EFA2  F00E         	goto	u1510
  2896   001D3C  EFA0  F00E         	goto	u1511
  2897   001D40                     u1511:
  2898   001D40  EFB4  F00E         	goto	l2036
  2899   001D44                     u1510:
  2900   001D44  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2901   001D46  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2902   001D48  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2903   001D4A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2904   001D4C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2905   001D4E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2906   001D50  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2907   001D52  6C01               	negf	___aomod@dividend^0,c
  2908   001D54  0E00               	movlw	0
  2909   001D56  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2910   001D58  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2911   001D5A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2912   001D5C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2913   001D5E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2914   001D60  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2915   001D62  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2916   001D64  0E01               	movlw	1
  2917   001D66  6E12               	movwf	___aomod@sign^0,c
  2918   001D68                     l2036:
  2919   001D68  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2920   001D6A  EFBB  F00E         	goto	u1520
  2921   001D6E  EFB9  F00E         	goto	u1521
  2922   001D72                     u1521:
  2923   001D72  EFCB  F00E         	goto	l2040
  2924   001D76                     u1520:
  2925   001D76  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2926   001D78  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2927   001D7A  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2928   001D7C  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2929   001D7E  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2930   001D80  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2931   001D82  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2932   001D84  6C09               	negf	___aomod@divisor^0,c
  2933   001D86  0E00               	movlw	0
  2934   001D88  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2935   001D8A  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2936   001D8C  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2937   001D8E  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2938   001D90  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2939   001D92  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2940   001D94  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2941   001D96                     l2040:
  2942   001D96  5009               	movf	___aomod@divisor^0,w,c
  2943   001D98  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2944   001D9A  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2945   001D9C  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2946   001D9E  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2947   001DA0  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2948   001DA2  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2949   001DA4  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2950   001DA6  B4D8               	btfsc	status,2,c
  2951   001DA8  EFD8  F00E         	goto	u1531
  2952   001DAC  EFDA  F00E         	goto	u1530
  2953   001DB0                     u1531:
  2954   001DB0  EF22  F00F         	goto	l2056
  2955   001DB4                     u1530:
  2956   001DB4  0E01               	movlw	1
  2957   001DB6  6E11               	movwf	___aomod@counter^0,c
  2958   001DB8  EFE8  F00E         	goto	l2046
  2959   001DBC                     l2044:
  2960   001DBC  90D8               	bcf	status,0,c
  2961   001DBE  3609               	rlcf	___aomod@divisor^0,f,c
  2962   001DC0  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2963   001DC2  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2964   001DC4  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2965   001DC6  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2966   001DC8  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2967   001DCA  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2968   001DCC  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2969   001DCE  2A11               	incf	___aomod@counter^0,f,c
  2970   001DD0                     l2046:
  2971   001DD0  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2972   001DD2  EFED  F00E         	goto	u1541
  2973   001DD6  EFEF  F00E         	goto	u1540
  2974   001DDA                     u1541:
  2975   001DDA  EFDE  F00E         	goto	l2044
  2976   001DDE                     u1540:
  2977   001DDE                     l2048:
  2978   001DDE  5009               	movf	___aomod@divisor^0,w,c
  2979   001DE0  5C01               	subwf	___aomod@dividend^0,w,c
  2980   001DE2  500A               	movf	(___aomod@divisor+1)^0,w,c
  2981   001DE4  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2982   001DE6  500B               	movf	(___aomod@divisor+2)^0,w,c
  2983   001DE8  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2984   001DEA  500C               	movf	(___aomod@divisor+3)^0,w,c
  2985   001DEC  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2986   001DEE  500D               	movf	(___aomod@divisor+4)^0,w,c
  2987   001DF0  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2988   001DF2  500E               	movf	(___aomod@divisor+5)^0,w,c
  2989   001DF4  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2990   001DF6  500F               	movf	(___aomod@divisor+6)^0,w,c
  2991   001DF8  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2992   001DFA  5010               	movf	(___aomod@divisor+7)^0,w,c
  2993   001DFC  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2994   001DFE  A0D8               	btfss	status,0,c
  2995   001E00  EF04  F00F         	goto	u1551
  2996   001E04  EF06  F00F         	goto	u1550
  2997   001E08                     u1551:
  2998   001E08  EF16  F00F         	goto	l2052
  2999   001E0C                     u1550:
  3000   001E0C  5009               	movf	___aomod@divisor^0,w,c
  3001   001E0E  5E01               	subwf	___aomod@dividend^0,f,c
  3002   001E10  500A               	movf	(___aomod@divisor+1)^0,w,c
  3003   001E12  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  3004   001E14  500B               	movf	(___aomod@divisor+2)^0,w,c
  3005   001E16  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  3006   001E18  500C               	movf	(___aomod@divisor+3)^0,w,c
  3007   001E1A  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  3008   001E1C  500D               	movf	(___aomod@divisor+4)^0,w,c
  3009   001E1E  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  3010   001E20  500E               	movf	(___aomod@divisor+5)^0,w,c
  3011   001E22  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  3012   001E24  500F               	movf	(___aomod@divisor+6)^0,w,c
  3013   001E26  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  3014   001E28  5010               	movf	(___aomod@divisor+7)^0,w,c
  3015   001E2A  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  3016   001E2C                     l2052:
  3017   001E2C  90D8               	bcf	status,0,c
  3018   001E2E  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  3019   001E30  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  3020   001E32  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  3021   001E34  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  3022   001E36  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  3023   001E38  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  3024   001E3A  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  3025   001E3C  3209               	rrcf	___aomod@divisor^0,f,c
  3026   001E3E  2E11               	decfsz	___aomod@counter^0,f,c
  3027   001E40  EFEF  F00E         	goto	l2048
  3028   001E44                     l2056:
  3029   001E44  5012               	movf	___aomod@sign^0,w,c
  3030   001E46  B4D8               	btfsc	status,2,c
  3031   001E48  EF28  F00F         	goto	u1561
  3032   001E4C  EF2A  F00F         	goto	u1560
  3033   001E50                     u1561:
  3034   001E50  EF3A  F00F         	goto	l2060
  3035   001E54                     u1560:
  3036   001E54  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3037   001E56  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3038   001E58  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3039   001E5A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3040   001E5C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3041   001E5E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3042   001E60  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3043   001E62  6C01               	negf	___aomod@dividend^0,c
  3044   001E64  0E00               	movlw	0
  3045   001E66  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3046   001E68  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3047   001E6A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3048   001E6C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3049   001E6E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3050   001E70  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3051   001E72  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3052   001E74                     l2060:
  3053   001E74  C001  F001         	movff	___aomod@dividend,?___aomod
  3054   001E78  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3055   001E7C  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3056   001E80  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3057   001E84  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3058   001E88  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3059   001E8C  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3060   001E90  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3061   001E94  0012               	return		;funcret
  3062   001E96                     __end_of___aomod:
  3063                           	callstack 0
  3064                           
  3065 ;; *************** function ___aodiv *****************
  3066 ;; Defined at:
  3067 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  3068 ;; Parameters:    Size  Location     Type
  3069 ;;  dividend        8    0[COMRAM] long long 
  3070 ;;  divisor         8    8[COMRAM] long long 
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;  quotient        8   18[COMRAM] long long 
  3073 ;;  sign            1   17[COMRAM] unsigned char 
  3074 ;;  counter         1   16[COMRAM] unsigned char 
  3075 ;; Return value:  Size  Location     Type
  3076 ;;                  8    0[COMRAM] long long 
  3077 ;; Registers used:
  3078 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3079 ;; Tracked objects:
  3080 ;;		On entry : 0/0
  3081 ;;		On exit  : 0/0
  3082 ;;		Unchanged: 0/0
  3083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3084 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3085 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3087 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3088 ;;Total ram usage:       26 bytes
  3089 ;; Hardware stack levels used: 1
  3090 ;; Hardware stack levels required when called: 1
  3091 ;; This function calls:
  3092 ;;		Nothing
  3093 ;; This function is called by:
  3094 ;;		_dtoa
  3095 ;; This function uses a non-reentrant model
  3096 ;;
  3097                           
  3098                           	psect	text11
  3099   001BAA                     __ptext11:
  3100                           	callstack 0
  3101   001BAA                     ___aodiv:
  3102                           	callstack 25
  3103   001BAA  0E00               	movlw	0
  3104   001BAC  6E12               	movwf	___aodiv@sign^0,c
  3105   001BAE  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3106   001BB0  EFDE  F00D         	goto	u1440
  3107   001BB4  EFDC  F00D         	goto	u1441
  3108   001BB8                     u1441:
  3109   001BB8  EFF0  F00D         	goto	l1992
  3110   001BBC                     u1440:
  3111   001BBC  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3112   001BBE  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3113   001BC0  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3114   001BC2  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3115   001BC4  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3116   001BC6  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3117   001BC8  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3118   001BCA  6C09               	negf	___aodiv@divisor^0,c
  3119   001BCC  0E00               	movlw	0
  3120   001BCE  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3121   001BD0  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3122   001BD2  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3123   001BD4  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3124   001BD6  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3125   001BD8  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3126   001BDA  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3127   001BDC  0E01               	movlw	1
  3128   001BDE  6E12               	movwf	___aodiv@sign^0,c
  3129   001BE0                     l1992:
  3130   001BE0  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3131   001BE2  EFF7  F00D         	goto	u1450
  3132   001BE6  EFF5  F00D         	goto	u1451
  3133   001BEA                     u1451:
  3134   001BEA  EF09  F00E         	goto	l1998
  3135   001BEE                     u1450:
  3136   001BEE  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3137   001BF0  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3138   001BF2  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3139   001BF4  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3140   001BF6  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3141   001BF8  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3142   001BFA  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3143   001BFC  6C01               	negf	___aodiv@dividend^0,c
  3144   001BFE  0E00               	movlw	0
  3145   001C00  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3146   001C02  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3147   001C04  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3148   001C06  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3149   001C08  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3150   001C0A  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3151   001C0C  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3152   001C0E  0E01               	movlw	1
  3153   001C10  1A12               	xorwf	___aodiv@sign^0,f,c
  3154   001C12                     l1998:
  3155   001C12  EE20  F013         	lfsr	2,___aodiv@quotient
  3156   001C16  0E07               	movlw	7
  3157   001C18                     u1461:
  3158   001C18  6ADE               	clrf	postinc2,c
  3159   001C1A  06E8               	decf	wreg,f,c
  3160   001C1C  E2FD               	bc	u1461
  3161   001C1E  5009               	movf	___aodiv@divisor^0,w,c
  3162   001C20  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3163   001C22  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3164   001C24  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3165   001C26  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3166   001C28  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3167   001C2A  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3168   001C2C  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3169   001C2E  B4D8               	btfsc	status,2,c
  3170   001C30  EF1C  F00E         	goto	u1471
  3171   001C34  EF1E  F00E         	goto	u1470
  3172   001C38                     u1471:
  3173   001C38  EF70  F00E         	goto	l2020
  3174   001C3C                     u1470:
  3175   001C3C  0E01               	movlw	1
  3176   001C3E  6E11               	movwf	___aodiv@counter^0,c
  3177   001C40  EF2C  F00E         	goto	l2006
  3178   001C44                     l2004:
  3179   001C44  90D8               	bcf	status,0,c
  3180   001C46  3609               	rlcf	___aodiv@divisor^0,f,c
  3181   001C48  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3182   001C4A  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3183   001C4C  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3184   001C4E  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3185   001C50  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3186   001C52  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3187   001C54  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3188   001C56  2A11               	incf	___aodiv@counter^0,f,c
  3189   001C58                     l2006:
  3190   001C58  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3191   001C5A  EF31  F00E         	goto	u1481
  3192   001C5E  EF33  F00E         	goto	u1480
  3193   001C62                     u1481:
  3194   001C62  EF22  F00E         	goto	l2004
  3195   001C66                     u1480:
  3196   001C66                     l2008:
  3197   001C66  90D8               	bcf	status,0,c
  3198   001C68  3613               	rlcf	___aodiv@quotient^0,f,c
  3199   001C6A  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3200   001C6C  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3201   001C6E  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3202   001C70  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3203   001C72  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3204   001C74  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3205   001C76  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3206   001C78  5009               	movf	___aodiv@divisor^0,w,c
  3207   001C7A  5C01               	subwf	___aodiv@dividend^0,w,c
  3208   001C7C  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3209   001C7E  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3210   001C80  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3211   001C82  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3212   001C84  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3213   001C86  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3214   001C88  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3215   001C8A  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3216   001C8C  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3217   001C8E  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3218   001C90  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3219   001C92  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3220   001C94  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3221   001C96  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3222   001C98  A0D8               	btfss	status,0,c
  3223   001C9A  EF51  F00E         	goto	u1491
  3224   001C9E  EF53  F00E         	goto	u1490
  3225   001CA2                     u1491:
  3226   001CA2  EF64  F00E         	goto	l2016
  3227   001CA6                     u1490:
  3228   001CA6  5009               	movf	___aodiv@divisor^0,w,c
  3229   001CA8  5E01               	subwf	___aodiv@dividend^0,f,c
  3230   001CAA  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3231   001CAC  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3232   001CAE  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3233   001CB0  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3234   001CB2  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3235   001CB4  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3236   001CB6  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3237   001CB8  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3238   001CBA  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3239   001CBC  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3240   001CBE  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3241   001CC0  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3242   001CC2  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3243   001CC4  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3244   001CC6  8013               	bsf	___aodiv@quotient^0,0,c
  3245   001CC8                     l2016:
  3246   001CC8  90D8               	bcf	status,0,c
  3247   001CCA  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3248   001CCC  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3249   001CCE  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3250   001CD0  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3251   001CD2  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3252   001CD4  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3253   001CD6  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3254   001CD8  3209               	rrcf	___aodiv@divisor^0,f,c
  3255   001CDA  2E11               	decfsz	___aodiv@counter^0,f,c
  3256   001CDC  EF33  F00E         	goto	l2008
  3257   001CE0                     l2020:
  3258   001CE0  5012               	movf	___aodiv@sign^0,w,c
  3259   001CE2  B4D8               	btfsc	status,2,c
  3260   001CE4  EF76  F00E         	goto	u1501
  3261   001CE8  EF78  F00E         	goto	u1500
  3262   001CEC                     u1501:
  3263   001CEC  EF88  F00E         	goto	l2024
  3264   001CF0                     u1500:
  3265   001CF0  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3266   001CF2  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3267   001CF4  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3268   001CF6  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3269   001CF8  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3270   001CFA  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3271   001CFC  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3272   001CFE  6C13               	negf	___aodiv@quotient^0,c
  3273   001D00  0E00               	movlw	0
  3274   001D02  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3275   001D04  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3276   001D06  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3277   001D08  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3278   001D0A  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3279   001D0C  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3280   001D0E  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3281   001D10                     l2024:
  3282   001D10  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3283   001D14  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3284   001D18  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3285   001D1C  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3286   001D20  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3287   001D24  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3288   001D28  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3289   001D2C  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3290   001D30  0012               	return		;funcret
  3291   001D32                     __end_of___aodiv:
  3292                           	callstack 0
  3293                           
  3294 ;; *************** function _atoi *****************
  3295 ;; Defined at:
  3296 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  3297 ;; Parameters:    Size  Location     Type
  3298 ;;  s               2    6[COMRAM] PTR const unsigned char 
  3299 ;;		 -> STR_4(12), STR_3(18), STR_2(6), STR_1(16), 
  3300 ;; Auto vars:     Size  Location     Type
  3301 ;;  n               2   13[COMRAM] int 
  3302 ;;  neg             2   11[COMRAM] int 
  3303 ;; Return value:  Size  Location     Type
  3304 ;;                  2    6[COMRAM] int 
  3305 ;; Registers used:
  3306 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3307 ;; Tracked objects:
  3308 ;;		On entry : 0/0
  3309 ;;		On exit  : 0/0
  3310 ;;		Unchanged: 0/0
  3311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3312 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3313 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3314 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3315 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3316 ;;Total ram usage:        9 bytes
  3317 ;; Hardware stack levels used: 1
  3318 ;; Hardware stack levels required when called: 2
  3319 ;; This function calls:
  3320 ;;		___wmul
  3321 ;;		_isdigit
  3322 ;;		_isspace
  3323 ;; This function is called by:
  3324 ;;		_vfpfcnvrt
  3325 ;; This function uses a non-reentrant model
  3326 ;;
  3327                           
  3328                           	psect	text12
  3329   001E96                     __ptext12:
  3330                           	callstack 0
  3331   001E96                     _atoi:
  3332                           	callstack 25
  3333   001E96  0E00               	movlw	0
  3334   001E98  6E0F               	movwf	(atoi@n+1)^0,c
  3335   001E9A  0E00               	movlw	0
  3336   001E9C  6E0E               	movwf	atoi@n^0,c
  3337   001E9E  0E00               	movlw	0
  3338   001EA0  6E0D               	movwf	(atoi@neg+1)^0,c
  3339   001EA2  0E00               	movlw	0
  3340   001EA4  6E0C               	movwf	atoi@neg^0,c
  3341   001EA6  EF57  F00F         	goto	l2174
  3342   001EAA                     l2170:
  3343   001EAA  4A07               	infsnz	atoi@s^0,f,c
  3344   001EAC  2A08               	incf	(atoi@s+1)^0,f,c
  3345   001EAE                     l2174:
  3346   001EAE  C007  FFF6         	movff	atoi@s,tblptrl
  3347   001EB2  C008  FFF7         	movff	atoi@s+1,tblptrh
  3348   001EB6                     	if	0	;tblptru may be non-zero
  3349   001EB6                     	endif
  3350   001EB6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3351   001EB6  0E00               	movlw	low (__mediumconst shr (0+16))
  3352   001EB8  6EF8               	movwf	tblptru,c
  3353   001EBA                     	endif
  3354   001EBA  0008               	tblrd		*
  3355   001EBC  50F5               	movf	tablat,w,c
  3356   001EBE  0A20               	xorlw	32
  3357   001EC0  B4D8               	btfsc	status,2,c
  3358   001EC2  EF65  F00F         	goto	u1791
  3359   001EC6  EF67  F00F         	goto	u1790
  3360   001ECA                     u1791:
  3361   001ECA  EF55  F00F         	goto	l2170
  3362   001ECE                     u1790:
  3363   001ECE  C007  FFF6         	movff	atoi@s,tblptrl
  3364   001ED2  C008  FFF7         	movff	atoi@s+1,tblptrh
  3365   001ED6                     	if	0	;tblptru may be non-zero
  3366   001ED6                     	endif
  3367   001ED6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3368   001ED6  0E00               	movlw	low (__mediumconst shr (0+16))
  3369   001ED8  6EF8               	movwf	tblptru,c
  3370   001EDA                     	endif
  3371   001EDA  0008               	tblrd		*
  3372   001EDC  CFF5 F009          	movff	tablat,??_atoi
  3373   001EE0  0EF7               	movlw	247
  3374   001EE2  2409               	addwf	??_atoi^0,w,c
  3375   001EE4  6E0A               	movwf	(??_atoi+1)^0,c
  3376   001EE6  6A0B               	clrf	(??_atoi+2)^0,c
  3377   001EE8  0EFF               	movlw	255
  3378   001EEA  220B               	addwfc	(??_atoi+2)^0,f,c
  3379   001EEC  500B               	movf	(??_atoi+2)^0,w,c
  3380   001EEE  E109               	bnz	u1800
  3381   001EF0  0E05               	movlw	5
  3382   001EF2  5C0A               	subwf	(??_atoi+1)^0,w,c
  3383   001EF4  A0D8               	btfss	status,0,c
  3384   001EF6  EF7F  F00F         	goto	u1801
  3385   001EFA  EF81  F00F         	goto	u1800
  3386   001EFE                     u1801:
  3387   001EFE  EF55  F00F         	goto	l2170
  3388   001F02                     u1800:
  3389   001F02  EF8B  F00F         	goto	l2182
  3390   001F06                     l2178:
  3391   001F06  0E00               	movlw	0
  3392   001F08  6E0D               	movwf	(atoi@neg+1)^0,c
  3393   001F0A  0E01               	movlw	1
  3394   001F0C  6E0C               	movwf	atoi@neg^0,c
  3395   001F0E                     l2180:
  3396   001F0E  4A07               	infsnz	atoi@s^0,f,c
  3397   001F10  2A08               	incf	(atoi@s+1)^0,f,c
  3398   001F12  EFC4  F00F         	goto	l2190
  3399   001F16                     l2182:
  3400   001F16  C007  FFF6         	movff	atoi@s,tblptrl
  3401   001F1A  C008  FFF7         	movff	atoi@s+1,tblptrh
  3402   001F1E                     	if	0	;tblptru may be non-zero
  3403   001F1E                     	endif
  3404   001F1E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3405   001F1E  0E00               	movlw	low (__mediumconst shr (0+16))
  3406   001F20  6EF8               	movwf	tblptru,c
  3407   001F22                     	endif
  3408   001F22  0008               	tblrd		*
  3409   001F24  50F5               	movf	tablat,w,c
  3410   001F26  6E09               	movwf	??_atoi^0,c
  3411   001F28  6A0A               	clrf	(??_atoi+1)^0,c
  3412                           
  3413                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3414                           ; Switch size 1, requested type "simple"
  3415                           ; Number of cases is 1, Range of values is 0 to 0
  3416                           ; switch strategies available:
  3417                           ; Name         Instructions Cycles
  3418                           ; simple_byte            4     3 (average)
  3419                           ;	Chosen strategy is simple_byte
  3420   001F2A  500A               	movf	(??_atoi+1)^0,w,c
  3421   001F2C  0A00               	xorlw	0	; case 0
  3422   001F2E  B4D8               	btfsc	status,2,c
  3423   001F30  EF9C  F00F         	goto	l2738
  3424   001F34  EFC4  F00F         	goto	l2190
  3425   001F38                     l2738:
  3426                           
  3427                           ; Switch size 1, requested type "simple"
  3428                           ; Number of cases is 2, Range of values is 43 to 45
  3429                           ; switch strategies available:
  3430                           ; Name         Instructions Cycles
  3431                           ; simple_byte            7     4 (average)
  3432                           ;	Chosen strategy is simple_byte
  3433   001F38  5009               	movf	??_atoi^0,w,c
  3434   001F3A  0A2B               	xorlw	43	; case 43
  3435   001F3C  B4D8               	btfsc	status,2,c
  3436   001F3E  EF87  F00F         	goto	l2180
  3437   001F42  0A06               	xorlw	6	; case 45
  3438   001F44  B4D8               	btfsc	status,2,c
  3439   001F46  EF83  F00F         	goto	l2178
  3440   001F4A  EFC4  F00F         	goto	l2190
  3441   001F4E                     l2184:
  3442   001F4E  C00E  F001         	movff	atoi@n,___wmul@multiplier
  3443   001F52  C00F  F002         	movff	atoi@n+1,___wmul@multiplier+1
  3444   001F56  0E00               	movlw	0
  3445   001F58  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3446   001F5A  0E0A               	movlw	10
  3447   001F5C  6E03               	movwf	___wmul@multiplicand^0,c
  3448   001F5E  EC46  F013         	call	___wmul	;wreg free
  3449   001F62  C007  FFF6         	movff	atoi@s,tblptrl
  3450   001F66  C008  FFF7         	movff	atoi@s+1,tblptrh
  3451   001F6A                     	if	0	;tblptru may be non-zero
  3452   001F6A                     	endif
  3453   001F6A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3454   001F6A  0E00               	movlw	low (__mediumconst shr (0+16))
  3455   001F6C  6EF8               	movwf	tblptru,c
  3456   001F6E                     	endif
  3457   001F6E  0008               	tblrd		*
  3458   001F70  50F5               	movf	tablat,w,c
  3459   001F72  5E01               	subwf	?___wmul^0,f,c
  3460   001F74  0E00               	movlw	0
  3461   001F76  5A02               	subwfb	(?___wmul+1)^0,f,c
  3462   001F78  0E30               	movlw	48
  3463   001F7A  2401               	addwf	?___wmul^0,w,c
  3464   001F7C  6E0E               	movwf	atoi@n^0,c
  3465   001F7E  0E00               	movlw	0
  3466   001F80  2002               	addwfc	(?___wmul+1)^0,w,c
  3467   001F82  6E0F               	movwf	(atoi@n+1)^0,c
  3468   001F84  EF87  F00F         	goto	l2180
  3469   001F88                     l2190:
  3470   001F88  C007  FFF6         	movff	atoi@s,tblptrl
  3471   001F8C  C008  FFF7         	movff	atoi@s+1,tblptrh
  3472   001F90                     	if	0	;tblptru may be non-zero
  3473   001F90                     	endif
  3474   001F90                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3475   001F90  0E00               	movlw	low (__mediumconst shr (0+16))
  3476   001F92  6EF8               	movwf	tblptru,c
  3477   001F94                     	endif
  3478   001F94  0008               	tblrd		*
  3479   001F96  CFF5 F009          	movff	tablat,??_atoi
  3480   001F9A  0ED0               	movlw	208
  3481   001F9C  2409               	addwf	??_atoi^0,w,c
  3482   001F9E  6E0A               	movwf	(??_atoi+1)^0,c
  3483   001FA0  6A0B               	clrf	(??_atoi+2)^0,c
  3484   001FA2  0EFF               	movlw	255
  3485   001FA4  220B               	addwfc	(??_atoi+2)^0,f,c
  3486   001FA6  500B               	movf	(??_atoi+2)^0,w,c
  3487   001FA8  E109               	bnz	u1810
  3488   001FAA  0E0A               	movlw	10
  3489   001FAC  5C0A               	subwf	(??_atoi+1)^0,w,c
  3490   001FAE  A0D8               	btfss	status,0,c
  3491   001FB0  EFDC  F00F         	goto	u1811
  3492   001FB4  EFDE  F00F         	goto	u1810
  3493   001FB8                     u1811:
  3494   001FB8  EFA7  F00F         	goto	l2184
  3495   001FBC                     u1810:
  3496   001FBC  500C               	movf	atoi@neg^0,w,c
  3497   001FBE  100D               	iorwf	(atoi@neg+1)^0,w,c
  3498   001FC0  A4D8               	btfss	status,2,c
  3499   001FC2  EFE5  F00F         	goto	u1821
  3500   001FC6  EFE7  F00F         	goto	u1820
  3501   001FCA                     u1821:
  3502   001FCA  EFF5  F00F         	goto	l1108
  3503   001FCE                     u1820:
  3504   001FCE  C00E  F009         	movff	atoi@n,??_atoi
  3505   001FD2  C00F  F00A         	movff	atoi@n+1,??_atoi+1
  3506   001FD6  1E09               	comf	??_atoi^0,f,c
  3507   001FD8  1E0A               	comf	(??_atoi+1)^0,f,c
  3508   001FDA  4A09               	infsnz	??_atoi^0,f,c
  3509   001FDC  2A0A               	incf	(??_atoi+1)^0,f,c
  3510   001FDE  C009  F007         	movff	??_atoi,?_atoi
  3511   001FE2  C00A  F008         	movff	??_atoi+1,?_atoi+1
  3512   001FE6  EFF9  F00F         	goto	l1111
  3513   001FEA                     l1108:
  3514   001FEA  C00E  F007         	movff	atoi@n,?_atoi
  3515   001FEE  C00F  F008         	movff	atoi@n+1,?_atoi+1
  3516   001FF2                     l1111:
  3517   001FF2  0012               	return		;funcret
  3518   001FF4                     __end_of_atoi:
  3519                           	callstack 0
  3520                           
  3521 ;; *************** function _isspace *****************
  3522 ;; Defined at:
  3523 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  3524 ;; Parameters:    Size  Location     Type
  3525 ;;  c               2    0[COMRAM] int 
  3526 ;; Auto vars:     Size  Location     Type
  3527 ;;		None
  3528 ;; Return value:  Size  Location     Type
  3529 ;;                  2    0[COMRAM] int 
  3530 ;; Registers used:
  3531 ;;		wreg, status,2, status,0
  3532 ;; Tracked objects:
  3533 ;;		On entry : 0/0
  3534 ;;		On exit  : 0/0
  3535 ;;		Unchanged: 0/0
  3536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3537 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3538 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3539 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3540 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3541 ;;Total ram usage:        5 bytes
  3542 ;; Hardware stack levels used: 1
  3543 ;; Hardware stack levels required when called: 1
  3544 ;; This function calls:
  3545 ;;		Nothing
  3546 ;; This function is called by:
  3547 ;;		_atoi
  3548 ;; This function uses a non-reentrant model
  3549 ;;
  3550                           
  3551                           	psect	text13
  3552   0024F2                     __ptext13:
  3553                           	callstack 0
  3554   0024F2                     _isspace:
  3555                           	callstack 25
  3556   0024F2  0E01               	movlw	1
  3557   0024F4  6E05               	movwf	_isspace$1934^0,c
  3558   0024F6  0E20               	movlw	32
  3559   0024F8  1801               	xorwf	isspace@c^0,w,c
  3560   0024FA  1002               	iorwf	(isspace@c+1)^0,w,c
  3561   0024FC  B4D8               	btfsc	status,2,c
  3562   0024FE  EF83  F012         	goto	u1641
  3563   002502  EF85  F012         	goto	u1640
  3564   002506                     u1641:
  3565   002506  EF98  F012         	goto	l2098
  3566   00250A                     u1640:
  3567   00250A  0EF7               	movlw	247
  3568   00250C  2401               	addwf	isspace@c^0,w,c
  3569   00250E  6E03               	movwf	??_isspace^0,c
  3570   002510  0EFF               	movlw	255
  3571   002512  2002               	addwfc	(isspace@c+1)^0,w,c
  3572   002514  6E04               	movwf	(??_isspace+1)^0,c
  3573   002516  5004               	movf	(??_isspace+1)^0,w,c
  3574   002518  E109               	bnz	u1650
  3575   00251A  0E05               	movlw	5
  3576   00251C  5C03               	subwf	??_isspace^0,w,c
  3577   00251E  A0D8               	btfss	status,0,c
  3578   002520  EF94  F012         	goto	u1651
  3579   002524  EF96  F012         	goto	u1650
  3580   002528                     u1651:
  3581   002528  EF98  F012         	goto	l2098
  3582   00252C                     u1650:
  3583   00252C  0E00               	movlw	0
  3584   00252E  6E05               	movwf	_isspace$1934^0,c
  3585   002530                     l2098:
  3586   002530  C005  F001         	movff	_isspace$1934,?_isspace
  3587   002534  6A02               	clrf	(?_isspace+1)^0,c
  3588   002536  0012               	return		;funcret
  3589   002538                     __end_of_isspace:
  3590                           	callstack 0
  3591                           
  3592 ;; *************** function _isdigit *****************
  3593 ;; Defined at:
  3594 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;  c               2    0[COMRAM] int 
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;		None
  3599 ;; Return value:  Size  Location     Type
  3600 ;;                  2    0[COMRAM] int 
  3601 ;; Registers used:
  3602 ;;		wreg, status,2, status,0
  3603 ;; Tracked objects:
  3604 ;;		On entry : 0/0
  3605 ;;		On exit  : 0/0
  3606 ;;		Unchanged: 0/0
  3607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3608 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3610 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3611 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3612 ;;Total ram usage:        4 bytes
  3613 ;; Hardware stack levels used: 1
  3614 ;; Hardware stack levels required when called: 1
  3615 ;; This function calls:
  3616 ;;		Nothing
  3617 ;; This function is called by:
  3618 ;;		_vfpfcnvrt
  3619 ;;		_atoi
  3620 ;; This function uses a non-reentrant model
  3621 ;;
  3622                           
  3623                           	psect	text14
  3624   002660                     __ptext14:
  3625                           	callstack 0
  3626   002660                     _isdigit:
  3627                           	callstack 26
  3628   002660  0ED0               	movlw	208
  3629   002662  2401               	addwf	isdigit@c^0,w,c
  3630   002664  6E03               	movwf	??_isdigit^0,c
  3631   002666  0EFF               	movlw	255
  3632   002668  2002               	addwfc	(isdigit@c+1)^0,w,c
  3633   00266A  6E04               	movwf	(??_isdigit+1)^0,c
  3634   00266C  5004               	movf	(??_isdigit+1)^0,w,c
  3635   00266E  E10A               	bnz	u1620
  3636   002670  0E0A               	movlw	10
  3637   002672  5C03               	subwf	??_isdigit^0,w,c
  3638   002674  A0D8               	btfss	status,0,c
  3639   002676  EF3F  F013         	goto	u1621
  3640   00267A  EF42  F013         	goto	u1620
  3641   00267E                     u1621:
  3642   00267E  0E01               	movlw	1
  3643   002680  EF43  F013         	goto	u1630
  3644   002684                     u1620:
  3645   002684  0E00               	movlw	0
  3646   002686                     u1630:
  3647   002686  6E01               	movwf	?_isdigit^0,c
  3648   002688  6A02               	clrf	(?_isdigit+1)^0,c
  3649   00268A  0012               	return		;funcret
  3650   00268C                     __end_of_isdigit:
  3651                           	callstack 0
  3652                           
  3653 ;; *************** function ___wmul *****************
  3654 ;; Defined at:
  3655 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  3656 ;; Parameters:    Size  Location     Type
  3657 ;;  multiplier      2    0[COMRAM] unsigned int 
  3658 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3659 ;; Auto vars:     Size  Location     Type
  3660 ;;  product         2    4[COMRAM] unsigned int 
  3661 ;; Return value:  Size  Location     Type
  3662 ;;                  2    0[COMRAM] unsigned int 
  3663 ;; Registers used:
  3664 ;;		wreg, status,2, status,0, prodl, prodh
  3665 ;; Tracked objects:
  3666 ;;		On entry : 0/0
  3667 ;;		On exit  : 0/0
  3668 ;;		Unchanged: 0/0
  3669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3670 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3671 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3673 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3674 ;;Total ram usage:        6 bytes
  3675 ;; Hardware stack levels used: 1
  3676 ;; Hardware stack levels required when called: 1
  3677 ;; This function calls:
  3678 ;;		Nothing
  3679 ;; This function is called by:
  3680 ;;		_main
  3681 ;;		_atoi
  3682 ;;		_ADC2String
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686                           	psect	text15
  3687   00268C                     __ptext15:
  3688                           	callstack 0
  3689   00268C                     ___wmul:
  3690                           	callstack 25
  3691   00268C  5001               	movf	___wmul@multiplier^0,w,c
  3692   00268E  0203               	mulwf	___wmul@multiplicand^0,c
  3693   002690  CFF3 F005          	movff	prodl,___wmul@product
  3694   002694  CFF4 F006          	movff	prodh,___wmul@product+1
  3695   002698  5001               	movf	___wmul@multiplier^0,w,c
  3696   00269A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3697   00269C  50F3               	movf	243,w,c
  3698   00269E  2606               	addwf	(___wmul@product+1)^0,f,c
  3699   0026A0  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3700   0026A2  0203               	mulwf	___wmul@multiplicand^0,c
  3701   0026A4  50F3               	movf	243,w,c
  3702   0026A6  2606               	addwf	(___wmul@product+1)^0,f,c
  3703   0026A8  C005  F001         	movff	___wmul@product,?___wmul
  3704   0026AC  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3705   0026B0  0012               	return		;funcret
  3706   0026B2                     __end_of___wmul:
  3707                           	callstack 0
  3708                           
  3709 ;; *************** function _check_month *****************
  3710 ;; Defined at:
  3711 ;;		line 12 in file "../MonthTracker.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;  month           2   11[COMRAM] PTR unsigned int 
  3714 ;;		 -> main@month(2), 
  3715 ;;  month_day       2   13[COMRAM] PTR unsigned int 
  3716 ;;		 -> main@month_day(2), 
  3717 ;;  year            2   15[COMRAM] PTR unsigned short 
  3718 ;;		 -> main@year(2), 
  3719 ;; Auto vars:     Size  Location     Type
  3720 ;;  leap_year       2   19[COMRAM] int 
  3721 ;; Return value:  Size  Location     Type
  3722 ;;                  1    wreg      void 
  3723 ;; Registers used:
  3724 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3725 ;; Tracked objects:
  3726 ;;		On entry : 0/0
  3727 ;;		On exit  : 0/0
  3728 ;;		Unchanged: 0/0
  3729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3730 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3731 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3732 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3733 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3734 ;;Total ram usage:       10 bytes
  3735 ;; Hardware stack levels used: 1
  3736 ;; Hardware stack levels required when called: 2
  3737 ;; This function calls:
  3738 ;;		___lwmod
  3739 ;; This function is called by:
  3740 ;;		_main
  3741 ;; This function uses a non-reentrant model
  3742 ;;
  3743                           
  3744                           	psect	text16
  3745   001306                     __ptext16:
  3746                           	callstack 0
  3747   001306                     _check_month:
  3748                           	callstack 28
  3749   001306                     
  3750                           ;../MonthTracker.c: 16:         if ((*month == 1 || *month == 3 || *month == 5 || *month
      +                           == 7 || *month == 8|| *month == 10 || *month == 12) && *month_day == 32){
  3751   001306  C00C  FFD9         	movff	check_month@month,fsr2l
  3752   00130A  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3753   00130E  04DE               	decf	postinc2,w,c
  3754   001310  10DE               	iorwf	postinc2,w,c
  3755   001312  B4D8               	btfsc	status,2,c
  3756   001314  EF8E  F009         	goto	u2111
  3757   001318  EF90  F009         	goto	u2110
  3758   00131C                     u2111:
  3759   00131C  EFE4  F009         	goto	l2444
  3760   001320                     u2110:
  3761   001320  C00C  FFD9         	movff	check_month@month,fsr2l
  3762   001324  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3763   001328  0E03               	movlw	3
  3764   00132A  18DE               	xorwf	postinc2,w,c
  3765   00132C  10DE               	iorwf	postinc2,w,c
  3766   00132E  B4D8               	btfsc	status,2,c
  3767   001330  EF9C  F009         	goto	u2121
  3768   001334  EF9E  F009         	goto	u2120
  3769   001338                     u2121:
  3770   001338  EFE4  F009         	goto	l2444
  3771   00133C                     u2120:
  3772   00133C  C00C  FFD9         	movff	check_month@month,fsr2l
  3773   001340  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3774   001344  0E05               	movlw	5
  3775   001346  18DE               	xorwf	postinc2,w,c
  3776   001348  10DE               	iorwf	postinc2,w,c
  3777   00134A  B4D8               	btfsc	status,2,c
  3778   00134C  EFAA  F009         	goto	u2131
  3779   001350  EFAC  F009         	goto	u2130
  3780   001354                     u2131:
  3781   001354  EFE4  F009         	goto	l2444
  3782   001358                     u2130:
  3783   001358  C00C  FFD9         	movff	check_month@month,fsr2l
  3784   00135C  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3785   001360  0E07               	movlw	7
  3786   001362  18DE               	xorwf	postinc2,w,c
  3787   001364  10DE               	iorwf	postinc2,w,c
  3788   001366  B4D8               	btfsc	status,2,c
  3789   001368  EFB8  F009         	goto	u2141
  3790   00136C  EFBA  F009         	goto	u2140
  3791   001370                     u2141:
  3792   001370  EFE4  F009         	goto	l2444
  3793   001374                     u2140:
  3794   001374  C00C  FFD9         	movff	check_month@month,fsr2l
  3795   001378  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3796   00137C  0E08               	movlw	8
  3797   00137E  18DE               	xorwf	postinc2,w,c
  3798   001380  10DE               	iorwf	postinc2,w,c
  3799   001382  B4D8               	btfsc	status,2,c
  3800   001384  EFC6  F009         	goto	u2151
  3801   001388  EFC8  F009         	goto	u2150
  3802   00138C                     u2151:
  3803   00138C  EFE4  F009         	goto	l2444
  3804   001390                     u2150:
  3805   001390  C00C  FFD9         	movff	check_month@month,fsr2l
  3806   001394  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3807   001398  0E0A               	movlw	10
  3808   00139A  18DE               	xorwf	postinc2,w,c
  3809   00139C  10DE               	iorwf	postinc2,w,c
  3810   00139E  B4D8               	btfsc	status,2,c
  3811   0013A0  EFD4  F009         	goto	u2161
  3812   0013A4  EFD6  F009         	goto	u2160
  3813   0013A8                     u2161:
  3814   0013A8  EFE4  F009         	goto	l2444
  3815   0013AC                     u2160:
  3816   0013AC  C00C  FFD9         	movff	check_month@month,fsr2l
  3817   0013B0  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3818   0013B4  0E0C               	movlw	12
  3819   0013B6  18DE               	xorwf	postinc2,w,c
  3820   0013B8  10DE               	iorwf	postinc2,w,c
  3821   0013BA  A4D8               	btfss	status,2,c
  3822   0013BC  EFE2  F009         	goto	u2171
  3823   0013C0  EFE4  F009         	goto	u2170
  3824   0013C4                     u2171:
  3825   0013C4  EF1E  F00A         	goto	l2456
  3826   0013C8                     u2170:
  3827   0013C8                     l2444:
  3828   0013C8  C00E  FFD9         	movff	check_month@month_day,fsr2l
  3829   0013CC  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  3830   0013D0  0E20               	movlw	32
  3831   0013D2  18DE               	xorwf	postinc2,w,c
  3832   0013D4  10DE               	iorwf	postinc2,w,c
  3833   0013D6  A4D8               	btfss	status,2,c
  3834   0013D8  EFF0  F009         	goto	u2181
  3835   0013DC  EFF2  F009         	goto	u2180
  3836   0013E0                     u2181:
  3837   0013E0  EF1E  F00A         	goto	l2456
  3838   0013E4                     u2180:
  3839   0013E4                     
  3840                           ;../MonthTracker.c: 18:             *month_day = 1;
  3841   0013E4  C00E  FFD9         	movff	check_month@month_day,fsr2l
  3842   0013E8  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  3843   0013EC  0E01               	movlw	1
  3844   0013EE  6EDE               	movwf	postinc2,c
  3845   0013F0  0E00               	movlw	0
  3846   0013F2  6EDD               	movwf	postdec2,c
  3847   0013F4                     
  3848                           ;../MonthTracker.c: 19:             (*month)++;
  3849   0013F4  C00C  FFD9         	movff	check_month@month,fsr2l
  3850   0013F8  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3851   0013FC  2ADE               	incf	postinc2,f,c
  3852   0013FE  0E00               	movlw	0
  3853   001400  22DD               	addwfc	postdec2,f,c
  3854   001402                     
  3855                           ;../MonthTracker.c: 20:             if (*month == 13){
  3856   001402  C00C  FFD9         	movff	check_month@month,fsr2l
  3857   001406  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3858   00140A  0E0D               	movlw	13
  3859   00140C  18DE               	xorwf	postinc2,w,c
  3860   00140E  10DE               	iorwf	postinc2,w,c
  3861   001410  A4D8               	btfss	status,2,c
  3862   001412  EF0D  F00A         	goto	u2191
  3863   001416  EF0F  F00A         	goto	u2190
  3864   00141A                     u2191:
  3865   00141A  EF1E  F00A         	goto	l2456
  3866   00141E                     u2190:
  3867   00141E                     
  3868                           ;../MonthTracker.c: 21:                 *month = 1;
  3869   00141E  C00C  FFD9         	movff	check_month@month,fsr2l
  3870   001422  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3871   001426  0E01               	movlw	1
  3872   001428  6EDE               	movwf	postinc2,c
  3873   00142A  0E00               	movlw	0
  3874   00142C  6EDD               	movwf	postdec2,c
  3875   00142E                     
  3876                           ;../MonthTracker.c: 22:                 (*year)++;
  3877   00142E  C010  FFD9         	movff	check_month@year,fsr2l
  3878   001432  C011  FFDA         	movff	check_month@year+1,fsr2h
  3879   001436  2ADE               	incf	postinc2,f,c
  3880   001438  0E00               	movlw	0
  3881   00143A  22DD               	addwfc	postdec2,f,c
  3882   00143C                     l2456:
  3883                           
  3884                           ;../MonthTracker.c: 26:         if ((*month == 4 || *month == 6 || *month == 9 || *month
      +                           == 11) && *month_day == 31){
  3885   00143C  C00C  FFD9         	movff	check_month@month,fsr2l
  3886   001440  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3887   001444  0E04               	movlw	4
  3888   001446  18DE               	xorwf	postinc2,w,c
  3889   001448  10DE               	iorwf	postinc2,w,c
  3890   00144A  B4D8               	btfsc	status,2,c
  3891   00144C  EF2A  F00A         	goto	u2201
  3892   001450  EF2C  F00A         	goto	u2200
  3893   001454                     u2201:
  3894   001454  EF56  F00A         	goto	l2464
  3895   001458                     u2200:
  3896   001458  C00C  FFD9         	movff	check_month@month,fsr2l
  3897   00145C  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3898   001460  0E06               	movlw	6
  3899   001462  18DE               	xorwf	postinc2,w,c
  3900   001464  10DE               	iorwf	postinc2,w,c
  3901   001466  B4D8               	btfsc	status,2,c
  3902   001468  EF38  F00A         	goto	u2211
  3903   00146C  EF3A  F00A         	goto	u2210
  3904   001470                     u2211:
  3905   001470  EF56  F00A         	goto	l2464
  3906   001474                     u2210:
  3907   001474  C00C  FFD9         	movff	check_month@month,fsr2l
  3908   001478  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3909   00147C  0E09               	movlw	9
  3910   00147E  18DE               	xorwf	postinc2,w,c
  3911   001480  10DE               	iorwf	postinc2,w,c
  3912   001482  B4D8               	btfsc	status,2,c
  3913   001484  EF46  F00A         	goto	u2221
  3914   001488  EF48  F00A         	goto	u2220
  3915   00148C                     u2221:
  3916   00148C  EF56  F00A         	goto	l2464
  3917   001490                     u2220:
  3918   001490  C00C  FFD9         	movff	check_month@month,fsr2l
  3919   001494  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3920   001498  0E0B               	movlw	11
  3921   00149A  18DE               	xorwf	postinc2,w,c
  3922   00149C  10DE               	iorwf	postinc2,w,c
  3923   00149E  A4D8               	btfss	status,2,c
  3924   0014A0  EF54  F00A         	goto	u2231
  3925   0014A4  EF56  F00A         	goto	u2230
  3926   0014A8                     u2231:
  3927   0014A8  EF73  F00A         	goto	l2470
  3928   0014AC                     u2230:
  3929   0014AC                     l2464:
  3930   0014AC  C00E  FFD9         	movff	check_month@month_day,fsr2l
  3931   0014B0  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  3932   0014B4  0E1F               	movlw	31
  3933   0014B6  18DE               	xorwf	postinc2,w,c
  3934   0014B8  10DE               	iorwf	postinc2,w,c
  3935   0014BA  A4D8               	btfss	status,2,c
  3936   0014BC  EF62  F00A         	goto	u2241
  3937   0014C0  EF64  F00A         	goto	u2240
  3938   0014C4                     u2241:
  3939   0014C4  EF73  F00A         	goto	l2470
  3940   0014C8                     u2240:
  3941   0014C8                     
  3942                           ;../MonthTracker.c: 28:             *month_day = 1;
  3943   0014C8  C00E  FFD9         	movff	check_month@month_day,fsr2l
  3944   0014CC  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  3945   0014D0  0E01               	movlw	1
  3946   0014D2  6EDE               	movwf	postinc2,c
  3947   0014D4  0E00               	movlw	0
  3948   0014D6  6EDD               	movwf	postdec2,c
  3949   0014D8                     
  3950                           ;../MonthTracker.c: 29:             (*month)++;
  3951   0014D8  C00C  FFD9         	movff	check_month@month,fsr2l
  3952   0014DC  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3953   0014E0  2ADE               	incf	postinc2,f,c
  3954   0014E2  0E00               	movlw	0
  3955   0014E4  22DD               	addwfc	postdec2,f,c
  3956   0014E6                     l2470:
  3957                           
  3958                           ;../MonthTracker.c: 33:         if ((*year % 4 == 0 && *year % 100 != 0) || *year % 400 
      +                          == 0) {leap_year = 1;}
  3959   0014E6  C010  FFD9         	movff	check_month@year,fsr2l
  3960   0014EA  C011  FFDA         	movff	check_month@year+1,fsr2h
  3961   0014EE  CFDE F012          	movff	postinc2,??_check_month
  3962   0014F2  CFDD F013          	movff	postdec2,??_check_month+1
  3963   0014F6  0E03               	movlw	3
  3964   0014F8  1612               	andwf	??_check_month^0,f,c
  3965   0014FA  0E00               	movlw	0
  3966   0014FC  1613               	andwf	(??_check_month+1)^0,f,c
  3967   0014FE  5012               	movf	??_check_month^0,w,c
  3968   001500  1013               	iorwf	(??_check_month+1)^0,w,c
  3969   001502  A4D8               	btfss	status,2,c
  3970   001504  EF86  F00A         	goto	u2251
  3971   001508  EF88  F00A         	goto	u2250
  3972   00150C                     u2251:
  3973   00150C  EF9F  F00A         	goto	l2474
  3974   001510                     u2250:
  3975   001510  C010  FFD9         	movff	check_month@year,fsr2l
  3976   001514  C011  FFDA         	movff	check_month@year+1,fsr2h
  3977   001518  CFDE F007          	movff	postinc2,___lwmod@dividend
  3978   00151C  CFDD F008          	movff	postdec2,___lwmod@dividend+1
  3979   001520  0E00               	movlw	0
  3980   001522  6E0A               	movwf	(___lwmod@divisor+1)^0,c
  3981   001524  0E64               	movlw	100
  3982   001526  6E09               	movwf	___lwmod@divisor^0,c
  3983   001528  ECD1  F011         	call	___lwmod	;wreg free
  3984   00152C  5007               	movf	?___lwmod^0,w,c
  3985   00152E  1008               	iorwf	(?___lwmod+1)^0,w,c
  3986   001530  A4D8               	btfss	status,2,c
  3987   001532  EF9D  F00A         	goto	u2261
  3988   001536  EF9F  F00A         	goto	u2260
  3989   00153A                     u2261:
  3990   00153A  EFB6  F00A         	goto	l2476
  3991   00153E                     u2260:
  3992   00153E                     l2474:
  3993   00153E  C010  FFD9         	movff	check_month@year,fsr2l
  3994   001542  C011  FFDA         	movff	check_month@year+1,fsr2h
  3995   001546  CFDE F007          	movff	postinc2,___lwmod@dividend
  3996   00154A  CFDD F008          	movff	postdec2,___lwmod@dividend+1
  3997   00154E  0E01               	movlw	1
  3998   001550  6E0A               	movwf	(___lwmod@divisor+1)^0,c
  3999   001552  0E90               	movlw	144
  4000   001554  6E09               	movwf	___lwmod@divisor^0,c
  4001   001556  ECD1  F011         	call	___lwmod	;wreg free
  4002   00155A  5007               	movf	?___lwmod^0,w,c
  4003   00155C  1008               	iorwf	(?___lwmod+1)^0,w,c
  4004   00155E  A4D8               	btfss	status,2,c
  4005   001560  EFB4  F00A         	goto	u2271
  4006   001564  EFB6  F00A         	goto	u2270
  4007   001568                     u2271:
  4008   001568  EFBC  F00A         	goto	l2478
  4009   00156C                     u2270:
  4010   00156C                     l2476:
  4011   00156C  0E00               	movlw	0
  4012   00156E  6E15               	movwf	(check_month@leap_year+1)^0,c
  4013   001570  0E01               	movlw	1
  4014   001572  6E14               	movwf	check_month@leap_year^0,c
  4015   001574  EFC0  F00A         	goto	l2480
  4016   001578                     l2478:
  4017   001578  0E00               	movlw	0
  4018   00157A  6E15               	movwf	(check_month@leap_year+1)^0,c
  4019   00157C  0E00               	movlw	0
  4020   00157E  6E14               	movwf	check_month@leap_year^0,c
  4021   001580                     l2480:
  4022                           
  4023                           ;../MonthTracker.c: 36:         if (*month == 2 && leap_year == 1){
  4024   001580  C00C  FFD9         	movff	check_month@month,fsr2l
  4025   001584  C00D  FFDA         	movff	check_month@month+1,fsr2h
  4026   001588  0E02               	movlw	2
  4027   00158A  18DE               	xorwf	postinc2,w,c
  4028   00158C  10DE               	iorwf	postinc2,w,c
  4029   00158E  A4D8               	btfss	status,2,c
  4030   001590  EFCC  F00A         	goto	u2281
  4031   001594  EFCE  F00A         	goto	u2280
  4032   001598                     u2281:
  4033   001598  EFF6  F00A         	goto	l2490
  4034   00159C                     u2280:
  4035   00159C  0414               	decf	check_month@leap_year^0,w,c
  4036   00159E  1015               	iorwf	(check_month@leap_year+1)^0,w,c
  4037   0015A0  A4D8               	btfss	status,2,c
  4038   0015A2  EFD5  F00A         	goto	u2291
  4039   0015A6  EFD7  F00A         	goto	u2290
  4040   0015AA                     u2291:
  4041   0015AA  EFF6  F00A         	goto	l2490
  4042   0015AE                     u2290:
  4043   0015AE                     
  4044                           ;../MonthTracker.c: 38:             if (*month_day == 30){
  4045   0015AE  C00E  FFD9         	movff	check_month@month_day,fsr2l
  4046   0015B2  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  4047   0015B6  0E1E               	movlw	30
  4048   0015B8  18DE               	xorwf	postinc2,w,c
  4049   0015BA  10DE               	iorwf	postinc2,w,c
  4050   0015BC  A4D8               	btfss	status,2,c
  4051   0015BE  EFE3  F00A         	goto	u2301
  4052   0015C2  EFE5  F00A         	goto	u2300
  4053   0015C6                     u2301:
  4054   0015C6  EF1D  F00B         	goto	l255
  4055   0015CA                     u2300:
  4056   0015CA                     l2486:
  4057                           
  4058                           ;../MonthTracker.c: 39:                 *month_day = 1;
  4059   0015CA  C00E  FFD9         	movff	check_month@month_day,fsr2l
  4060   0015CE  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  4061   0015D2  0E01               	movlw	1
  4062   0015D4  6EDE               	movwf	postinc2,c
  4063   0015D6  0E00               	movlw	0
  4064   0015D8  6EDD               	movwf	postdec2,c
  4065   0015DA                     
  4066                           ;../MonthTracker.c: 40:                 (*month)++;
  4067   0015DA  C00C  FFD9         	movff	check_month@month,fsr2l
  4068   0015DE  C00D  FFDA         	movff	check_month@month+1,fsr2h
  4069   0015E2  2ADE               	incf	postinc2,f,c
  4070   0015E4  0E00               	movlw	0
  4071   0015E6  22DD               	addwfc	postdec2,f,c
  4072   0015E8  EF1D  F00B         	goto	l255
  4073   0015EC                     l2490:
  4074   0015EC  C00C  FFD9         	movff	check_month@month,fsr2l
  4075   0015F0  C00D  FFDA         	movff	check_month@month+1,fsr2h
  4076   0015F4  0E02               	movlw	2
  4077   0015F6  18DE               	xorwf	postinc2,w,c
  4078   0015F8  10DE               	iorwf	postinc2,w,c
  4079   0015FA  A4D8               	btfss	status,2,c
  4080   0015FC  EF02  F00B         	goto	u2311
  4081   001600  EF04  F00B         	goto	u2310
  4082   001604                     u2311:
  4083   001604  EF1D  F00B         	goto	l255
  4084   001608                     u2310:
  4085   001608  5014               	movf	check_month@leap_year^0,w,c
  4086   00160A  1015               	iorwf	(check_month@leap_year+1)^0,w,c
  4087   00160C  A4D8               	btfss	status,2,c
  4088   00160E  EF0B  F00B         	goto	u2321
  4089   001612  EF0D  F00B         	goto	u2320
  4090   001616                     u2321:
  4091   001616  EF1D  F00B         	goto	l255
  4092   00161A                     u2320:
  4093   00161A                     
  4094                           ;../MonthTracker.c: 44:             if (*month_day == 29){
  4095   00161A  C00E  FFD9         	movff	check_month@month_day,fsr2l
  4096   00161E  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  4097   001622  0E1D               	movlw	29
  4098   001624  18DE               	xorwf	postinc2,w,c
  4099   001626  10DE               	iorwf	postinc2,w,c
  4100   001628  A4D8               	btfss	status,2,c
  4101   00162A  EF19  F00B         	goto	u2331
  4102   00162E  EF1B  F00B         	goto	u2330
  4103   001632                     u2331:
  4104   001632  EF1D  F00B         	goto	l255
  4105   001636                     u2330:
  4106   001636  EFE5  F00A         	goto	l2486
  4107   00163A                     l255:
  4108   00163A  0012               	return		;funcret
  4109   00163C                     __end_of_check_month:
  4110                           	callstack 0
  4111                           
  4112 ;; *************** function ___lwmod *****************
  4113 ;; Defined at:
  4114 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwmod.c"
  4115 ;; Parameters:    Size  Location     Type
  4116 ;;  dividend        2    6[COMRAM] unsigned int 
  4117 ;;  divisor         2    8[COMRAM] unsigned int 
  4118 ;; Auto vars:     Size  Location     Type
  4119 ;;  counter         1   10[COMRAM] unsigned char 
  4120 ;; Return value:  Size  Location     Type
  4121 ;;                  2    6[COMRAM] unsigned int 
  4122 ;; Registers used:
  4123 ;;		wreg, status,2, status,0
  4124 ;; Tracked objects:
  4125 ;;		On entry : 0/0
  4126 ;;		On exit  : 0/0
  4127 ;;		Unchanged: 0/0
  4128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4129 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4130 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4132 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4133 ;;Total ram usage:        5 bytes
  4134 ;; Hardware stack levels used: 1
  4135 ;; Hardware stack levels required when called: 1
  4136 ;; This function calls:
  4137 ;;		Nothing
  4138 ;; This function is called by:
  4139 ;;		_main
  4140 ;;		_check_month
  4141 ;; This function uses a non-reentrant model
  4142 ;;
  4143                           
  4144                           	psect	text17
  4145   0023A2                     __ptext17:
  4146                           	callstack 0
  4147   0023A2                     ___lwmod:
  4148                           	callstack 28
  4149   0023A2  5009               	movf	___lwmod@divisor^0,w,c
  4150   0023A4  100A               	iorwf	(___lwmod@divisor+1)^0,w,c
  4151   0023A6  B4D8               	btfsc	status,2,c
  4152   0023A8  EFD8  F011         	goto	u1951
  4153   0023AC  EFDA  F011         	goto	u1950
  4154   0023B0                     u1951:
  4155   0023B0  EFFE  F011         	goto	l820
  4156   0023B4                     u1950:
  4157   0023B4  0E01               	movlw	1
  4158   0023B6  6E0B               	movwf	___lwmod@counter^0,c
  4159   0023B8  EFE2  F011         	goto	l2304
  4160   0023BC                     l2302:
  4161   0023BC  90D8               	bcf	status,0,c
  4162   0023BE  3609               	rlcf	___lwmod@divisor^0,f,c
  4163   0023C0  360A               	rlcf	(___lwmod@divisor+1)^0,f,c
  4164   0023C2  2A0B               	incf	___lwmod@counter^0,f,c
  4165   0023C4                     l2304:
  4166   0023C4  AE0A               	btfss	(___lwmod@divisor+1)^0,7,c
  4167   0023C6  EFE7  F011         	goto	u1961
  4168   0023CA  EFE9  F011         	goto	u1960
  4169   0023CE                     u1961:
  4170   0023CE  EFDE  F011         	goto	l2302
  4171   0023D2                     u1960:
  4172   0023D2                     l2306:
  4173   0023D2  5009               	movf	___lwmod@divisor^0,w,c
  4174   0023D4  5C07               	subwf	___lwmod@dividend^0,w,c
  4175   0023D6  500A               	movf	(___lwmod@divisor+1)^0,w,c
  4176   0023D8  5808               	subwfb	(___lwmod@dividend+1)^0,w,c
  4177   0023DA  A0D8               	btfss	status,0,c
  4178   0023DC  EFF2  F011         	goto	u1971
  4179   0023E0  EFF4  F011         	goto	u1970
  4180   0023E4                     u1971:
  4181   0023E4  EFF8  F011         	goto	l2310
  4182   0023E8                     u1970:
  4183   0023E8  5009               	movf	___lwmod@divisor^0,w,c
  4184   0023EA  5E07               	subwf	___lwmod@dividend^0,f,c
  4185   0023EC  500A               	movf	(___lwmod@divisor+1)^0,w,c
  4186   0023EE  5A08               	subwfb	(___lwmod@dividend+1)^0,f,c
  4187   0023F0                     l2310:
  4188   0023F0  90D8               	bcf	status,0,c
  4189   0023F2  320A               	rrcf	(___lwmod@divisor+1)^0,f,c
  4190   0023F4  3209               	rrcf	___lwmod@divisor^0,f,c
  4191   0023F6  2E0B               	decfsz	___lwmod@counter^0,f,c
  4192   0023F8  EFE9  F011         	goto	l2306
  4193   0023FC                     l820:
  4194   0023FC  C007  F007         	movff	___lwmod@dividend,?___lwmod
  4195   002400  C008  F008         	movff	___lwmod@dividend+1,?___lwmod+1
  4196   002404  0012               	return		;funcret
  4197   002406                     __end_of___lwmod:
  4198                           	callstack 0
  4199                           
  4200 ;; *************** function ___lwdiv *****************
  4201 ;; Defined at:
  4202 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  4203 ;; Parameters:    Size  Location     Type
  4204 ;;  dividend        2    6[COMRAM] unsigned int 
  4205 ;;  divisor         2    8[COMRAM] unsigned int 
  4206 ;; Auto vars:     Size  Location     Type
  4207 ;;  quotient        2   10[COMRAM] unsigned int 
  4208 ;;  counter         1   12[COMRAM] unsigned char 
  4209 ;; Return value:  Size  Location     Type
  4210 ;;                  2    6[COMRAM] unsigned int 
  4211 ;; Registers used:
  4212 ;;		wreg, status,2, status,0
  4213 ;; Tracked objects:
  4214 ;;		On entry : 0/0
  4215 ;;		On exit  : 0/0
  4216 ;;		Unchanged: 0/0
  4217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4218 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4219 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4221 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4222 ;;Total ram usage:        7 bytes
  4223 ;; Hardware stack levels used: 1
  4224 ;; Hardware stack levels required when called: 1
  4225 ;; This function calls:
  4226 ;;		Nothing
  4227 ;; This function is called by:
  4228 ;;		_main
  4229 ;;		_LEDarray_disp_dec
  4230 ;;		_LEDarray_disp_PPM
  4231 ;;		_ADC2String
  4232 ;; This function uses a non-reentrant model
  4233 ;;
  4234                           
  4235                           	psect	text18
  4236   0022C6                     __ptext18:
  4237                           	callstack 0
  4238   0022C6                     ___lwdiv:
  4239                           	callstack 29
  4240   0022C6  0E00               	movlw	0
  4241   0022C8  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  4242   0022CA  0E00               	movlw	0
  4243   0022CC  6E0B               	movwf	___lwdiv@quotient^0,c
  4244   0022CE  5009               	movf	___lwdiv@divisor^0,w,c
  4245   0022D0  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4246   0022D2  B4D8               	btfsc	status,2,c
  4247   0022D4  EF6E  F011         	goto	u2341
  4248   0022D8  EF70  F011         	goto	u2340
  4249   0022DC                     u2341:
  4250   0022DC  EF98  F011         	goto	l810
  4251   0022E0                     u2340:
  4252   0022E0  0E01               	movlw	1
  4253   0022E2  6E0D               	movwf	___lwdiv@counter^0,c
  4254   0022E4  EF78  F011         	goto	l2512
  4255   0022E8                     l2510:
  4256   0022E8  90D8               	bcf	status,0,c
  4257   0022EA  3609               	rlcf	___lwdiv@divisor^0,f,c
  4258   0022EC  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4259   0022EE  2A0D               	incf	___lwdiv@counter^0,f,c
  4260   0022F0                     l2512:
  4261   0022F0  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  4262   0022F2  EF7D  F011         	goto	u2351
  4263   0022F6  EF7F  F011         	goto	u2350
  4264   0022FA                     u2351:
  4265   0022FA  EF74  F011         	goto	l2510
  4266   0022FE                     u2350:
  4267   0022FE                     l2514:
  4268   0022FE  90D8               	bcf	status,0,c
  4269   002300  360B               	rlcf	___lwdiv@quotient^0,f,c
  4270   002302  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4271   002304  5009               	movf	___lwdiv@divisor^0,w,c
  4272   002306  5C07               	subwf	___lwdiv@dividend^0,w,c
  4273   002308  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  4274   00230A  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4275   00230C  A0D8               	btfss	status,0,c
  4276   00230E  EF8B  F011         	goto	u2361
  4277   002312  EF8D  F011         	goto	u2360
  4278   002316                     u2361:
  4279   002316  EF92  F011         	goto	l2522
  4280   00231A                     u2360:
  4281   00231A  5009               	movf	___lwdiv@divisor^0,w,c
  4282   00231C  5E07               	subwf	___lwdiv@dividend^0,f,c
  4283   00231E  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  4284   002320  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4285   002322  800B               	bsf	___lwdiv@quotient^0,0,c
  4286   002324                     l2522:
  4287   002324  90D8               	bcf	status,0,c
  4288   002326  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4289   002328  3209               	rrcf	___lwdiv@divisor^0,f,c
  4290   00232A  2E0D               	decfsz	___lwdiv@counter^0,f,c
  4291   00232C  EF7F  F011         	goto	l2514
  4292   002330                     l810:
  4293   002330  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  4294   002334  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4295   002338  0012               	return		;funcret
  4296   00233A                     __end_of___lwdiv:
  4297                           	callstack 0
  4298                           
  4299 ;; *************** function _Timer0_init *****************
  4300 ;; Defined at:
  4301 ;;		line 7 in file "../timers.c"
  4302 ;; Parameters:    Size  Location     Type
  4303 ;;		None
  4304 ;; Auto vars:     Size  Location     Type
  4305 ;;		None
  4306 ;; Return value:  Size  Location     Type
  4307 ;;                  1    wreg      void 
  4308 ;; Registers used:
  4309 ;;		wreg, status,2
  4310 ;; Tracked objects:
  4311 ;;		On entry : 0/0
  4312 ;;		On exit  : 0/0
  4313 ;;		Unchanged: 0/0
  4314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4319 ;;Total ram usage:        0 bytes
  4320 ;; Hardware stack levels used: 1
  4321 ;; Hardware stack levels required when called: 1
  4322 ;; This function calls:
  4323 ;;		Nothing
  4324 ;; This function is called by:
  4325 ;;		_main
  4326 ;; This function uses a non-reentrant model
  4327 ;;
  4328                           
  4329                           	psect	text19
  4330   0026FA                     __ptext19:
  4331                           	callstack 0
  4332   0026FA                     _Timer0_init:
  4333                           	callstack 29
  4334   0026FA                     
  4335                           ;../timers.c: 9:     T0CON1bits.T0CS=0b010;
  4336   0026FA  50D6               	movf	214,w,c	;volatile
  4337   0026FC  0B1F               	andlw	-225
  4338   0026FE  0940               	iorlw	64
  4339   002700  6ED6               	movwf	214,c	;volatile
  4340   002702                     
  4341                           ;../timers.c: 10:     T0CON1bits.T0ASYNC=1;
  4342   002702  88D6               	bsf	214,4,c	;volatile
  4343                           
  4344                           ;../timers.c: 11:     T0CON1bits.T0CKPS=0b0010;
  4345   002704  50D6               	movf	214,w,c	;volatile
  4346   002706  0BF0               	andlw	-16
  4347   002708  0902               	iorlw	2
  4348   00270A  6ED6               	movwf	214,c	;volatile
  4349   00270C                     
  4350                           ;../timers.c: 12:     T0CON0bits.T016BIT=1;
  4351   00270C  88D5               	bsf	213,4,c	;volatile
  4352                           
  4353                           ;../timers.c: 16:     TMR0H=0b00001011;
  4354   00270E  0E0B               	movlw	11
  4355   002710  6ED4               	movwf	212,c	;volatile
  4356                           
  4357                           ;../timers.c: 17:     TMR0L=0b00001011;
  4358   002712  0E0B               	movlw	11
  4359   002714  6ED3               	movwf	211,c	;volatile
  4360   002716                     
  4361                           ;../timers.c: 22:     T0CON0bits.T0EN=1;
  4362   002716  8ED5               	bsf	213,7,c	;volatile
  4363   002718  0012               	return		;funcret
  4364   00271A                     __end_of_Timer0_init:
  4365                           	callstack 0
  4366                           
  4367 ;; *************** function _Light_init *****************
  4368 ;; Defined at:
  4369 ;;		line 8 in file "../comparator.c"
  4370 ;; Parameters:    Size  Location     Type
  4371 ;;		None
  4372 ;; Auto vars:     Size  Location     Type
  4373 ;;		None
  4374 ;; Return value:  Size  Location     Type
  4375 ;;                  1    wreg      void 
  4376 ;; Registers used:
  4377 ;;		None
  4378 ;; Tracked objects:
  4379 ;;		On entry : 0/0
  4380 ;;		On exit  : 0/0
  4381 ;;		Unchanged: 0/0
  4382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4387 ;;Total ram usage:        0 bytes
  4388 ;; Hardware stack levels used: 1
  4389 ;; Hardware stack levels required when called: 1
  4390 ;; This function calls:
  4391 ;;		Nothing
  4392 ;; This function is called by:
  4393 ;;		_main
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397                           	psect	text20
  4398   002760                     __ptext20:
  4399                           	callstack 0
  4400   002760                     _Light_init:
  4401                           	callstack 29
  4402   002760                     
  4403                           ;../comparator.c: 10:    LATHbits.LATH3=1;
  4404   002760  8680               	bsf	128,3,c	;volatile
  4405                           
  4406                           ;../comparator.c: 11:    TRISHbits.TRISH3=0;
  4407   002762  9688               	bcf	136,3,c	;volatile
  4408   002764  0012               	return		;funcret
  4409   002766                     __end_of_Light_init:
  4410                           	callstack 0
  4411                           
  4412 ;; *************** function _LEDarray_init *****************
  4413 ;; Defined at:
  4414 ;;		line 8 in file "../LEDarray.c"
  4415 ;; Parameters:    Size  Location     Type
  4416 ;;		None
  4417 ;; Auto vars:     Size  Location     Type
  4418 ;;		None
  4419 ;; Return value:  Size  Location     Type
  4420 ;;                  1    wreg      void 
  4421 ;; Registers used:
  4422 ;;		None
  4423 ;; Tracked objects:
  4424 ;;		On entry : 0/0
  4425 ;;		On exit  : 0/0
  4426 ;;		Unchanged: 0/0
  4427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4432 ;;Total ram usage:        0 bytes
  4433 ;; Hardware stack levels used: 1
  4434 ;; Hardware stack levels required when called: 1
  4435 ;; This function calls:
  4436 ;;		Nothing
  4437 ;; This function is called by:
  4438 ;;		_main
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           
  4442                           	psect	text21
  4443   0026D8                     __ptext21:
  4444                           	callstack 0
  4445   0026D8                     _LEDarray_init:
  4446                           	callstack 29
  4447   0026D8                     
  4448                           ;../LEDarray.c: 9:     TRISGbits.TRISG0 = 0;
  4449   0026D8  9087               	bcf	135,0,c	;volatile
  4450                           
  4451                           ;../LEDarray.c: 10:     TRISGbits.TRISG1 = 0;
  4452   0026DA  9287               	bcf	135,1,c	;volatile
  4453                           
  4454                           ;../LEDarray.c: 11:     TRISAbits.TRISA2 = 0;
  4455   0026DC  9481               	bcf	129,2,c	;volatile
  4456                           
  4457                           ;../LEDarray.c: 12:     TRISFbits.TRISF6 = 0;
  4458   0026DE  9C86               	bcf	134,6,c	;volatile
  4459                           
  4460                           ;../LEDarray.c: 13:     TRISAbits.TRISA4 = 0;
  4461   0026E0  9881               	bcf	129,4,c	;volatile
  4462                           
  4463                           ;../LEDarray.c: 14:     TRISAbits.TRISA5 = 0;
  4464   0026E2  9A81               	bcf	129,5,c	;volatile
  4465                           
  4466                           ;../LEDarray.c: 15:     TRISFbits.TRISF0 = 0;
  4467   0026E4  9086               	bcf	134,0,c	;volatile
  4468                           
  4469                           ;../LEDarray.c: 16:     TRISBbits.TRISB0 = 0;
  4470   0026E6  9082               	bcf	130,0,c	;volatile
  4471                           
  4472                           ;../LEDarray.c: 18:     LATGbits.LATG0 = 0;
  4473   0026E8  907F               	bcf	127,0,c	;volatile
  4474                           
  4475                           ;../LEDarray.c: 19:     LATGbits.LATG1 = 0;
  4476   0026EA  927F               	bcf	127,1,c	;volatile
  4477                           
  4478                           ;../LEDarray.c: 20:     LATAbits.LATA2 = 0;
  4479   0026EC  9479               	bcf	121,2,c	;volatile
  4480                           
  4481                           ;../LEDarray.c: 21:     LATFbits.LATF6 = 0;
  4482   0026EE  9C7E               	bcf	126,6,c	;volatile
  4483                           
  4484                           ;../LEDarray.c: 22:     LATAbits.LATA4 = 0;
  4485   0026F0  9879               	bcf	121,4,c	;volatile
  4486                           
  4487                           ;../LEDarray.c: 23:     LATAbits.LATA5 = 0;
  4488   0026F2  9A79               	bcf	121,5,c	;volatile
  4489                           
  4490                           ;../LEDarray.c: 24:     LATFbits.LATF0 = 0;
  4491   0026F4  907E               	bcf	126,0,c	;volatile
  4492                           
  4493                           ;../LEDarray.c: 25:     LATBbits.LATB0 = 0;
  4494   0026F6  907A               	bcf	122,0,c	;volatile
  4495   0026F8  0012               	return		;funcret
  4496   0026FA                     __end_of_LEDarray_init:
  4497                           	callstack 0
  4498                           
  4499 ;; *************** function _LEDarray_disp_bin *****************
  4500 ;; Defined at:
  4501 ;;		line 37 in file "../LEDarray.c"
  4502 ;; Parameters:    Size  Location     Type
  4503 ;;  number          2    0[COMRAM] unsigned int 
  4504 ;; Auto vars:     Size  Location     Type
  4505 ;;		None
  4506 ;; Return value:  Size  Location     Type
  4507 ;;                  1    wreg      void 
  4508 ;; Registers used:
  4509 ;;		None
  4510 ;; Tracked objects:
  4511 ;;		On entry : 0/0
  4512 ;;		On exit  : 0/0
  4513 ;;		Unchanged: 0/0
  4514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4515 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4518 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4519 ;;Total ram usage:        2 bytes
  4520 ;; Hardware stack levels used: 1
  4521 ;; Hardware stack levels required when called: 1
  4522 ;; This function calls:
  4523 ;;		Nothing
  4524 ;; This function is called by:
  4525 ;;		_main
  4526 ;;		_LEDarray_disp_dec
  4527 ;;		_LEDarray_disp_PPM
  4528 ;; This function uses a non-reentrant model
  4529 ;;
  4530                           
  4531                           	psect	text22
  4532   0020BE                     __ptext22:
  4533                           	callstack 0
  4534   0020BE                     _LEDarray_disp_bin:
  4535                           	callstack 29
  4536   0020BE                     
  4537                           ;../LEDarray.c: 38:     if (number & 0b000000001) {LATGbits.LATG0=1;} else {LATGbits.LAT
      +                          G0=0;}
  4538   0020BE  A001               	btfss	LEDarray_disp_bin@number^0,0,c
  4539   0020C0  EF64  F010         	goto	u1991
  4540   0020C4  EF66  F010         	goto	u1990
  4541   0020C8                     u1991:
  4542   0020C8  EF69  F010         	goto	l48
  4543   0020CC                     u1990:
  4544   0020CC  807F               	bsf	127,0,c	;volatile
  4545   0020CE  EF6A  F010         	goto	l49
  4546   0020D2                     l48:
  4547   0020D2  907F               	bcf	127,0,c	;volatile
  4548   0020D4                     l49:
  4549                           
  4550                           ;../LEDarray.c: 39:     if (number & 0b000000010) {LATGbits.LATG1=1;} else {LATGbits.LAT
      +                          G1=0;}
  4551   0020D4  A201               	btfss	LEDarray_disp_bin@number^0,1,c
  4552   0020D6  EF6F  F010         	goto	u2001
  4553   0020DA  EF71  F010         	goto	u2000
  4554   0020DE                     u2001:
  4555   0020DE  EF74  F010         	goto	l50
  4556   0020E2                     u2000:
  4557   0020E2  827F               	bsf	127,1,c	;volatile
  4558   0020E4  EF75  F010         	goto	l51
  4559   0020E8                     l50:
  4560   0020E8  927F               	bcf	127,1,c	;volatile
  4561   0020EA                     l51:
  4562                           
  4563                           ;../LEDarray.c: 40:     if (number & 0b000000100) {LATAbits.LATA2=1;} else {LATAbits.LAT
      +                          A2=0;}
  4564   0020EA  A401               	btfss	LEDarray_disp_bin@number^0,2,c
  4565   0020EC  EF7A  F010         	goto	u2011
  4566   0020F0  EF7C  F010         	goto	u2010
  4567   0020F4                     u2011:
  4568   0020F4  EF7F  F010         	goto	l52
  4569   0020F8                     u2010:
  4570   0020F8  8479               	bsf	121,2,c	;volatile
  4571   0020FA  EF80  F010         	goto	l53
  4572   0020FE                     l52:
  4573   0020FE  9479               	bcf	121,2,c	;volatile
  4574   002100                     l53:
  4575                           
  4576                           ;../LEDarray.c: 41:     if (number & 0b000001000) {LATFbits.LATF6=1;} else {LATFbits.LAT
      +                          F6=0;}
  4577   002100  A601               	btfss	LEDarray_disp_bin@number^0,3,c
  4578   002102  EF85  F010         	goto	u2021
  4579   002106  EF87  F010         	goto	u2020
  4580   00210A                     u2021:
  4581   00210A  EF8A  F010         	goto	l54
  4582   00210E                     u2020:
  4583   00210E  8C7E               	bsf	126,6,c	;volatile
  4584   002110  EF8B  F010         	goto	l55
  4585   002114                     l54:
  4586   002114  9C7E               	bcf	126,6,c	;volatile
  4587   002116                     l55:
  4588                           
  4589                           ;../LEDarray.c: 42:     if (number & 0b000010000) {LATAbits.LATA4=1;} else {LATAbits.LAT
      +                          A4=0;}
  4590   002116  A801               	btfss	LEDarray_disp_bin@number^0,4,c
  4591   002118  EF90  F010         	goto	u2031
  4592   00211C  EF92  F010         	goto	u2030
  4593   002120                     u2031:
  4594   002120  EF95  F010         	goto	l56
  4595   002124                     u2030:
  4596   002124  8879               	bsf	121,4,c	;volatile
  4597   002126  EF96  F010         	goto	l57
  4598   00212A                     l56:
  4599   00212A  9879               	bcf	121,4,c	;volatile
  4600   00212C                     l57:
  4601                           
  4602                           ;../LEDarray.c: 43:     if (number & 0b000100000) {LATAbits.LATA5=1;} else {LATAbits.LAT
      +                          A5=0;}
  4603   00212C  AA01               	btfss	LEDarray_disp_bin@number^0,5,c
  4604   00212E  EF9B  F010         	goto	u2041
  4605   002132  EF9D  F010         	goto	u2040
  4606   002136                     u2041:
  4607   002136  EFA0  F010         	goto	l58
  4608   00213A                     u2040:
  4609   00213A  8A79               	bsf	121,5,c	;volatile
  4610   00213C  EFA1  F010         	goto	l59
  4611   002140                     l58:
  4612   002140  9A79               	bcf	121,5,c	;volatile
  4613   002142                     l59:
  4614                           
  4615                           ;../LEDarray.c: 44:     if (number & 0b001000000) {LATFbits.LATF0=1;} else {LATFbits.LAT
      +                          F0=0;}
  4616   002142  AC01               	btfss	LEDarray_disp_bin@number^0,6,c
  4617   002144  EFA6  F010         	goto	u2051
  4618   002148  EFA8  F010         	goto	u2050
  4619   00214C                     u2051:
  4620   00214C  EFAB  F010         	goto	l60
  4621   002150                     u2050:
  4622   002150  807E               	bsf	126,0,c	;volatile
  4623   002152  EFAC  F010         	goto	l61
  4624   002156                     l60:
  4625   002156  907E               	bcf	126,0,c	;volatile
  4626   002158                     l61:
  4627                           
  4628                           ;../LEDarray.c: 45:     if (number & 0b010000000) {LATBbits.LATB0=1;} else {LATBbits.LAT
      +                          B0=0;}
  4629   002158  AE01               	btfss	LEDarray_disp_bin@number^0,7,c
  4630   00215A  EFB1  F010         	goto	u2061
  4631   00215E  EFB3  F010         	goto	u2060
  4632   002162                     u2061:
  4633   002162  EFB6  F010         	goto	l62
  4634   002166                     u2060:
  4635   002166  807A               	bsf	122,0,c	;volatile
  4636   002168  EFB7  F010         	goto	l63
  4637   00216C                     l62:
  4638   00216C  907A               	bcf	122,0,c	;volatile
  4639   00216E                     l63:
  4640                           
  4641                           ;../LEDarray.c: 46:     if (number & 0b100000000) {LATBbits.LATB1=1;} else {LATBbits.LAT
      +                          B1=0;}
  4642   00216E  A002               	btfss	(LEDarray_disp_bin@number+1)^0,0,c
  4643   002170  EFBC  F010         	goto	u2071
  4644   002174  EFBE  F010         	goto	u2070
  4645   002178                     u2071:
  4646   002178  EFC1  F010         	goto	l64
  4647   00217C                     u2070:
  4648   00217C  827A               	bsf	122,1,c	;volatile
  4649   00217E  EFC2  F010         	goto	l66
  4650   002182                     l64:
  4651   002182  927A               	bcf	122,1,c	;volatile
  4652   002184                     l66:
  4653   002184  0012               	return		;funcret
  4654   002186                     __end_of_LEDarray_disp_bin:
  4655                           	callstack 0
  4656                           
  4657 ;; *************** function _LCD_setline *****************
  4658 ;; Defined at:
  4659 ;;		line 96 in file "../LCD.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;  line            1    wreg     unsigned char 
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;  line            1    3[COMRAM] unsigned char 
  4664 ;; Return value:  Size  Location     Type
  4665 ;;                  1    wreg      void 
  4666 ;; Registers used:
  4667 ;;		wreg, status,2, status,0, cstack
  4668 ;; Tracked objects:
  4669 ;;		On entry : 0/0
  4670 ;;		On exit  : 0/0
  4671 ;;		Unchanged: 0/0
  4672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4674 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4676 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4677 ;;Total ram usage:        1 bytes
  4678 ;; Hardware stack levels used: 1
  4679 ;; Hardware stack levels required when called: 4
  4680 ;; This function calls:
  4681 ;;		_LCD_sendbyte
  4682 ;; This function is called by:
  4683 ;;		_main
  4684 ;; This function uses a non-reentrant model
  4685 ;;
  4686                           
  4687                           	psect	text23
  4688   0025BC                     __ptext23:
  4689                           	callstack 0
  4690   0025BC                     _LCD_setline:
  4691                           	callstack 26
  4692                           
  4693                           ;incstack = 0
  4694                           ;LCD_setline@line stored from wreg
  4695   0025BC  6E04               	movwf	LCD_setline@line^0,c
  4696   0025BE                     
  4697                           ;../LCD.c: 96: void LCD_setline (char line);../LCD.c: 97: {;../LCD.c: 98:     if (line =
      +                          = 1) {LCD_sendbyte(0x80,0);};
  4698   0025BE  0404               	decf	LCD_setline@line^0,w,c
  4699   0025C0  A4D8               	btfss	status,2,c
  4700   0025C2  EFE5  F012         	goto	u2081
  4701   0025C6  EFE7  F012         	goto	u2080
  4702   0025CA                     u2081:
  4703   0025CA  EFEC  F012         	goto	l2404
  4704   0025CE                     u2080:
  4705   0025CE  0E00               	movlw	0
  4706   0025D0  6E02               	movwf	LCD_sendbyte@type^0,c
  4707   0025D2  0E80               	movlw	128
  4708   0025D4  ECFB  F012         	call	_LCD_sendbyte
  4709   0025D8                     l2404:
  4710                           
  4711                           ;../LCD.c: 99:     if (line == 2) {LCD_sendbyte(0xC0,0);}
  4712   0025D8  0E02               	movlw	2
  4713   0025DA  1804               	xorwf	LCD_setline@line^0,w,c
  4714   0025DC  A4D8               	btfss	status,2,c
  4715   0025DE  EFF3  F012         	goto	u2091
  4716   0025E2  EFF5  F012         	goto	u2090
  4717   0025E6                     u2091:
  4718   0025E6  EFFA  F012         	goto	l301
  4719   0025EA                     u2090:
  4720   0025EA  0E00               	movlw	0
  4721   0025EC  6E02               	movwf	LCD_sendbyte@type^0,c
  4722   0025EE  0EC0               	movlw	192
  4723   0025F0  ECFB  F012         	call	_LCD_sendbyte
  4724   0025F4                     l301:
  4725   0025F4  0012               	return		;funcret
  4726   0025F6                     __end_of_LCD_setline:
  4727                           	callstack 0
  4728                           
  4729 ;; *************** function _LCD_sendstring *****************
  4730 ;; Defined at:
  4731 ;;		line 105 in file "../LCD.c"
  4732 ;; Parameters:    Size  Location     Type
  4733 ;;  string          2    3[COMRAM] PTR unsigned char 
  4734 ;;		 -> main@yearstr(20), main@datestr(50), 
  4735 ;; Auto vars:     Size  Location     Type
  4736 ;;		None
  4737 ;; Return value:  Size  Location     Type
  4738 ;;                  1    wreg      void 
  4739 ;; Registers used:
  4740 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4741 ;; Tracked objects:
  4742 ;;		On entry : 0/0
  4743 ;;		On exit  : 0/0
  4744 ;;		Unchanged: 0/0
  4745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4746 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4749 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4750 ;;Total ram usage:        2 bytes
  4751 ;; Hardware stack levels used: 1
  4752 ;; Hardware stack levels required when called: 4
  4753 ;; This function calls:
  4754 ;;		_LCD_sendbyte
  4755 ;; This function is called by:
  4756 ;;		_main
  4757 ;; This function uses a non-reentrant model
  4758 ;;
  4759                           
  4760                           	psect	text24
  4761   00262C                     __ptext24:
  4762                           	callstack 0
  4763   00262C                     _LCD_sendstring:
  4764                           	callstack 26
  4765   00262C                     
  4766                           ;../LCD.c: 105: void LCD_sendstring(char *string);../LCD.c: 106: {;../LCD.c: 107:  while
      +                          (*string != 0) {
  4767   00262C  EF23  F013         	goto	l2426
  4768   002630                     l2422:
  4769                           
  4770                           ;../LCD.c: 108:         LCD_sendbyte(*string++,1);
  4771   002630  0E01               	movlw	1
  4772   002632  6E02               	movwf	LCD_sendbyte@type^0,c
  4773   002634  C004  FFD9         	movff	LCD_sendstring@string,fsr2l
  4774   002638  C005  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  4775   00263C  50DF               	movf	indf2,w,c
  4776   00263E  ECFB  F012         	call	_LCD_sendbyte
  4777   002642  4A04               	infsnz	LCD_sendstring@string^0,f,c
  4778   002644  2A05               	incf	(LCD_sendstring@string+1)^0,f,c
  4779   002646                     l2426:
  4780                           
  4781                           ;../LCD.c: 107:  while(*string != 0) {
  4782   002646  C004  FFD9         	movff	LCD_sendstring@string,fsr2l
  4783   00264A  C005  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  4784   00264E  50DF               	movf	indf2,w,c
  4785   002650  A4D8               	btfss	status,2,c
  4786   002652  EF2D  F013         	goto	u2101
  4787   002656  EF2F  F013         	goto	u2100
  4788   00265A                     u2101:
  4789   00265A  EF18  F013         	goto	l2422
  4790   00265E                     u2100:
  4791   00265E  0012               	return		;funcret
  4792   002660                     __end_of_LCD_sendstring:
  4793                           	callstack 0
  4794                           
  4795 ;; *************** function _LCD_clear *****************
  4796 ;; Defined at:
  4797 ;;		line 87 in file "../LCD.c"
  4798 ;; Parameters:    Size  Location     Type
  4799 ;;		None
  4800 ;; Auto vars:     Size  Location     Type
  4801 ;;		None
  4802 ;; Return value:  Size  Location     Type
  4803 ;;                  1    wreg      void 
  4804 ;; Registers used:
  4805 ;;		wreg, status,2, status,0, cstack
  4806 ;; Tracked objects:
  4807 ;;		On entry : 0/0
  4808 ;;		On exit  : 0/0
  4809 ;;		Unchanged: 0/0
  4810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4813 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4814 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4815 ;;Total ram usage:        1 bytes
  4816 ;; Hardware stack levels used: 1
  4817 ;; Hardware stack levels required when called: 4
  4818 ;; This function calls:
  4819 ;;		_LCD_sendbyte
  4820 ;; This function is called by:
  4821 ;;		_main
  4822 ;; This function uses a non-reentrant model
  4823 ;;
  4824                           
  4825                           	psect	text25
  4826   00271A                     __ptext25:
  4827                           	callstack 0
  4828   00271A                     _LCD_clear:
  4829                           	callstack 26
  4830   00271A                     
  4831                           ;../LCD.c: 89:     LCD_sendbyte(0b00000001,0);
  4832   00271A  0E00               	movlw	0
  4833   00271C  6E02               	movwf	LCD_sendbyte@type^0,c
  4834   00271E  0E01               	movlw	1
  4835   002720  ECFB  F012         	call	_LCD_sendbyte
  4836   002724                     
  4837                           ;../LCD.c: 90:     _delay((unsigned long)((2)*(64000000/4000.0)));
  4838   002724  0E2A               	movlw	42
  4839   002726  6E04               	movwf	??_LCD_clear^0,c
  4840   002728  0E8E               	movlw	142
  4841   00272A                     u2767:
  4842   00272A  2EE8               	decfsz	wreg,f,c
  4843   00272C  D7FE               	bra	u2767
  4844   00272E  2E04               	decfsz	??_LCD_clear^0,f,c
  4845   002730  D7FC               	bra	u2767
  4846   002732  0012               	return		;funcret
  4847   002734                     __end_of_LCD_clear:
  4848                           	callstack 0
  4849                           
  4850 ;; *************** function _LCD_Init *****************
  4851 ;; Defined at:
  4852 ;;		line 48 in file "../LCD.c"
  4853 ;; Parameters:    Size  Location     Type
  4854 ;;		None
  4855 ;; Auto vars:     Size  Location     Type
  4856 ;;		None
  4857 ;; Return value:  Size  Location     Type
  4858 ;;                  1    wreg      void 
  4859 ;; Registers used:
  4860 ;;		wreg, status,2, status,0, cstack
  4861 ;; Tracked objects:
  4862 ;;		On entry : 0/0
  4863 ;;		On exit  : 0/0
  4864 ;;		Unchanged: 0/0
  4865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4868 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4869 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4870 ;;Total ram usage:        2 bytes
  4871 ;; Hardware stack levels used: 1
  4872 ;; Hardware stack levels required when called: 4
  4873 ;; This function calls:
  4874 ;;		_LCD_sendbyte
  4875 ;;		_LCD_sendnibble
  4876 ;; This function is called by:
  4877 ;;		_main
  4878 ;; This function uses a non-reentrant model
  4879 ;;
  4880                           
  4881                           	psect	text26
  4882   002230                     __ptext26:
  4883                           	callstack 0
  4884   002230                     _LCD_Init:
  4885                           	callstack 26
  4886   002230                     
  4887                           ;../LCD.c: 51:     TRISCbits.TRISC6 = 0;
  4888   002230  9C83               	bcf	131,6,c	;volatile
  4889                           
  4890                           ;../LCD.c: 52:     TRISCbits.TRISC2 = 0;
  4891   002232  9483               	bcf	131,2,c	;volatile
  4892                           
  4893                           ;../LCD.c: 53:     TRISBbits.TRISB3 = 0;
  4894   002234  9682               	bcf	130,3,c	;volatile
  4895                           
  4896                           ;../LCD.c: 54:     TRISBbits.TRISB2 = 0;
  4897   002236  9482               	bcf	130,2,c	;volatile
  4898                           
  4899                           ;../LCD.c: 55:     TRISEbits.TRISE3 = 0;
  4900   002238  9685               	bcf	133,3,c	;volatile
  4901                           
  4902                           ;../LCD.c: 56:     TRISEbits.TRISE1 = 0;
  4903   00223A  9285               	bcf	133,1,c	;volatile
  4904                           
  4905                           ;../LCD.c: 58:     LATCbits.LATC6 = 0;
  4906   00223C  9C7B               	bcf	123,6,c	;volatile
  4907                           
  4908                           ;../LCD.c: 59:     LATCbits.LATC2 = 0;
  4909   00223E  947B               	bcf	123,2,c	;volatile
  4910                           
  4911                           ;../LCD.c: 60:     LATBbits.LATB3 = 0;
  4912   002240  967A               	bcf	122,3,c	;volatile
  4913                           
  4914                           ;../LCD.c: 61:     LATBbits.LATB2 = 0;
  4915   002242  947A               	bcf	122,2,c	;volatile
  4916                           
  4917                           ;../LCD.c: 62:     LATEbits.LATE3 = 0;
  4918   002244  967D               	bcf	125,3,c	;volatile
  4919                           
  4920                           ;../LCD.c: 63:     LATEbits.LATE1 = 0;
  4921   002246  927D               	bcf	125,1,c	;volatile
  4922   002248                     
  4923                           ;../LCD.c: 66:  _delay((unsigned long)((50)*(64000000/4000.0)));
  4924   002248  0E05               	movlw	5
  4925   00224A  6E05               	movwf	(??_LCD_Init+1)^0,c
  4926   00224C  0E0F               	movlw	15
  4927   00224E  6E04               	movwf	??_LCD_Init^0,c
  4928   002250  0EF1               	movlw	241
  4929   002252                     u2777:
  4930   002252  2EE8               	decfsz	wreg,f,c
  4931   002254  D7FE               	bra	u2777
  4932   002256  2E04               	decfsz	??_LCD_Init^0,f,c
  4933   002258  D7FC               	bra	u2777
  4934   00225A  2E05               	decfsz	(??_LCD_Init+1)^0,f,c
  4935   00225C  D7FA               	bra	u2777
  4936   00225E  F000               	nop	
  4937   002260                     
  4938                           ;../LCD.c: 67:  LCD_sendnibble(0b0011);
  4939   002260  0E03               	movlw	3
  4940   002262  EC9D  F011         	call	_LCD_sendnibble
  4941   002266                     
  4942                           ;../LCD.c: 68:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  4943   002266  0EF0               	movlw	240
  4944   002268                     u2787:
  4945   002268  2EE8               	decfsz	wreg,f,c
  4946   00226A  D7FE               	bra	u2787
  4947                           
  4948                           ;../LCD.c: 69:     LCD_sendnibble(0b0010);
  4949   00226C  0E02               	movlw	2
  4950   00226E  EC9D  F011         	call	_LCD_sendnibble
  4951   002272                     
  4952                           ;../LCD.c: 70:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  4953   002272  0EF0               	movlw	240
  4954   002274                     u2797:
  4955   002274  2EE8               	decfsz	wreg,f,c
  4956   002276  D7FE               	bra	u2797
  4957   002278                     
  4958                           ;../LCD.c: 71:     LCD_sendbyte(0b00101000,0);
  4959   002278  0E00               	movlw	0
  4960   00227A  6E02               	movwf	LCD_sendbyte@type^0,c
  4961   00227C  0E28               	movlw	40
  4962   00227E  ECFB  F012         	call	_LCD_sendbyte
  4963   002282                     
  4964                           ;../LCD.c: 72:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  4965   002282  0EF0               	movlw	240
  4966   002284                     u2807:
  4967   002284  2EE8               	decfsz	wreg,f,c
  4968   002286  D7FE               	bra	u2807
  4969   002288                     
  4970                           ;../LCD.c: 74:     LCD_sendbyte(0b00001000,0);
  4971   002288  0E00               	movlw	0
  4972   00228A  6E02               	movwf	LCD_sendbyte@type^0,c
  4973   00228C  0E08               	movlw	8
  4974   00228E  ECFB  F012         	call	_LCD_sendbyte
  4975   002292                     
  4976                           ;../LCD.c: 75:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  4977   002292  0EF0               	movlw	240
  4978   002294                     u2817:
  4979   002294  2EE8               	decfsz	wreg,f,c
  4980   002296  D7FE               	bra	u2817
  4981   002298                     
  4982                           ;../LCD.c: 76:     LCD_sendbyte(0b00000001,0);
  4983   002298  0E00               	movlw	0
  4984   00229A  6E02               	movwf	LCD_sendbyte@type^0,c
  4985   00229C  0E01               	movlw	1
  4986   00229E  ECFB  F012         	call	_LCD_sendbyte
  4987   0022A2                     
  4988                           ;../LCD.c: 77:     _delay((unsigned long)((2)*(64000000/4000.0)));
  4989   0022A2  0E2A               	movlw	42
  4990   0022A4  6E04               	movwf	??_LCD_Init^0,c
  4991   0022A6  0E8E               	movlw	142
  4992   0022A8                     u2827:
  4993   0022A8  2EE8               	decfsz	wreg,f,c
  4994   0022AA  D7FE               	bra	u2827
  4995   0022AC  2E04               	decfsz	??_LCD_Init^0,f,c
  4996   0022AE  D7FC               	bra	u2827
  4997   0022B0                     
  4998                           ;../LCD.c: 78:     LCD_sendbyte(0b0000110,0);
  4999   0022B0  0E00               	movlw	0
  5000   0022B2  6E02               	movwf	LCD_sendbyte@type^0,c
  5001   0022B4  0E06               	movlw	6
  5002   0022B6  ECFB  F012         	call	_LCD_sendbyte
  5003   0022BA                     
  5004                           ;../LCD.c: 81:     LCD_sendbyte(0b00001100,0);
  5005   0022BA  0E00               	movlw	0
  5006   0022BC  6E02               	movwf	LCD_sendbyte@type^0,c
  5007   0022BE  0E0C               	movlw	12
  5008   0022C0  ECFB  F012         	call	_LCD_sendbyte
  5009   0022C4  0012               	return		;funcret
  5010   0022C6                     __end_of_LCD_Init:
  5011                           	callstack 0
  5012                           
  5013 ;; *************** function _LCD_sendbyte *****************
  5014 ;; Defined at:
  5015 ;;		line 36 in file "../LCD.c"
  5016 ;; Parameters:    Size  Location     Type
  5017 ;;  Byte            1    wreg     unsigned char 
  5018 ;;  type            1    1[COMRAM] unsigned char 
  5019 ;; Auto vars:     Size  Location     Type
  5020 ;;  Byte            1    2[COMRAM] unsigned char 
  5021 ;; Return value:  Size  Location     Type
  5022 ;;                  1    wreg      void 
  5023 ;; Registers used:
  5024 ;;		wreg, status,2, status,0, cstack
  5025 ;; Tracked objects:
  5026 ;;		On entry : 0/0
  5027 ;;		On exit  : 0/0
  5028 ;;		Unchanged: 0/0
  5029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5030 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5031 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5033 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5034 ;;Total ram usage:        2 bytes
  5035 ;; Hardware stack levels used: 1
  5036 ;; Hardware stack levels required when called: 3
  5037 ;; This function calls:
  5038 ;;		_LCD_sendnibble
  5039 ;; This function is called by:
  5040 ;;		_LCD_Init
  5041 ;;		_LCD_clear
  5042 ;;		_LCD_setline
  5043 ;;		_LCD_sendstring
  5044 ;;		_LCD_scroll
  5045 ;; This function uses a non-reentrant model
  5046 ;;
  5047                           
  5048                           	psect	text27
  5049   0025F6                     __ptext27:
  5050                           	callstack 0
  5051   0025F6                     _LCD_sendbyte:
  5052                           	callstack 26
  5053                           
  5054                           ;incstack = 0
  5055                           ;LCD_sendbyte@Byte stored from wreg
  5056   0025F6  6E03               	movwf	LCD_sendbyte@Byte^0,c
  5057   0025F8                     
  5058                           ;../LCD.c: 36: void LCD_sendbyte(unsigned char Byte, char type);../LCD.c: 37: {;../LCD.c
      +                          : 38:     if (type) {LATCbits.LATC6 = 1;} else {LATCbits.LATC6 = 0;}
  5059   0025F8  5002               	movf	LCD_sendbyte@type^0,w,c
  5060   0025FA  B4D8               	btfsc	status,2,c
  5061   0025FC  EF02  F013         	goto	u1941
  5062   002600  EF04  F013         	goto	u1940
  5063   002604                     u1941:
  5064   002604  EF07  F013         	goto	l288
  5065   002608                     u1940:
  5066   002608  8C7B               	bsf	123,6,c	;volatile
  5067   00260A  EF08  F013         	goto	l2294
  5068   00260E                     l288:
  5069   00260E  9C7B               	bcf	123,6,c	;volatile
  5070   002610                     l2294:
  5071                           
  5072                           ;../LCD.c: 39:     LCD_sendnibble((Byte >> 4)& 0b1111);
  5073   002610  3803               	swapf	LCD_sendbyte@Byte^0,w,c
  5074   002612  0B0F               	andlw	15
  5075   002614  0B0F               	andlw	15
  5076   002616  EC9D  F011         	call	_LCD_sendnibble
  5077                           
  5078                           ;../LCD.c: 40:     LCD_sendnibble(Byte & 0b00001111);
  5079   00261A  5003               	movf	LCD_sendbyte@Byte^0,w,c
  5080   00261C  0B0F               	andlw	15
  5081   00261E  EC9D  F011         	call	_LCD_sendnibble
  5082   002622                     
  5083                           ;../LCD.c: 42:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  5084   002622  0EA0               	movlw	160
  5085   002624                     u2837:
  5086   002624  D000               	nop2	
  5087   002626  2EE8               	decfsz	wreg,f,c
  5088   002628  D7FD               	bra	u2837
  5089   00262A  0012               	return		;funcret
  5090   00262C                     __end_of_LCD_sendbyte:
  5091                           	callstack 0
  5092                           
  5093 ;; *************** function _LCD_sendnibble *****************
  5094 ;; Defined at:
  5095 ;;		line 19 in file "../LCD.c"
  5096 ;; Parameters:    Size  Location     Type
  5097 ;;  number          1    wreg     unsigned char 
  5098 ;; Auto vars:     Size  Location     Type
  5099 ;;  number          1    0[COMRAM] unsigned char 
  5100 ;; Return value:  Size  Location     Type
  5101 ;;                  1    wreg      void 
  5102 ;; Registers used:
  5103 ;;		wreg, cstack
  5104 ;; Tracked objects:
  5105 ;;		On entry : 0/0
  5106 ;;		On exit  : 0/0
  5107 ;;		Unchanged: 0/0
  5108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5110 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5112 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5113 ;;Total ram usage:        1 bytes
  5114 ;; Hardware stack levels used: 1
  5115 ;; Hardware stack levels required when called: 2
  5116 ;; This function calls:
  5117 ;;		_LCD_E_TOG
  5118 ;; This function is called by:
  5119 ;;		_LCD_sendbyte
  5120 ;;		_LCD_Init
  5121 ;; This function uses a non-reentrant model
  5122 ;;
  5123                           
  5124                           	psect	text28
  5125   00233A                     __ptext28:
  5126                           	callstack 0
  5127   00233A                     _LCD_sendnibble:
  5128                           	callstack 26
  5129                           
  5130                           ;incstack = 0
  5131                           ;LCD_sendnibble@number stored from wreg
  5132   00233A  6E01               	movwf	LCD_sendnibble@number^0,c
  5133   00233C                     
  5134                           ;../LCD.c: 19: void LCD_sendnibble(unsigned char number);../LCD.c: 20: {;../LCD.c: 22:  
      +                          if (number & 0b0001) {LATBbits.LATB3 = 1;} else {LATBbits.LATB3 = 0;}
  5135   00233C  A001               	btfss	LCD_sendnibble@number^0,0,c
  5136   00233E  EFA3  F011         	goto	u1831
  5137   002342  EFA5  F011         	goto	u1830
  5138   002346                     u1831:
  5139   002346  EFA8  F011         	goto	l277
  5140   00234A                     u1830:
  5141   00234A  867A               	bsf	122,3,c	;volatile
  5142   00234C  EFA9  F011         	goto	l2204
  5143   002350                     l277:
  5144   002350  967A               	bcf	122,3,c	;volatile
  5145   002352                     l2204:
  5146                           
  5147                           ;../LCD.c: 23:     if (number & 0b0010) {LATBbits.LATB2 = 1;} else {LATBbits.LATB2 = 0;}
  5148   002352  A201               	btfss	LCD_sendnibble@number^0,1,c
  5149   002354  EFAE  F011         	goto	u1841
  5150   002358  EFB0  F011         	goto	u1840
  5151   00235C                     u1841:
  5152   00235C  EFB3  F011         	goto	l279
  5153   002360                     u1840:
  5154   002360  847A               	bsf	122,2,c	;volatile
  5155   002362  EFB4  F011         	goto	l2208
  5156   002366                     l279:
  5157   002366  947A               	bcf	122,2,c	;volatile
  5158   002368                     l2208:
  5159                           
  5160                           ;../LCD.c: 24:     if (number & 0b0100) {LATEbits.LATE3 = 1;} else {LATEbits.LATE3 = 0;}
  5161   002368  A401               	btfss	LCD_sendnibble@number^0,2,c
  5162   00236A  EFB9  F011         	goto	u1851
  5163   00236E  EFBB  F011         	goto	u1850
  5164   002372                     u1851:
  5165   002372  EFBE  F011         	goto	l281
  5166   002376                     u1850:
  5167   002376  867D               	bsf	125,3,c	;volatile
  5168   002378  EFBF  F011         	goto	l2212
  5169   00237C                     l281:
  5170   00237C  967D               	bcf	125,3,c	;volatile
  5171   00237E                     l2212:
  5172                           
  5173                           ;../LCD.c: 25:     if (number & 0b1000) {LATEbits.LATE1 = 1;} else {LATEbits.LATE1 = 0;}
  5174   00237E  A601               	btfss	LCD_sendnibble@number^0,3,c
  5175   002380  EFC4  F011         	goto	u1861
  5176   002384  EFC6  F011         	goto	u1860
  5177   002388                     u1861:
  5178   002388  EFC9  F011         	goto	l283
  5179   00238C                     u1860:
  5180   00238C  827D               	bsf	125,1,c	;volatile
  5181   00238E  EFCA  F011         	goto	l2216
  5182   002392                     l283:
  5183   002392  927D               	bcf	125,1,c	;volatile
  5184   002394                     l2216:
  5185                           
  5186                           ;../LCD.c: 27:     LCD_E_TOG();
  5187   002394  ECA4  F013         	call	_LCD_E_TOG	;wreg free
  5188   002398                     
  5189                           ;../LCD.c: 28:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  5190   002398  0E1A               	movlw	26
  5191   00239A                     u2847:
  5192   00239A  2EE8               	decfsz	wreg,f,c
  5193   00239C  D7FE               	bra	u2847
  5194   00239E  D000               	nop2	
  5195   0023A0  0012               	return		;funcret
  5196   0023A2                     __end_of_LCD_sendnibble:
  5197                           	callstack 0
  5198                           
  5199 ;; *************** function _LCD_E_TOG *****************
  5200 ;; Defined at:
  5201 ;;		line 9 in file "../LCD.c"
  5202 ;; Parameters:    Size  Location     Type
  5203 ;;		None
  5204 ;; Auto vars:     Size  Location     Type
  5205 ;;		None
  5206 ;; Return value:  Size  Location     Type
  5207 ;;                  1    wreg      void 
  5208 ;; Registers used:
  5209 ;;		wreg
  5210 ;; Tracked objects:
  5211 ;;		On entry : 0/0
  5212 ;;		On exit  : 0/0
  5213 ;;		Unchanged: 0/0
  5214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5219 ;;Total ram usage:        0 bytes
  5220 ;; Hardware stack levels used: 1
  5221 ;; Hardware stack levels required when called: 1
  5222 ;; This function calls:
  5223 ;;		Nothing
  5224 ;; This function is called by:
  5225 ;;		_LCD_sendnibble
  5226 ;; This function uses a non-reentrant model
  5227 ;;
  5228                           
  5229                           	psect	text29
  5230   002748                     __ptext29:
  5231                           	callstack 0
  5232   002748                     _LCD_E_TOG:
  5233                           	callstack 26
  5234   002748                     
  5235                           ;../LCD.c: 11:  LATCbits.LATC2 = 1;
  5236   002748  847B               	bsf	123,2,c	;volatile
  5237   00274A                     
  5238                           ;../LCD.c: 12:  _delay((unsigned long)((2)*(64000000/4000000.0)));
  5239   00274A  0E0A               	movlw	10
  5240   00274C                     u2857:
  5241   00274C  2EE8               	decfsz	wreg,f,c
  5242   00274E  D7FE               	bra	u2857
  5243   002750  D000               	nop2	
  5244   002752                     
  5245                           ;../LCD.c: 13:  LATCbits.LATC2 = 0;
  5246   002752  947B               	bcf	123,2,c	;volatile
  5247   002754  0012               	return		;funcret
  5248   002756                     __end_of_LCD_E_TOG:
  5249                           	callstack 0
  5250                           
  5251 ;; *************** function _Interrupts_init *****************
  5252 ;; Defined at:
  5253 ;;		line 11 in file "../interrupts.c"
  5254 ;; Parameters:    Size  Location     Type
  5255 ;;		None
  5256 ;; Auto vars:     Size  Location     Type
  5257 ;;		None
  5258 ;; Return value:  Size  Location     Type
  5259 ;;                  1    wreg      void 
  5260 ;; Registers used:
  5261 ;;		None
  5262 ;; Tracked objects:
  5263 ;;		On entry : 0/0
  5264 ;;		On exit  : 0/0
  5265 ;;		Unchanged: 0/0
  5266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5271 ;;Total ram usage:        0 bytes
  5272 ;; Hardware stack levels used: 1
  5273 ;; Hardware stack levels required when called: 1
  5274 ;; This function calls:
  5275 ;;		Nothing
  5276 ;; This function is called by:
  5277 ;;		_main
  5278 ;; This function uses a non-reentrant model
  5279 ;;
  5280                           
  5281                           	psect	text30
  5282   002756                     __ptext30:
  5283                           	callstack 0
  5284   002756                     _Interrupts_init:
  5285                           	callstack 29
  5286   002756                     
  5287                           ;../interrupts.c: 14:     TMR0IE=1;
  5288   002756  010E               	movlb	14	; () banked
  5289   002758  8B29               	bsf	41,5,b	;volatile
  5290                           
  5291                           ;../interrupts.c: 15:     INTCONbits.GIEH=1;
  5292   00275A  8EF2               	bsf	242,7,c	;volatile
  5293                           
  5294                           ;../interrupts.c: 16:     INTCONbits.GIEL = 1;
  5295   00275C  8CF2               	bsf	242,6,c	;volatile
  5296   00275E                     
  5297                           ; BSR set to: 14
  5298   00275E  0012               	return		;funcret
  5299   002760                     __end_of_Interrupts_init:
  5300                           	callstack 0
  5301                           
  5302 ;; *************** function _Comp1_init *****************
  5303 ;; Defined at:
  5304 ;;		line 29 in file "../comparator.c"
  5305 ;; Parameters:    Size  Location     Type
  5306 ;;		None
  5307 ;; Auto vars:     Size  Location     Type
  5308 ;;		None
  5309 ;; Return value:  Size  Location     Type
  5310 ;;                  1    wreg      void 
  5311 ;; Registers used:
  5312 ;;		wreg, status,2, cstack
  5313 ;; Tracked objects:
  5314 ;;		On entry : 0/0
  5315 ;;		On exit  : 0/0
  5316 ;;		Unchanged: 0/0
  5317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5322 ;;Total ram usage:        0 bytes
  5323 ;; Hardware stack levels used: 1
  5324 ;; Hardware stack levels required when called: 2
  5325 ;; This function calls:
  5326 ;;		_DAC_init
  5327 ;; This function is called by:
  5328 ;;		_main
  5329 ;; This function uses a non-reentrant model
  5330 ;;
  5331                           
  5332                           	psect	text31
  5333   0026B2                     __ptext31:
  5334                           	callstack 0
  5335   0026B2                     _Comp1_init:
  5336                           	callstack 28
  5337   0026B2                     
  5338                           ;../comparator.c: 31:     TRISAbits.TRISA3=1;
  5339   0026B2  8681               	bsf	129,3,c	;volatile
  5340   0026B4                     
  5341                           ;../comparator.c: 32:     CM1NCHbits.NCH=0b011;
  5342   0026B4  010E               	movlb	14	; () banked
  5343   0026B6  51D2               	movf	210,w,b	;volatile
  5344   0026B8  0BF8               	andlw	-8
  5345   0026BA  0903               	iorlw	3
  5346   0026BC  6FD2               	movwf	210,b	;volatile
  5347                           
  5348                           ;../comparator.c: 33:     CM1PCHbits.PCH=0b101;
  5349   0026BE  51D3               	movf	211,w,b	;volatile
  5350   0026C0  0BF8               	andlw	-8
  5351   0026C2  0905               	iorlw	5
  5352   0026C4  6FD3               	movwf	211,b	;volatile
  5353   0026C6                     
  5354                           ; BSR set to: 14
  5355                           ;../comparator.c: 34:     CM1CON0bits.HYS=1;
  5356   0026C6  83D0               	bsf	208,1,b	;volatile
  5357   0026C8                     
  5358                           ; BSR set to: 14
  5359                           ;../comparator.c: 35:     CM1CON0bits.POL=1;
  5360   0026C8  89D0               	bsf	208,4,b	;volatile
  5361   0026CA                     
  5362                           ; BSR set to: 14
  5363                           ;../comparator.c: 36:     CM1CON1bits.INTP=1;
  5364   0026CA  83D1               	bsf	209,1,b	;volatile
  5365   0026CC                     
  5366                           ; BSR set to: 14
  5367                           ;../comparator.c: 37:     CM1CON1bits.INTN=1;
  5368   0026CC  81D1               	bsf	209,0,b	;volatile
  5369   0026CE                     
  5370                           ; BSR set to: 14
  5371                           ;../comparator.c: 38:     DAC_init();
  5372   0026CE  EC9A  F013         	call	_DAC_init	;wreg free
  5373   0026D2                     
  5374                           ;../comparator.c: 39:     CM1CON0bits.EN=1;
  5375   0026D2  010E               	movlb	14	; () banked
  5376   0026D4  8FD0               	bsf	208,7,b	;volatile
  5377   0026D6                     
  5378                           ; BSR set to: 14
  5379   0026D6  0012               	return		;funcret
  5380   0026D8                     __end_of_Comp1_init:
  5381                           	callstack 0
  5382                           
  5383 ;; *************** function _DAC_init *****************
  5384 ;; Defined at:
  5385 ;;		line 14 in file "../comparator.c"
  5386 ;; Parameters:    Size  Location     Type
  5387 ;;		None
  5388 ;; Auto vars:     Size  Location     Type
  5389 ;;		None
  5390 ;; Return value:  Size  Location     Type
  5391 ;;                  1    wreg      void 
  5392 ;; Registers used:
  5393 ;;		wreg, status,2
  5394 ;; Tracked objects:
  5395 ;;		On entry : 0/0
  5396 ;;		On exit  : 0/0
  5397 ;;		Unchanged: 0/0
  5398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5403 ;;Total ram usage:        0 bytes
  5404 ;; Hardware stack levels used: 1
  5405 ;; Hardware stack levels required when called: 1
  5406 ;; This function calls:
  5407 ;;		Nothing
  5408 ;; This function is called by:
  5409 ;;		_Comp1_init
  5410 ;; This function uses a non-reentrant model
  5411 ;;
  5412                           
  5413                           	psect	text32
  5414   002734                     __ptext32:
  5415                           	callstack 0
  5416   002734                     _DAC_init:
  5417                           	callstack 28
  5418   002734                     
  5419                           ;../comparator.c: 16:     DAC1CON0bits.PSS=0b00;
  5420   002734  0EF3               	movlw	-13
  5421   002736  010E               	movlb	14	; () banked
  5422   002738  17C6               	andwf	198,f,b	;volatile
  5423   00273A                     
  5424                           ; BSR set to: 14
  5425                           ;../comparator.c: 17:     DAC1CON0bits.NSS=0b0;
  5426   00273A  91C6               	bcf	198,0,b	;volatile
  5427                           
  5428                           ;../comparator.c: 21:     DAC1CON1bits.DAC1R=27;
  5429   00273C  51C7               	movf	199,w,b	;volatile
  5430   00273E  0BE0               	andlw	-32
  5431   002740  091B               	iorlw	27
  5432   002742  6FC7               	movwf	199,b	;volatile
  5433   002744                     
  5434                           ; BSR set to: 14
  5435                           ;../comparator.c: 22:     DAC1CON0bits.DAC1EN=1;
  5436   002744  8FC6               	bsf	198,7,b	;volatile
  5437   002746                     
  5438                           ; BSR set to: 14
  5439   002746  0012               	return		;funcret
  5440   002748                     __end_of_DAC_init:
  5441                           	callstack 0
  5442                           
  5443 ;; *************** function _HighISR *****************
  5444 ;; Defined at:
  5445 ;;		line 23 in file "../interrupts.c"
  5446 ;; Parameters:    Size  Location     Type
  5447 ;;		None
  5448 ;; Auto vars:     Size  Location     Type
  5449 ;;		None
  5450 ;; Return value:  Size  Location     Type
  5451 ;;                  1    wreg      void 
  5452 ;; Registers used:
  5453 ;;		wreg, status,2, status,0
  5454 ;; Tracked objects:
  5455 ;;		On entry : 0/0
  5456 ;;		On exit  : 0/0
  5457 ;;		Unchanged: 0/0
  5458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5463 ;;Total ram usage:        0 bytes
  5464 ;; Hardware stack levels used: 1
  5465 ;; This function calls:
  5466 ;;		Nothing
  5467 ;; This function is called by:
  5468 ;;		Interrupt level 2
  5469 ;; This function uses a non-reentrant model
  5470 ;;
  5471                           
  5472                           	psect	intcode
  5473   000008                     __pintcode:
  5474                           	callstack 0
  5475   000008                     _HighISR:
  5476                           	callstack 22
  5477                           
  5478                           ; BSR set to: 14
  5479                           ;incstack = 0
  5480   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5481   00000A                     
  5482                           ;../interrupts.c: 27:     if (TMR0IF) {
  5483   00000A  010E               	movlb	14	; () banked
  5484   00000C  AB33               	btfss	51,5,b	;volatile
  5485   00000E  EF0B  F000         	goto	i2u240_41
  5486   000012  EF0D  F000         	goto	i2u240_40
  5487   000016                     i2u240_41:
  5488   000016  EF16  F000         	goto	i2l2546
  5489   00001A                     i2u240_40:
  5490   00001A                     
  5491                           ; BSR set to: 14
  5492                           ;../interrupts.c: 28:         TMR0H=0b00001011;
  5493   00001A  0E0B               	movlw	11
  5494   00001C  6ED4               	movwf	212,c	;volatile
  5495                           
  5496                           ;../interrupts.c: 29:         TMR0L=0b00001011;
  5497   00001E  0E0B               	movlw	11
  5498   000020  6ED3               	movwf	211,c	;volatile
  5499   000022                     
  5500                           ; BSR set to: 14
  5501                           ;../interrupts.c: 33:         minute += 1;
  5502   000022  0100               	movlb	0	; () banked
  5503   000024  4BE1               	infsnz	_minute& (0+255),f,b
  5504   000026  2BE2               	incf	(_minute+1)& (0+255),f,b
  5505   000028                     
  5506                           ; BSR set to: 0
  5507                           ;../interrupts.c: 34:         TMR0IF=0;
  5508   000028  010E               	movlb	14	; () banked
  5509   00002A  9B33               	bcf	51,5,b	;volatile
  5510   00002C                     i2l2546:
  5511                           
  5512                           ; BSR set to: 14
  5513                           ;../interrupts.c: 37:     if (PIR2bits.C1IF){
  5514   00002C  A135               	btfss	53,0,b	;volatile
  5515   00002E  EF1B  F000         	goto	i2u241_41
  5516   000032  EF1D  F000         	goto	i2u241_40
  5517   000036                     i2u241_41:
  5518   000036  EF61  F000         	goto	i2l153
  5519   00003A                     i2u241_40:
  5520   00003A                     
  5521                           ; BSR set to: 14
  5522                           ;../interrupts.c: 38:         if (CM1CON0bits.OUT == 0) {
  5523   00003A  BDD0               	btfsc	208,6,b	;volatile
  5524   00003C  EF22  F000         	goto	i2u242_41
  5525   000040  EF24  F000         	goto	i2u242_40
  5526   000044                     i2u242_41:
  5527   000044  EF2F  F000         	goto	i2l145
  5528   000048                     i2u242_40:
  5529   000048                     
  5530                           ; BSR set to: 14
  5531                           ;../interrupts.c: 39:             daylight_start_hour = hour;
  5532   000048  C0E3  F0DB         	movff	_hour,_daylight_start_hour
  5533   00004C  C0E4  F0DC         	movff	_hour+1,_daylight_start_hour+1
  5534                           
  5535                           ;../interrupts.c: 40:             daylight_start_min = minute;
  5536   000050  C0E1  F0D9         	movff	_minute,_daylight_start_min
  5537   000054  C0E2  F0DA         	movff	_minute+1,_daylight_start_min+1
  5538                           
  5539                           ;../interrupts.c: 41:             LATHbits.LATH3=0;
  5540   000058  9680               	bcf	128,3,c	;volatile
  5541                           
  5542                           ;../interrupts.c: 42:             }
  5543   00005A  EF5F  F000         	goto	i2l146
  5544   00005E                     i2l145:
  5545                           
  5546                           ; BSR set to: 14
  5547   00005E  ADD0               	btfss	208,6,b	;volatile
  5548   000060  EF34  F000         	goto	i2u243_41
  5549   000064  EF36  F000         	goto	i2u243_40
  5550   000068                     i2u243_41:
  5551   000068  EF5F  F000         	goto	i2l146
  5552   00006C                     i2u243_40:
  5553   00006C                     
  5554                           ; BSR set to: 14
  5555                           ;../interrupts.c: 44:             daylight_end_hour = hour;
  5556   00006C  C0E3  F0D7         	movff	_hour,_daylight_end_hour
  5557   000070  C0E4  F0D8         	movff	_hour+1,_daylight_end_hour+1
  5558                           
  5559                           ;../interrupts.c: 45:             daylight_end_min = minute;
  5560   000074  C0E1  F0D5         	movff	_minute,_daylight_end_min
  5561   000078  C0E2  F0D6         	movff	_minute+1,_daylight_end_min+1
  5562   00007C                     
  5563                           ; BSR set to: 14
  5564                           ;../interrupts.c: 46:         if (hour <1 || hour >=5){
  5565   00007C  0100               	movlb	0	; () banked
  5566   00007E  51E3               	movf	_hour& (0+255),w,b
  5567   000080  11E4               	iorwf	(_hour+1)& (0+255),w,b
  5568   000082  B4D8               	btfsc	status,2,c
  5569   000084  EF46  F000         	goto	i2u244_41
  5570   000088  EF48  F000         	goto	i2u244_40
  5571   00008C                     i2u244_41:
  5572   00008C  EF53  F000         	goto	i2l150
  5573   000090                     i2u244_40:
  5574   000090                     
  5575                           ; BSR set to: 0
  5576   000090  51E4               	movf	(_hour+1)& (0+255),w,b
  5577   000092  E109               	bnz	i2u245_40
  5578   000094  0E05               	movlw	5
  5579   000096  5DE3               	subwf	_hour& (0+255),w,b
  5580   000098  A0D8               	btfss	status,0,c
  5581   00009A  EF51  F000         	goto	i2u245_41
  5582   00009E  EF53  F000         	goto	i2u245_40
  5583   0000A2                     i2u245_41:
  5584   0000A2  EF5F  F000         	goto	i2l146
  5585   0000A6                     i2u245_40:
  5586   0000A6                     i2l150:
  5587                           
  5588                           ; BSR set to: 0
  5589                           ;../interrupts.c: 47:             if (CM1CON0bits.OUT == 1) {LATHbits.LATH3=1;}
  5590   0000A6  010E               	movlb	14	; () banked
  5591   0000A8  ADD0               	btfss	208,6,b	;volatile
  5592   0000AA  EF59  F000         	goto	i2u246_41
  5593   0000AE  EF5B  F000         	goto	i2u246_40
  5594   0000B2                     i2u246_41:
  5595   0000B2  EF5E  F000         	goto	i2l151
  5596   0000B6                     i2u246_40:
  5597   0000B6                     
  5598                           ; BSR set to: 14
  5599   0000B6  8680               	bsf	128,3,c	;volatile
  5600   0000B8  EF5F  F000         	goto	i2l146
  5601   0000BC                     i2l151:
  5602                           
  5603                           ; BSR set to: 14
  5604   0000BC  9680               	bcf	128,3,c	;volatile
  5605   0000BE                     i2l146:
  5606                           
  5607                           ;../interrupts.c: 52:         PIR2bits.C1IF=0;
  5608   0000BE  010E               	movlb	14	; () banked
  5609   0000C0  9135               	bcf	53,0,b	;volatile
  5610   0000C2                     i2l153:
  5611                           
  5612                           ; BSR set to: 14
  5613   0000C2  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5614   0000C4  0011               	retfie		f
  5615   0000C6                     __end_of_HighISR:
  5616                           	callstack 0
  5617                           
  5618                           	psect	rparam
  5619   000000                     
  5620                           	psect	temp
  5621   00005F                     btemp:
  5622                           	callstack 0
  5623   00005F                     	ds	1
  5624   000000                     int$flags	set	btemp
  5625   000000                     wtemp8	set	btemp+1
  5626   000000                     ttemp5	set	btemp+1
  5627   000000                     ttemp6	set	btemp+4
  5628   000000                     ttemp7	set	btemp+8
  5629                           
  5630                           	psect	idloc
  5631                           
  5632                           ;Config register IDLOC0 @ 0x200000
  5633                           ;	unspecified, using default values
  5634   200000                     	org	2097152
  5635   200000  0FFF               	dw	4095
  5636                           
  5637                           ;Config register IDLOC1 @ 0x200002
  5638                           ;	unspecified, using default values
  5639   200002                     	org	2097154
  5640   200002  0FFF               	dw	4095
  5641                           
  5642                           ;Config register IDLOC2 @ 0x200004
  5643                           ;	unspecified, using default values
  5644   200004                     	org	2097156
  5645   200004  0FFF               	dw	4095
  5646                           
  5647                           ;Config register IDLOC3 @ 0x200006
  5648                           ;	unspecified, using default values
  5649   200006                     	org	2097158
  5650   200006  0FFF               	dw	4095
  5651                           
  5652                           ;Config register IDLOC4 @ 0x200008
  5653                           ;	unspecified, using default values
  5654   200008                     	org	2097160
  5655   200008  0FFF               	dw	4095
  5656                           
  5657                           ;Config register IDLOC5 @ 0x20000A
  5658                           ;	unspecified, using default values
  5659   20000A                     	org	2097162
  5660   20000A  0FFF               	dw	4095
  5661                           
  5662                           ;Config register IDLOC6 @ 0x20000C
  5663                           ;	unspecified, using default values
  5664   20000C                     	org	2097164
  5665   20000C  0FFF               	dw	4095
  5666                           
  5667                           ;Config register IDLOC7 @ 0x20000E
  5668                           ;	unspecified, using default values
  5669   20000E                     	org	2097166
  5670   20000E  0FFF               	dw	4095
  5671                           
  5672                           	psect	config
  5673                           
  5674                           ;Config register CONFIG1L @ 0x300000
  5675                           ;	External Oscillator mode Selection bits
  5676                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5677                           ;	Power-up default value for COSC bits
  5678                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5679   300000                     	org	3145728
  5680   300000  AA                 	db	170
  5681                           
  5682                           ;Config register CONFIG1H @ 0x300001
  5683                           ;	unspecified, using default values
  5684                           ;	Clock Out Enable bit
  5685                           ;	CLKOUTEN = 0x1, unprogrammed default
  5686                           ;	Clock Switch Enable bit
  5687                           ;	CSWEN = 0x1, unprogrammed default
  5688                           ;	Fail-Safe Clock Monitor Enable bit
  5689                           ;	FCMEN = 0x1, unprogrammed default
  5690   300001                     	org	3145729
  5691   300001  FF                 	db	255
  5692                           
  5693                           ;Config register CONFIG2L @ 0x300002
  5694                           ;	unspecified, using default values
  5695                           ;	Master Clear Enable bit
  5696                           ;	MCLRE = 0x1, unprogrammed default
  5697                           ;	Power-up Timer Enable bit
  5698                           ;	PWRTE = 0x1, unprogrammed default
  5699                           ;	Low-power BOR enable bit
  5700                           ;	LPBOREN = 0x1, unprogrammed default
  5701                           ;	Brown-out Reset Enable bits
  5702                           ;	BOREN = 0x3, unprogrammed default
  5703   300002                     	org	3145730
  5704   300002  FF                 	db	255
  5705                           
  5706                           ;Config register CONFIG2H @ 0x300003
  5707                           ;	unspecified, using default values
  5708                           ;	Brown Out Reset Voltage selection bits
  5709                           ;	BORV = 0x3, unprogrammed default
  5710                           ;	ZCD Disable bit
  5711                           ;	ZCD = 0x1, unprogrammed default
  5712                           ;	PPSLOCK bit One-Way Set Enable bit
  5713                           ;	PPS1WAY = 0x1, unprogrammed default
  5714                           ;	Stack Full/Underflow Reset Enable bit
  5715                           ;	STVREN = 0x1, unprogrammed default
  5716                           ;	Debugger Enable bit
  5717                           ;	DEBUG = 0x1, unprogrammed default
  5718                           ;	Extended Instruction Set Enable bit
  5719                           ;	XINST = 0x1, unprogrammed default
  5720   300003                     	org	3145731
  5721   300003  FF                 	db	255
  5722                           
  5723                           ;Config register CONFIG3L @ 0x300004
  5724                           ;	WDT Period Select bits
  5725                           ;	WDTCPS = 0x1F, unprogrammed default
  5726                           ;	WDT operating mode
  5727                           ;	WDTE = OFF, WDT Disabled
  5728   300004                     	org	3145732
  5729   300004  9F                 	db	159
  5730                           
  5731                           ;Config register CONFIG3H @ 0x300005
  5732                           ;	unspecified, using default values
  5733                           ;	WDT Window Select bits
  5734                           ;	WDTCWS = 0x7, unprogrammed default
  5735                           ;	WDT input clock selector
  5736                           ;	WDTCCS = 0x7, unprogrammed default
  5737   300005                     	org	3145733
  5738   300005  FF                 	db	255
  5739                           
  5740                           ;Config register CONFIG4L @ 0x300006
  5741                           ;	unspecified, using default values
  5742                           ;	Write Protection Block 0
  5743                           ;	WRT0 = 0x1, unprogrammed default
  5744                           ;	Write Protection Block 1
  5745                           ;	WRT1 = 0x1, unprogrammed default
  5746                           ;	Write Protection Block 2
  5747                           ;	WRT2 = 0x1, unprogrammed default
  5748                           ;	Write Protection Block 3
  5749                           ;	WRT3 = 0x1, unprogrammed default
  5750                           ;	Write Protection Block 3
  5751                           ;	WRT4 = 0x1, unprogrammed default
  5752                           ;	Write Protection Block 3
  5753                           ;	WRT5 = 0x1, unprogrammed default
  5754                           ;	Write Protection Block 3
  5755                           ;	WRT6 = 0x1, unprogrammed default
  5756                           ;	Write Protection Block 3
  5757                           ;	WRT7 = 0x1, unprogrammed default
  5758   300006                     	org	3145734
  5759   300006  FF                 	db	255
  5760                           
  5761                           ;Config register CONFIG4H @ 0x300007
  5762                           ;	unspecified, using default values
  5763                           ;	Configuration Register Write Protection bit
  5764                           ;	WRTC = 0x1, unprogrammed default
  5765                           ;	Boot Block Write Protection bit
  5766                           ;	WRTB = 0x1, unprogrammed default
  5767                           ;	Data EEPROM Write Protection bit
  5768                           ;	WRTD = 0x1, unprogrammed default
  5769                           ;	Scanner Enable bit
  5770                           ;	SCANE = 0x1, unprogrammed default
  5771                           ;	Low Voltage Programming Enable bit
  5772                           ;	LVP = 0x1, unprogrammed default
  5773   300007                     	org	3145735
  5774   300007  FF                 	db	255
  5775                           
  5776                           ;Config register CONFIG5L @ 0x300008
  5777                           ;	unspecified, using default values
  5778                           ;	UserNVM Program Memory Code Protection bit
  5779                           ;	CP = 0x1, unprogrammed default
  5780                           ;	DataNVM Memory Code Protection bit
  5781                           ;	CPD = 0x1, unprogrammed default
  5782   300008                     	org	3145736
  5783   300008  FF                 	db	255
  5784                           
  5785                           ;Config register CONFIG5H @ 0x300009
  5786                           ;	unspecified, using default values
  5787   300009                     	org	3145737
  5788   300009  FF                 	db	255
  5789                           
  5790                           ;Config register CONFIG6L @ 0x30000A
  5791                           ;	unspecified, using default values
  5792                           ;	Table Read Protection Block 0
  5793                           ;	EBTR0 = 0x1, unprogrammed default
  5794                           ;	Table Read Protection Block 1
  5795                           ;	EBTR1 = 0x1, unprogrammed default
  5796                           ;	Table Read Protection Block 2
  5797                           ;	EBTR2 = 0x1, unprogrammed default
  5798                           ;	Table Read Protection Block 3
  5799                           ;	EBTR3 = 0x1, unprogrammed default
  5800                           ;	Table Read Protection Block 4
  5801                           ;	EBTR4 = 0x1, unprogrammed default
  5802                           ;	Table Read Protection Block 5
  5803                           ;	EBTR5 = 0x1, unprogrammed default
  5804                           ;	Table Read Protection Block 6
  5805                           ;	EBTR6 = 0x1, unprogrammed default
  5806                           ;	Table Read Protection Block 7
  5807                           ;	EBTR7 = 0x1, unprogrammed default
  5808   30000A                     	org	3145738
  5809   30000A  FF                 	db	255
  5810                           
  5811                           ;Config register CONFIG6H @ 0x30000B
  5812                           ;	unspecified, using default values
  5813                           ;	Boot Block Table Read Protection bit
  5814                           ;	EBTRB = 0x1, unprogrammed default
  5815   30000B                     	org	3145739
  5816   30000B  FF                 	db	255
  5817                           tosu	equ	0xFFF
  5818                           tosh	equ	0xFFE
  5819                           tosl	equ	0xFFD
  5820                           stkptr	equ	0xFFC
  5821                           pclatu	equ	0xFFB
  5822                           pclath	equ	0xFFA
  5823                           pcl	equ	0xFF9
  5824                           tblptru	equ	0xFF8
  5825                           tblptrh	equ	0xFF7
  5826                           tblptrl	equ	0xFF6
  5827                           tablat	equ	0xFF5
  5828                           prodh	equ	0xFF4
  5829                           prodl	equ	0xFF3
  5830                           indf0	equ	0xFEF
  5831                           postinc0	equ	0xFEE
  5832                           postdec0	equ	0xFED
  5833                           preinc0	equ	0xFEC
  5834                           plusw0	equ	0xFEB
  5835                           fsr0h	equ	0xFEA
  5836                           fsr0l	equ	0xFE9
  5837                           wreg	equ	0xFE8
  5838                           indf1	equ	0xFE7
  5839                           postinc1	equ	0xFE6
  5840                           postdec1	equ	0xFE5
  5841                           preinc1	equ	0xFE4
  5842                           plusw1	equ	0xFE3
  5843                           fsr1h	equ	0xFE2
  5844                           fsr1l	equ	0xFE1
  5845                           bsr	equ	0xFE0
  5846                           indf2	equ	0xFDF
  5847                           postinc2	equ	0xFDE
  5848                           postdec2	equ	0xFDD
  5849                           preinc2	equ	0xFDC
  5850                           plusw2	equ	0xFDB
  5851                           fsr2h	equ	0xFDA
  5852                           fsr2l	equ	0xFD9
  5853                           status	equ	0xFD8

Data Sizes:
    Strings     52
    Constant    0
    Data        4
    BSS         53
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     91      94
    BANK0           160    111     133
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[12]), STR_3(CODE[18]), STR_2(CODE[6]), STR_1(CODE[16]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[12]), STR_3(CODE[18]), STR_2(CODE[6]), STR_1(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[12]), STR_3(CODE[18]), STR_2(CODE[6]), STR_1(CODE[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[12]), STR_3(CODE[18]), STR_2(CODE[6]), STR_1(CODE[16]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1847$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[12]), STR_3(CODE[18]), STR_2(CODE[6]), STR_1(CODE[16]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> main@yearstr(BANK0[20]), main@datestr(BANK0[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1794$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1794$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    LCD_sendstring@string	PTR unsigned char  size(2) Largest target is 50
		 -> main@yearstr(BANK0[20]), main@datestr(BANK0[50]), 

    check_month@year	PTR unsigned short  size(2) Largest target is 2
		 -> main@year(BANK0[2]), 

    check_month@month_day	PTR unsigned int  size(2) Largest target is 2
		 -> main@month_day(BANK0[2]), 

    check_month@month	PTR unsigned int  size(2) Largest target is 2
		 -> main@month(BANK0[2]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    _check_month->___lwmod
    ___lwmod->___wmul
    ___lwdiv->___wmul
    _LCD_setline->_LCD_sendbyte
    _LCD_sendstring->_LCD_sendbyte
    _LCD_clear->_LCD_sendbyte
    _LCD_Init->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                86    86      0   18415
                                             25 BANK0     86    86      0
                         _Comp1_init
                    _Interrupts_init
                           _LCD_Init
                          _LCD_clear
                     _LCD_sendstring
                        _LCD_setline
                  _LEDarray_disp_bin
                      _LEDarray_init
                         _Light_init
                        _Timer0_init
                            ___lwdiv
                            ___lwmod
                             ___wmul
                        _check_month
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12    8708
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7899
                                             83 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           24    18      6    7538
                                             62 COMRAM    21    15      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3867
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2195
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1083
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1992
                                              6 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     207
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              4     2      2     237
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1223
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _check_month                                         10     4      6    1572
                                             11 COMRAM    10     4      6
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                              6 COMRAM     5     1      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4    1074
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Light_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    2     0      2     578
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LCD_setline                                          1     1      0     958
                                              3 COMRAM     1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_sendstring                                       2     0      2    1111
                                              3 COMRAM     2     0      2
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_clear                                            1     1      0     914
                                              3 COMRAM     1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0    1002
                                              3 COMRAM     2     2      0
                       _LCD_sendbyte
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (2) _LCD_sendbyte                                         2     1      1     914
                                              1 COMRAM     2     1      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (3) _LCD_sendnibble                                       1     1      0      88
                                              0 COMRAM     1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (4) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comp1_init                                           0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Comp1_init
     _DAC_init
   _Interrupts_init
   _LCD_Init
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
     _LCD_sendnibble
   _LCD_clear
     _LCD_sendbyte
   _LCD_sendstring
     _LCD_sendbyte
   _LCD_setline
     _LCD_sendbyte
   _LEDarray_disp_bin
   _LEDarray_init
   _Light_init
   _Timer0_init
   ___lwdiv
     ___wmul (ARG)
   ___lwmod
     ___wmul (ARG)
   ___wmul
   _check_month
     ___lwmod
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
         _isdigit

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6F      85       5       83.1%
BITBIGSFRlhlhhh     84      0       0      40        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5B      5E       1      100.0%
BITBIGSFRllhhh      5C      0       0      44        0.0%
BITBIGSFRhhll       4A      0       0      34        0.0%
BITBIGSFRlll        3A      0       0      47        0.0%
BITBIGSFRlhll       21      0       0      43        0.0%
BITBIGSFRhhlhh      1B      0       0      33        0.0%
BITBIGSFRlhhhhl     14      0       0      37        0.0%
BITBIGSFRlhlhl      11      0       0      42        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRllhl        9      0       0      46        0.0%
BITBIGSFRlhlhhl      8      0       0      41        0.0%
BITBIGSFRlhhl        6      0       0      39        0.0%
BITBIGSFRlhhhl       3      0       0      38        0.0%
BITBIGSFRllhhl       1      0       0      45        0.0%
BITBIGSFRlhhhhl      1      0       0      36        0.0%
BITBIGSFRhl          1      0       0      35        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     103      48        0.0%
DATA                 0      0     103       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Nov 08 21:34:37 2022

                        l50 20E8                          l42 26F8                          l51 20EA  
                        l60 2156                          l52 20FE                          l61 2158  
                        l53 2100                          l62 216C                          l54 2114  
                        l63 216E                          l55 2116                          l64 2182  
                        l56 212A                          l48 20D2                          l57 212C  
                        l49 20D4                          l66 2184                          l58 2140  
                        l59 2142                          l93 2764                          l96 2746  
                        l99 26D6         ___wmul@multiplicand 0003           ??_Interrupts_init 0001  
                       l301 25F4                         l231 2718                         l138 275E  
                       l307 265E                         l255 163A                         l319 26B0  
                       l281 237C                         l433 1D30                         l274 2754  
                       l290 262A                         l283 2392                         l285 23A0  
                       l277 2350                         l293 22C4                         l446 1E94  
                       l279 2366                         l288 260E                         l296 2732  
                       l810 2330                         l820 23FC                         l817 2338  
                       l827 2404                         l997 2456                         _abs 257C  
                       _pad 2186                         wreg 000FE8                 main@changed 00C5  
               main@datestr 007D                        l1111 1FF2                        l2000 1C1E  
                      l1024 21CA                        l1114 268A                        l1122 2536  
                      l2010 1C78                        l2002 1C3C                        l1027 220C  
                      l1051 1BA8                        l1035 1990                        ?_abs 0013  
                      l1108 1FEA                        l2012 1CA6                        l2004 1C44  
                      l2020 1CE0                        l1029 222E                        l1037 1998  
                      l2102 2748                        l2022 1CF0                        l2014 1CC6  
                      l2006 1C58                        l2030 1D36                        l1038 19DE  
                      l2110 1916                        l2104 274A                        l2200 233C  
                      l2024 1D10                        l2016 1CC8                        l2008 1C66  
                      l2040 1D96                        l2032 1D44                        l2120 196A  
                      l2112 192A                        l1137 20BC                        l1145 257A  
                      l1073 18F4                        l2106 2752                        l2210 2376  
                      l2202 234A                        l2018 1CDA                        l2050 1E0C  
                      l2042 1DB4                        l2034 1D64                        l2130 19C6  
                      l2122 1984                        l2114 193A                        l1083 25B2  
                      l2212 237E                        l2204 2352                        l2300 23B4  
                      l2060 1E74                        l2052 1E2C                        l2044 1DBC  
                      l2036 1D68                        l2028 1D32                        l1148 276A  
                      l2140 19F6                        l2132 19D2                        l2124 19A0  
                      l2116 195A                        l2108 18F6                        l2220 163C  
                      l2214 238C                        l2206 2360                        l2310 23F0  
                      l2302 23BC                        l2054 1E3E                        l2046 1DD0  
                      l2038 1D76                        l1086 25BA                        l2070 21B6  
                      l2150 1B02                        l2142 1A78                        l2134 19DA  
                      l2126 19B0                        l2118 1968                        l2230 1690  
                      l2222 1664                        l1079 24A8                        l2216 2394  
                      l2208 2368                        l2400 25BE                        l2312 23F6  
                      l2304 23C4                        l2048 1DDE                        l2056 1E44  
                      l2080 221A                        l2072 21C2                        l2064 2186  
                      l2160 1B72                        l2152 1B20                        l2144 1A7E  
                      l2136 19E6                        l2128 19B6                        l2232 1692  
                      l2240 16E8                        l2224 1672                        l2320 24A0  
                      l2218 2398                        l2402 25CE                        l2330 20E2  
                      l2306 23D2                        l2090 24F2                        l2170 1EAA  
                      l2058 1E54                        l2082 257C                        l2074 21D6  
                      l2066 2194                        l2162 1B78                        l2154 1B3A  
                      l2146 1A84                        l2138 19F0                        l2250 1776  
                      l2242 16FA                        l2234 16A4                        l2226 1680  
                      l2314 2458                        l2410 2418                        l2500 271A  
                      l2420 262C                        l2404 25D8                        l2340 2150  
                      l2332 20F8                        l2324 26D8                        l2308 23E8  
                      l2092 24F6                        l2180 1F0E                        l2084 2596  
                      l2076 21EA                        l2068 21A8                        l2164 1B88  
                      l2156 1B54                        l2148 1AE8                        l2260 17F0  
                      l2252 1796                        l2244 1722                        l2228 1684  
                      l2316 2464                        l2412 2420                        l2350 26B4  
                      l2502 2724                        l2422 2630                        l2406 25EA  
                      l2342 2166                        l2334 210E                        l2326 20BE  
                      l2510 22E8                        l2430 1306                        l2086 2660  
                      l2094 250A                        l2190 1F88                        l2182 1F16  
                      l2174 1EAE                        l2078 21EE                        l2158 1B62  
                      l2270 18B6                        l2262 1810                        l2246 1758  
                      l2238 16B0                        l2318 2480                        l2414 2428  
                      l2360 26CE                        l2352 26C6                        l2424 2642  
                      l2344 217C                        l2336 2124                        l2328 20CC  
                      l2520 2322                        l2512 22F0                        l2504 22C6  
                      l2440 1390                        l2432 1320                        l2096 252C  
                      l2192 1FBC                        l2184 1F4E                        l2176 1ECE  
                      l2168 1E96                        l2264 1830                        l2256 17A4  
                      l2248 1768                        l2416 2444                        l2408 2406  
                      l2600 0F72                        l2362 26D2                        l2354 26C8  
                      l2290 25F8                        l2426 2646                        l2338 213A  
                      l2346 2760                        l2370 270C                        l2522 2324  
                      l2514 22FE                        l2506 22CE                        l2450 1402  
                      l2442 13AC                        l2434 133C                        l2098 2530  
                      l2194 1FCE                        l2178 1F06                        l2266 1886  
                      l2258 17E0                        l2274 18C8                        l2610 0FC8  
                      l2602 0F88                        l2284 2734                        l2356 26CA  
                      l2348 26B2                        l2364 2756                        l2292 2608  
                      l2380 2266                        l2372 2716                        l2524 232A  
                      l2516 2304                        l2508 22E0                        l2460 1474  
                      l2452 141E                        l2436 1358                        l2444 13C8  
                      l2428 1306                        l2620 10E4                        l2612 0FF8  
                      l2604 0F90                        l2286 273A                        l2358 26CC  
                      l2294 2610                        l2390 2292                        l2382 2272  
                      l2374 2230                        l2366 26FA                        l2518 231A  
                      l2470 14E6                        l2462 1490                        l2454 142E  
                      l2446 13E4                        l2438 1374                        l2630 112A  
                      l2622 10FA                        l2614 105E                        l2606 0F94  
                      l2288 2744                        l2296 2622                        l2392 2298  
                      l2384 2278                        l2376 2248                        l2368 2702  
                      l2480 1580                        l2472 1510                        l2464 14AC  
                      l2448 13F4                        l2456 143C                        l2640 116E  
                      l2632 113A                        l2624 10FC                        l2608 0FAC  
                      l2616 10C4                        l2560 0E36                        l2394 22A2  
                      l2386 2282                        l2378 2260                        l2298 23A2  
                      l2482 159C                        l2490 15EC                        l2474 153E  
                      l2466 14C8                        l2458 1458                        l2642 1180  
                      l2650 11C2                        l2634 113C                        l2626 1104  
                      l2618 10D0                        l2570 0E84                        l2562 0E68  
                      l2396 22B0                        l2388 2288                        l2492 1608  
                      l2484 15AE                        l2476 156C                        l2468 14D8  
                      l2660 1224                        l2652 11D4                        l2644 1192  
                      l2628 1118                        l2636 1146                        l2580 0EF8  
                      l2572 0E8A                        l2564 0E78                        l2398 22BA  
                      l2494 161A                        l2486 15CA                        l2478 1578  
                      l2662 123A                        l2654 11E8                        l2670 126C  
                      l2646 11A8                        l2638 115A                        l2590 0F32  
                      l2582 0F04                        l2574 0EC0                        l2566 0E7C  
                      l2488 15DA                        l1960 2018                        l2736 16DA  
                      l2680 12CE                        l2672 127E                        l2664 124C  
                      l2656 11FC                        l2648 11BE                        l2592 0F46  
                      l2584 0F10                        l2576 0ECC                        l2568 0E80  
                      l2738 1F38                        l1962 2022                        l1970 2538  
                      l2682 12E4                        l2674 1292                        l2666 1252  
                      l2658 120E                        l2594 0F4E                        l2586 0F26  
                      l2578 0ED2                        l1980 26A8                        l1964 2040  
                      l1956 1FF4                        l1972 2544                        l2684 12F6  
                      l2676 12A6                        l2668 125E                        l2596 0F52  
                      l2588 0F2A                        l1990 1BDC                        l1966 2076  
                      l1958 2006                        l1974 2556                        l2678 12B8  
                      l2598 0F56                        ?_pad 0011                        l1992 1BE0  
                      l1984 1BAA                        l1976 255A                        l1978 268C  
                      l1994 1BEE                        l1986 1BAE                        l1996 1C0E  
                      l1988 1BBC                        l1998 1C12                        STR_1 0E13  
                      STR_2 0E2F                        STR_3 0E01                        STR_4 0E23  
                      u2000 20E2                        u2001 20DE                        u2010 20F8  
                      u2011 20F4                        u2100 265E                        u2020 210E  
                      u2101 265A                        u2021 210A                        u2030 2124  
                      u2110 1320                        u2031 2120                        u2111 131C  
                      u2040 213A                        u2200 1458                        u2120 133C  
                      u1400 2018                        u2041 2136                        u2201 1454  
                      u2121 1338                        u1401 2014                        u2050 2150  
                      u2210 1474                        u2130 1358                        u1410 2040  
                      u2051 214C                        u2211 1470                        u2131 1354  
                      u1411 203C                        u2060 2166                        u2300 15CA  
                      u2220 1490                        u2140 1374                        u1500 1CF0  
                      u1420 2076                        u2061 2162                        u2301 15C6  
                      u2221 148C                        u2141 1370                        u1501 1CEC  
                      u1421 2072                        u2070 217C                        u2310 1608  
                      u2230 14AC                        u2150 1390                        u1510 1D44  
                      u1430 257A                        u2071 2178                        u2311 1604  
                      u2231 14A8                        u2151 138C                        u1511 1D40  
                      u1431 2576                        u2080 25CE                        u2320 161A  
                      u2240 14C8                        u2160 13AC                        u1440 1BBC  
                      u1520 1D76                        u1600 221A                        u2081 25CA  
                      u2321 1616                        u2241 14C4                        u2161 13A8  
                      u1441 1BB8                        u1521 1D72                        u1601 2216  
                      u2090 25EA                        u2330 1636                        u2250 1510  
                      u2170 13C8                        u1450 1BEE                        u1530 1DB4  
                      u1610 2596                        u2091 25E6                        u2331 1632  
                      u2251 150C                        u2171 13C4                        u1451 1BEA  
                      u1531 1DB0                        u1611 2592                        u2340 22E0  
                      u2260 153E                        u2180 13E4                        u1620 2684  
                      u1540 1DDE                        u1700 1984                        u2500 0FAC  
                      u2341 22DC                        u2261 153A                        u2181 13E0  
                      u1621 267E                        u1461 1C18                        u1541 1DDA  
                      u1701 1980                        u2501 0FA8                        u2350 22FE  
                      u2270 156C                        u2190 141E                        u1630 2686  
                      u1470 1C3C                        u1550 1E0C                        u1390 2006  
                      u1710 19B0                        u2510 10E4                        u2351 22FA  
                      u2271 1568                        u2191 141A                        u1471 1C38  
                      u1551 1E08                        u1391 2002                        u1711 19AC  
                      u2511 10E0                        u2360 231A                        u2280 159C  
                      u1640 250A                        u1800 1F02                        u1480 1C66  
                      u1560 1E54                        u1720 19C6                        u2600 11A8  
                      u2520 10FA                        u2361 2316                        u2281 1598  
                      u1641 2506                        u1801 1EFE                        u1481 1C62  
                      u1561 1E50                        u1721 19C2                        u2601 11A4  
                      u2521 10F6                        u2290 15AE                        u1650 252C  
                      u1810 1FBC                        u1490 1CA6                        u1570 2194  
                      u1730 1B02                        u2610 11BE                        u2530 1118  
                      u2291 15AA                        u1651 2528                        u1811 1FB8  
                      u1491 1CA2                        u1571 2190                        u1731 1AFE  
                      u2611 11BA                        u2531 1114                        u1820 1FCE  
                      u1580 21B6                        u1740 1B20                        u1660 1926  
                      u1900 1768                        u2700 1292                        u2620 11D4  
                      u2540 112A                        u1821 1FCA                        u1581 21B2  
                      u1741 1B1C                        u1661 1920                        u1901 1764  
                      u2701 128E                        u2621 11D0                        u2541 1126  
                      u1830 234A                        u1590 220C                        u1750 1B3A  
                      u1670 1928                        u1910 17E0                        u2710 12A6  
                      u2630 11E8                        u2550 113A                        u2470 0F26  
                      u1831 2346                        u1591 2208                        u1751 1B36  
                      u1911 17DC                        u2711 12A2                        u2631 11E4  
                      u2551 1136                        u2471 0F22                        u1840 2360  
                      u1760 1B54                        u1680 193A                        u1920 1810  
                      u2720 12B8                        u2640 11FC                        u2560 115A  
                      u2480 0F46                        u1841 235C                        u1761 1B50  
                      u1681 1936                        u1921 180C                        u2721 12B4  
                      u2641 11F8                        u2561 1156                        u2481 0F42  
                      u1850 2376                        u1770 1B62                        u1690 1968  
                      u1930 1830                        u2730 12CE                        u2650 120E  
                      u2570 116E                        u2490 0F88                        u1851 2372  
                      u1771 1B5E                        u1691 1964                        u1931 182C  
                      u2731 12CA                        u2651 120A                        u2571 116A  
                      u2491 0F84                        u1860 238C                        u1940 2608  
                      u1780 1B72                        u2740 12E4                        u2660 1224  
                      u2580 1180                        u1861 2388                        u1941 2604  
                      u1781 1B6E                        u2741 12E0                        u2661 1220  
                      u2581 117C                        u1950 23B4                        u1790 1ECE  
                      u1870 1664                        u2750 12F6                        u2670 123A  
                      u2590 1192                        u2807 2284                        u1951 23B0  
                      u1791 1ECA                        u1871 1660                        u2751 12F2  
                      u2671 1236                        u2591 118E                        u1960 23D2  
                      u1880 16FA                        u2680 124C                        u2817 2294  
                      u1961 23CE                        u1881 16F6                        u2681 1248  
                      u1970 23E8                        u1890 1722                        u2690 127E  
                      u2827 22A8                        u1971 23E4                        u1891 171E  
                      u2691 127A                        u1980 24A0                        u2837 2624  
                      u1981 249C                        u1990 20CC                        u2847 239A  
                      u2767 272A                        u1991 20C8                        u2857 274C  
                      u2777 2252                        u2787 2268                        u2797 2274  
                      abs@a 0013                        _dbuf 0100                        _atoi 1E96  
                      _main 0E36                        _dtoa 18F6                        _hour 00E3  
                      _prec 005C                        pad@i 0018                        pad@p 0015  
                      fsr1h 000FE2                        fsr2h 000FDA                        indf2 000FDF  
                      fsr1l 000FE1                        pad@w 001A                        fsr2l 000FD9  
                      btemp 005F                ?_LCD_setline 0001                        prodh 000FF4  
                      prodl 000FF3                 main@yearstr 00AF                        start 00C6  
          __end_of_DAC_init 2748             __end_of_HighISR 00C6                ___param_bank 000000  
                _Comp1_init 26B2                       ??_abs 0015                       ??_pad 0017  
          __end_of_LCD_Init 22C6             __end_of___aodiv 1D32                       ?_atoi 0007  
                     ?_main 0001                       ?_dtoa 001C             __end_of___aomod 1E96  
                     _ADPCH 000F5F             __end_of___lwdiv 233A             __end_of___lwmod 2406  
                     i2l150 00A6                       i2l151 00BC                       i2l145 005E  
                     i2l153 00C2                       i2l146 00BE                vfpfcnvrt@fmt 0041  
                     _TMR0H 000FD4                       _TMR0L 000FD3        check_month@leap_year 0014  
                     _flags 005E                       _fputc 1FF4                       _fputs 2538  
           __end_of_isdigit 268C                       atoi@n 000E                       pad@fp 0011  
                     atoi@s 0007                       _width 00CF                       _putch 276A  
                     dtoa@d 001E                       dtoa@i 003C                       dtoa@n 0034  
                     dtoa@p 0030                       dtoa@s 003E                       dtoa@w 0032  
           __end_of_isspace 2538               ?_LCD_sendbyte 0002                       tablat 000FF5  
                     ttemp5 0060                       ttemp6 0063                       ttemp7 0067  
                     status 000FD8                       wtemp8 0060             __end_of_sprintf 2458  
      check_month@month_day 000E             __initialization 24AA                __end_of_atoi 1FF4  
              __end_of_main 1306                __end_of_dtoa 1BAA                  _Light_init 2760  
          _daylight_end_min 00D5           __end_of_LCD_E_TOG 2756                      ??_atoi 0009  
                    ??_main 0079                      ??_dtoa 0026               __activetblptr 000003  
         __end_of_LCD_clear 2734                      ?_fputc 0001                      ?_fputs 000A  
                    _ADRESH 000F64              ??_LCD_sendbyte 0003                      ?_putch 0001  
                    i2l2540 001A                      i2l2550 0048                      i2l2542 0022  
                    i2l2552 006C                      i2l2544 0028                      i2l2554 007C  
                    i2l2546 002C                      i2l2538 000A                      i2l2556 0090  
                    i2l2548 003A                      i2l2558 00B6               vfpfcnvrt@done 0050  
                 ??_HighISR 0001                      _TMR0IE 00714D                      _TMR0IF 00719D  
         _LEDarray_disp_bin 20BE          ?_LEDarray_disp_bin 0001               ??_Timer0_init 0001  
              vfprintf@cfmt 005A                   ??___aodiv 0011                   ??___aomod 0011  
                    ___wmul 268C                 ?_Comp1_init 0001                   ??___lwdiv 000B  
                 ??___lwmod 000B         ??_LEDarray_disp_bin 0003                      clear_0 24D0  
                    clear_1 24DC               main@month_day 00CD                      _minute 00E1  
                    isa$std 000001                      pad@buf 0013                      dtoa@fp 001C  
                    fputc@c 0001                      fputs@c 000E                      fputs@i 000F  
                    fputs@s 000A                   ??_isdigit 0003                __mediumconst 0000  
                 ??_isspace 0003                      tblptrh 000FF7                      tblptrl 000FF6  
                    tblptru 000FF8                      putch@c 0001                   ?_DAC_init 0001  
          __end_of_vfprintf 24AA                   ??_sprintf 005C             _current_day_min 00DD  
 __end_of_LEDarray_disp_bin 2186                  __accesstop 0060     __end_of__initialization 24E8  
                 ?_LCD_Init 0001             check_month@year 0010               ___rparam_used 000001  
             _LEDarray_init 26D8             _Interrupts_init 2756              __pcstackCOMRAM 0001  
               ?_Light_init 0001                __pidataBANK0 2766               __end_of_fputc 20BE  
             __end_of_fputs 257C               __end_of_putch 276C         __end_of_Timer0_init 271A  
         _daylight_end_hour 00D7                  ??_DAC_init 0001                     ??_fputc 0005  
                   ??_fputs 000E                     ??_putch 0001                  __pbssBANK0 00CF  
                __pbssBANK1 0100                  ??_LCD_Init 0004              _LCD_sendnibble 233A  
            ?_LEDarray_init 0001              _LCD_sendstring 262C         _daylight_start_hour 00DB  
                   ?___wmul 0001        __end_of_LCD_sendbyte 262C      __end_of_LCD_sendnibble 23A2  
   __end_of_Interrupts_init 2760                     _HighISR 0008      __end_of_LCD_sendstring 2660  
                 _ADREFbits 000F58                     __Hparam 0000                     __Lparam 0000  
               _Timer0_init 26FA                     ___aodiv 1BAA                     ___aomod 1D32  
                   ___lwdiv 22C6                     ___lwmod 23A2                   ?_vfprintf 0054  
              __psmallconst 0E00                     __pcinit 24AA                     __ramtop 0E00  
                   __ptext0 0E36                     __ptext1 2406                     __ptext2 2458  
                   __ptext3 163C                     __ptext4 18F6                     __ptext5 2186  
                   __ptext6 2538                     __ptext7 1FF4                     __ptext8 276A  
                   __ptext9 257C                     _isdigit 2660               ??_check_month 0012  
                   _isspace 24F2                   _LCD_E_TOG 2748             LCD_setline@line 0004  
                   atoi@neg 000C                     main@day 00C9                     _sprintf 2406  
                 _LCD_clear 271A        end_of_initialization 24E8             ?_LCD_sendnibble 0001  
     main@OneAmToFiveAmFlag 00C3                     fputc@fp 0003             ??_LEDarray_init 0001  
                   fputs@fp 000C             ?_LCD_sendstring 0004           __end_of_vfpfcnvrt 18F6  
                   postdec1 000FE5                     postdec2 000FDD                ??_Comp1_init 0001  
                   postinc0 000FEE                     postinc1 000FE6                     postinc2 000FDE  
          vfpfcnvrt@convarg 0048                  ??_vfprintf 005A            _current_day_hour 00DF  
                ?_LCD_E_TOG 0001                   _TRISAbits 000F81                   _TRISBbits 000F82  
                 _TRISCbits 000F83                   _TRISEbits 000F85                   _TRISFbits 000F86  
                 _TRISGbits 000F87                   _TRISHbits 000F88  _calculated_solar_noon_hour 00D3  
          check_month@month 000C                  ?_LCD_clear 0001         __end_of_check_month 163C  
        __end_of_Comp1_init 26D8                 _CM1CON0bits 000ED0                 _CM1CON1bits 000ED1  
          ?_Interrupts_init 0001                ??_Light_init 0001                 vfpfcnvrt@ap 0043  
               vfpfcnvrt@cp 0052                 vfpfcnvrt@fp 003F              __end_of___wmul 26B2  
      LCD_sendnibble@number 0001         start_initialization 24AA                 __end_of_abs 25BC  
               __end_of_pad 2230          __end_of_Light_init 2766                _LCD_sendbyte 25F6  
             ??_LCD_setline 0004                 vfprintf@fmt 0056        LCD_sendstring@string 0004  
                  ??___wmul 0005                 __pdataBANK0 00E1                 __pbssCOMRAM 005C  
               _check_month 1306                 ??_LCD_E_TOG 0001               __pcstackBANK0 0060  
          ___aodiv@dividend 0001                 ??_LCD_clear 0004                    ?_HighISR 0001  
          ___lwdiv@dividend 0007                   _dtoa$1885 002E                ?_Timer0_init 0001  
        _daylight_start_min 00D9                   __pintcode 0008                    ?___aodiv 0001  
                  ?___aomod 0001            ___aodiv@quotient 0013         __end_of_LCD_setline 25F6  
                  ?___lwdiv 0007                    ?___lwmod 0007                 __smallconst 0E00  
                  ?_isdigit 0001                    ?_isspace 0001            ??_LCD_sendnibble 0001  
                  _DAC_init 2734            ___lwdiv@quotient 000B            ??_LCD_sendstring 0006  
                  ?_sprintf 0060            LCD_sendbyte@Byte 0003                    _LCD_Init 2230  
          LCD_sendbyte@type 0002              ___wmul@product 0005                    _LATAbits 000F79  
                  _LATBbits 000F7A                    _LATCbits 000F7B                    _LATEbits 000F7D  
                  _LATFbits 000F7E                    _LATGbits 000F7F                    _LATHbits 000F80  
                  i2u240_40 001A                    i2u240_41 0016                    i2u241_40 003A  
                  i2u241_41 0036                    i2u242_40 0048                    i2u242_41 0044  
                  i2u243_40 006C                    i2u243_41 0068                    i2u244_40 0090  
                  i2u244_41 008C                    i2u245_40 00A6                    i2u245_41 00A2  
                  i2u246_40 00B6                    i2u246_41 00B2                    _PIR2bits 000E35  
                 _vfpfcnvrt 163C                  _ADCON0bits 000F60           ___wmul@multiplier 0001  
                 main@month 00CB                _isspace$1934 0005                  _CM1NCHbits 000ED2  
                _CM1PCHbits 000ED3                   copy_data0 24BE       __end_of_LEDarray_init 26FA  
               _LCD_setline 25BC                    __Hrparam 0000                  vfprintf@ap 0058  
                  __Lrparam 0000                  vfprintf@fp 0054                  ?_vfpfcnvrt 003F  
           ___aodiv@divisor 0009             ___aodiv@counter 0011                  _ANSELAbits 000E92  
                _ANSELFbits 000EB4                  sprintf@fmt 0062                  _T0CON0bits 000FD5  
                _T0CON1bits 000FD6             ___lwdiv@divisor 0009             ___lwdiv@counter 000D  
                  __ptext10 1D32                    __ptext11 1BAA                    __ptext20 2760  
                  __ptext12 1E96                    __ptext21 26D8                    __ptext13 24F2  
                  __ptext30 2756                    __ptext22 20BE                    __ptext14 2660  
                  __ptext31 26B2                    __ptext23 25BC                    __ptext15 268C  
                  __ptext32 2734                    __ptext24 262C                    __ptext16 1306  
                  __ptext25 271A                    __ptext17 23A2                    __ptext26 2230  
                  __ptext18 22C6                    __ptext27 25F6                    __ptext19 26FA  
                  __ptext28 233A                    __ptext29 2748     LEDarray_disp_bin@number 0001  
                  isa$xinst 000000                    int$flags 005F                    _vfprintf 2458  
                  main@year 00C7            ___aomod@dividend 0001                  _INTCONbits 000FF2  
              ?_check_month 000C                    isdigit@c 0001                    intlevel2 0000  
                 sprintf@ap 006C                _DAC1CON0bits 000EC6                _DAC1CON1bits 000EC7  
          ___lwmod@dividend 0007                    isspace@c 0001             ___aomod@divisor 0009  
               ??_vfpfcnvrt 0045             ___aomod@counter 0011                    sprintf@f 006E  
                  sprintf@s 0060   _calculated_solar_noon_min 00D1             ___lwmod@divisor 0009  
           ___lwmod@counter 000B                ___aodiv@sign 0012                ___aomod@sign 0012  



Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Nov 08 13:54:31 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    50                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    52   000000                     
    53                           ; Version 2.35
    54                           ; Generated 05/05/2021 GMT
    55                           ; 
    56                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution. Publication is not required when
    70                           ;        this file is used in an embedded application.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F67K40 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88   000000                     _T0CON0bits	set	4053
    89   000000                     _T0CON1bits	set	4054
    90   000000                     _CM1CON1bits	set	3793
    91   000000                     _LATHbits	set	3968
    92   000000                     _ANSELAbits	set	3730
    93   000000                     _TRISAbits	set	3969
    94   000000                     _TMR0IE	set	29005
    95   000000                     _TRISEbits	set	3973
    96   000000                     _TRISCbits	set	3971
    97   000000                     _TRISBbits	set	3970
    98   000000                     _TRISFbits	set	3974
    99   000000                     _TRISGbits	set	3975
   100   000000                     _ANSELFbits	set	3764
   101   000000                     _ADREFbits	set	3928
   102   000000                     _ADPCH	set	3935
   103   000000                     _ADRESH	set	3940
   104   000000                     _ADCON0bits	set	3936
   105   000000                     _LATAbits	set	3961
   106   000000                     _LATGbits	set	3967
   107   000000                     _TMR0L	set	4051
   108   000000                     _TMR0H	set	4052
   109   000000                     _INTCONbits	set	4082
   110   000000                     _TRISHbits	set	3976
   111   000000                     _LATEbits	set	3965
   112   000000                     _LATCbits	set	3963
   113   000000                     _LATBbits	set	3962
   114   000000                     _LATFbits	set	3966
   115   000000                     _DAC1CON0bits	set	3782
   116   000000                     _CM1CON0bits	set	3792
   117   000000                     _CM1NCHbits	set	3794
   118   000000                     _DAC1CON1bits	set	3783
   119   000000                     _CM1PCHbits	set	3795
   120   000000                     _TMR0IF	set	29085
   121   000000                     _PIR2bits	set	3637
   122                           
   123                           	psect	smallconst
   124   000E00                     __psmallconst:
   125                           	callstack 0
   126   000E00  00                 	db	0
   127   000E01                     
   128                           ; BSR set to: 14
   129   000E01  56                 	db	86	;'V'
   130   000E02  6F                 	db	111	;'o'
   131   000E03  6C                 	db	108	;'l'
   132   000E04  74                 	db	116	;'t'
   133   000E05  61                 	db	97	;'a'
   134   000E06  67                 	db	103	;'g'
   135   000E07  65                 	db	101	;'e'
   136   000E08  20                 	db	32
   137   000E09  3D                 	db	61	;'='
   138   000E0A  20                 	db	32
   139   000E0B  25                 	db	37
   140   000E0C  64                 	db	100	;'d'
   141   000E0D  2E                 	db	46
   142   000E0E  25                 	db	37
   143   000E0F  30                 	db	48	;'0'
   144   000E10  32                 	db	50	;'2'
   145   000E11  64                 	db	100	;'d'
   146   000E12  00                 	db	0
   147   000E13                     
   148                           ; BSR set to: 14
   149   000E13  67                 	db	103	;'g'
   150   000E14  65                 	db	101	;'e'
   151   000E15  74                 	db	116	;'t'
   152   000E16  76                 	db	118	;'v'
   153   000E17  61                 	db	97	;'a'
   154   000E18  6C                 	db	108	;'l'
   155   000E19  20                 	db	32
   156   000E1A  3D                 	db	61	;'='
   157   000E1B  20                 	db	32
   158   000E1C  25                 	db	37
   159   000E1D  64                 	db	100	;'d'
   160   000E1E  00                 	db	0
   161   000E1F                     STR_1:
   162                           
   163                           ; BSR set to: 14
   164   000E1F  25                 	db	37
   165   000E20  64                 	db	100	;'d'
   166   000E21  20                 	db	32
   167   000E22  2F                 	db	47
   168   000E23  20                 	db	32
   169   000E24  25                 	db	37
   170   000E25  64                 	db	100	;'d'
   171   000E26  00                 	db	0
   172   000E27  00                 	db	0	; dummy byte at the end
   173   000000                     
   174                           ; #config settings
   175                           
   176                           	psect	cinit
   177   002610                     __pcinit:
   178                           	callstack 0
   179   002610                     start_initialization:
   180                           	callstack 0
   181   002610                     __initialization:
   182                           	callstack 0
   183                           
   184                           ; Clear objects allocated to BANK1 (32 bytes)
   185   002610  EE01  F000         	lfsr	0,__pbssBANK1
   186   002614  0E20               	movlw	32
   187   002616                     clear_0:
   188   002616  6AEE               	clrf	postinc0,c
   189   002618  06E8               	decf	wreg,f,c
   190   00261A  E1FD               	bnz	clear_0
   191                           
   192                           ; Clear objects allocated to BANK0 (22 bytes)
   193   00261C  EE00  F0CB         	lfsr	0,__pbssBANK0
   194   002620  0E16               	movlw	22
   195   002622                     clear_1:
   196   002622  6AEE               	clrf	postinc0,c
   197   002624  06E8               	decf	wreg,f,c
   198   002626  E1FD               	bnz	clear_1
   199                           
   200                           ; Clear objects allocated to COMRAM (3 bytes)
   201   002628  6A5E               	clrf	(__pbssCOMRAM+2)& (0+255),c
   202   00262A  6A5D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   203   00262C  6A5C               	clrf	__pbssCOMRAM& (0+255),c
   204   00262E                     end_of_initialization:
   205                           	callstack 0
   206   00262E                     __end_of__initialization:
   207                           	callstack 0
   208   00262E  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   209   002630  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   210   002632  0100               	movlb	0
   211   002634  EF14  F007         	goto	_main	;jump to C main() function
   212                           
   213                           	psect	bssCOMRAM
   214   00005C                     __pbssCOMRAM:
   215                           	callstack 0
   216   00005C                     _prec:
   217                           	callstack 0
   218   00005C                     	ds	2
   219   00005E                     _flags:
   220                           	callstack 0
   221   00005E                     	ds	1
   222                           
   223                           	psect	bssBANK0
   224   0000CB                     __pbssBANK0:
   225                           	callstack 0
   226   0000CB                     _width:
   227                           	callstack 0
   228   0000CB                     	ds	2
   229   0000CD                     _calculated_solar_noon_min:
   230                           	callstack 0
   231   0000CD                     	ds	2
   232   0000CF                     _calculated_solar_noon_hour:
   233                           	callstack 0
   234   0000CF                     	ds	2
   235   0000D1                     _daylight_end_min:
   236                           	callstack 0
   237   0000D1                     	ds	2
   238   0000D3                     _daylight_end_hour:
   239                           	callstack 0
   240   0000D3                     	ds	2
   241   0000D5                     _daylight_start_min:
   242                           	callstack 0
   243   0000D5                     	ds	2
   244   0000D7                     _daylight_start_hour:
   245                           	callstack 0
   246   0000D7                     	ds	2
   247   0000D9                     _current_day_min:
   248                           	callstack 0
   249   0000D9                     	ds	2
   250   0000DB                     _current_day_hour:
   251                           	callstack 0
   252   0000DB                     	ds	2
   253   0000DD                     _minute:
   254                           	callstack 0
   255   0000DD                     	ds	2
   256   0000DF                     _hour:
   257                           	callstack 0
   258   0000DF                     	ds	2
   259                           
   260                           	psect	bssBANK1
   261   000100                     __pbssBANK1:
   262                           	callstack 0
   263   000100                     _dbuf:
   264                           	callstack 0
   265   000100                     	ds	32
   266                           
   267                           	psect	cstackBANK0
   268   000060                     __pcstackBANK0:
   269                           	callstack 0
   270   000060                     ?_sprintf:
   271                           	callstack 0
   272   000060                     sprintf@s:
   273                           	callstack 0
   274                           
   275                           ; 2 bytes @ 0x0
   276   000060                     	ds	2
   277   000062                     sprintf@fmt:
   278                           	callstack 0
   279                           
   280                           ; 2 bytes @ 0x2
   281   000062                     	ds	6
   282   000068                     sprintf@ap:
   283                           	callstack 0
   284                           
   285                           ; 2 bytes @ 0x8
   286   000068                     	ds	2
   287   00006A                     sprintf@f:
   288                           	callstack 0
   289                           
   290                           ; 11 bytes @ 0xA
   291   00006A                     	ds	11
   292   000075                     ??_main:
   293                           
   294                           ; 1 bytes @ 0x15
   295   000075                     	ds	4
   296   000079                     main@datestr:
   297                           	callstack 0
   298                           
   299                           ; 50 bytes @ 0x19
   300   000079                     	ds	50
   301   0000AB                     main@yearstr:
   302                           	callstack 0
   303                           
   304                           ; 20 bytes @ 0x4B
   305   0000AB                     	ds	20
   306   0000BF                     main@OneAmToFiveAmFlag:
   307                           	callstack 0
   308                           
   309                           ; 2 bytes @ 0x5F
   310   0000BF                     	ds	2
   311   0000C1                     main@changed:
   312                           	callstack 0
   313                           
   314                           ; 2 bytes @ 0x61
   315   0000C1                     	ds	2
   316   0000C3                     main@year:
   317                           	callstack 0
   318                           
   319                           ; 2 bytes @ 0x63
   320   0000C3                     	ds	2
   321   0000C5                     main@day:
   322                           	callstack 0
   323                           
   324                           ; 2 bytes @ 0x65
   325   0000C5                     	ds	2
   326   0000C7                     main@month:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0x67
   330   0000C7                     	ds	2
   331   0000C9                     main@month_day:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0x69
   335   0000C9                     	ds	2
   336                           
   337                           	psect	cstackCOMRAM
   338   000001                     __pcstackCOMRAM:
   339                           	callstack 0
   340   000001                     ?_isdigit:
   341                           	callstack 0
   342   000001                     ?_isspace:
   343                           	callstack 0
   344   000001                     ?___wmul:
   345                           	callstack 0
   346   000001                     ?___aodiv:
   347                           	callstack 0
   348   000001                     ?___aomod:
   349                           	callstack 0
   350   000001                     LCD_sendnibble@number:
   351                           	callstack 0
   352   000001                     LEDarray_disp_bin@number:
   353                           	callstack 0
   354   000001                     ___wmul@multiplier:
   355                           	callstack 0
   356   000001                     isdigit@c:
   357                           	callstack 0
   358   000001                     isspace@c:
   359                           	callstack 0
   360   000001                     fputc@c:
   361                           	callstack 0
   362   000001                     ___aodiv@dividend:
   363                           	callstack 0
   364   000001                     ___aomod@dividend:
   365                           	callstack 0
   366                           
   367                           ; 8 bytes @ 0x0
   368   000001                     	ds	1
   369   000002                     LCD_sendbyte@type:
   370                           	callstack 0
   371                           
   372                           ; 1 bytes @ 0x1
   373   000002                     	ds	1
   374   000003                     ??_isdigit:
   375   000003                     ??_isspace:
   376   000003                     LCD_sendbyte@Byte:
   377                           	callstack 0
   378   000003                     ___wmul@multiplicand:
   379                           	callstack 0
   380   000003                     fputc@fp:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x2
   384   000003                     	ds	1
   385   000004                     ??_LCD_Init:
   386   000004                     ??_LCD_clear:
   387   000004                     LCD_setline@line:
   388                           	callstack 0
   389   000004                     LCD_sendstring@string:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0x3
   393   000004                     	ds	1
   394   000005                     ??_fputc:
   395   000005                     _isspace$1936:
   396                           	callstack 0
   397   000005                     ___wmul@product:
   398                           	callstack 0
   399                           
   400                           ; 2 bytes @ 0x4
   401   000005                     	ds	1
   402   000006                     
   403                           ; 1 bytes @ 0x5
   404   000006                     	ds	1
   405   000007                     ?_atoi:
   406                           	callstack 0
   407   000007                     ?___lwdiv:
   408                           	callstack 0
   409   000007                     ?___lwmod:
   410                           	callstack 0
   411   000007                     ___lwdiv@dividend:
   412                           	callstack 0
   413   000007                     ___lwmod@dividend:
   414                           	callstack 0
   415   000007                     atoi@s:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x6
   419   000007                     	ds	2
   420   000009                     ??_atoi:
   421   000009                     ___lwdiv@divisor:
   422                           	callstack 0
   423   000009                     ___lwmod@divisor:
   424                           	callstack 0
   425   000009                     ___aodiv@divisor:
   426                           	callstack 0
   427   000009                     ___aomod@divisor:
   428                           	callstack 0
   429                           
   430                           ; 8 bytes @ 0x8
   431   000009                     	ds	1
   432   00000A                     fputs@s:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0x9
   436   00000A                     	ds	1
   437   00000B                     ___lwmod@counter:
   438                           	callstack 0
   439   00000B                     ___lwdiv@quotient:
   440                           	callstack 0
   441                           
   442                           ; 2 bytes @ 0xA
   443   00000B                     	ds	1
   444   00000C                     check_month@month:
   445                           	callstack 0
   446   00000C                     atoi@neg:
   447                           	callstack 0
   448   00000C                     fputs@fp:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0xB
   452   00000C                     	ds	1
   453   00000D                     ___lwdiv@counter:
   454                           	callstack 0
   455                           
   456                           ; 1 bytes @ 0xC
   457   00000D                     	ds	1
   458   00000E                     fputs@c:
   459                           	callstack 0
   460   00000E                     check_month@month_day:
   461                           	callstack 0
   462   00000E                     atoi@n:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0xD
   466   00000E                     	ds	1
   467   00000F                     fputs@i:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0xE
   471   00000F                     	ds	1
   472   000010                     check_month@year:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0xF
   476   000010                     	ds	1
   477   000011                     ___aodiv@counter:
   478                           	callstack 0
   479   000011                     ___aomod@counter:
   480                           	callstack 0
   481   000011                     pad@fp:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x10
   485   000011                     	ds	1
   486   000012                     ??_check_month:
   487   000012                     ___aodiv@sign:
   488                           	callstack 0
   489   000012                     ___aomod@sign:
   490                           	callstack 0
   491                           
   492                           ; 1 bytes @ 0x11
   493   000012                     	ds	1
   494   000013                     ?_abs:
   495                           	callstack 0
   496   000013                     pad@buf:
   497                           	callstack 0
   498   000013                     abs@a:
   499                           	callstack 0
   500   000013                     ___aodiv@quotient:
   501                           	callstack 0
   502                           
   503                           ; 8 bytes @ 0x12
   504   000013                     	ds	1
   505   000014                     check_month@leap_year:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x13
   509   000014                     	ds	1
   510   000015                     ??_abs:
   511   000015                     pad@p:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x14
   515   000015                     	ds	2
   516   000017                     ??_pad:
   517                           
   518                           ; 1 bytes @ 0x16
   519   000017                     	ds	1
   520   000018                     pad@i:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x17
   524   000018                     	ds	2
   525   00001A                     pad@w:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0x19
   529   00001A                     	ds	2
   530   00001C                     dtoa@fp:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x1B
   534   00001C                     	ds	2
   535   00001E                     dtoa@d:
   536                           	callstack 0
   537                           
   538                           ; 8 bytes @ 0x1D
   539   00001E                     	ds	8
   540   000026                     ??_dtoa:
   541                           
   542                           ; 1 bytes @ 0x25
   543   000026                     	ds	8
   544   00002E                     _dtoa$1887:
   545                           	callstack 0
   546                           
   547                           ; 2 bytes @ 0x2D
   548   00002E                     	ds	2
   549   000030                     dtoa@p:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x2F
   553   000030                     	ds	2
   554   000032                     dtoa@w:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x31
   558   000032                     	ds	2
   559   000034                     dtoa@n:
   560                           	callstack 0
   561                           
   562                           ; 8 bytes @ 0x33
   563   000034                     	ds	8
   564   00003C                     dtoa@i:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x3B
   568   00003C                     	ds	2
   569   00003E                     dtoa@s:
   570                           	callstack 0
   571                           
   572                           ; 1 bytes @ 0x3D
   573   00003E                     	ds	1
   574   00003F                     vfpfcnvrt@fp:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x3E
   578   00003F                     	ds	2
   579   000041                     vfpfcnvrt@fmt:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x40
   583   000041                     	ds	2
   584   000043                     vfpfcnvrt@ap:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x42
   588   000043                     	ds	2
   589   000045                     ??_vfpfcnvrt:
   590                           
   591                           ; 1 bytes @ 0x44
   592   000045                     	ds	3
   593   000048                     vfpfcnvrt@convarg:
   594                           	callstack 0
   595                           
   596                           ; 8 bytes @ 0x47
   597   000048                     	ds	8
   598   000050                     vfpfcnvrt@done:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0x4F
   602   000050                     	ds	2
   603   000052                     vfpfcnvrt@cp:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x51
   607   000052                     	ds	2
   608   000054                     ?_vfprintf:
   609                           	callstack 0
   610   000054                     vfprintf@fp:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x53
   614   000054                     	ds	2
   615   000056                     vfprintf@fmt:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x55
   619   000056                     	ds	2
   620   000058                     vfprintf@ap:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x57
   624   000058                     	ds	2
   625   00005A                     vfprintf@cfmt:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x59
   629   00005A                     	ds	2
   630   00005C                     
   631                           ; 1 bytes @ 0x5B
   632 ;;
   633 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   634 ;;
   635 ;; *************** function _main *****************
   636 ;; Defined at:
   637 ;;		line 24 in file "../main.c"
   638 ;; Parameters:    Size  Location     Type
   639 ;;		None
   640 ;; Auto vars:     Size  Location     Type
   641 ;;  datestr        50   25[BANK0 ] unsigned char [50]
   642 ;;  yearstr        20   75[BANK0 ] unsigned char [20]
   643 ;;  month_day       2  105[BANK0 ] unsigned int 
   644 ;;  month           2  103[BANK0 ] unsigned int 
   645 ;;  day             2  101[BANK0 ] unsigned int 
   646 ;;  year            2   99[BANK0 ] unsigned short 
   647 ;;  changed         2   97[BANK0 ] unsigned int 
   648 ;;  OneAmToFiveA    2   95[BANK0 ] unsigned int 
   649 ;; Return value:  Size  Location     Type
   650 ;;                  1    wreg      void 
   651 ;; Registers used:
   652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   653 ;; Tracked objects:
   654 ;;		On entry : 0/0
   655 ;;		On exit  : 0/0
   656 ;;		Unchanged: 0/0
   657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   659 ;;      Locals:         0      82       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   660 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   661 ;;      Totals:         0      86       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   662 ;;Total ram usage:       86 bytes
   663 ;; Hardware stack levels required when called: 9
   664 ;; This function calls:
   665 ;;		_ADC_init
   666 ;;		_Comp1_init
   667 ;;		_Interrupts_init
   668 ;;		_LCD_Init
   669 ;;		_LCD_clear
   670 ;;		_LCD_sendstring
   671 ;;		_LCD_setline
   672 ;;		_LEDarray_disp_bin
   673 ;;		_LEDarray_init
   674 ;;		_Light_init
   675 ;;		_Timer0_init
   676 ;;		___lwdiv
   677 ;;		___lwmod
   678 ;;		___wmul
   679 ;;		_check_month
   680 ;;		_sprintf
   681 ;; This function is called by:
   682 ;;		Startup code after reset
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686                           	psect	text0
   687   000E28                     __ptext0:
   688                           	callstack 0
   689   000E28                     _main:
   690                           	callstack 22
   691   000E28                     
   692                           ;../main.c: 27:     unsigned int day = 2;
   693   000E28  0E00               	movlw	0
   694   000E2A  0100               	movlb	0	; () banked
   695   000E2C  6FC6               	movwf	(main@day+1)& (0+255),b
   696   000E2E  0E02               	movlw	2
   697   000E30  6FC5               	movwf	main@day& (0+255),b
   698                           
   699                           ;../main.c: 28:     unsigned int month = 2;
   700   000E32  0E00               	movlw	0
   701   000E34  6FC8               	movwf	(main@month+1)& (0+255),b
   702   000E36  0E02               	movlw	2
   703   000E38  6FC7               	movwf	main@month& (0+255),b
   704                           
   705                           ;../main.c: 29:     unsigned int month_day = 27;
   706   000E3A  0E00               	movlw	0
   707   000E3C  6FCA               	movwf	(main@month_day+1)& (0+255),b
   708   000E3E  0E1B               	movlw	27
   709   000E40  6FC9               	movwf	main@month_day& (0+255),b
   710                           
   711                           ;../main.c: 30:     unsigned short year = 2020;
   712   000E42  0E07               	movlw	7
   713   000E44  6FC4               	movwf	(main@year+1)& (0+255),b
   714   000E46  0EE4               	movlw	228
   715   000E48  6FC3               	movwf	main@year& (0+255),b
   716                           
   717                           ;../main.c: 31:     unsigned int changed = 0;
   718   000E4A  0E00               	movlw	0
   719   000E4C  6FC2               	movwf	(main@changed+1)& (0+255),b
   720   000E4E  0E00               	movlw	0
   721   000E50  6FC1               	movwf	main@changed& (0+255),b
   722                           
   723                           ;../main.c: 32:     unsigned int OneAmToFiveAmFlag = 0;
   724   000E52  0E00               	movlw	0
   725   000E54  6FC0               	movwf	(main@OneAmToFiveAmFlag+1)& (0+255),b
   726   000E56  0E00               	movlw	0
   727   000E58  6FBF               	movwf	main@OneAmToFiveAmFlag& (0+255),b
   728   000E5A                     
   729                           ; BSR set to: 0
   730                           ;../main.c: 33:     char datestr[50];;../main.c: 34:     char yearstr[20];;../main.c: 37
      +                          :     Timer0_init();
   731   000E5A  EC53  F013         	call	_Timer0_init	;wreg free
   732                           
   733                           ;../main.c: 38:     LEDarray_init();
   734   000E5E  EC42  F013         	call	_LEDarray_init	;wreg free
   735                           
   736                           ;../main.c: 39:     Interrupts_init();
   737   000E62  EC8E  F013         	call	_Interrupts_init	;wreg free
   738                           
   739                           ;../main.c: 40:     LEDarray_init();
   740   000E66  EC42  F013         	call	_LEDarray_init	;wreg free
   741   000E6A                     
   742                           ;../main.c: 41:     Comp1_init();
   743   000E6A  EC2F  F013         	call	_Comp1_init	;wreg free
   744   000E6E                     
   745                           ;../main.c: 42:     Light_init();
   746   000E6E  EC93  F013         	call	_Light_init	;wreg free
   747                           
   748                           ;../main.c: 43:     ADC_init();
   749   000E72  EC70  F013         	call	_ADC_init	;wreg free
   750   000E76                     
   751                           ;../main.c: 44:     LCD_Init();
   752   000E76  ECFE  F010         	call	_LCD_Init	;wreg free
   753   000E7A                     l2576:
   754                           
   755                           ;../main.c: 49:         LCD_setline(1);
   756   000E7A  0E01               	movlw	1
   757   000E7C  ECA0  F012         	call	_LCD_setline
   758   000E80                     
   759                           ;../main.c: 50:         sprintf(datestr, "%d / %d", month_day, month);
   760   000E80  0E79               	movlw	low main@datestr
   761   000E82  0100               	movlb	0	; () banked
   762   000E84  6F60               	movwf	sprintf@s& (0+255),b
   763   000E86  0E00               	movlw	high main@datestr
   764   000E88  6F61               	movwf	(sprintf@s+1)& (0+255),b
   765   000E8A  0E1F               	movlw	low STR_1
   766   000E8C  6F62               	movwf	sprintf@fmt& (0+255),b
   767   000E8E  0E0E               	movlw	high STR_1
   768   000E90  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   769   000E92  C0C9  F064         	movff	main@month_day,?_sprintf+4
   770   000E96  C0CA  F065         	movff	main@month_day+1,?_sprintf+5
   771   000E9A  C0C7  F066         	movff	main@month,?_sprintf+6
   772   000E9E  C0C8  F067         	movff	main@month+1,?_sprintf+7
   773   000EA2  ECE9  F011         	call	_sprintf	;wreg free
   774   000EA6                     
   775                           ;../main.c: 51:         LCD_sendstring(datestr);
   776   000EA6  0E79               	movlw	low main@datestr
   777   000EA8  6E04               	movwf	LCD_sendstring@string^0,c
   778   000EAA  0E00               	movlw	high main@datestr
   779   000EAC  6E05               	movwf	(LCD_sendstring@string+1)^0,c
   780   000EAE  ECD8  F012         	call	_LCD_sendstring	;wreg free
   781   000EB2                     
   782                           ;../main.c: 52:         LCD_setline(2);
   783   000EB2  0E02               	movlw	2
   784   000EB4  ECA0  F012         	call	_LCD_setline
   785   000EB8                     
   786                           ;../main.c: 53:         sprintf(yearstr, "%d / %d", day, year);
   787   000EB8  0EAB               	movlw	low main@yearstr
   788   000EBA  0100               	movlb	0	; () banked
   789   000EBC  6F60               	movwf	sprintf@s& (0+255),b
   790   000EBE  0E00               	movlw	high main@yearstr
   791   000EC0  6F61               	movwf	(sprintf@s+1)& (0+255),b
   792   000EC2  0E1F               	movlw	low STR_1
   793   000EC4  6F62               	movwf	sprintf@fmt& (0+255),b
   794   000EC6  0E0E               	movlw	high STR_1
   795   000EC8  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   796   000ECA  C0C5  F064         	movff	main@day,?_sprintf+4
   797   000ECE  C0C6  F065         	movff	main@day+1,?_sprintf+5
   798   000ED2  C0C3  F066         	movff	main@year,?_sprintf+6
   799   000ED6  C0C4  F067         	movff	main@year+1,?_sprintf+7
   800   000EDA  ECE9  F011         	call	_sprintf	;wreg free
   801   000EDE                     
   802                           ;../main.c: 54:         LCD_sendstring(yearstr);
   803   000EDE  0EAB               	movlw	low main@yearstr
   804   000EE0  6E04               	movwf	LCD_sendstring@string^0,c
   805   000EE2  0E00               	movlw	high main@yearstr
   806   000EE4  6E05               	movwf	(LCD_sendstring@string+1)^0,c
   807   000EE6  ECD8  F012         	call	_LCD_sendstring	;wreg free
   808   000EEA                     
   809                           ;../main.c: 57:         if (minute == 60) {
   810   000EEA  0E3C               	movlw	60
   811   000EEC  0100               	movlb	0	; () banked
   812   000EEE  19DD               	xorwf	_minute& (0+255),w,b
   813   000EF0  11DE               	iorwf	(_minute+1)& (0+255),w,b
   814   000EF2  A4D8               	btfss	status,2,c
   815   000EF4  EF7E  F007         	goto	u2471
   816   000EF8  EF80  F007         	goto	u2470
   817   000EFC                     u2471:
   818   000EFC  EF4F  F008         	goto	l209
   819   000F00                     u2470:
   820   000F00                     
   821                           ; BSR set to: 0
   822                           ;../main.c: 58:             hour++;
   823   000F00  4BDF               	infsnz	_hour& (0+255),f,b
   824   000F02  2BE0               	incf	(_hour+1)& (0+255),f,b
   825   000F04                     
   826                           ; BSR set to: 0
   827                           ;../main.c: 59:             minute = 0;
   828   000F04  0E00               	movlw	0
   829   000F06  6FDE               	movwf	(_minute+1)& (0+255),b
   830   000F08  0E00               	movlw	0
   831   000F0A  6FDD               	movwf	_minute& (0+255),b
   832   000F0C                     
   833                           ; BSR set to: 0
   834                           ;../main.c: 60:             if (hour == 24){
   835   000F0C  0E18               	movlw	24
   836   000F0E  19DF               	xorwf	_hour& (0+255),w,b
   837   000F10  11E0               	iorwf	(_hour+1)& (0+255),w,b
   838   000F12  A4D8               	btfss	status,2,c
   839   000F14  EF8E  F007         	goto	u2481
   840   000F18  EF90  F007         	goto	u2480
   841   000F1C                     u2481:
   842   000F1C  EF4F  F008         	goto	l209
   843   000F20                     u2480:
   844   000F20                     
   845                           ; BSR set to: 0
   846                           ;../main.c: 61:                 hour = 0;
   847   000F20  0E00               	movlw	0
   848   000F22  6FE0               	movwf	(_hour+1)& (0+255),b
   849   000F24  0E00               	movlw	0
   850   000F26  6FDF               	movwf	_hour& (0+255),b
   851   000F28                     
   852                           ; BSR set to: 0
   853                           ;../main.c: 62:                 day++;
   854   000F28  4BC5               	infsnz	main@day& (0+255),f,b
   855   000F2A  2BC6               	incf	(main@day+1)& (0+255),f,b
   856   000F2C                     
   857                           ; BSR set to: 0
   858                           ;../main.c: 63:                 month_day++;
   859   000F2C  4BC9               	infsnz	main@month_day& (0+255),f,b
   860   000F2E  2BCA               	incf	(main@month_day+1)& (0+255),f,b
   861   000F30                     
   862                           ; BSR set to: 0
   863                           ;../main.c: 64:                 check_month(&month, &month_day, &year);
   864   000F30  0EC7               	movlw	low main@month
   865   000F32  6E0C               	movwf	check_month@month^0,c
   866   000F34  0E00               	movlw	high main@month
   867   000F36  6E0D               	movwf	(check_month@month+1)^0,c
   868   000F38  0EC9               	movlw	low main@month_day
   869   000F3A  6E0E               	movwf	check_month@month_day^0,c
   870   000F3C  0E00               	movlw	high main@month_day
   871   000F3E  6E0F               	movwf	(check_month@month_day+1)^0,c
   872   000F40  0EC3               	movlw	low main@year
   873   000F42  6E10               	movwf	check_month@year^0,c
   874   000F44  0E00               	movlw	high main@year
   875   000F46  6E11               	movwf	(check_month@year+1)^0,c
   876   000F48  EC69  F009         	call	_check_month	;wreg free
   877   000F4C                     
   878                           ;../main.c: 65:                 if (day == 7){day = 0;}
   879   000F4C  0E07               	movlw	7
   880   000F4E  0100               	movlb	0	; () banked
   881   000F50  19C5               	xorwf	main@day& (0+255),w,b
   882   000F52  11C6               	iorwf	(main@day+1)& (0+255),w,b
   883   000F54  A4D8               	btfss	status,2,c
   884   000F56  EFAF  F007         	goto	u2491
   885   000F5A  EFB1  F007         	goto	u2490
   886   000F5E                     u2491:
   887   000F5E  EFB5  F007         	goto	l2608
   888   000F62                     u2490:
   889   000F62                     
   890                           ; BSR set to: 0
   891   000F62  0E00               	movlw	0
   892   000F64  6FC6               	movwf	(main@day+1)& (0+255),b
   893   000F66  0E00               	movlw	0
   894   000F68  6FC5               	movwf	main@day& (0+255),b
   895   000F6A                     l2608:
   896                           
   897                           ; BSR set to: 0
   898                           ;../main.c: 66:                 LCD_clear();
   899   000F6A  EC63  F013         	call	_LCD_clear	;wreg free
   900   000F6E                     
   901                           ;../main.c: 70:                 if (daylight_end_min >= daylight_start_min) {
   902   000F6E  0100               	movlb	0	; () banked
   903   000F70  51D5               	movf	_daylight_start_min& (0+255),w,b
   904   000F72  5DD1               	subwf	_daylight_end_min& (0+255),w,b
   905   000F74  51D6               	movf	(_daylight_start_min+1)& (0+255),w,b
   906   000F76  59D2               	subwfb	(_daylight_end_min+1)& (0+255),w,b
   907   000F78  A0D8               	btfss	status,0,c
   908   000F7A  EFC1  F007         	goto	u2501
   909   000F7E  EFC3  F007         	goto	u2500
   910   000F82                     u2501:
   911   000F82  EFD1  F007         	goto	l2614
   912   000F86                     u2500:
   913   000F86                     
   914                           ; BSR set to: 0
   915                           ;../main.c: 71:                     current_day_min = daylight_end_min - daylight_start_
      +                          min;
   916   000F86  51D5               	movf	_daylight_start_min& (0+255),w,b
   917   000F88  5DD1               	subwf	_daylight_end_min& (0+255),w,b
   918   000F8A  6FD9               	movwf	_current_day_min& (0+255),b
   919   000F8C  51D6               	movf	(_daylight_start_min+1)& (0+255),w,b
   920   000F8E  59D2               	subwfb	(_daylight_end_min+1)& (0+255),w,b
   921   000F90  6FDA               	movwf	(_current_day_min+1)& (0+255),b
   922                           
   923                           ;../main.c: 72:                     current_day_hour = daylight_end_hour - daylight_star
      +                          t_hour;}
   924   000F92  51D7               	movf	_daylight_start_hour& (0+255),w,b
   925   000F94  5DD3               	subwf	_daylight_end_hour& (0+255),w,b
   926   000F96  6FDB               	movwf	_current_day_hour& (0+255),b
   927   000F98  51D8               	movf	(_daylight_start_hour+1)& (0+255),w,b
   928   000F9A  59D4               	subwfb	(_daylight_end_hour+1)& (0+255),w,b
   929   000F9C  6FDC               	movwf	(_current_day_hour+1)& (0+255),b
   930   000F9E  EFE9  F007         	goto	l2616
   931   000FA2                     l2614:
   932                           
   933                           ; BSR set to: 0
   934                           ;../main.c: 74:                     current_day_min = daylight_end_min + (60-daylight_st
      +                          art_min);
   935   000FA2  51D5               	movf	_daylight_start_min& (0+255),w,b
   936   000FA4  5DD1               	subwf	_daylight_end_min& (0+255),w,b
   937   000FA6  6F75               	movwf	??_main& (0+255),b
   938   000FA8  51D6               	movf	(_daylight_start_min+1)& (0+255),w,b
   939   000FAA  59D2               	subwfb	(_daylight_end_min+1)& (0+255),w,b
   940   000FAC  6F76               	movwf	(??_main+1)& (0+255),b
   941   000FAE  0E3C               	movlw	60
   942   000FB0  2575               	addwf	??_main& (0+255),w,b
   943   000FB2  6FD9               	movwf	_current_day_min& (0+255),b
   944   000FB4  0E00               	movlw	0
   945   000FB6  2176               	addwfc	(??_main+1)& (0+255),w,b
   946   000FB8  6FDA               	movwf	(_current_day_min+1)& (0+255),b
   947                           
   948                           ;../main.c: 75:                     current_day_hour = daylight_end_hour - daylight_star
      +                          t_hour - 1;
   949   000FBA  51D7               	movf	_daylight_start_hour& (0+255),w,b
   950   000FBC  5DD3               	subwf	_daylight_end_hour& (0+255),w,b
   951   000FBE  6F75               	movwf	??_main& (0+255),b
   952   000FC0  51D8               	movf	(_daylight_start_hour+1)& (0+255),w,b
   953   000FC2  59D4               	subwfb	(_daylight_end_hour+1)& (0+255),w,b
   954   000FC4  6F76               	movwf	(??_main+1)& (0+255),b
   955   000FC6  0EFF               	movlw	255
   956   000FC8  2575               	addwf	??_main& (0+255),w,b
   957   000FCA  6FDB               	movwf	_current_day_hour& (0+255),b
   958   000FCC  0EFF               	movlw	255
   959   000FCE  2176               	addwfc	(??_main+1)& (0+255),w,b
   960   000FD0  6FDC               	movwf	(_current_day_hour+1)& (0+255),b
   961   000FD2                     l2616:
   962                           
   963                           ; BSR set to: 0
   964                           ;../main.c: 78:                 calculated_solar_noon_hour = (daylight_start_hour*60 + d
      +                          aylight_start_min + current_day_hour*60 + current_day_min)/60;
   965   000FD2  C0D7  F001         	movff	_daylight_start_hour,___wmul@multiplier
   966   000FD6  C0D8  F002         	movff	_daylight_start_hour+1,___wmul@multiplier+1
   967   000FDA  0E00               	movlw	0
   968   000FDC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   969   000FDE  0E3C               	movlw	60
   970   000FE0  6E03               	movwf	___wmul@multiplicand^0,c
   971   000FE2  EC1C  F013         	call	___wmul	;wreg free
   972   000FE6  C001  F075         	movff	?___wmul,??_main
   973   000FEA  C002  F076         	movff	?___wmul+1,??_main+1
   974   000FEE  C0DB  F001         	movff	_current_day_hour,___wmul@multiplier
   975   000FF2  C0DC  F002         	movff	_current_day_hour+1,___wmul@multiplier+1
   976   000FF6  0E00               	movlw	0
   977   000FF8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   978   000FFA  0E3C               	movlw	60
   979   000FFC  6E03               	movwf	___wmul@multiplicand^0,c
   980   000FFE  EC1C  F013         	call	___wmul	;wreg free
   981   001002  5001               	movf	?___wmul^0,w,c
   982   001004  0100               	movlb	0	; () banked
   983   001006  2575               	addwf	??_main& (0+255),w,b
   984   001008  6F77               	movwf	(??_main+2)& (0+255),b
   985   00100A  5002               	movf	(?___wmul+1)^0,w,c
   986   00100C  2176               	addwfc	(??_main+1)& (0+255),w,b
   987   00100E  6F78               	movwf	(??_main+3)& (0+255),b
   988   001010  51D5               	movf	_daylight_start_min& (0+255),w,b
   989   001012  2777               	addwf	(??_main+2)& (0+255),f,b
   990   001014  51D6               	movf	(_daylight_start_min+1)& (0+255),w,b
   991   001016  2378               	addwfc	(??_main+3)& (0+255),f,b
   992   001018  51D9               	movf	_current_day_min& (0+255),w,b
   993   00101A  2577               	addwf	(??_main+2)& (0+255),w,b
   994   00101C  6E07               	movwf	___lwdiv@dividend^0,c
   995   00101E  51DA               	movf	(_current_day_min+1)& (0+255),w,b
   996   001020  2178               	addwfc	(??_main+3)& (0+255),w,b
   997   001022  6E08               	movwf	(___lwdiv@dividend+1)^0,c
   998   001024  0E00               	movlw	0
   999   001026  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  1000   001028  0E3C               	movlw	60
  1001   00102A  6E09               	movwf	___lwdiv@divisor^0,c
  1002   00102C  EC49  F011         	call	___lwdiv	;wreg free
  1003   001030  C007  F0CF         	movff	?___lwdiv,_calculated_solar_noon_hour
  1004   001034  C008  F0D0         	movff	?___lwdiv+1,_calculated_solar_noon_hour+1
  1005   001038                     
  1006                           ;../main.c: 79:                 calculated_solar_noon_min = (daylight_start_hour*60 + da
      +                          ylight_start_min + current_day_hour*60 + current_day_min)%60;
  1007   001038  C0D7  F001         	movff	_daylight_start_hour,___wmul@multiplier
  1008   00103C  C0D8  F002         	movff	_daylight_start_hour+1,___wmul@multiplier+1
  1009   001040  0E00               	movlw	0
  1010   001042  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1011   001044  0E3C               	movlw	60
  1012   001046  6E03               	movwf	___wmul@multiplicand^0,c
  1013   001048  EC1C  F013         	call	___wmul	;wreg free
  1014   00104C  C001  F075         	movff	?___wmul,??_main
  1015   001050  C002  F076         	movff	?___wmul+1,??_main+1
  1016   001054  C0DB  F001         	movff	_current_day_hour,___wmul@multiplier
  1017   001058  C0DC  F002         	movff	_current_day_hour+1,___wmul@multiplier+1
  1018   00105C  0E00               	movlw	0
  1019   00105E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1020   001060  0E3C               	movlw	60
  1021   001062  6E03               	movwf	___wmul@multiplicand^0,c
  1022   001064  EC1C  F013         	call	___wmul	;wreg free
  1023   001068  5001               	movf	?___wmul^0,w,c
  1024   00106A  0100               	movlb	0	; () banked
  1025   00106C  2575               	addwf	??_main& (0+255),w,b
  1026   00106E  6F77               	movwf	(??_main+2)& (0+255),b
  1027   001070  5002               	movf	(?___wmul+1)^0,w,c
  1028   001072  2176               	addwfc	(??_main+1)& (0+255),w,b
  1029   001074  6F78               	movwf	(??_main+3)& (0+255),b
  1030   001076  51D5               	movf	_daylight_start_min& (0+255),w,b
  1031   001078  2777               	addwf	(??_main+2)& (0+255),f,b
  1032   00107A  51D6               	movf	(_daylight_start_min+1)& (0+255),w,b
  1033   00107C  2378               	addwfc	(??_main+3)& (0+255),f,b
  1034   00107E  51D9               	movf	_current_day_min& (0+255),w,b
  1035   001080  2577               	addwf	(??_main+2)& (0+255),w,b
  1036   001082  6E07               	movwf	___lwmod@dividend^0,c
  1037   001084  51DA               	movf	(_current_day_min+1)& (0+255),w,b
  1038   001086  2178               	addwfc	(??_main+3)& (0+255),w,b
  1039   001088  6E08               	movwf	(___lwmod@dividend+1)^0,c
  1040   00108A  0E00               	movlw	0
  1041   00108C  6E0A               	movwf	(___lwmod@divisor+1)^0,c
  1042   00108E  0E3C               	movlw	60
  1043   001090  6E09               	movwf	___lwmod@divisor^0,c
  1044   001092  ECB7  F011         	call	___lwmod	;wreg free
  1045   001096  C007  F0CD         	movff	?___lwmod,_calculated_solar_noon_min
  1046   00109A  C008  F0CE         	movff	?___lwmod+1,_calculated_solar_noon_min+1
  1047   00109E                     l209:
  1048                           
  1049                           ;../main.c: 85:         if (hour >= 1 && hour < 5){
  1050   00109E  0100               	movlb	0	; () banked
  1051   0010A0  51DF               	movf	_hour& (0+255),w,b
  1052   0010A2  11E0               	iorwf	(_hour+1)& (0+255),w,b
  1053   0010A4  B4D8               	btfsc	status,2,c
  1054   0010A6  EF57  F008         	goto	u2511
  1055   0010AA  EF59  F008         	goto	u2510
  1056   0010AE                     u2511:
  1057   0010AE  EF69  F008         	goto	l2626
  1058   0010B2                     u2510:
  1059   0010B2                     
  1060                           ; BSR set to: 0
  1061   0010B2  51E0               	movf	(_hour+1)& (0+255),w,b
  1062   0010B4  E107               	bnz	u2521
  1063   0010B6  0E05               	movlw	5
  1064   0010B8  5DDF               	subwf	_hour& (0+255),w,b
  1065   0010BA  B0D8               	btfsc	status,0,c
  1066   0010BC  EF62  F008         	goto	u2521
  1067   0010C0  EF64  F008         	goto	u2520
  1068   0010C4                     u2521:
  1069   0010C4  EF69  F008         	goto	l2626
  1070   0010C8                     u2520:
  1071   0010C8                     
  1072                           ; BSR set to: 0
  1073                           ;../main.c: 86:             LATHbits.LATH3=0;
  1074   0010C8  9680               	bcf	128,3,c	;volatile
  1075   0010CA                     
  1076                           ; BSR set to: 0
  1077                           ;../main.c: 87:             OneAmToFiveAmFlag = 1;}
  1078   0010CA  0E00               	movlw	0
  1079   0010CC  6FC0               	movwf	(main@OneAmToFiveAmFlag+1)& (0+255),b
  1080   0010CE  0E01               	movlw	1
  1081   0010D0  6FBF               	movwf	main@OneAmToFiveAmFlag& (0+255),b
  1082   0010D2                     l2626:
  1083                           
  1084                           ; BSR set to: 0
  1085                           ;../main.c: 88:         if (hour == 5 && OneAmToFiveAmFlag == 1 && CM1CON0bits.OUT == 1)
      +                          {
  1086   0010D2  0E05               	movlw	5
  1087   0010D4  19DF               	xorwf	_hour& (0+255),w,b
  1088   0010D6  11E0               	iorwf	(_hour+1)& (0+255),w,b
  1089   0010D8  A4D8               	btfss	status,2,c
  1090   0010DA  EF71  F008         	goto	u2531
  1091   0010DE  EF73  F008         	goto	u2530
  1092   0010E2                     u2531:
  1093   0010E2  EF8A  F008         	goto	l2636
  1094   0010E6                     u2530:
  1095   0010E6                     
  1096                           ; BSR set to: 0
  1097   0010E6  05BF               	decf	main@OneAmToFiveAmFlag& (0+255),w,b
  1098   0010E8  11C0               	iorwf	(main@OneAmToFiveAmFlag+1)& (0+255),w,b
  1099   0010EA  A4D8               	btfss	status,2,c
  1100   0010EC  EF7A  F008         	goto	u2541
  1101   0010F0  EF7C  F008         	goto	u2540
  1102   0010F4                     u2541:
  1103   0010F4  EF8A  F008         	goto	l2636
  1104   0010F8                     u2540:
  1105   0010F8                     
  1106                           ; BSR set to: 0
  1107   0010F8  010E               	movlb	14	; () banked
  1108   0010FA  ADD0               	btfss	208,6,b	;volatile
  1109   0010FC  EF82  F008         	goto	u2551
  1110   001100  EF84  F008         	goto	u2550
  1111   001104                     u2551:
  1112   001104  EF8A  F008         	goto	l2636
  1113   001108                     u2550:
  1114   001108                     
  1115                           ; BSR set to: 14
  1116                           ;../main.c: 89:                 LATHbits.LATH3=1;
  1117   001108  8680               	bsf	128,3,c	;volatile
  1118   00110A                     
  1119                           ; BSR set to: 14
  1120                           ;../main.c: 90:                 OneAmToFiveAmFlag = 0;}
  1121   00110A  0E00               	movlw	0
  1122   00110C  0100               	movlb	0	; () banked
  1123   00110E  6FC0               	movwf	(main@OneAmToFiveAmFlag+1)& (0+255),b
  1124   001110  0E00               	movlw	0
  1125   001112  6FBF               	movwf	main@OneAmToFiveAmFlag& (0+255),b
  1126   001114                     l2636:
  1127                           
  1128                           ;../main.c: 92:         LEDarray_disp_bin(hour);
  1129   001114  C0DF  F001         	movff	_hour,LEDarray_disp_bin@number
  1130   001118  C0E0  F002         	movff	_hour+1,LEDarray_disp_bin@number+1
  1131   00111C  EC45  F010         	call	_LEDarray_disp_bin	;wreg free
  1132   001120                     
  1133                           ;../main.c: 96:         if (day == 0 && month == 3 && hour == 1 && minute == 0 && month_
      +                          day >=25 && month_day <= 31) {hour++;}
  1134   001120  0100               	movlb	0	; () banked
  1135   001122  51C5               	movf	main@day& (0+255),w,b
  1136   001124  11C6               	iorwf	(main@day+1)& (0+255),w,b
  1137   001126  A4D8               	btfss	status,2,c
  1138   001128  EF98  F008         	goto	u2561
  1139   00112C  EF9A  F008         	goto	u2560
  1140   001130                     u2561:
  1141   001130  EFCE  F008         	goto	l2652
  1142   001134                     u2560:
  1143   001134                     
  1144                           ; BSR set to: 0
  1145   001134  0E03               	movlw	3
  1146   001136  19C7               	xorwf	main@month& (0+255),w,b
  1147   001138  11C8               	iorwf	(main@month+1)& (0+255),w,b
  1148   00113A  A4D8               	btfss	status,2,c
  1149   00113C  EFA2  F008         	goto	u2571
  1150   001140  EFA4  F008         	goto	u2570
  1151   001144                     u2571:
  1152   001144  EFCE  F008         	goto	l2652
  1153   001148                     u2570:
  1154   001148                     
  1155                           ; BSR set to: 0
  1156   001148  05DF               	decf	_hour& (0+255),w,b
  1157   00114A  11E0               	iorwf	(_hour+1)& (0+255),w,b
  1158   00114C  A4D8               	btfss	status,2,c
  1159   00114E  EFAB  F008         	goto	u2581
  1160   001152  EFAD  F008         	goto	u2580
  1161   001156                     u2581:
  1162   001156  EFCE  F008         	goto	l2652
  1163   00115A                     u2580:
  1164   00115A                     
  1165                           ; BSR set to: 0
  1166   00115A  51DD               	movf	_minute& (0+255),w,b
  1167   00115C  11DE               	iorwf	(_minute+1)& (0+255),w,b
  1168   00115E  A4D8               	btfss	status,2,c
  1169   001160  EFB4  F008         	goto	u2591
  1170   001164  EFB6  F008         	goto	u2590
  1171   001168                     u2591:
  1172   001168  EFCE  F008         	goto	l2652
  1173   00116C                     u2590:
  1174   00116C                     
  1175                           ; BSR set to: 0
  1176   00116C  51CA               	movf	(main@month_day+1)& (0+255),w,b
  1177   00116E  E109               	bnz	u2600
  1178   001170  0E19               	movlw	25
  1179   001172  5DC9               	subwf	main@month_day& (0+255),w,b
  1180   001174  A0D8               	btfss	status,0,c
  1181   001176  EFBF  F008         	goto	u2601
  1182   00117A  EFC1  F008         	goto	u2600
  1183   00117E                     u2601:
  1184   00117E  EFCE  F008         	goto	l2652
  1185   001182                     u2600:
  1186   001182                     
  1187                           ; BSR set to: 0
  1188   001182  51CA               	movf	(main@month_day+1)& (0+255),w,b
  1189   001184  E107               	bnz	u2611
  1190   001186  0E20               	movlw	32
  1191   001188  5DC9               	subwf	main@month_day& (0+255),w,b
  1192   00118A  B0D8               	btfsc	status,0,c
  1193   00118C  EFCA  F008         	goto	u2611
  1194   001190  EFCC  F008         	goto	u2610
  1195   001194                     u2611:
  1196   001194  EFCE  F008         	goto	l2652
  1197   001198                     u2610:
  1198   001198                     
  1199                           ; BSR set to: 0
  1200   001198  4BDF               	infsnz	_hour& (0+255),f,b
  1201   00119A  2BE0               	incf	(_hour+1)& (0+255),f,b
  1202   00119C                     l2652:
  1203                           
  1204                           ; BSR set to: 0
  1205                           ;../main.c: 98:         if (day == 0 && month == 10 && hour == 2 && minute == 0 && month
      +                          _day >=25 && month_day <= 31 && changed == 0) {
  1206   00119C  51C5               	movf	main@day& (0+255),w,b
  1207   00119E  11C6               	iorwf	(main@day+1)& (0+255),w,b
  1208   0011A0  A4D8               	btfss	status,2,c
  1209   0011A2  EFD5  F008         	goto	u2621
  1210   0011A6  EFD7  F008         	goto	u2620
  1211   0011AA                     u2621:
  1212   0011AA  EF1C  F009         	goto	l2670
  1213   0011AE                     u2620:
  1214   0011AE                     
  1215                           ; BSR set to: 0
  1216   0011AE  0E0A               	movlw	10
  1217   0011B0  19C7               	xorwf	main@month& (0+255),w,b
  1218   0011B2  11C8               	iorwf	(main@month+1)& (0+255),w,b
  1219   0011B4  A4D8               	btfss	status,2,c
  1220   0011B6  EFDF  F008         	goto	u2631
  1221   0011BA  EFE1  F008         	goto	u2630
  1222   0011BE                     u2631:
  1223   0011BE  EF1C  F009         	goto	l2670
  1224   0011C2                     u2630:
  1225   0011C2                     
  1226                           ; BSR set to: 0
  1227   0011C2  0E02               	movlw	2
  1228   0011C4  19DF               	xorwf	_hour& (0+255),w,b
  1229   0011C6  11E0               	iorwf	(_hour+1)& (0+255),w,b
  1230   0011C8  A4D8               	btfss	status,2,c
  1231   0011CA  EFE9  F008         	goto	u2641
  1232   0011CE  EFEB  F008         	goto	u2640
  1233   0011D2                     u2641:
  1234   0011D2  EF1C  F009         	goto	l2670
  1235   0011D6                     u2640:
  1236   0011D6                     
  1237                           ; BSR set to: 0
  1238   0011D6  51DD               	movf	_minute& (0+255),w,b
  1239   0011D8  11DE               	iorwf	(_minute+1)& (0+255),w,b
  1240   0011DA  A4D8               	btfss	status,2,c
  1241   0011DC  EFF2  F008         	goto	u2651
  1242   0011E0  EFF4  F008         	goto	u2650
  1243   0011E4                     u2651:
  1244   0011E4  EF1C  F009         	goto	l2670
  1245   0011E8                     u2650:
  1246   0011E8                     
  1247                           ; BSR set to: 0
  1248   0011E8  51CA               	movf	(main@month_day+1)& (0+255),w,b
  1249   0011EA  E109               	bnz	u2660
  1250   0011EC  0E19               	movlw	25
  1251   0011EE  5DC9               	subwf	main@month_day& (0+255),w,b
  1252   0011F0  A0D8               	btfss	status,0,c
  1253   0011F2  EFFD  F008         	goto	u2661
  1254   0011F6  EFFF  F008         	goto	u2660
  1255   0011FA                     u2661:
  1256   0011FA  EF1C  F009         	goto	l2670
  1257   0011FE                     u2660:
  1258   0011FE                     
  1259                           ; BSR set to: 0
  1260   0011FE  51CA               	movf	(main@month_day+1)& (0+255),w,b
  1261   001200  E107               	bnz	u2671
  1262   001202  0E20               	movlw	32
  1263   001204  5DC9               	subwf	main@month_day& (0+255),w,b
  1264   001206  B0D8               	btfsc	status,0,c
  1265   001208  EF08  F009         	goto	u2671
  1266   00120C  EF0A  F009         	goto	u2670
  1267   001210                     u2671:
  1268   001210  EF1C  F009         	goto	l2670
  1269   001214                     u2670:
  1270   001214                     
  1271                           ; BSR set to: 0
  1272   001214  51C1               	movf	main@changed& (0+255),w,b
  1273   001216  11C2               	iorwf	(main@changed+1)& (0+255),w,b
  1274   001218  A4D8               	btfss	status,2,c
  1275   00121A  EF11  F009         	goto	u2681
  1276   00121E  EF13  F009         	goto	u2680
  1277   001222                     u2681:
  1278   001222  EF1C  F009         	goto	l2670
  1279   001226                     u2680:
  1280   001226                     
  1281                           ; BSR set to: 0
  1282                           ;../main.c: 99:             hour--;
  1283   001226  07DF               	decf	_hour& (0+255),f,b
  1284   001228  A0D8               	btfss	status,0,c
  1285   00122A  07E0               	decf	(_hour+1)& (0+255),f,b
  1286   00122C                     
  1287                           ; BSR set to: 0
  1288                           ;../main.c: 100:             changed = 1;
  1289   00122C  0E00               	movlw	0
  1290   00122E  6FC2               	movwf	(main@changed+1)& (0+255),b
  1291   001230  0E01               	movlw	1
  1292   001232  6FC1               	movwf	main@changed& (0+255),b
  1293                           
  1294                           ;../main.c: 101:         }
  1295   001234  EF3D  F007         	goto	l2576
  1296   001238                     l2670:
  1297                           
  1298                           ; BSR set to: 0
  1299   001238  51C5               	movf	main@day& (0+255),w,b
  1300   00123A  11C6               	iorwf	(main@day+1)& (0+255),w,b
  1301   00123C  A4D8               	btfss	status,2,c
  1302   00123E  EF23  F009         	goto	u2691
  1303   001242  EF25  F009         	goto	u2690
  1304   001246                     u2691:
  1305   001246  EF3D  F007         	goto	l2576
  1306   00124A                     u2690:
  1307   00124A                     
  1308                           ; BSR set to: 0
  1309   00124A  0E0A               	movlw	10
  1310   00124C  19C7               	xorwf	main@month& (0+255),w,b
  1311   00124E  11C8               	iorwf	(main@month+1)& (0+255),w,b
  1312   001250  A4D8               	btfss	status,2,c
  1313   001252  EF2D  F009         	goto	u2701
  1314   001256  EF2F  F009         	goto	u2700
  1315   00125A                     u2701:
  1316   00125A  EF3D  F007         	goto	l2576
  1317   00125E                     u2700:
  1318   00125E                     
  1319                           ; BSR set to: 0
  1320   00125E  0E02               	movlw	2
  1321   001260  19DF               	xorwf	_hour& (0+255),w,b
  1322   001262  11E0               	iorwf	(_hour+1)& (0+255),w,b
  1323   001264  A4D8               	btfss	status,2,c
  1324   001266  EF37  F009         	goto	u2711
  1325   00126A  EF39  F009         	goto	u2710
  1326   00126E                     u2711:
  1327   00126E  EF3D  F007         	goto	l2576
  1328   001272                     u2710:
  1329   001272                     
  1330                           ; BSR set to: 0
  1331   001272  51DD               	movf	_minute& (0+255),w,b
  1332   001274  11DE               	iorwf	(_minute+1)& (0+255),w,b
  1333   001276  A4D8               	btfss	status,2,c
  1334   001278  EF40  F009         	goto	u2721
  1335   00127C  EF42  F009         	goto	u2720
  1336   001280                     u2721:
  1337   001280  EF3D  F007         	goto	l2576
  1338   001284                     u2720:
  1339   001284                     
  1340                           ; BSR set to: 0
  1341   001284  51CA               	movf	(main@month_day+1)& (0+255),w,b
  1342   001286  E109               	bnz	u2730
  1343   001288  0E19               	movlw	25
  1344   00128A  5DC9               	subwf	main@month_day& (0+255),w,b
  1345   00128C  A0D8               	btfss	status,0,c
  1346   00128E  EF4B  F009         	goto	u2731
  1347   001292  EF4D  F009         	goto	u2730
  1348   001296                     u2731:
  1349   001296  EF3D  F007         	goto	l2576
  1350   00129A                     u2730:
  1351   00129A                     
  1352                           ; BSR set to: 0
  1353   00129A  51CA               	movf	(main@month_day+1)& (0+255),w,b
  1354   00129C  E107               	bnz	u2741
  1355   00129E  0E20               	movlw	32
  1356   0012A0  5DC9               	subwf	main@month_day& (0+255),w,b
  1357   0012A2  B0D8               	btfsc	status,0,c
  1358   0012A4  EF56  F009         	goto	u2741
  1359   0012A8  EF58  F009         	goto	u2740
  1360   0012AC                     u2741:
  1361   0012AC  EF3D  F007         	goto	l2576
  1362   0012B0                     u2740:
  1363   0012B0                     
  1364                           ; BSR set to: 0
  1365   0012B0  05C1               	decf	main@changed& (0+255),w,b
  1366   0012B2  11C2               	iorwf	(main@changed+1)& (0+255),w,b
  1367   0012B4  A4D8               	btfss	status,2,c
  1368   0012B6  EF5F  F009         	goto	u2751
  1369   0012BA  EF61  F009         	goto	u2750
  1370   0012BE                     u2751:
  1371   0012BE  EF3D  F007         	goto	l2576
  1372   0012C2                     u2750:
  1373   0012C2                     
  1374                           ; BSR set to: 0
  1375   0012C2  0E00               	movlw	0
  1376   0012C4  6FC2               	movwf	(main@changed+1)& (0+255),b
  1377   0012C6  0E00               	movlw	0
  1378   0012C8  6FC1               	movwf	main@changed& (0+255),b
  1379   0012CA  EF3D  F007         	goto	l2576
  1380   0012CE  EF64  F000         	goto	start
  1381   0012D2                     __end_of_main:
  1382                           	callstack 0
  1383                           
  1384 ;; *************** function _sprintf *****************
  1385 ;; Defined at:
  1386 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1389 ;;		 -> main@yearstr(20), main@datestr(50), 
  1390 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1391 ;;		 -> STR_4(12), STR_3(18), STR_2(8), STR_1(8), 
  1392 ;; Auto vars:     Size  Location     Type
  1393 ;;  f              11   10[BANK0 ] struct _IO_FILE
  1394 ;;  ap              2    8[BANK0 ] PTR void [1]
  1395 ;;		 -> ?_sprintf(2), 
  1396 ;;  ret             2    0        int 
  1397 ;; Return value:  Size  Location     Type
  1398 ;;                  2    0[BANK0 ] int 
  1399 ;; Registers used:
  1400 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1401 ;; Tracked objects:
  1402 ;;		On entry : 0/0
  1403 ;;		On exit  : 0/0
  1404 ;;		Unchanged: 0/0
  1405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1406 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1407 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1409 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1410 ;;Total ram usage:       21 bytes
  1411 ;; Hardware stack levels used: 1
  1412 ;; Hardware stack levels required when called: 8
  1413 ;; This function calls:
  1414 ;;		_vfprintf
  1415 ;; This function is called by:
  1416 ;;		_main
  1417 ;;		_ADC2String
  1418 ;;		_LDR2String
  1419 ;; This function uses a non-reentrant model
  1420 ;;
  1421                           
  1422                           	psect	text1
  1423   0023D2                     __ptext1:
  1424                           	callstack 0
  1425   0023D2                     _sprintf:
  1426                           	callstack 22
  1427   0023D2  0E64               	movlw	low (?_sprintf+4)
  1428   0023D4  0100               	movlb	0	; () banked
  1429   0023D6  6F68               	movwf	sprintf@ap& (0+255),b
  1430   0023D8  0E00               	movlw	high (?_sprintf+4)
  1431   0023DA  6F69               	movwf	(sprintf@ap+1)& (0+255),b
  1432   0023DC  C060  F06A         	movff	sprintf@s,sprintf@f
  1433   0023E0  C061  F06B         	movff	sprintf@s+1,sprintf@f+1
  1434   0023E4                     
  1435                           ; BSR set to: 0
  1436   0023E4  0E00               	movlw	0
  1437   0023E6  6F6E               	movwf	(sprintf@f+4)& (0+255),b
  1438   0023E8  0E00               	movlw	0
  1439   0023EA  6F6D               	movwf	(sprintf@f+3)& (0+255),b
  1440   0023EC                     
  1441                           ; BSR set to: 0
  1442   0023EC  0E00               	movlw	0
  1443   0023EE  6F74               	movwf	(sprintf@f+10)& (0+255),b
  1444   0023F0  0E00               	movlw	0
  1445   0023F2  6F73               	movwf	(sprintf@f+9)& (0+255),b
  1446   0023F4                     
  1447                           ; BSR set to: 0
  1448   0023F4  0E6A               	movlw	low sprintf@f
  1449   0023F6  6E54               	movwf	vfprintf@fp^0,c
  1450   0023F8  0E00               	movlw	high sprintf@f
  1451   0023FA  6E55               	movwf	(vfprintf@fp+1)^0,c
  1452   0023FC  C062  F056         	movff	sprintf@fmt,vfprintf@fmt
  1453   002400  C063  F057         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1454   002404  0E68               	movlw	low sprintf@ap
  1455   002406  6E58               	movwf	vfprintf@ap^0,c
  1456   002408  0E00               	movlw	high sprintf@ap
  1457   00240A  6E59               	movwf	(vfprintf@ap+1)^0,c
  1458   00240C  EC12  F012         	call	_vfprintf	;wreg free
  1459   002410  0100               	movlb	0	; () banked
  1460   002412  516D               	movf	(sprintf@f+3)& (0+255),w,b
  1461   002414  2560               	addwf	sprintf@s& (0+255),w,b
  1462   002416  6ED9               	movwf	fsr2l,c
  1463   002418  516E               	movf	(sprintf@f+4)& (0+255),w,b
  1464   00241A  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  1465   00241C  6EDA               	movwf	fsr2h,c
  1466   00241E  0E00               	movlw	0
  1467   002420  6EDF               	movwf	indf2,c
  1468   002422                     
  1469                           ; BSR set to: 0
  1470   002422  0012               	return		;funcret
  1471   002424                     __end_of_sprintf:
  1472                           	callstack 0
  1473                           
  1474 ;; *************** function _vfprintf *****************
  1475 ;; Defined at:
  1476 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;  fp              2   83[COMRAM] PTR struct _IO_FILE
  1479 ;;		 -> sprintf@f(11), 
  1480 ;;  fmt             2   85[COMRAM] PTR const unsigned char 
  1481 ;;		 -> STR_4(12), STR_3(18), STR_2(8), STR_1(8), 
  1482 ;;  ap              2   87[COMRAM] PTR PTR void 
  1483 ;;		 -> sprintf@ap(2), 
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;  cfmt            2   89[COMRAM] PTR unsigned char 
  1486 ;;		 -> STR_4(12), STR_3(18), STR_2(8), STR_1(8), 
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  2   83[COMRAM] int 
  1489 ;; Registers used:
  1490 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1496 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1497 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1499 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1500 ;;Total ram usage:        8 bytes
  1501 ;; Hardware stack levels used: 1
  1502 ;; Hardware stack levels required when called: 7
  1503 ;; This function calls:
  1504 ;;		_vfpfcnvrt
  1505 ;; This function is called by:
  1506 ;;		_sprintf
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           	psect	text2
  1511   002424                     __ptext2:
  1512                           	callstack 0
  1513   002424                     _vfprintf:
  1514                           	callstack 22
  1515   002424                     
  1516                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1517   002424  C056  F05A         	movff	vfprintf@fmt,vfprintf@cfmt
  1518   002428  C057  F05B         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1519                           
  1520                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1521   00242C  EF26  F012         	goto	l2314
  1522   002430                     l2312:
  1523                           
  1524                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1525   002430  C054  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  1526   002434  C055  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1527   002438  0E5A               	movlw	low vfprintf@cfmt
  1528   00243A  6E41               	movwf	vfpfcnvrt@fmt^0,c
  1529   00243C  0E00               	movlw	high vfprintf@cfmt
  1530   00243E  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1531   002440  C058  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  1532   002444  C059  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1533   002448  EC04  F00B         	call	_vfpfcnvrt	;wreg free
  1534   00244C                     l2314:
  1535                           
  1536                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1537   00244C  C05A  FFF6         	movff	vfprintf@cfmt,tblptrl
  1538   002450  C05B  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1539   002454                     	if	0	;tblptru may be non-zero
  1540   002454                     	endif
  1541   002454                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1542   002454  0E00               	movlw	low (__mediumconst shr (0+16))
  1543   002456  6EF8               	movwf	tblptru,c
  1544   002458                     	endif
  1545   002458  0008               	tblrd		*
  1546   00245A  50F5               	movf	tablat,w,c
  1547   00245C  0900               	iorlw	0
  1548   00245E  A4D8               	btfss	status,2,c
  1549   002460  EF34  F012         	goto	u1981
  1550   002464  EF36  F012         	goto	u1980
  1551   002468                     u1981:
  1552   002468  EF18  F012         	goto	l2312
  1553   00246C                     u1980:
  1554   00246C                     
  1555                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1556   00246C  0E00               	movlw	0
  1557   00246E  6E55               	movwf	(?_vfprintf+1)^0,c
  1558   002470  0E00               	movlw	0
  1559   002472  6E54               	movwf	?_vfprintf^0,c
  1560   002474  0012               	return		;funcret
  1561   002476                     __end_of_vfprintf:
  1562                           	callstack 0
  1563                           
  1564 ;; *************** function _vfpfcnvrt *****************
  1565 ;; Defined at:
  1566 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1567 ;; Parameters:    Size  Location     Type
  1568 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  1569 ;;		 -> sprintf@f(11), 
  1570 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  1571 ;;		 -> vfprintf@cfmt(2), 
  1572 ;;  ap              2   66[COMRAM] PTR PTR void 
  1573 ;;		 -> sprintf@ap(2), 
  1574 ;; Auto vars:     Size  Location     Type
  1575 ;;  convarg         8   71[COMRAM] struct .
  1576 ;;  cp              2   81[COMRAM] PTR unsigned char 
  1577 ;;		 -> STR_4(12), STR_3(18), STR_2(8), STR_1(8), 
  1578 ;;  done            2   79[COMRAM] int 
  1579 ;;  i               2    0        int 
  1580 ;;  c               1    0        unsigned char 
  1581 ;; Return value:  Size  Location     Type
  1582 ;;                  1    wreg      void 
  1583 ;; Registers used:
  1584 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1585 ;; Tracked objects:
  1586 ;;		On entry : 0/0
  1587 ;;		On exit  : 0/0
  1588 ;;		Unchanged: 0/0
  1589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1590 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1591 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1592 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1593 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1594 ;;Total ram usage:       21 bytes
  1595 ;; Hardware stack levels used: 1
  1596 ;; Hardware stack levels required when called: 6
  1597 ;; This function calls:
  1598 ;;		_atoi
  1599 ;;		_dtoa
  1600 ;;		_fputc
  1601 ;;		_isdigit
  1602 ;; This function is called by:
  1603 ;;		_vfprintf
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607                           	psect	text3
  1608   001608                     __ptext3:
  1609                           	callstack 0
  1610   001608                     _vfpfcnvrt:
  1611                           	callstack 22
  1612   001608                     
  1613                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1614   001608  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1615   00160C  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1616   001610  CFDE FFF6          	movff	postinc2,tblptrl
  1617   001614  CFDD FFF7          	movff	postdec2,tblptrh
  1618   001618                     	if	0	;tblptru may be non-zero
  1619   001618                     	endif
  1620   001618                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1621   001618  0E00               	movlw	low (__mediumconst shr (0+16))
  1622   00161A  6EF8               	movwf	tblptru,c
  1623   00161C                     	endif
  1624   00161C  0008               	tblrd		*
  1625   00161E  50F5               	movf	tablat,w,c
  1626   001620  0A25               	xorlw	37
  1627   001622  A4D8               	btfss	status,2,c
  1628   001624  EF16  F00B         	goto	u1871
  1629   001628  EF18  F00B         	goto	u1870
  1630   00162C                     u1871:
  1631   00162C  EF4A  F00C         	goto	l2270
  1632   001630                     u1870:
  1633   001630                     
  1634                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1635   001630  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1636   001634  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1637   001638  2ADE               	incf	postinc2,f,c
  1638   00163A  0E00               	movlw	0
  1639   00163C  22DD               	addwfc	postdec2,f,c
  1640   00163E                     
  1641                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1642   00163E  0E00               	movlw	0
  1643   001640  0100               	movlb	0	; () banked
  1644   001642  6FCC               	movwf	(_width+1)& (0+255),b
  1645   001644  0E00               	movlw	0
  1646   001646  6FCB               	movwf	_width& (0+255),b
  1647   001648  C0CB  F05E         	movff	_width,_flags
  1648   00164C                     
  1649                           ; BSR set to: 0
  1650                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1651   00164C  685C               	setf	_prec^0,c
  1652   00164E  685D               	setf	(_prec+1)^0,c
  1653   001650                     
  1654                           ; BSR set to: 0
  1655                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  1656   001650  0E00               	movlw	0
  1657   001652  6E51               	movwf	(vfpfcnvrt@done+1)^0,c
  1658   001654  0E00               	movlw	0
  1659   001656  6E50               	movwf	vfpfcnvrt@done^0,c
  1660                           
  1661                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  1662   001658  EF5A  F00B         	goto	l2236
  1663   00165C                     l2226:
  1664                           
  1665                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  1666   00165C  825E               	bsf	_flags^0,1,c
  1667   00165E                     
  1668                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  1669   00165E  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1670   001662  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1671   001666  2ADE               	incf	postinc2,f,c
  1672   001668  0E00               	movlw	0
  1673   00166A  22DD               	addwfc	postdec2,f,c
  1674                           
  1675                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  1676   00166C  EF5A  F00B         	goto	l2236
  1677   001670                     l2230:
  1678                           
  1679                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  1680   001670  0E00               	movlw	0
  1681   001672  6E51               	movwf	(vfpfcnvrt@done+1)^0,c
  1682   001674  0E01               	movlw	1
  1683   001676  6E50               	movwf	vfpfcnvrt@done^0,c
  1684                           
  1685                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  1686   001678  EF5A  F00B         	goto	l2236
  1687   00167C                     l2234:
  1688   00167C  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1689   001680  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1690   001684  CFDE FFF6          	movff	postinc2,tblptrl
  1691   001688  CFDD FFF7          	movff	postdec2,tblptrh
  1692   00168C                     	if	0	;tblptru may be non-zero
  1693   00168C                     	endif
  1694   00168C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1695   00168C  0E00               	movlw	low (__mediumconst shr (0+16))
  1696   00168E  6EF8               	movwf	tblptru,c
  1697   001690                     	endif
  1698   001690  0008               	tblrd		*
  1699   001692  50F5               	movf	tablat,w,c
  1700   001694  6E45               	movwf	??_vfpfcnvrt^0,c
  1701   001696  6A46               	clrf	(??_vfpfcnvrt+1)^0,c
  1702                           
  1703                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1704                           ; Switch size 1, requested type "simple"
  1705                           ; Number of cases is 1, Range of values is 0 to 0
  1706                           ; switch strategies available:
  1707                           ; Name         Instructions Cycles
  1708                           ; simple_byte            4     3 (average)
  1709                           ;	Chosen strategy is simple_byte
  1710   001698  5046               	movf	(??_vfpfcnvrt+1)^0,w,c
  1711   00169A  0A00               	xorlw	0	; case 0
  1712   00169C  B4D8               	btfsc	status,2,c
  1713   00169E  EF53  F00B         	goto	l2736
  1714   0016A2  EF38  F00B         	goto	l2230
  1715   0016A6                     l2736:
  1716                           
  1717                           ; Switch size 1, requested type "simple"
  1718                           ; Number of cases is 1, Range of values is 48 to 48
  1719                           ; switch strategies available:
  1720                           ; Name         Instructions Cycles
  1721                           ; simple_byte            4     3 (average)
  1722                           ;	Chosen strategy is simple_byte
  1723   0016A6  5045               	movf	??_vfpfcnvrt^0,w,c
  1724   0016A8  0A30               	xorlw	48	; case 48
  1725   0016AA  B4D8               	btfsc	status,2,c
  1726   0016AC  EF2E  F00B         	goto	l2226
  1727   0016B0  EF38  F00B         	goto	l2230
  1728   0016B4                     l2236:
  1729                           
  1730                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  1731   0016B4  5050               	movf	vfpfcnvrt@done^0,w,c
  1732   0016B6  1051               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  1733   0016B8  B4D8               	btfsc	status,2,c
  1734   0016BA  EF61  F00B         	goto	u1881
  1735   0016BE  EF63  F00B         	goto	u1880
  1736   0016C2                     u1881:
  1737   0016C2  EF3E  F00B         	goto	l2234
  1738   0016C6                     u1880:
  1739   0016C6                     
  1740                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1074:         if 
      +                          ((*fmt)[0] == '*') {
  1741   0016C6  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1742   0016CA  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1743   0016CE  CFDE FFF6          	movff	postinc2,tblptrl
  1744   0016D2  CFDD FFF7          	movff	postdec2,tblptrh
  1745   0016D6                     	if	0	;tblptru may be non-zero
  1746   0016D6                     	endif
  1747   0016D6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1748   0016D6  0E00               	movlw	low (__mediumconst shr (0+16))
  1749   0016D8  6EF8               	movwf	tblptru,c
  1750   0016DA                     	endif
  1751   0016DA  0008               	tblrd		*
  1752   0016DC  50F5               	movf	tablat,w,c
  1753   0016DE  0A2A               	xorlw	42
  1754   0016E0  A4D8               	btfss	status,2,c
  1755   0016E2  EF75  F00B         	goto	u1891
  1756   0016E6  EF77  F00B         	goto	u1890
  1757   0016EA                     u1891:
  1758   0016EA  EFA1  F00B         	goto	l2246
  1759   0016EE                     u1890:
  1760   0016EE                     
  1761                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1075:            
      +                           ++*fmt;
  1762   0016EE  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1763   0016F2  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1764   0016F6  2ADE               	incf	postinc2,f,c
  1765   0016F8  0E00               	movlw	0
  1766   0016FA  22DD               	addwfc	postdec2,f,c
  1767                           
  1768                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1076:            
      +                           width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1769   0016FC  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1770   001700  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1771   001704  CFDF F045          	movff	indf2,??_vfpfcnvrt
  1772   001708  0E02               	movlw	2
  1773   00170A  26DE               	addwf	postinc2,f,c
  1774   00170C  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  1775   001710  0E00               	movlw	0
  1776   001712  22DD               	addwfc	postdec2,f,c
  1777   001714  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1778   001718  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1779   00171C  CFDE F0CB          	movff	postinc2,_width
  1780   001720  CFDD F0CC          	movff	postdec2,_width+1
  1781   001724                     
  1782                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1077:            
      +                           if (width < 0) {
  1783   001724  0100               	movlb	0	; () banked
  1784   001726  BFCC               	btfsc	(_width+1)& (0+255),7,b
  1785   001728  EF9A  F00B         	goto	u1900
  1786   00172C  EF98  F00B         	goto	u1901
  1787   001730                     u1901:
  1788   001730  EFD6  F00B         	goto	l2254
  1789   001734                     u1900:
  1790   001734                     
  1791                           ; BSR set to: 0
  1792                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1078:            
      +                               flags |= (1 << 0);
  1793   001734  805E               	bsf	_flags^0,0,c
  1794                           
  1795                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1079:            
      +                               width = -width;
  1796   001736  6DCB               	negf	_width& (0+255),b
  1797   001738  1FCC               	comf	(_width+1)& (0+255),f,b
  1798   00173A  B0D8               	btfsc	status,0,c
  1799   00173C  2BCC               	incf	(_width+1)& (0+255),f,b
  1800   00173E  EFD6  F00B         	goto	l2254
  1801   001742                     l2246:
  1802                           
  1803                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1082:            
      +                           width = atoi(*fmt);
  1804   001742  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1805   001746  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1806   00174A  CFDE F007          	movff	postinc2,atoi@s
  1807   00174E  CFDD F008          	movff	postdec2,atoi@s+1
  1808   001752  EC31  F00F         	call	_atoi	;wreg free
  1809   001756  C007  F0CB         	movff	?_atoi,_width
  1810   00175A  C008  F0CC         	movff	?_atoi+1,_width+1
  1811                           
  1812                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1083:            
      +                           while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1813   00175E  EFB8  F00B         	goto	l2252
  1814   001762                     l2248:
  1815                           
  1816                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1084:            
      +                               ++*fmt;
  1817   001762  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1818   001766  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1819   00176A  2ADE               	incf	postinc2,f,c
  1820   00176C  0E00               	movlw	0
  1821   00176E  22DD               	addwfc	postdec2,f,c
  1822   001770                     l2252:
  1823   001770  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1824   001774  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1825   001778  CFDE FFF6          	movff	postinc2,tblptrl
  1826   00177C  CFDD FFF7          	movff	postdec2,tblptrh
  1827   001780                     	if	0	;tblptru may be non-zero
  1828   001780                     	endif
  1829   001780                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1830   001780  0E00               	movlw	low (__mediumconst shr (0+16))
  1831   001782  6EF8               	movwf	tblptru,c
  1832   001784                     	endif
  1833   001784  0008               	tblrd		*
  1834   001786  CFF5 F045          	movff	tablat,??_vfpfcnvrt
  1835   00178A  0ED0               	movlw	208
  1836   00178C  2445               	addwf	??_vfpfcnvrt^0,w,c
  1837   00178E  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  1838   001790  6A47               	clrf	(??_vfpfcnvrt+2)^0,c
  1839   001792  0EFF               	movlw	255
  1840   001794  2247               	addwfc	(??_vfpfcnvrt+2)^0,f,c
  1841   001796  5047               	movf	(??_vfpfcnvrt+2)^0,w,c
  1842   001798  E109               	bnz	u1910
  1843   00179A  0E0A               	movlw	10
  1844   00179C  5C46               	subwf	(??_vfpfcnvrt+1)^0,w,c
  1845   00179E  A0D8               	btfss	status,0,c
  1846   0017A0  EFD4  F00B         	goto	u1911
  1847   0017A4  EFD6  F00B         	goto	u1910
  1848   0017A8                     u1911:
  1849   0017A8  EFB1  F00B         	goto	l2248
  1850   0017AC                     u1910:
  1851   0017AC                     l2254:
  1852                           
  1853                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1854   0017AC  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1855   0017B0  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1856   0017B4  CFDE F052          	movff	postinc2,vfpfcnvrt@cp
  1857   0017B8  CFDD F053          	movff	postdec2,vfpfcnvrt@cp+1
  1858   0017BC                     
  1859                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1860   0017BC  C052  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1861   0017C0  C053  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1862   0017C4                     	if	0	;tblptru may be non-zero
  1863   0017C4                     	endif
  1864   0017C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1865   0017C4  0E00               	movlw	low (__mediumconst shr (0+16))
  1866   0017C6  6EF8               	movwf	tblptru,c
  1867   0017C8                     	endif
  1868   0017C8  0008               	tblrd		*
  1869   0017CA  50F5               	movf	tablat,w,c
  1870   0017CC  0A64               	xorlw	100
  1871   0017CE  B4D8               	btfsc	status,2,c
  1872   0017D0  EFEC  F00B         	goto	u1921
  1873   0017D4  EFEE  F00B         	goto	u1920
  1874   0017D8                     u1921:
  1875   0017D8  EFFE  F00B         	goto	l2260
  1876   0017DC                     u1920:
  1877   0017DC  C052  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1878   0017E0  C053  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1879   0017E4                     	if	0	;tblptru may be non-zero
  1880   0017E4                     	endif
  1881   0017E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1882   0017E4  0E00               	movlw	low (__mediumconst shr (0+16))
  1883   0017E6  6EF8               	movwf	tblptru,c
  1884   0017E8                     	endif
  1885   0017E8  0008               	tblrd		*
  1886   0017EA  50F5               	movf	tablat,w,c
  1887   0017EC  0A69               	xorlw	105
  1888   0017EE  A4D8               	btfss	status,2,c
  1889   0017F0  EFFC  F00B         	goto	u1931
  1890   0017F4  EFFE  F00B         	goto	u1930
  1891   0017F8                     u1931:
  1892   0017F8  EF41  F00C         	goto	l2266
  1893   0017FC                     u1930:
  1894   0017FC                     l2260:
  1895                           
  1896                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1897   0017FC  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1898   001800  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1899   001804  CFDF F045          	movff	indf2,??_vfpfcnvrt
  1900   001808  0E02               	movlw	2
  1901   00180A  26DE               	addwf	postinc2,f,c
  1902   00180C  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  1903   001810  0E00               	movlw	0
  1904   001812  22DD               	addwfc	postdec2,f,c
  1905   001814  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1906   001818  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1907   00181C  CFDE F048          	movff	postinc2,vfpfcnvrt@convarg
  1908   001820  CFDD F049          	movff	postdec2,vfpfcnvrt@convarg+1
  1909   001824  0E00               	movlw	0
  1910   001826  BE49               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1911   001828  0EFF               	movlw	-1
  1912   00182A  6E4A               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1913   00182C  6E4B               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1914   00182E  6E4C               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1915   001830  6E4D               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1916   001832  6E4E               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1917   001834  6E4F               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1918                           
  1919                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1920   001836  0E01               	movlw	1
  1921   001838  2452               	addwf	vfpfcnvrt@cp^0,w,c
  1922   00183A  6E45               	movwf	??_vfpfcnvrt^0,c
  1923   00183C  0E00               	movlw	0
  1924   00183E  2053               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1925   001840  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  1926   001842  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1927   001846  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1928   00184A  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  1929   00184E  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1930   001852                     
  1931                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1932   001852  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1933   001856  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1934   00185A  C048  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  1935   00185E  C049  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1936   001862  C04A  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1937   001866  C04B  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1938   00186A  C04C  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1939   00186E  C04D  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1940   001872  C04E  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1941   001876  C04F  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1942   00187A  EC61  F00C         	call	_dtoa	;wreg free
  1943   00187E  EF60  F00C         	goto	l1075
  1944   001882                     l2266:
  1945                           
  1946                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1947   001882  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1948   001886  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1949   00188A  2ADE               	incf	postinc2,f,c
  1950   00188C  0E00               	movlw	0
  1951   00188E  22DD               	addwfc	postdec2,f,c
  1952   001890  EF60  F00C         	goto	l1075
  1953   001894                     l2270:
  1954                           
  1955                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1956   001894  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1957   001898  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1958   00189C  CFDE FFF6          	movff	postinc2,tblptrl
  1959   0018A0  CFDD FFF7          	movff	postdec2,tblptrh
  1960   0018A4                     	if	0	;tblptru may be non-zero
  1961   0018A4                     	endif
  1962   0018A4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1963   0018A4  0E00               	movlw	low (__mediumconst shr (0+16))
  1964   0018A6  6EF8               	movwf	tblptru,c
  1965   0018A8                     	endif
  1966   0018A8  0008               	tblrd		*
  1967   0018AA  50F5               	movf	tablat,w,c
  1968   0018AC  6E01               	movwf	fputc@c^0,c
  1969   0018AE  6A02               	clrf	(fputc@c+1)^0,c
  1970   0018B0  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1971   0018B4  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1972   0018B8  ECE0  F00F         	call	_fputc	;wreg free
  1973   0018BC  EF41  F00C         	goto	l2266
  1974   0018C0                     l1075:
  1975   0018C0  0012               	return		;funcret
  1976   0018C2                     __end_of_vfpfcnvrt:
  1977                           	callstack 0
  1978                           
  1979 ;; *************** function _dtoa *****************
  1980 ;; Defined at:
  1981 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1982 ;; Parameters:    Size  Location     Type
  1983 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1984 ;;		 -> sprintf@f(11), 
  1985 ;;  d               8   29[COMRAM] long long 
  1986 ;; Auto vars:     Size  Location     Type
  1987 ;;  n               8   51[COMRAM] long long 
  1988 ;;  i               2   59[COMRAM] int 
  1989 ;;  w               2   49[COMRAM] int 
  1990 ;;  p               2   47[COMRAM] int 
  1991 ;;  s               1   61[COMRAM] unsigned char 
  1992 ;; Return value:  Size  Location     Type
  1993 ;;                  1    wreg      void 
  1994 ;; Registers used:
  1995 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2001 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2002 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2003 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2004 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2005 ;;Total ram usage:       35 bytes
  2006 ;; Hardware stack levels used: 1
  2007 ;; Hardware stack levels required when called: 5
  2008 ;; This function calls:
  2009 ;;		___aodiv
  2010 ;;		___aomod
  2011 ;;		_abs
  2012 ;;		_pad
  2013 ;; This function is called by:
  2014 ;;		_vfpfcnvrt
  2015 ;; This function uses a non-reentrant model
  2016 ;;
  2017                           
  2018                           	psect	text4
  2019   0018C2                     __ptext4:
  2020                           	callstack 0
  2021   0018C2                     _dtoa:
  2022                           	callstack 22
  2023   0018C2                     
  2024                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  2025   0018C2  C01E  F034         	movff	dtoa@d,dtoa@n
  2026   0018C6  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  2027   0018CA  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  2028   0018CE  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  2029   0018D2  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  2030   0018D6  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  2031   0018DA  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  2032   0018DE  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  2033   0018E2                     
  2034                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  2035   0018E2  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  2036   0018E4  EF76  F00C         	goto	u1661
  2037   0018E8  EF79  F00C         	goto	u1660
  2038   0018EC                     u1661:
  2039   0018EC  0E01               	movlw	1
  2040   0018EE  EF7A  F00C         	goto	u1670
  2041   0018F2                     u1660:
  2042   0018F2  0E00               	movlw	0
  2043   0018F4                     u1670:
  2044   0018F4  6E3E               	movwf	dtoa@s^0,c
  2045   0018F6                     
  2046                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  2047   0018F6  503E               	movf	dtoa@s^0,w,c
  2048   0018F8  B4D8               	btfsc	status,2,c
  2049   0018FA  EF81  F00C         	goto	u1681
  2050   0018FE  EF83  F00C         	goto	u1680
  2051   001902                     u1681:
  2052   001902  EF93  F00C         	goto	l2112
  2053   001906                     u1680:
  2054   001906                     
  2055                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  2056   001906  1E3B               	comf	(dtoa@n+7)^0,f,c
  2057   001908  1E3A               	comf	(dtoa@n+6)^0,f,c
  2058   00190A  1E39               	comf	(dtoa@n+5)^0,f,c
  2059   00190C  1E38               	comf	(dtoa@n+4)^0,f,c
  2060   00190E  1E37               	comf	(dtoa@n+3)^0,f,c
  2061   001910  1E36               	comf	(dtoa@n+2)^0,f,c
  2062   001912  1E35               	comf	(dtoa@n+1)^0,f,c
  2063   001914  6C34               	negf	dtoa@n^0,c
  2064   001916  0E00               	movlw	0
  2065   001918  2235               	addwfc	(dtoa@n+1)^0,f,c
  2066   00191A  2236               	addwfc	(dtoa@n+2)^0,f,c
  2067   00191C  2237               	addwfc	(dtoa@n+3)^0,f,c
  2068   00191E  2238               	addwfc	(dtoa@n+4)^0,f,c
  2069   001920  2239               	addwfc	(dtoa@n+5)^0,f,c
  2070   001922  223A               	addwfc	(dtoa@n+6)^0,f,c
  2071   001924  223B               	addwfc	(dtoa@n+7)^0,f,c
  2072   001926                     l2112:
  2073                           
  2074                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 458:     if (!(pr
      +                          ec < 0)) {
  2075   001926  BE5D               	btfsc	(_prec+1)^0,7,c
  2076   001928  EF98  F00C         	goto	u1691
  2077   00192C  EF9A  F00C         	goto	u1690
  2078   001930                     u1691:
  2079   001930  EF9B  F00C         	goto	l2116
  2080   001934                     u1690:
  2081   001934                     
  2082                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 459:         flag
      +                          s &= ~(1 << 1);
  2083   001934  925E               	bcf	_flags^0,1,c
  2084   001936                     l2116:
  2085                           
  2086                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  2087   001936  BE5D               	btfsc	(_prec+1)^0,7,c
  2088   001938  EFA8  F00C         	goto	u1700
  2089   00193C  505D               	movf	(_prec+1)^0,w,c
  2090   00193E  E106               	bnz	u1701
  2091   001940  045C               	decf	_prec^0,w,c
  2092   001942  B0D8               	btfsc	status,0,c
  2093   001944  EFA6  F00C         	goto	u1701
  2094   001948  EFA8  F00C         	goto	u1700
  2095   00194C                     u1701:
  2096   00194C  EFAE  F00C         	goto	l1037
  2097   001950                     u1700:
  2098   001950  0E00               	movlw	0
  2099   001952  6E31               	movwf	(dtoa@p+1)^0,c
  2100   001954  0E01               	movlw	1
  2101   001956  6E30               	movwf	dtoa@p^0,c
  2102   001958  EFB2  F00C         	goto	l1039
  2103   00195C                     l1037:
  2104   00195C  C05C  F030         	movff	_prec,dtoa@p
  2105   001960  C05D  F031         	movff	_prec+1,dtoa@p+1
  2106   001964                     l1039:
  2107                           
  2108                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  2109   001964  C0CB  F032         	movff	_width,dtoa@w
  2110   001968  C0CC  F033         	movff	_width+1,dtoa@w+1
  2111   00196C                     
  2112                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  2113   00196C  503E               	movf	dtoa@s^0,w,c
  2114   00196E  B4D8               	btfsc	status,2,c
  2115   001970  EFBC  F00C         	goto	u1711
  2116   001974  EFBE  F00C         	goto	u1710
  2117   001978                     u1711:
  2118   001978  EFD5  F00C         	goto	l1040
  2119   00197C                     u1710:
  2120   00197C                     
  2121                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  2122   00197C  0632               	decf	dtoa@w^0,f,c
  2123   00197E  A0D8               	btfss	status,0,c
  2124   001980  0633               	decf	(dtoa@w+1)^0,f,c
  2125   001982                     
  2126                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  2127   001982  503E               	movf	dtoa@s^0,w,c
  2128   001984  A4D8               	btfss	status,2,c
  2129   001986  EFC7  F00C         	goto	u1721
  2130   00198A  EFC9  F00C         	goto	u1720
  2131   00198E                     u1721:
  2132   00198E  EFCF  F00C         	goto	l2128
  2133   001992                     u1720:
  2134   001992  0E00               	movlw	0
  2135   001994  6E2F               	movwf	(_dtoa$1887+1)^0,c
  2136   001996  0E2B               	movlw	43
  2137   001998  6E2E               	movwf	_dtoa$1887^0,c
  2138   00199A  EFD3  F00C         	goto	l2130
  2139   00199E                     l2128:
  2140   00199E  0E00               	movlw	0
  2141   0019A0  6E2F               	movwf	(_dtoa$1887+1)^0,c
  2142   0019A2  0E2D               	movlw	45
  2143   0019A4  6E2E               	movwf	_dtoa$1887^0,c
  2144   0019A6                     l2130:
  2145   0019A6  C02E  F03E         	movff	_dtoa$1887,dtoa@s
  2146   0019AA                     l1040:
  2147                           
  2148                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  2149   0019AA  0E00               	movlw	0
  2150   0019AC  6E3D               	movwf	(dtoa@i+1)^0,c
  2151   0019AE  0E1F               	movlw	31
  2152   0019B0  6E3C               	movwf	dtoa@i^0,c
  2153   0019B2                     
  2154                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  2155   0019B2  0E00               	movlw	0
  2156   0019B4  0101               	movlb	1	; () banked
  2157   0019B6  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2158                           
  2159                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2160   0019B8  EF5A  F00D         	goto	l2144
  2161   0019BC                     l2134:
  2162                           
  2163                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  2164   0019BC  063C               	decf	dtoa@i^0,f,c
  2165   0019BE  A0D8               	btfss	status,0,c
  2166   0019C0  063D               	decf	(dtoa@i+1)^0,f,c
  2167   0019C2                     
  2168                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2169   0019C2  0E00               	movlw	low _dbuf
  2170   0019C4  243C               	addwf	dtoa@i^0,w,c
  2171   0019C6  6ED9               	movwf	fsr2l,c
  2172   0019C8  0E01               	movlw	high _dbuf
  2173   0019CA  203D               	addwfc	(dtoa@i+1)^0,w,c
  2174   0019CC  6EDA               	movwf	fsr2h,c
  2175   0019CE  C034  F001         	movff	dtoa@n,___aomod@dividend
  2176   0019D2  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2177   0019D6  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2178   0019DA  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2179   0019DE  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2180   0019E2  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2181   0019E6  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2182   0019EA  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2183   0019EE  0E0A               	movlw	10
  2184   0019F0  6E09               	movwf	___aomod@divisor^0,c
  2185   0019F2  0E00               	movlw	0
  2186   0019F4  6E0A               	movwf	(___aomod@divisor+1)^0,c
  2187   0019F6  0E00               	movlw	0
  2188   0019F8  6E0B               	movwf	(___aomod@divisor+2)^0,c
  2189   0019FA  0E00               	movlw	0
  2190   0019FC  6E0C               	movwf	(___aomod@divisor+3)^0,c
  2191   0019FE  0E00               	movlw	0
  2192   001A00  6E0D               	movwf	(___aomod@divisor+4)^0,c
  2193   001A02  0E00               	movlw	0
  2194   001A04  6E0E               	movwf	(___aomod@divisor+5)^0,c
  2195   001A06  0E00               	movlw	0
  2196   001A08  6E0F               	movwf	(___aomod@divisor+6)^0,c
  2197   001A0A  0E00               	movlw	0
  2198   001A0C  6E10               	movwf	(___aomod@divisor+7)^0,c
  2199   001A0E  EC7F  F00E         	call	___aomod	;wreg free
  2200   001A12  C001  F026         	movff	?___aomod,??_dtoa
  2201   001A16  C002  F027         	movff	?___aomod+1,??_dtoa+1
  2202   001A1A  C003  F028         	movff	?___aomod+2,??_dtoa+2
  2203   001A1E  C004  F029         	movff	?___aomod+3,??_dtoa+3
  2204   001A22  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  2205   001A26  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  2206   001A2A  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  2207   001A2E  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  2208   001A32  C026  F013         	movff	??_dtoa,abs@a
  2209   001A36  C027  F014         	movff	??_dtoa+1,abs@a+1
  2210   001A3A  EC80  F012         	call	_abs	;wreg free
  2211   001A3E  5013               	movf	?_abs^0,w,c
  2212   001A40  0F30               	addlw	48
  2213   001A42  6EDF               	movwf	indf2,c
  2214   001A44                     
  2215                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  2216   001A44  0630               	decf	dtoa@p^0,f,c
  2217   001A46  A0D8               	btfss	status,0,c
  2218   001A48  0631               	decf	(dtoa@p+1)^0,f,c
  2219   001A4A                     
  2220                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  2221   001A4A  0632               	decf	dtoa@w^0,f,c
  2222   001A4C  A0D8               	btfss	status,0,c
  2223   001A4E  0633               	decf	(dtoa@w+1)^0,f,c
  2224   001A50                     
  2225                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  2226   001A50  C034  F001         	movff	dtoa@n,___aodiv@dividend
  2227   001A54  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2228   001A58  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2229   001A5C  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2230   001A60  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2231   001A64  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2232   001A68  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2233   001A6C  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2234   001A70  0E0A               	movlw	10
  2235   001A72  6E09               	movwf	___aodiv@divisor^0,c
  2236   001A74  0E00               	movlw	0
  2237   001A76  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2238   001A78  0E00               	movlw	0
  2239   001A7A  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2240   001A7C  0E00               	movlw	0
  2241   001A7E  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2242   001A80  0E00               	movlw	0
  2243   001A82  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2244   001A84  0E00               	movlw	0
  2245   001A86  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2246   001A88  0E00               	movlw	0
  2247   001A8A  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2248   001A8C  0E00               	movlw	0
  2249   001A8E  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2250   001A90  ECBB  F00D         	call	___aodiv	;wreg free
  2251   001A94  C001  F034         	movff	?___aodiv,dtoa@n
  2252   001A98  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  2253   001A9C  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  2254   001AA0  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  2255   001AA4  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  2256   001AA8  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  2257   001AAC  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  2258   001AB0  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  2259   001AB4                     l2144:
  2260                           
  2261                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2262   001AB4  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  2263   001AB6  EF65  F00D         	goto	u1731
  2264   001ABA  503D               	movf	(dtoa@i+1)^0,w,c
  2265   001ABC  E108               	bnz	u1730
  2266   001ABE  043C               	decf	dtoa@i^0,w,c
  2267   001AC0  A0D8               	btfss	status,0,c
  2268   001AC2  EF65  F00D         	goto	u1731
  2269   001AC6  EF67  F00D         	goto	u1730
  2270   001ACA                     u1731:
  2271   001ACA  EF97  F00D         	goto	l2154
  2272   001ACE                     u1730:
  2273   001ACE  5034               	movf	dtoa@n^0,w,c
  2274   001AD0  1035               	iorwf	(dtoa@n+1)^0,w,c
  2275   001AD2  1036               	iorwf	(dtoa@n+2)^0,w,c
  2276   001AD4  1037               	iorwf	(dtoa@n+3)^0,w,c
  2277   001AD6  1038               	iorwf	(dtoa@n+4)^0,w,c
  2278   001AD8  1039               	iorwf	(dtoa@n+5)^0,w,c
  2279   001ADA  103A               	iorwf	(dtoa@n+6)^0,w,c
  2280   001ADC  103B               	iorwf	(dtoa@n+7)^0,w,c
  2281   001ADE  A4D8               	btfss	status,2,c
  2282   001AE0  EF74  F00D         	goto	u1741
  2283   001AE4  EF76  F00D         	goto	u1740
  2284   001AE8                     u1741:
  2285   001AE8  EFDE  F00C         	goto	l2134
  2286   001AEC                     u1740:
  2287   001AEC  BE31               	btfsc	(dtoa@p+1)^0,7,c
  2288   001AEE  EF83  F00D         	goto	u1750
  2289   001AF2  5031               	movf	(dtoa@p+1)^0,w,c
  2290   001AF4  E106               	bnz	u1751
  2291   001AF6  0430               	decf	dtoa@p^0,w,c
  2292   001AF8  B0D8               	btfsc	status,0,c
  2293   001AFA  EF81  F00D         	goto	u1751
  2294   001AFE  EF83  F00D         	goto	u1750
  2295   001B02                     u1751:
  2296   001B02  EFDE  F00C         	goto	l2134
  2297   001B06                     u1750:
  2298   001B06  BE33               	btfsc	(dtoa@w+1)^0,7,c
  2299   001B08  EF8E  F00D         	goto	u1761
  2300   001B0C  5033               	movf	(dtoa@w+1)^0,w,c
  2301   001B0E  E108               	bnz	u1760
  2302   001B10  0432               	decf	dtoa@w^0,w,c
  2303   001B12  A0D8               	btfss	status,0,c
  2304   001B14  EF8E  F00D         	goto	u1761
  2305   001B18  EF90  F00D         	goto	u1760
  2306   001B1C                     u1761:
  2307   001B1C  EF97  F00D         	goto	l2154
  2308   001B20                     u1760:
  2309   001B20  B25E               	btfsc	_flags^0,1,c
  2310   001B22  EF95  F00D         	goto	u1771
  2311   001B26  EF97  F00D         	goto	u1770
  2312   001B2A                     u1771:
  2313   001B2A  EFDE  F00C         	goto	l2134
  2314   001B2E                     u1770:
  2315   001B2E                     l2154:
  2316                           
  2317                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  2318   001B2E  503E               	movf	dtoa@s^0,w,c
  2319   001B30  B4D8               	btfsc	status,2,c
  2320   001B32  EF9D  F00D         	goto	u1781
  2321   001B36  EF9F  F00D         	goto	u1780
  2322   001B3A                     u1781:
  2323   001B3A  EFAA  F00D         	goto	l2160
  2324   001B3E                     u1780:
  2325   001B3E                     
  2326                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  2327   001B3E  063C               	decf	dtoa@i^0,f,c
  2328   001B40  A0D8               	btfss	status,0,c
  2329   001B42  063D               	decf	(dtoa@i+1)^0,f,c
  2330   001B44                     
  2331                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  2332   001B44  0E00               	movlw	low _dbuf
  2333   001B46  243C               	addwf	dtoa@i^0,w,c
  2334   001B48  6ED9               	movwf	fsr2l,c
  2335   001B4A  0E01               	movlw	high _dbuf
  2336   001B4C  203D               	addwfc	(dtoa@i+1)^0,w,c
  2337   001B4E  6EDA               	movwf	fsr2h,c
  2338   001B50  C03E  FFDF         	movff	dtoa@s,indf2
  2339   001B54                     l2160:
  2340                           
  2341                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2342   001B54  C01C  F011         	movff	dtoa@fp,pad@fp
  2343   001B58  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2344   001B5C  0E00               	movlw	low _dbuf
  2345   001B5E  243C               	addwf	dtoa@i^0,w,c
  2346   001B60  6E13               	movwf	pad@buf^0,c
  2347   001B62  0E01               	movlw	high _dbuf
  2348   001B64  203D               	addwfc	(dtoa@i+1)^0,w,c
  2349   001B66  6E14               	movwf	(pad@buf+1)^0,c
  2350   001B68  C032  F015         	movff	dtoa@w,pad@p
  2351   001B6C  C033  F016         	movff	dtoa@w+1,pad@p+1
  2352   001B70  ECA9  F010         	call	_pad	;wreg free
  2353   001B74  0012               	return		;funcret
  2354   001B76                     __end_of_dtoa:
  2355                           	callstack 0
  2356                           
  2357 ;; *************** function _pad *****************
  2358 ;; Defined at:
  2359 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2360 ;; Parameters:    Size  Location     Type
  2361 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2362 ;;		 -> sprintf@f(11), 
  2363 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2364 ;;		 -> dbuf(32), 
  2365 ;;  p               2   20[COMRAM] int 
  2366 ;; Auto vars:     Size  Location     Type
  2367 ;;  w               2   25[COMRAM] int 
  2368 ;;  i               2   23[COMRAM] int 
  2369 ;; Return value:  Size  Location     Type
  2370 ;;                  1    wreg      void 
  2371 ;; Registers used:
  2372 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2378 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2379 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2380 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2381 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2382 ;;Total ram usage:       11 bytes
  2383 ;; Hardware stack levels used: 1
  2384 ;; Hardware stack levels required when called: 4
  2385 ;; This function calls:
  2386 ;;		_fputc
  2387 ;;		_fputs
  2388 ;; This function is called by:
  2389 ;;		_dtoa
  2390 ;; This function uses a non-reentrant model
  2391 ;;
  2392                           
  2393                           	psect	text5
  2394   002152                     __ptext5:
  2395                           	callstack 0
  2396   002152                     _pad:
  2397                           	callstack 22
  2398   002152                     
  2399                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 139:     if (flags & (1 << 0)) {
  2400   002152  A05E               	btfss	_flags^0,0,c
  2401   002154  EFAE  F010         	goto	u1571
  2402   002158  EFB0  F010         	goto	u1570
  2403   00215C                     u1571:
  2404   00215C  EFBA  F010         	goto	l2064
  2405   002160                     u1570:
  2406   002160                     
  2407                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 140:         fput
      +                          s((const char *)buf, fp);
  2408   002160  C013  F00A         	movff	pad@buf,fputs@s
  2409   002164  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2410   002168  C011  F00C         	movff	pad@fp,fputs@fp
  2411   00216C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2412   002170  EC5E  F012         	call	_fputs	;wreg free
  2413   002174                     l2064:
  2414                           
  2415                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 145:     w = (p <
      +                           0) ? 0 : p;
  2416   002174  BE16               	btfsc	(pad@p+1)^0,7,c
  2417   002176  EFBF  F010         	goto	u1581
  2418   00217A  EFC1  F010         	goto	u1580
  2419   00217E                     u1581:
  2420   00217E  EFC7  F010         	goto	l2068
  2421   002182                     u1580:
  2422   002182  C015  F01A         	movff	pad@p,pad@w
  2423   002186  C016  F01B         	movff	pad@p+1,pad@w+1
  2424   00218A  EFCB  F010         	goto	l1026
  2425   00218E                     l2068:
  2426   00218E  0E00               	movlw	0
  2427   002190  6E1B               	movwf	(pad@w+1)^0,c
  2428   002192  0E00               	movlw	0
  2429   002194  6E1A               	movwf	pad@w^0,c
  2430   002196                     l1026:
  2431                           
  2432                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2433   002196  0E00               	movlw	0
  2434   002198  6E19               	movwf	(pad@i+1)^0,c
  2435   00219A  0E00               	movlw	0
  2436   00219C  6E18               	movwf	pad@i^0,c
  2437                           
  2438                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2439   00219E  EFDD  F010         	goto	l2074
  2440   0021A2                     l2070:
  2441                           
  2442                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2443   0021A2  0E00               	movlw	0
  2444   0021A4  6E02               	movwf	(fputc@c+1)^0,c
  2445   0021A6  0E20               	movlw	32
  2446   0021A8  6E01               	movwf	fputc@c^0,c
  2447   0021AA  C011  F003         	movff	pad@fp,fputc@fp
  2448   0021AE  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2449   0021B2  ECE0  F00F         	call	_fputc	;wreg free
  2450   0021B6                     
  2451                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2452   0021B6  4A18               	infsnz	pad@i^0,f,c
  2453   0021B8  2A19               	incf	(pad@i+1)^0,f,c
  2454   0021BA                     l2074:
  2455                           
  2456                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2457   0021BA  501A               	movf	pad@w^0,w,c
  2458   0021BC  5C18               	subwf	pad@i^0,w,c
  2459   0021BE  5019               	movf	(pad@i+1)^0,w,c
  2460   0021C0  0A80               	xorlw	128
  2461   0021C2  6E17               	movwf	??_pad^0,c
  2462   0021C4  501B               	movf	(pad@w+1)^0,w,c
  2463   0021C6  0A80               	xorlw	128
  2464   0021C8  5817               	subwfb	??_pad^0,w,c
  2465   0021CA  A0D8               	btfss	status,0,c
  2466   0021CC  EFEA  F010         	goto	u1591
  2467   0021D0  EFEC  F010         	goto	u1590
  2468   0021D4                     u1591:
  2469   0021D4  EFD1  F010         	goto	l2070
  2470   0021D8                     u1590:
  2471   0021D8                     
  2472                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 154:     if (!(fl
      +                          ags & (1 << 0))) {
  2473   0021D8  B05E               	btfsc	_flags^0,0,c
  2474   0021DA  EFF1  F010         	goto	u1601
  2475   0021DE  EFF3  F010         	goto	u1600
  2476   0021E2                     u1601:
  2477   0021E2  EFFD  F010         	goto	l1031
  2478   0021E6                     u1600:
  2479   0021E6                     
  2480                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2481   0021E6  C013  F00A         	movff	pad@buf,fputs@s
  2482   0021EA  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2483   0021EE  C011  F00C         	movff	pad@fp,fputs@fp
  2484   0021F2  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2485   0021F6  EC5E  F012         	call	_fputs	;wreg free
  2486   0021FA                     l1031:
  2487   0021FA  0012               	return		;funcret
  2488   0021FC                     __end_of_pad:
  2489                           	callstack 0
  2490                           
  2491 ;; *************** function _fputs *****************
  2492 ;; Defined at:
  2493 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2496 ;;		 -> dbuf(32), 
  2497 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2498 ;;		 -> sprintf@f(11), 
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;  i               2   14[COMRAM] int 
  2501 ;;  c               1   13[COMRAM] unsigned char 
  2502 ;; Return value:  Size  Location     Type
  2503 ;;                  2    9[COMRAM] int 
  2504 ;; Registers used:
  2505 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2506 ;; Tracked objects:
  2507 ;;		On entry : 0/0
  2508 ;;		On exit  : 0/0
  2509 ;;		Unchanged: 0/0
  2510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2511 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2512 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2514 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2515 ;;Total ram usage:        7 bytes
  2516 ;; Hardware stack levels used: 1
  2517 ;; Hardware stack levels required when called: 3
  2518 ;; This function calls:
  2519 ;;		_fputc
  2520 ;; This function is called by:
  2521 ;;		_pad
  2522 ;; This function uses a non-reentrant model
  2523 ;;
  2524                           
  2525                           	psect	text6
  2526   0024BC                     __ptext6:
  2527                           	callstack 0
  2528   0024BC                     _fputs:
  2529                           	callstack 22
  2530   0024BC  0E00               	movlw	0
  2531   0024BE  6E10               	movwf	(fputs@i+1)^0,c
  2532   0024C0  0E00               	movlw	0
  2533   0024C2  6E0F               	movwf	fputs@i^0,c
  2534   0024C4  EF6F  F012         	goto	l1972
  2535   0024C8                     l1968:
  2536   0024C8  C00E  F001         	movff	fputs@c,fputc@c
  2537   0024CC  6A02               	clrf	(fputc@c+1)^0,c
  2538   0024CE  C00C  F003         	movff	fputs@fp,fputc@fp
  2539   0024D2  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2540   0024D6  ECE0  F00F         	call	_fputc	;wreg free
  2541   0024DA  4A0F               	infsnz	fputs@i^0,f,c
  2542   0024DC  2A10               	incf	(fputs@i+1)^0,f,c
  2543   0024DE                     l1972:
  2544   0024DE  500F               	movf	fputs@i^0,w,c
  2545   0024E0  240A               	addwf	fputs@s^0,w,c
  2546   0024E2  6ED9               	movwf	fsr2l,c
  2547   0024E4  5010               	movf	(fputs@i+1)^0,w,c
  2548   0024E6  200B               	addwfc	(fputs@s+1)^0,w,c
  2549   0024E8  6EDA               	movwf	fsr2h,c
  2550   0024EA  50DF               	movf	indf2,w,c
  2551   0024EC  6E0E               	movwf	fputs@c^0,c
  2552   0024EE  500E               	movf	fputs@c^0,w,c
  2553   0024F0  A4D8               	btfss	status,2,c
  2554   0024F2  EF7D  F012         	goto	u1431
  2555   0024F6  EF7F  F012         	goto	u1430
  2556   0024FA                     u1431:
  2557   0024FA  EF64  F012         	goto	l1968
  2558   0024FE                     u1430:
  2559   0024FE  0012               	return		;funcret
  2560   002500                     __end_of_fputs:
  2561                           	callstack 0
  2562                           
  2563 ;; *************** function _fputc *****************
  2564 ;; Defined at:
  2565 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;  c               2    0[COMRAM] int 
  2568 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2569 ;;		 -> sprintf@f(11), 
  2570 ;; Auto vars:     Size  Location     Type
  2571 ;;		None
  2572 ;; Return value:  Size  Location     Type
  2573 ;;                  2    0[COMRAM] int 
  2574 ;; Registers used:
  2575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2576 ;; Tracked objects:
  2577 ;;		On entry : 0/0
  2578 ;;		On exit  : 0/0
  2579 ;;		Unchanged: 0/0
  2580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2581 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2583 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2584 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2585 ;;Total ram usage:        9 bytes
  2586 ;; Hardware stack levels used: 1
  2587 ;; Hardware stack levels required when called: 2
  2588 ;; This function calls:
  2589 ;;		_putch
  2590 ;; This function is called by:
  2591 ;;		_pad
  2592 ;;		_vfpfcnvrt
  2593 ;;		_fputs
  2594 ;; This function uses a non-reentrant model
  2595 ;;
  2596                           
  2597                           	psect	text7
  2598   001FC0                     __ptext7:
  2599                           	callstack 0
  2600   001FC0                     _fputc:
  2601                           	callstack 25
  2602   001FC0  5003               	movf	fputc@fp^0,w,c
  2603   001FC2  1004               	iorwf	(fputc@fp+1)^0,w,c
  2604   001FC4  B4D8               	btfsc	status,2,c
  2605   001FC6  EFE7  F00F         	goto	u1391
  2606   001FCA  EFE9  F00F         	goto	u1390
  2607   001FCE                     u1391:
  2608   001FCE  EFF2  F00F         	goto	l1956
  2609   001FD2                     u1390:
  2610   001FD2  5003               	movf	fputc@fp^0,w,c
  2611   001FD4  1004               	iorwf	(fputc@fp+1)^0,w,c
  2612   001FD6  A4D8               	btfss	status,2,c
  2613   001FD8  EFF0  F00F         	goto	u1401
  2614   001FDC  EFF2  F00F         	goto	u1400
  2615   001FE0                     u1401:
  2616   001FE0  EFF7  F00F         	goto	l1958
  2617   001FE4                     u1400:
  2618   001FE4                     l1956:
  2619   001FE4  5001               	movf	fputc@c^0,w,c
  2620   001FE6  EC96  F013         	call	_putch
  2621   001FEA  EF44  F010         	goto	l1139
  2622   001FEE                     l1958:
  2623   001FEE  EE20 F009          	lfsr	2,9
  2624   001FF2  5003               	movf	fputc@fp^0,w,c
  2625   001FF4  26D9               	addwf	fsr2l,f,c
  2626   001FF6  5004               	movf	(fputc@fp+1)^0,w,c
  2627   001FF8  22DA               	addwfc	fsr2h,f,c
  2628   001FFA  50DE               	movf	postinc2,w,c
  2629   001FFC  10DE               	iorwf	postinc2,w,c
  2630   001FFE  B4D8               	btfsc	status,2,c
  2631   002000  EF04  F010         	goto	u1411
  2632   002004  EF06  F010         	goto	u1410
  2633   002008                     u1411:
  2634   002008  EF21  F010         	goto	l1962
  2635   00200C                     u1410:
  2636   00200C  EE20 F009          	lfsr	2,9
  2637   002010  5003               	movf	fputc@fp^0,w,c
  2638   002012  26D9               	addwf	fsr2l,f,c
  2639   002014  5004               	movf	(fputc@fp+1)^0,w,c
  2640   002016  22DA               	addwfc	fsr2h,f,c
  2641   002018  EE10 F003          	lfsr	1,3
  2642   00201C  5003               	movf	fputc@fp^0,w,c
  2643   00201E  26E1               	addwf	fsr1l,f,c
  2644   002020  5004               	movf	(fputc@fp+1)^0,w,c
  2645   002022  22E2               	addwfc	fsr1h,f,c
  2646   002024  50DE               	movf	postinc2,w,c
  2647   002026  5CE6               	subwf	postinc1,w,c
  2648   002028  50E6               	movf	postinc1,w,c
  2649   00202A  0A80               	xorlw	128
  2650   00202C  6E09               	movwf	(??_fputc+4)^0,c
  2651   00202E  50DE               	movf	postinc2,w,c
  2652   002030  0A80               	xorlw	128
  2653   002032  5809               	subwfb	(??_fputc+4)^0,w,c
  2654   002034  B0D8               	btfsc	status,0,c
  2655   002036  EF1F  F010         	goto	u1421
  2656   00203A  EF21  F010         	goto	u1420
  2657   00203E                     u1421:
  2658   00203E  EF44  F010         	goto	l1139
  2659   002042                     u1420:
  2660   002042                     l1962:
  2661   002042  EE20 F003          	lfsr	2,3
  2662   002046  5003               	movf	fputc@fp^0,w,c
  2663   002048  26D9               	addwf	fsr2l,f,c
  2664   00204A  5004               	movf	(fputc@fp+1)^0,w,c
  2665   00204C  22DA               	addwfc	fsr2h,f,c
  2666   00204E  CFDE F005          	movff	postinc2,??_fputc
  2667   002052  CFDD F006          	movff	postdec2,??_fputc+1
  2668   002056  C003  FFD9         	movff	fputc@fp,fsr2l
  2669   00205A  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2670   00205E  CFDE F007          	movff	postinc2,??_fputc+2
  2671   002062  CFDD F008          	movff	postdec2,??_fputc+3
  2672   002066  5005               	movf	??_fputc^0,w,c
  2673   002068  2407               	addwf	(??_fputc+2)^0,w,c
  2674   00206A  6ED9               	movwf	fsr2l,c
  2675   00206C  5006               	movf	(??_fputc+1)^0,w,c
  2676   00206E  2008               	addwfc	(??_fputc+3)^0,w,c
  2677   002070  6EDA               	movwf	fsr2h,c
  2678   002072  C001  FFDF         	movff	fputc@c,indf2
  2679   002076  EE20 F003          	lfsr	2,3
  2680   00207A  5003               	movf	fputc@fp^0,w,c
  2681   00207C  26D9               	addwf	fsr2l,f,c
  2682   00207E  5004               	movf	(fputc@fp+1)^0,w,c
  2683   002080  22DA               	addwfc	fsr2h,f,c
  2684   002082  2ADE               	incf	postinc2,f,c
  2685   002084  0E00               	movlw	0
  2686   002086  22DD               	addwfc	postdec2,f,c
  2687   002088                     l1139:
  2688   002088  0012               	return		;funcret
  2689   00208A                     __end_of_fputc:
  2690                           	callstack 0
  2691                           
  2692 ;; *************** function _putch *****************
  2693 ;; Defined at:
  2694 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  2695 ;; Parameters:    Size  Location     Type
  2696 ;;  c               1    wreg     unsigned char 
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;  c               1    0[COMRAM] unsigned char 
  2699 ;; Return value:  Size  Location     Type
  2700 ;;                  1    wreg      void 
  2701 ;; Registers used:
  2702 ;;		wreg
  2703 ;; Tracked objects:
  2704 ;;		On entry : 0/0
  2705 ;;		On exit  : 0/0
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2712 ;;Total ram usage:        0 bytes
  2713 ;; Hardware stack levels used: 1
  2714 ;; Hardware stack levels required when called: 1
  2715 ;; This function calls:
  2716 ;;		Nothing
  2717 ;; This function is called by:
  2718 ;;		_fputc
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           	psect	text8
  2723   00272C                     __ptext8:
  2724                           	callstack 0
  2725   00272C                     _putch:
  2726                           	callstack 25
  2727   00272C  0012               	return		;funcret
  2728   00272E                     __end_of_putch:
  2729                           	callstack 0
  2730                           
  2731 ;; *************** function _abs *****************
  2732 ;; Defined at:
  2733 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  2734 ;; Parameters:    Size  Location     Type
  2735 ;;  a               2   18[COMRAM] int 
  2736 ;; Auto vars:     Size  Location     Type
  2737 ;;		None
  2738 ;; Return value:  Size  Location     Type
  2739 ;;                  2   18[COMRAM] int 
  2740 ;; Registers used:
  2741 ;;		wreg, status,2, status,0
  2742 ;; Tracked objects:
  2743 ;;		On entry : 0/0
  2744 ;;		On exit  : 0/0
  2745 ;;		Unchanged: 0/0
  2746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2747 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2749 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2750 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2751 ;;Total ram usage:        4 bytes
  2752 ;; Hardware stack levels used: 1
  2753 ;; Hardware stack levels required when called: 1
  2754 ;; This function calls:
  2755 ;;		Nothing
  2756 ;; This function is called by:
  2757 ;;		_dtoa
  2758 ;; This function uses a non-reentrant model
  2759 ;;
  2760                           
  2761                           	psect	text9
  2762   002500                     __ptext9:
  2763                           	callstack 0
  2764   002500                     _abs:
  2765                           	callstack 25
  2766   002500  BE14               	btfsc	(abs@a+1)^0,7,c
  2767   002502  EF8D  F012         	goto	u1610
  2768   002506  5014               	movf	(abs@a+1)^0,w,c
  2769   002508  E106               	bnz	u1611
  2770   00250A  0413               	decf	abs@a^0,w,c
  2771   00250C  B0D8               	btfsc	status,0,c
  2772   00250E  EF8B  F012         	goto	u1611
  2773   002512  EF8D  F012         	goto	u1610
  2774   002516                     u1611:
  2775   002516  EF9B  F012         	goto	l1085
  2776   00251A                     u1610:
  2777   00251A  C013  F015         	movff	abs@a,??_abs
  2778   00251E  C014  F016         	movff	abs@a+1,??_abs+1
  2779   002522  1E15               	comf	??_abs^0,f,c
  2780   002524  1E16               	comf	(??_abs+1)^0,f,c
  2781   002526  4A15               	infsnz	??_abs^0,f,c
  2782   002528  2A16               	incf	(??_abs+1)^0,f,c
  2783   00252A  C015  F013         	movff	??_abs,?_abs
  2784   00252E  C016  F014         	movff	??_abs+1,?_abs+1
  2785   002532  EF9F  F012         	goto	l1088
  2786   002536                     l1085:
  2787   002536  C013  F013         	movff	abs@a,?_abs
  2788   00253A  C014  F014         	movff	abs@a+1,?_abs+1
  2789   00253E                     l1088:
  2790   00253E  0012               	return		;funcret
  2791   002540                     __end_of_abs:
  2792                           	callstack 0
  2793                           
  2794 ;; *************** function ___aomod *****************
  2795 ;; Defined at:
  2796 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;  dividend        8    0[COMRAM] long long 
  2799 ;;  divisor         8    8[COMRAM] long long 
  2800 ;; Auto vars:     Size  Location     Type
  2801 ;;  sign            1   17[COMRAM] unsigned char 
  2802 ;;  counter         1   16[COMRAM] unsigned char 
  2803 ;; Return value:  Size  Location     Type
  2804 ;;                  8    0[COMRAM] long long 
  2805 ;; Registers used:
  2806 ;;		wreg, status,2, status,0
  2807 ;; Tracked objects:
  2808 ;;		On entry : 0/0
  2809 ;;		On exit  : 0/0
  2810 ;;		Unchanged: 0/0
  2811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2812 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2813 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2815 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2816 ;;Total ram usage:       18 bytes
  2817 ;; Hardware stack levels used: 1
  2818 ;; Hardware stack levels required when called: 1
  2819 ;; This function calls:
  2820 ;;		Nothing
  2821 ;; This function is called by:
  2822 ;;		_dtoa
  2823 ;; This function uses a non-reentrant model
  2824 ;;
  2825                           
  2826                           	psect	text10
  2827   001CFE                     __ptext10:
  2828                           	callstack 0
  2829   001CFE                     ___aomod:
  2830                           	callstack 25
  2831   001CFE  0E00               	movlw	0
  2832   001D00  6E12               	movwf	___aomod@sign^0,c
  2833   001D02  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2834   001D04  EF88  F00E         	goto	u1510
  2835   001D08  EF86  F00E         	goto	u1511
  2836   001D0C                     u1511:
  2837   001D0C  EF9A  F00E         	goto	l2032
  2838   001D10                     u1510:
  2839   001D10  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2840   001D12  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2841   001D14  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2842   001D16  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2843   001D18  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2844   001D1A  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2845   001D1C  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2846   001D1E  6C01               	negf	___aomod@dividend^0,c
  2847   001D20  0E00               	movlw	0
  2848   001D22  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2849   001D24  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2850   001D26  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2851   001D28  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2852   001D2A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2853   001D2C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2854   001D2E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2855   001D30  0E01               	movlw	1
  2856   001D32  6E12               	movwf	___aomod@sign^0,c
  2857   001D34                     l2032:
  2858   001D34  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2859   001D36  EFA1  F00E         	goto	u1520
  2860   001D3A  EF9F  F00E         	goto	u1521
  2861   001D3E                     u1521:
  2862   001D3E  EFB1  F00E         	goto	l2036
  2863   001D42                     u1520:
  2864   001D42  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2865   001D44  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2866   001D46  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2867   001D48  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2868   001D4A  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2869   001D4C  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2870   001D4E  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2871   001D50  6C09               	negf	___aomod@divisor^0,c
  2872   001D52  0E00               	movlw	0
  2873   001D54  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2874   001D56  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2875   001D58  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2876   001D5A  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2877   001D5C  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2878   001D5E  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2879   001D60  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2880   001D62                     l2036:
  2881   001D62  5009               	movf	___aomod@divisor^0,w,c
  2882   001D64  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2883   001D66  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2884   001D68  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2885   001D6A  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2886   001D6C  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2887   001D6E  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2888   001D70  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2889   001D72  B4D8               	btfsc	status,2,c
  2890   001D74  EFBE  F00E         	goto	u1531
  2891   001D78  EFC0  F00E         	goto	u1530
  2892   001D7C                     u1531:
  2893   001D7C  EF08  F00F         	goto	l2052
  2894   001D80                     u1530:
  2895   001D80  0E01               	movlw	1
  2896   001D82  6E11               	movwf	___aomod@counter^0,c
  2897   001D84  EFCE  F00E         	goto	l2042
  2898   001D88                     l2040:
  2899   001D88  90D8               	bcf	status,0,c
  2900   001D8A  3609               	rlcf	___aomod@divisor^0,f,c
  2901   001D8C  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2902   001D8E  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2903   001D90  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2904   001D92  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2905   001D94  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2906   001D96  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2907   001D98  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2908   001D9A  2A11               	incf	___aomod@counter^0,f,c
  2909   001D9C                     l2042:
  2910   001D9C  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2911   001D9E  EFD3  F00E         	goto	u1541
  2912   001DA2  EFD5  F00E         	goto	u1540
  2913   001DA6                     u1541:
  2914   001DA6  EFC4  F00E         	goto	l2040
  2915   001DAA                     u1540:
  2916   001DAA                     l2044:
  2917   001DAA  5009               	movf	___aomod@divisor^0,w,c
  2918   001DAC  5C01               	subwf	___aomod@dividend^0,w,c
  2919   001DAE  500A               	movf	(___aomod@divisor+1)^0,w,c
  2920   001DB0  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2921   001DB2  500B               	movf	(___aomod@divisor+2)^0,w,c
  2922   001DB4  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2923   001DB6  500C               	movf	(___aomod@divisor+3)^0,w,c
  2924   001DB8  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2925   001DBA  500D               	movf	(___aomod@divisor+4)^0,w,c
  2926   001DBC  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2927   001DBE  500E               	movf	(___aomod@divisor+5)^0,w,c
  2928   001DC0  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2929   001DC2  500F               	movf	(___aomod@divisor+6)^0,w,c
  2930   001DC4  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2931   001DC6  5010               	movf	(___aomod@divisor+7)^0,w,c
  2932   001DC8  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2933   001DCA  A0D8               	btfss	status,0,c
  2934   001DCC  EFEA  F00E         	goto	u1551
  2935   001DD0  EFEC  F00E         	goto	u1550
  2936   001DD4                     u1551:
  2937   001DD4  EFFC  F00E         	goto	l2048
  2938   001DD8                     u1550:
  2939   001DD8  5009               	movf	___aomod@divisor^0,w,c
  2940   001DDA  5E01               	subwf	___aomod@dividend^0,f,c
  2941   001DDC  500A               	movf	(___aomod@divisor+1)^0,w,c
  2942   001DDE  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2943   001DE0  500B               	movf	(___aomod@divisor+2)^0,w,c
  2944   001DE2  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2945   001DE4  500C               	movf	(___aomod@divisor+3)^0,w,c
  2946   001DE6  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2947   001DE8  500D               	movf	(___aomod@divisor+4)^0,w,c
  2948   001DEA  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2949   001DEC  500E               	movf	(___aomod@divisor+5)^0,w,c
  2950   001DEE  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2951   001DF0  500F               	movf	(___aomod@divisor+6)^0,w,c
  2952   001DF2  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2953   001DF4  5010               	movf	(___aomod@divisor+7)^0,w,c
  2954   001DF6  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2955   001DF8                     l2048:
  2956   001DF8  90D8               	bcf	status,0,c
  2957   001DFA  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2958   001DFC  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2959   001DFE  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2960   001E00  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2961   001E02  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2962   001E04  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2963   001E06  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2964   001E08  3209               	rrcf	___aomod@divisor^0,f,c
  2965   001E0A  2E11               	decfsz	___aomod@counter^0,f,c
  2966   001E0C  EFD5  F00E         	goto	l2044
  2967   001E10                     l2052:
  2968   001E10  5012               	movf	___aomod@sign^0,w,c
  2969   001E12  B4D8               	btfsc	status,2,c
  2970   001E14  EF0E  F00F         	goto	u1561
  2971   001E18  EF10  F00F         	goto	u1560
  2972   001E1C                     u1561:
  2973   001E1C  EF20  F00F         	goto	l2056
  2974   001E20                     u1560:
  2975   001E20  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2976   001E22  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2977   001E24  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2978   001E26  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2979   001E28  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2980   001E2A  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2981   001E2C  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2982   001E2E  6C01               	negf	___aomod@dividend^0,c
  2983   001E30  0E00               	movlw	0
  2984   001E32  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2985   001E34  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2986   001E36  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2987   001E38  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2988   001E3A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2989   001E3C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2990   001E3E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2991   001E40                     l2056:
  2992   001E40  C001  F001         	movff	___aomod@dividend,?___aomod
  2993   001E44  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2994   001E48  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2995   001E4C  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2996   001E50  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2997   001E54  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2998   001E58  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2999   001E5C  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3000   001E60  0012               	return		;funcret
  3001   001E62                     __end_of___aomod:
  3002                           	callstack 0
  3003                           
  3004 ;; *************** function ___aodiv *****************
  3005 ;; Defined at:
  3006 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  3007 ;; Parameters:    Size  Location     Type
  3008 ;;  dividend        8    0[COMRAM] long long 
  3009 ;;  divisor         8    8[COMRAM] long long 
  3010 ;; Auto vars:     Size  Location     Type
  3011 ;;  quotient        8   18[COMRAM] long long 
  3012 ;;  sign            1   17[COMRAM] unsigned char 
  3013 ;;  counter         1   16[COMRAM] unsigned char 
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  8    0[COMRAM] long long 
  3016 ;; Registers used:
  3017 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3023 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3024 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3026 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3027 ;;Total ram usage:       26 bytes
  3028 ;; Hardware stack levels used: 1
  3029 ;; Hardware stack levels required when called: 1
  3030 ;; This function calls:
  3031 ;;		Nothing
  3032 ;; This function is called by:
  3033 ;;		_dtoa
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037                           	psect	text11
  3038   001B76                     __ptext11:
  3039                           	callstack 0
  3040   001B76                     ___aodiv:
  3041                           	callstack 25
  3042   001B76  0E00               	movlw	0
  3043   001B78  6E12               	movwf	___aodiv@sign^0,c
  3044   001B7A  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3045   001B7C  EFC4  F00D         	goto	u1440
  3046   001B80  EFC2  F00D         	goto	u1441
  3047   001B84                     u1441:
  3048   001B84  EFD6  F00D         	goto	l1988
  3049   001B88                     u1440:
  3050   001B88  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3051   001B8A  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3052   001B8C  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3053   001B8E  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3054   001B90  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3055   001B92  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3056   001B94  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3057   001B96  6C09               	negf	___aodiv@divisor^0,c
  3058   001B98  0E00               	movlw	0
  3059   001B9A  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3060   001B9C  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3061   001B9E  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3062   001BA0  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3063   001BA2  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3064   001BA4  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3065   001BA6  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3066   001BA8  0E01               	movlw	1
  3067   001BAA  6E12               	movwf	___aodiv@sign^0,c
  3068   001BAC                     l1988:
  3069   001BAC  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3070   001BAE  EFDD  F00D         	goto	u1450
  3071   001BB2  EFDB  F00D         	goto	u1451
  3072   001BB6                     u1451:
  3073   001BB6  EFEF  F00D         	goto	l1994
  3074   001BBA                     u1450:
  3075   001BBA  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3076   001BBC  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3077   001BBE  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3078   001BC0  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3079   001BC2  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3080   001BC4  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3081   001BC6  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3082   001BC8  6C01               	negf	___aodiv@dividend^0,c
  3083   001BCA  0E00               	movlw	0
  3084   001BCC  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3085   001BCE  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3086   001BD0  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3087   001BD2  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3088   001BD4  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3089   001BD6  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3090   001BD8  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3091   001BDA  0E01               	movlw	1
  3092   001BDC  1A12               	xorwf	___aodiv@sign^0,f,c
  3093   001BDE                     l1994:
  3094   001BDE  EE20  F013         	lfsr	2,___aodiv@quotient
  3095   001BE2  0E07               	movlw	7
  3096   001BE4                     u1461:
  3097   001BE4  6ADE               	clrf	postinc2,c
  3098   001BE6  06E8               	decf	wreg,f,c
  3099   001BE8  E2FD               	bc	u1461
  3100   001BEA  5009               	movf	___aodiv@divisor^0,w,c
  3101   001BEC  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3102   001BEE  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3103   001BF0  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3104   001BF2  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3105   001BF4  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3106   001BF6  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3107   001BF8  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3108   001BFA  B4D8               	btfsc	status,2,c
  3109   001BFC  EF02  F00E         	goto	u1471
  3110   001C00  EF04  F00E         	goto	u1470
  3111   001C04                     u1471:
  3112   001C04  EF56  F00E         	goto	l2016
  3113   001C08                     u1470:
  3114   001C08  0E01               	movlw	1
  3115   001C0A  6E11               	movwf	___aodiv@counter^0,c
  3116   001C0C  EF12  F00E         	goto	l2002
  3117   001C10                     l2000:
  3118   001C10  90D8               	bcf	status,0,c
  3119   001C12  3609               	rlcf	___aodiv@divisor^0,f,c
  3120   001C14  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3121   001C16  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3122   001C18  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3123   001C1A  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3124   001C1C  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3125   001C1E  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3126   001C20  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3127   001C22  2A11               	incf	___aodiv@counter^0,f,c
  3128   001C24                     l2002:
  3129   001C24  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3130   001C26  EF17  F00E         	goto	u1481
  3131   001C2A  EF19  F00E         	goto	u1480
  3132   001C2E                     u1481:
  3133   001C2E  EF08  F00E         	goto	l2000
  3134   001C32                     u1480:
  3135   001C32                     l2004:
  3136   001C32  90D8               	bcf	status,0,c
  3137   001C34  3613               	rlcf	___aodiv@quotient^0,f,c
  3138   001C36  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3139   001C38  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3140   001C3A  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3141   001C3C  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3142   001C3E  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3143   001C40  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3144   001C42  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3145   001C44  5009               	movf	___aodiv@divisor^0,w,c
  3146   001C46  5C01               	subwf	___aodiv@dividend^0,w,c
  3147   001C48  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3148   001C4A  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3149   001C4C  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3150   001C4E  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3151   001C50  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3152   001C52  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3153   001C54  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3154   001C56  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3155   001C58  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3156   001C5A  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3157   001C5C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3158   001C5E  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3159   001C60  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3160   001C62  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3161   001C64  A0D8               	btfss	status,0,c
  3162   001C66  EF37  F00E         	goto	u1491
  3163   001C6A  EF39  F00E         	goto	u1490
  3164   001C6E                     u1491:
  3165   001C6E  EF4A  F00E         	goto	l2012
  3166   001C72                     u1490:
  3167   001C72  5009               	movf	___aodiv@divisor^0,w,c
  3168   001C74  5E01               	subwf	___aodiv@dividend^0,f,c
  3169   001C76  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3170   001C78  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3171   001C7A  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3172   001C7C  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3173   001C7E  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3174   001C80  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3175   001C82  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3176   001C84  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3177   001C86  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3178   001C88  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3179   001C8A  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3180   001C8C  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3181   001C8E  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3182   001C90  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3183   001C92  8013               	bsf	___aodiv@quotient^0,0,c
  3184   001C94                     l2012:
  3185   001C94  90D8               	bcf	status,0,c
  3186   001C96  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3187   001C98  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3188   001C9A  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3189   001C9C  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3190   001C9E  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3191   001CA0  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3192   001CA2  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3193   001CA4  3209               	rrcf	___aodiv@divisor^0,f,c
  3194   001CA6  2E11               	decfsz	___aodiv@counter^0,f,c
  3195   001CA8  EF19  F00E         	goto	l2004
  3196   001CAC                     l2016:
  3197   001CAC  5012               	movf	___aodiv@sign^0,w,c
  3198   001CAE  B4D8               	btfsc	status,2,c
  3199   001CB0  EF5C  F00E         	goto	u1501
  3200   001CB4  EF5E  F00E         	goto	u1500
  3201   001CB8                     u1501:
  3202   001CB8  EF6E  F00E         	goto	l2020
  3203   001CBC                     u1500:
  3204   001CBC  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3205   001CBE  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3206   001CC0  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3207   001CC2  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3208   001CC4  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3209   001CC6  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3210   001CC8  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3211   001CCA  6C13               	negf	___aodiv@quotient^0,c
  3212   001CCC  0E00               	movlw	0
  3213   001CCE  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3214   001CD0  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3215   001CD2  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3216   001CD4  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3217   001CD6  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3218   001CD8  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3219   001CDA  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3220   001CDC                     l2020:
  3221   001CDC  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3222   001CE0  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3223   001CE4  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3224   001CE8  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3225   001CEC  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3226   001CF0  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3227   001CF4  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3228   001CF8  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3229   001CFC  0012               	return		;funcret
  3230   001CFE                     __end_of___aodiv:
  3231                           	callstack 0
  3232                           
  3233 ;; *************** function _atoi *****************
  3234 ;; Defined at:
  3235 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  3236 ;; Parameters:    Size  Location     Type
  3237 ;;  s               2    6[COMRAM] PTR const unsigned char 
  3238 ;;		 -> STR_4(12), STR_3(18), STR_2(8), STR_1(8), 
  3239 ;; Auto vars:     Size  Location     Type
  3240 ;;  n               2   13[COMRAM] int 
  3241 ;;  neg             2   11[COMRAM] int 
  3242 ;; Return value:  Size  Location     Type
  3243 ;;                  2    6[COMRAM] int 
  3244 ;; Registers used:
  3245 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3246 ;; Tracked objects:
  3247 ;;		On entry : 0/0
  3248 ;;		On exit  : 0/0
  3249 ;;		Unchanged: 0/0
  3250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3251 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3252 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3253 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3254 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3255 ;;Total ram usage:        9 bytes
  3256 ;; Hardware stack levels used: 1
  3257 ;; Hardware stack levels required when called: 2
  3258 ;; This function calls:
  3259 ;;		___wmul
  3260 ;;		_isdigit
  3261 ;;		_isspace
  3262 ;; This function is called by:
  3263 ;;		_vfpfcnvrt
  3264 ;; This function uses a non-reentrant model
  3265 ;;
  3266                           
  3267                           	psect	text12
  3268   001E62                     __ptext12:
  3269                           	callstack 0
  3270   001E62                     _atoi:
  3271                           	callstack 25
  3272   001E62  0E00               	movlw	0
  3273   001E64  6E0F               	movwf	(atoi@n+1)^0,c
  3274   001E66  0E00               	movlw	0
  3275   001E68  6E0E               	movwf	atoi@n^0,c
  3276   001E6A  0E00               	movlw	0
  3277   001E6C  6E0D               	movwf	(atoi@neg+1)^0,c
  3278   001E6E  0E00               	movlw	0
  3279   001E70  6E0C               	movwf	atoi@neg^0,c
  3280   001E72  EF3D  F00F         	goto	l2170
  3281   001E76                     l2166:
  3282   001E76  4A07               	infsnz	atoi@s^0,f,c
  3283   001E78  2A08               	incf	(atoi@s+1)^0,f,c
  3284   001E7A                     l2170:
  3285   001E7A  C007  FFF6         	movff	atoi@s,tblptrl
  3286   001E7E  C008  FFF7         	movff	atoi@s+1,tblptrh
  3287   001E82                     	if	0	;tblptru may be non-zero
  3288   001E82                     	endif
  3289   001E82                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3290   001E82  0E00               	movlw	low (__mediumconst shr (0+16))
  3291   001E84  6EF8               	movwf	tblptru,c
  3292   001E86                     	endif
  3293   001E86  0008               	tblrd		*
  3294   001E88  50F5               	movf	tablat,w,c
  3295   001E8A  0A20               	xorlw	32
  3296   001E8C  B4D8               	btfsc	status,2,c
  3297   001E8E  EF4B  F00F         	goto	u1791
  3298   001E92  EF4D  F00F         	goto	u1790
  3299   001E96                     u1791:
  3300   001E96  EF3B  F00F         	goto	l2166
  3301   001E9A                     u1790:
  3302   001E9A  C007  FFF6         	movff	atoi@s,tblptrl
  3303   001E9E  C008  FFF7         	movff	atoi@s+1,tblptrh
  3304   001EA2                     	if	0	;tblptru may be non-zero
  3305   001EA2                     	endif
  3306   001EA2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3307   001EA2  0E00               	movlw	low (__mediumconst shr (0+16))
  3308   001EA4  6EF8               	movwf	tblptru,c
  3309   001EA6                     	endif
  3310   001EA6  0008               	tblrd		*
  3311   001EA8  CFF5 F009          	movff	tablat,??_atoi
  3312   001EAC  0EF7               	movlw	247
  3313   001EAE  2409               	addwf	??_atoi^0,w,c
  3314   001EB0  6E0A               	movwf	(??_atoi+1)^0,c
  3315   001EB2  6A0B               	clrf	(??_atoi+2)^0,c
  3316   001EB4  0EFF               	movlw	255
  3317   001EB6  220B               	addwfc	(??_atoi+2)^0,f,c
  3318   001EB8  500B               	movf	(??_atoi+2)^0,w,c
  3319   001EBA  E109               	bnz	u1800
  3320   001EBC  0E05               	movlw	5
  3321   001EBE  5C0A               	subwf	(??_atoi+1)^0,w,c
  3322   001EC0  A0D8               	btfss	status,0,c
  3323   001EC2  EF65  F00F         	goto	u1801
  3324   001EC6  EF67  F00F         	goto	u1800
  3325   001ECA                     u1801:
  3326   001ECA  EF3B  F00F         	goto	l2166
  3327   001ECE                     u1800:
  3328   001ECE  EF71  F00F         	goto	l2178
  3329   001ED2                     l2174:
  3330   001ED2  0E00               	movlw	0
  3331   001ED4  6E0D               	movwf	(atoi@neg+1)^0,c
  3332   001ED6  0E01               	movlw	1
  3333   001ED8  6E0C               	movwf	atoi@neg^0,c
  3334   001EDA                     l2176:
  3335   001EDA  4A07               	infsnz	atoi@s^0,f,c
  3336   001EDC  2A08               	incf	(atoi@s+1)^0,f,c
  3337   001EDE  EFAA  F00F         	goto	l2186
  3338   001EE2                     l2178:
  3339   001EE2  C007  FFF6         	movff	atoi@s,tblptrl
  3340   001EE6  C008  FFF7         	movff	atoi@s+1,tblptrh
  3341   001EEA                     	if	0	;tblptru may be non-zero
  3342   001EEA                     	endif
  3343   001EEA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3344   001EEA  0E00               	movlw	low (__mediumconst shr (0+16))
  3345   001EEC  6EF8               	movwf	tblptru,c
  3346   001EEE                     	endif
  3347   001EEE  0008               	tblrd		*
  3348   001EF0  50F5               	movf	tablat,w,c
  3349   001EF2  6E09               	movwf	??_atoi^0,c
  3350   001EF4  6A0A               	clrf	(??_atoi+1)^0,c
  3351                           
  3352                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3353                           ; Switch size 1, requested type "simple"
  3354                           ; Number of cases is 1, Range of values is 0 to 0
  3355                           ; switch strategies available:
  3356                           ; Name         Instructions Cycles
  3357                           ; simple_byte            4     3 (average)
  3358                           ;	Chosen strategy is simple_byte
  3359   001EF6  500A               	movf	(??_atoi+1)^0,w,c
  3360   001EF8  0A00               	xorlw	0	; case 0
  3361   001EFA  B4D8               	btfsc	status,2,c
  3362   001EFC  EF82  F00F         	goto	l2738
  3363   001F00  EFAA  F00F         	goto	l2186
  3364   001F04                     l2738:
  3365                           
  3366                           ; Switch size 1, requested type "simple"
  3367                           ; Number of cases is 2, Range of values is 43 to 45
  3368                           ; switch strategies available:
  3369                           ; Name         Instructions Cycles
  3370                           ; simple_byte            7     4 (average)
  3371                           ;	Chosen strategy is simple_byte
  3372   001F04  5009               	movf	??_atoi^0,w,c
  3373   001F06  0A2B               	xorlw	43	; case 43
  3374   001F08  B4D8               	btfsc	status,2,c
  3375   001F0A  EF6D  F00F         	goto	l2176
  3376   001F0E  0A06               	xorlw	6	; case 45
  3377   001F10  B4D8               	btfsc	status,2,c
  3378   001F12  EF69  F00F         	goto	l2174
  3379   001F16  EFAA  F00F         	goto	l2186
  3380   001F1A                     l2180:
  3381   001F1A  C00E  F001         	movff	atoi@n,___wmul@multiplier
  3382   001F1E  C00F  F002         	movff	atoi@n+1,___wmul@multiplier+1
  3383   001F22  0E00               	movlw	0
  3384   001F24  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3385   001F26  0E0A               	movlw	10
  3386   001F28  6E03               	movwf	___wmul@multiplicand^0,c
  3387   001F2A  EC1C  F013         	call	___wmul	;wreg free
  3388   001F2E  C007  FFF6         	movff	atoi@s,tblptrl
  3389   001F32  C008  FFF7         	movff	atoi@s+1,tblptrh
  3390   001F36                     	if	0	;tblptru may be non-zero
  3391   001F36                     	endif
  3392   001F36                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3393   001F36  0E00               	movlw	low (__mediumconst shr (0+16))
  3394   001F38  6EF8               	movwf	tblptru,c
  3395   001F3A                     	endif
  3396   001F3A  0008               	tblrd		*
  3397   001F3C  50F5               	movf	tablat,w,c
  3398   001F3E  5E01               	subwf	?___wmul^0,f,c
  3399   001F40  0E00               	movlw	0
  3400   001F42  5A02               	subwfb	(?___wmul+1)^0,f,c
  3401   001F44  0E30               	movlw	48
  3402   001F46  2401               	addwf	?___wmul^0,w,c
  3403   001F48  6E0E               	movwf	atoi@n^0,c
  3404   001F4A  0E00               	movlw	0
  3405   001F4C  2002               	addwfc	(?___wmul+1)^0,w,c
  3406   001F4E  6E0F               	movwf	(atoi@n+1)^0,c
  3407   001F50  EF6D  F00F         	goto	l2176
  3408   001F54                     l2186:
  3409   001F54  C007  FFF6         	movff	atoi@s,tblptrl
  3410   001F58  C008  FFF7         	movff	atoi@s+1,tblptrh
  3411   001F5C                     	if	0	;tblptru may be non-zero
  3412   001F5C                     	endif
  3413   001F5C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3414   001F5C  0E00               	movlw	low (__mediumconst shr (0+16))
  3415   001F5E  6EF8               	movwf	tblptru,c
  3416   001F60                     	endif
  3417   001F60  0008               	tblrd		*
  3418   001F62  CFF5 F009          	movff	tablat,??_atoi
  3419   001F66  0ED0               	movlw	208
  3420   001F68  2409               	addwf	??_atoi^0,w,c
  3421   001F6A  6E0A               	movwf	(??_atoi+1)^0,c
  3422   001F6C  6A0B               	clrf	(??_atoi+2)^0,c
  3423   001F6E  0EFF               	movlw	255
  3424   001F70  220B               	addwfc	(??_atoi+2)^0,f,c
  3425   001F72  500B               	movf	(??_atoi+2)^0,w,c
  3426   001F74  E109               	bnz	u1810
  3427   001F76  0E0A               	movlw	10
  3428   001F78  5C0A               	subwf	(??_atoi+1)^0,w,c
  3429   001F7A  A0D8               	btfss	status,0,c
  3430   001F7C  EFC2  F00F         	goto	u1811
  3431   001F80  EFC4  F00F         	goto	u1810
  3432   001F84                     u1811:
  3433   001F84  EF8D  F00F         	goto	l2180
  3434   001F88                     u1810:
  3435   001F88  500C               	movf	atoi@neg^0,w,c
  3436   001F8A  100D               	iorwf	(atoi@neg+1)^0,w,c
  3437   001F8C  A4D8               	btfss	status,2,c
  3438   001F8E  EFCB  F00F         	goto	u1821
  3439   001F92  EFCD  F00F         	goto	u1820
  3440   001F96                     u1821:
  3441   001F96  EFDB  F00F         	goto	l1110
  3442   001F9A                     u1820:
  3443   001F9A  C00E  F009         	movff	atoi@n,??_atoi
  3444   001F9E  C00F  F00A         	movff	atoi@n+1,??_atoi+1
  3445   001FA2  1E09               	comf	??_atoi^0,f,c
  3446   001FA4  1E0A               	comf	(??_atoi+1)^0,f,c
  3447   001FA6  4A09               	infsnz	??_atoi^0,f,c
  3448   001FA8  2A0A               	incf	(??_atoi+1)^0,f,c
  3449   001FAA  C009  F007         	movff	??_atoi,?_atoi
  3450   001FAE  C00A  F008         	movff	??_atoi+1,?_atoi+1
  3451   001FB2  EFDF  F00F         	goto	l1113
  3452   001FB6                     l1110:
  3453   001FB6  C00E  F007         	movff	atoi@n,?_atoi
  3454   001FBA  C00F  F008         	movff	atoi@n+1,?_atoi+1
  3455   001FBE                     l1113:
  3456   001FBE  0012               	return		;funcret
  3457   001FC0                     __end_of_atoi:
  3458                           	callstack 0
  3459                           
  3460 ;; *************** function _isspace *****************
  3461 ;; Defined at:
  3462 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;  c               2    0[COMRAM] int 
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;		None
  3467 ;; Return value:  Size  Location     Type
  3468 ;;                  2    0[COMRAM] int 
  3469 ;; Registers used:
  3470 ;;		wreg, status,2, status,0
  3471 ;; Tracked objects:
  3472 ;;		On entry : 0/0
  3473 ;;		On exit  : 0/0
  3474 ;;		Unchanged: 0/0
  3475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3476 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3477 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3478 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3479 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3480 ;;Total ram usage:        5 bytes
  3481 ;; Hardware stack levels used: 1
  3482 ;; Hardware stack levels required when called: 1
  3483 ;; This function calls:
  3484 ;;		Nothing
  3485 ;; This function is called by:
  3486 ;;		_atoi
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           
  3490                           	psect	text13
  3491   002476                     __ptext13:
  3492                           	callstack 0
  3493   002476                     _isspace:
  3494                           	callstack 25
  3495   002476  0E01               	movlw	1
  3496   002478  6E05               	movwf	_isspace$1936^0,c
  3497   00247A  0E20               	movlw	32
  3498   00247C  1801               	xorwf	isspace@c^0,w,c
  3499   00247E  1002               	iorwf	(isspace@c+1)^0,w,c
  3500   002480  B4D8               	btfsc	status,2,c
  3501   002482  EF45  F012         	goto	u1641
  3502   002486  EF47  F012         	goto	u1640
  3503   00248A                     u1641:
  3504   00248A  EF5A  F012         	goto	l2094
  3505   00248E                     u1640:
  3506   00248E  0EF7               	movlw	247
  3507   002490  2401               	addwf	isspace@c^0,w,c
  3508   002492  6E03               	movwf	??_isspace^0,c
  3509   002494  0EFF               	movlw	255
  3510   002496  2002               	addwfc	(isspace@c+1)^0,w,c
  3511   002498  6E04               	movwf	(??_isspace+1)^0,c
  3512   00249A  5004               	movf	(??_isspace+1)^0,w,c
  3513   00249C  E109               	bnz	u1650
  3514   00249E  0E05               	movlw	5
  3515   0024A0  5C03               	subwf	??_isspace^0,w,c
  3516   0024A2  A0D8               	btfss	status,0,c
  3517   0024A4  EF56  F012         	goto	u1651
  3518   0024A8  EF58  F012         	goto	u1650
  3519   0024AC                     u1651:
  3520   0024AC  EF5A  F012         	goto	l2094
  3521   0024B0                     u1650:
  3522   0024B0  0E00               	movlw	0
  3523   0024B2  6E05               	movwf	_isspace$1936^0,c
  3524   0024B4                     l2094:
  3525   0024B4  C005  F001         	movff	_isspace$1936,?_isspace
  3526   0024B8  6A02               	clrf	(?_isspace+1)^0,c
  3527   0024BA  0012               	return		;funcret
  3528   0024BC                     __end_of_isspace:
  3529                           	callstack 0
  3530                           
  3531 ;; *************** function _isdigit *****************
  3532 ;; Defined at:
  3533 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  3534 ;; Parameters:    Size  Location     Type
  3535 ;;  c               2    0[COMRAM] int 
  3536 ;; Auto vars:     Size  Location     Type
  3537 ;;		None
  3538 ;; Return value:  Size  Location     Type
  3539 ;;                  2    0[COMRAM] int 
  3540 ;; Registers used:
  3541 ;;		wreg, status,2, status,0
  3542 ;; Tracked objects:
  3543 ;;		On entry : 0/0
  3544 ;;		On exit  : 0/0
  3545 ;;		Unchanged: 0/0
  3546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3547 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3549 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3550 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3551 ;;Total ram usage:        4 bytes
  3552 ;; Hardware stack levels used: 1
  3553 ;; Hardware stack levels required when called: 1
  3554 ;; This function calls:
  3555 ;;		Nothing
  3556 ;; This function is called by:
  3557 ;;		_vfpfcnvrt
  3558 ;;		_atoi
  3559 ;; This function uses a non-reentrant model
  3560 ;;
  3561                           
  3562                           	psect	text14
  3563   0025E4                     __ptext14:
  3564                           	callstack 0
  3565   0025E4                     _isdigit:
  3566                           	callstack 26
  3567   0025E4  0ED0               	movlw	208
  3568   0025E6  2401               	addwf	isdigit@c^0,w,c
  3569   0025E8  6E03               	movwf	??_isdigit^0,c
  3570   0025EA  0EFF               	movlw	255
  3571   0025EC  2002               	addwfc	(isdigit@c+1)^0,w,c
  3572   0025EE  6E04               	movwf	(??_isdigit+1)^0,c
  3573   0025F0  5004               	movf	(??_isdigit+1)^0,w,c
  3574   0025F2  E10A               	bnz	u1620
  3575   0025F4  0E0A               	movlw	10
  3576   0025F6  5C03               	subwf	??_isdigit^0,w,c
  3577   0025F8  A0D8               	btfss	status,0,c
  3578   0025FA  EF01  F013         	goto	u1621
  3579   0025FE  EF04  F013         	goto	u1620
  3580   002602                     u1621:
  3581   002602  0E01               	movlw	1
  3582   002604  EF05  F013         	goto	u1630
  3583   002608                     u1620:
  3584   002608  0E00               	movlw	0
  3585   00260A                     u1630:
  3586   00260A  6E01               	movwf	?_isdigit^0,c
  3587   00260C  6A02               	clrf	(?_isdigit+1)^0,c
  3588   00260E  0012               	return		;funcret
  3589   002610                     __end_of_isdigit:
  3590                           	callstack 0
  3591                           
  3592 ;; *************** function ___wmul *****************
  3593 ;; Defined at:
  3594 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;  multiplier      2    0[COMRAM] unsigned int 
  3597 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3598 ;; Auto vars:     Size  Location     Type
  3599 ;;  product         2    4[COMRAM] unsigned int 
  3600 ;; Return value:  Size  Location     Type
  3601 ;;                  2    0[COMRAM] unsigned int 
  3602 ;; Registers used:
  3603 ;;		wreg, status,2, status,0, prodl, prodh
  3604 ;; Tracked objects:
  3605 ;;		On entry : 0/0
  3606 ;;		On exit  : 0/0
  3607 ;;		Unchanged: 0/0
  3608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3609 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3610 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3612 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3613 ;;Total ram usage:        6 bytes
  3614 ;; Hardware stack levels used: 1
  3615 ;; Hardware stack levels required when called: 1
  3616 ;; This function calls:
  3617 ;;		Nothing
  3618 ;; This function is called by:
  3619 ;;		_main
  3620 ;;		_atoi
  3621 ;;		_ADC2String
  3622 ;; This function uses a non-reentrant model
  3623 ;;
  3624                           
  3625                           	psect	text15
  3626   002638                     __ptext15:
  3627                           	callstack 0
  3628   002638                     ___wmul:
  3629                           	callstack 25
  3630   002638  5001               	movf	___wmul@multiplier^0,w,c
  3631   00263A  0203               	mulwf	___wmul@multiplicand^0,c
  3632   00263C  CFF3 F005          	movff	prodl,___wmul@product
  3633   002640  CFF4 F006          	movff	prodh,___wmul@product+1
  3634   002644  5001               	movf	___wmul@multiplier^0,w,c
  3635   002646  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3636   002648  50F3               	movf	243,w,c
  3637   00264A  2606               	addwf	(___wmul@product+1)^0,f,c
  3638   00264C  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3639   00264E  0203               	mulwf	___wmul@multiplicand^0,c
  3640   002650  50F3               	movf	243,w,c
  3641   002652  2606               	addwf	(___wmul@product+1)^0,f,c
  3642   002654  C005  F001         	movff	___wmul@product,?___wmul
  3643   002658  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3644   00265C  0012               	return		;funcret
  3645   00265E                     __end_of___wmul:
  3646                           	callstack 0
  3647                           
  3648 ;; *************** function _check_month *****************
  3649 ;; Defined at:
  3650 ;;		line 12 in file "../MonthTracker.c"
  3651 ;; Parameters:    Size  Location     Type
  3652 ;;  month           2   11[COMRAM] PTR unsigned int 
  3653 ;;		 -> main@month(2), 
  3654 ;;  month_day       2   13[COMRAM] PTR unsigned int 
  3655 ;;		 -> main@month_day(2), 
  3656 ;;  year            2   15[COMRAM] PTR unsigned short 
  3657 ;;		 -> main@year(2), 
  3658 ;; Auto vars:     Size  Location     Type
  3659 ;;  leap_year       2   19[COMRAM] int 
  3660 ;; Return value:  Size  Location     Type
  3661 ;;                  1    wreg      void 
  3662 ;; Registers used:
  3663 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3664 ;; Tracked objects:
  3665 ;;		On entry : 0/0
  3666 ;;		On exit  : 0/0
  3667 ;;		Unchanged: 0/0
  3668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3669 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3670 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3671 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3672 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3673 ;;Total ram usage:       10 bytes
  3674 ;; Hardware stack levels used: 1
  3675 ;; Hardware stack levels required when called: 2
  3676 ;; This function calls:
  3677 ;;		___lwmod
  3678 ;; This function is called by:
  3679 ;;		_main
  3680 ;; This function uses a non-reentrant model
  3681 ;;
  3682                           
  3683                           	psect	text16
  3684   0012D2                     __ptext16:
  3685                           	callstack 0
  3686   0012D2                     _check_month:
  3687                           	callstack 28
  3688   0012D2                     
  3689                           ;../MonthTracker.c: 16:         if ((*month == 1 || *month == 3 || *month == 5 || *month
      +                           == 7 || *month == 8|| *month == 10 || *month == 12) && *month_day == 32){
  3690   0012D2  C00C  FFD9         	movff	check_month@month,fsr2l
  3691   0012D6  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3692   0012DA  04DE               	decf	postinc2,w,c
  3693   0012DC  10DE               	iorwf	postinc2,w,c
  3694   0012DE  B4D8               	btfsc	status,2,c
  3695   0012E0  EF74  F009         	goto	u2111
  3696   0012E4  EF76  F009         	goto	u2110
  3697   0012E8                     u2111:
  3698   0012E8  EFCA  F009         	goto	l2450
  3699   0012EC                     u2110:
  3700   0012EC  C00C  FFD9         	movff	check_month@month,fsr2l
  3701   0012F0  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3702   0012F4  0E03               	movlw	3
  3703   0012F6  18DE               	xorwf	postinc2,w,c
  3704   0012F8  10DE               	iorwf	postinc2,w,c
  3705   0012FA  B4D8               	btfsc	status,2,c
  3706   0012FC  EF82  F009         	goto	u2121
  3707   001300  EF84  F009         	goto	u2120
  3708   001304                     u2121:
  3709   001304  EFCA  F009         	goto	l2450
  3710   001308                     u2120:
  3711   001308  C00C  FFD9         	movff	check_month@month,fsr2l
  3712   00130C  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3713   001310  0E05               	movlw	5
  3714   001312  18DE               	xorwf	postinc2,w,c
  3715   001314  10DE               	iorwf	postinc2,w,c
  3716   001316  B4D8               	btfsc	status,2,c
  3717   001318  EF90  F009         	goto	u2131
  3718   00131C  EF92  F009         	goto	u2130
  3719   001320                     u2131:
  3720   001320  EFCA  F009         	goto	l2450
  3721   001324                     u2130:
  3722   001324  C00C  FFD9         	movff	check_month@month,fsr2l
  3723   001328  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3724   00132C  0E07               	movlw	7
  3725   00132E  18DE               	xorwf	postinc2,w,c
  3726   001330  10DE               	iorwf	postinc2,w,c
  3727   001332  B4D8               	btfsc	status,2,c
  3728   001334  EF9E  F009         	goto	u2141
  3729   001338  EFA0  F009         	goto	u2140
  3730   00133C                     u2141:
  3731   00133C  EFCA  F009         	goto	l2450
  3732   001340                     u2140:
  3733   001340  C00C  FFD9         	movff	check_month@month,fsr2l
  3734   001344  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3735   001348  0E08               	movlw	8
  3736   00134A  18DE               	xorwf	postinc2,w,c
  3737   00134C  10DE               	iorwf	postinc2,w,c
  3738   00134E  B4D8               	btfsc	status,2,c
  3739   001350  EFAC  F009         	goto	u2151
  3740   001354  EFAE  F009         	goto	u2150
  3741   001358                     u2151:
  3742   001358  EFCA  F009         	goto	l2450
  3743   00135C                     u2150:
  3744   00135C  C00C  FFD9         	movff	check_month@month,fsr2l
  3745   001360  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3746   001364  0E0A               	movlw	10
  3747   001366  18DE               	xorwf	postinc2,w,c
  3748   001368  10DE               	iorwf	postinc2,w,c
  3749   00136A  B4D8               	btfsc	status,2,c
  3750   00136C  EFBA  F009         	goto	u2161
  3751   001370  EFBC  F009         	goto	u2160
  3752   001374                     u2161:
  3753   001374  EFCA  F009         	goto	l2450
  3754   001378                     u2160:
  3755   001378  C00C  FFD9         	movff	check_month@month,fsr2l
  3756   00137C  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3757   001380  0E0C               	movlw	12
  3758   001382  18DE               	xorwf	postinc2,w,c
  3759   001384  10DE               	iorwf	postinc2,w,c
  3760   001386  A4D8               	btfss	status,2,c
  3761   001388  EFC8  F009         	goto	u2171
  3762   00138C  EFCA  F009         	goto	u2170
  3763   001390                     u2171:
  3764   001390  EF04  F00A         	goto	l2462
  3765   001394                     u2170:
  3766   001394                     l2450:
  3767   001394  C00E  FFD9         	movff	check_month@month_day,fsr2l
  3768   001398  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  3769   00139C  0E20               	movlw	32
  3770   00139E  18DE               	xorwf	postinc2,w,c
  3771   0013A0  10DE               	iorwf	postinc2,w,c
  3772   0013A2  A4D8               	btfss	status,2,c
  3773   0013A4  EFD6  F009         	goto	u2181
  3774   0013A8  EFD8  F009         	goto	u2180
  3775   0013AC                     u2181:
  3776   0013AC  EF04  F00A         	goto	l2462
  3777   0013B0                     u2180:
  3778   0013B0                     
  3779                           ;../MonthTracker.c: 18:             *month_day = 1;
  3780   0013B0  C00E  FFD9         	movff	check_month@month_day,fsr2l
  3781   0013B4  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  3782   0013B8  0E01               	movlw	1
  3783   0013BA  6EDE               	movwf	postinc2,c
  3784   0013BC  0E00               	movlw	0
  3785   0013BE  6EDD               	movwf	postdec2,c
  3786   0013C0                     
  3787                           ;../MonthTracker.c: 19:             (*month)++;
  3788   0013C0  C00C  FFD9         	movff	check_month@month,fsr2l
  3789   0013C4  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3790   0013C8  2ADE               	incf	postinc2,f,c
  3791   0013CA  0E00               	movlw	0
  3792   0013CC  22DD               	addwfc	postdec2,f,c
  3793   0013CE                     
  3794                           ;../MonthTracker.c: 20:             if (*month == 13){
  3795   0013CE  C00C  FFD9         	movff	check_month@month,fsr2l
  3796   0013D2  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3797   0013D6  0E0D               	movlw	13
  3798   0013D8  18DE               	xorwf	postinc2,w,c
  3799   0013DA  10DE               	iorwf	postinc2,w,c
  3800   0013DC  A4D8               	btfss	status,2,c
  3801   0013DE  EFF3  F009         	goto	u2191
  3802   0013E2  EFF5  F009         	goto	u2190
  3803   0013E6                     u2191:
  3804   0013E6  EF04  F00A         	goto	l2462
  3805   0013EA                     u2190:
  3806   0013EA                     
  3807                           ;../MonthTracker.c: 21:                 *month = 1;
  3808   0013EA  C00C  FFD9         	movff	check_month@month,fsr2l
  3809   0013EE  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3810   0013F2  0E01               	movlw	1
  3811   0013F4  6EDE               	movwf	postinc2,c
  3812   0013F6  0E00               	movlw	0
  3813   0013F8  6EDD               	movwf	postdec2,c
  3814   0013FA                     
  3815                           ;../MonthTracker.c: 22:                 (*year)++;
  3816   0013FA  C010  FFD9         	movff	check_month@year,fsr2l
  3817   0013FE  C011  FFDA         	movff	check_month@year+1,fsr2h
  3818   001402  2ADE               	incf	postinc2,f,c
  3819   001404  0E00               	movlw	0
  3820   001406  22DD               	addwfc	postdec2,f,c
  3821   001408                     l2462:
  3822                           
  3823                           ;../MonthTracker.c: 26:         if ((*month == 4 || *month == 6 || *month == 9 || *month
      +                           == 11) && *month_day == 31){
  3824   001408  C00C  FFD9         	movff	check_month@month,fsr2l
  3825   00140C  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3826   001410  0E04               	movlw	4
  3827   001412  18DE               	xorwf	postinc2,w,c
  3828   001414  10DE               	iorwf	postinc2,w,c
  3829   001416  B4D8               	btfsc	status,2,c
  3830   001418  EF10  F00A         	goto	u2201
  3831   00141C  EF12  F00A         	goto	u2200
  3832   001420                     u2201:
  3833   001420  EF3C  F00A         	goto	l2470
  3834   001424                     u2200:
  3835   001424  C00C  FFD9         	movff	check_month@month,fsr2l
  3836   001428  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3837   00142C  0E06               	movlw	6
  3838   00142E  18DE               	xorwf	postinc2,w,c
  3839   001430  10DE               	iorwf	postinc2,w,c
  3840   001432  B4D8               	btfsc	status,2,c
  3841   001434  EF1E  F00A         	goto	u2211
  3842   001438  EF20  F00A         	goto	u2210
  3843   00143C                     u2211:
  3844   00143C  EF3C  F00A         	goto	l2470
  3845   001440                     u2210:
  3846   001440  C00C  FFD9         	movff	check_month@month,fsr2l
  3847   001444  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3848   001448  0E09               	movlw	9
  3849   00144A  18DE               	xorwf	postinc2,w,c
  3850   00144C  10DE               	iorwf	postinc2,w,c
  3851   00144E  B4D8               	btfsc	status,2,c
  3852   001450  EF2C  F00A         	goto	u2221
  3853   001454  EF2E  F00A         	goto	u2220
  3854   001458                     u2221:
  3855   001458  EF3C  F00A         	goto	l2470
  3856   00145C                     u2220:
  3857   00145C  C00C  FFD9         	movff	check_month@month,fsr2l
  3858   001460  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3859   001464  0E0B               	movlw	11
  3860   001466  18DE               	xorwf	postinc2,w,c
  3861   001468  10DE               	iorwf	postinc2,w,c
  3862   00146A  A4D8               	btfss	status,2,c
  3863   00146C  EF3A  F00A         	goto	u2231
  3864   001470  EF3C  F00A         	goto	u2230
  3865   001474                     u2231:
  3866   001474  EF59  F00A         	goto	l2476
  3867   001478                     u2230:
  3868   001478                     l2470:
  3869   001478  C00E  FFD9         	movff	check_month@month_day,fsr2l
  3870   00147C  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  3871   001480  0E1F               	movlw	31
  3872   001482  18DE               	xorwf	postinc2,w,c
  3873   001484  10DE               	iorwf	postinc2,w,c
  3874   001486  A4D8               	btfss	status,2,c
  3875   001488  EF48  F00A         	goto	u2241
  3876   00148C  EF4A  F00A         	goto	u2240
  3877   001490                     u2241:
  3878   001490  EF59  F00A         	goto	l2476
  3879   001494                     u2240:
  3880   001494                     
  3881                           ;../MonthTracker.c: 28:             *month_day = 1;
  3882   001494  C00E  FFD9         	movff	check_month@month_day,fsr2l
  3883   001498  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  3884   00149C  0E01               	movlw	1
  3885   00149E  6EDE               	movwf	postinc2,c
  3886   0014A0  0E00               	movlw	0
  3887   0014A2  6EDD               	movwf	postdec2,c
  3888   0014A4                     
  3889                           ;../MonthTracker.c: 29:             (*month)++;
  3890   0014A4  C00C  FFD9         	movff	check_month@month,fsr2l
  3891   0014A8  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3892   0014AC  2ADE               	incf	postinc2,f,c
  3893   0014AE  0E00               	movlw	0
  3894   0014B0  22DD               	addwfc	postdec2,f,c
  3895   0014B2                     l2476:
  3896                           
  3897                           ;../MonthTracker.c: 33:         if ((*year % 4 == 0 && *year % 100 != 0) || *year % 400 
      +                          == 0) {leap_year = 1;}
  3898   0014B2  C010  FFD9         	movff	check_month@year,fsr2l
  3899   0014B6  C011  FFDA         	movff	check_month@year+1,fsr2h
  3900   0014BA  CFDE F012          	movff	postinc2,??_check_month
  3901   0014BE  CFDD F013          	movff	postdec2,??_check_month+1
  3902   0014C2  0E03               	movlw	3
  3903   0014C4  1612               	andwf	??_check_month^0,f,c
  3904   0014C6  0E00               	movlw	0
  3905   0014C8  1613               	andwf	(??_check_month+1)^0,f,c
  3906   0014CA  5012               	movf	??_check_month^0,w,c
  3907   0014CC  1013               	iorwf	(??_check_month+1)^0,w,c
  3908   0014CE  A4D8               	btfss	status,2,c
  3909   0014D0  EF6C  F00A         	goto	u2251
  3910   0014D4  EF6E  F00A         	goto	u2250
  3911   0014D8                     u2251:
  3912   0014D8  EF85  F00A         	goto	l2480
  3913   0014DC                     u2250:
  3914   0014DC  C010  FFD9         	movff	check_month@year,fsr2l
  3915   0014E0  C011  FFDA         	movff	check_month@year+1,fsr2h
  3916   0014E4  CFDE F007          	movff	postinc2,___lwmod@dividend
  3917   0014E8  CFDD F008          	movff	postdec2,___lwmod@dividend+1
  3918   0014EC  0E00               	movlw	0
  3919   0014EE  6E0A               	movwf	(___lwmod@divisor+1)^0,c
  3920   0014F0  0E64               	movlw	100
  3921   0014F2  6E09               	movwf	___lwmod@divisor^0,c
  3922   0014F4  ECB7  F011         	call	___lwmod	;wreg free
  3923   0014F8  5007               	movf	?___lwmod^0,w,c
  3924   0014FA  1008               	iorwf	(?___lwmod+1)^0,w,c
  3925   0014FC  A4D8               	btfss	status,2,c
  3926   0014FE  EF83  F00A         	goto	u2261
  3927   001502  EF85  F00A         	goto	u2260
  3928   001506                     u2261:
  3929   001506  EF9C  F00A         	goto	l2482
  3930   00150A                     u2260:
  3931   00150A                     l2480:
  3932   00150A  C010  FFD9         	movff	check_month@year,fsr2l
  3933   00150E  C011  FFDA         	movff	check_month@year+1,fsr2h
  3934   001512  CFDE F007          	movff	postinc2,___lwmod@dividend
  3935   001516  CFDD F008          	movff	postdec2,___lwmod@dividend+1
  3936   00151A  0E01               	movlw	1
  3937   00151C  6E0A               	movwf	(___lwmod@divisor+1)^0,c
  3938   00151E  0E90               	movlw	144
  3939   001520  6E09               	movwf	___lwmod@divisor^0,c
  3940   001522  ECB7  F011         	call	___lwmod	;wreg free
  3941   001526  5007               	movf	?___lwmod^0,w,c
  3942   001528  1008               	iorwf	(?___lwmod+1)^0,w,c
  3943   00152A  A4D8               	btfss	status,2,c
  3944   00152C  EF9A  F00A         	goto	u2271
  3945   001530  EF9C  F00A         	goto	u2270
  3946   001534                     u2271:
  3947   001534  EFA2  F00A         	goto	l2484
  3948   001538                     u2270:
  3949   001538                     l2482:
  3950   001538  0E00               	movlw	0
  3951   00153A  6E15               	movwf	(check_month@leap_year+1)^0,c
  3952   00153C  0E01               	movlw	1
  3953   00153E  6E14               	movwf	check_month@leap_year^0,c
  3954   001540  EFA6  F00A         	goto	l2486
  3955   001544                     l2484:
  3956   001544  0E00               	movlw	0
  3957   001546  6E15               	movwf	(check_month@leap_year+1)^0,c
  3958   001548  0E00               	movlw	0
  3959   00154A  6E14               	movwf	check_month@leap_year^0,c
  3960   00154C                     l2486:
  3961                           
  3962                           ;../MonthTracker.c: 36:         if (*month == 2 && leap_year == 1){
  3963   00154C  C00C  FFD9         	movff	check_month@month,fsr2l
  3964   001550  C00D  FFDA         	movff	check_month@month+1,fsr2h
  3965   001554  0E02               	movlw	2
  3966   001556  18DE               	xorwf	postinc2,w,c
  3967   001558  10DE               	iorwf	postinc2,w,c
  3968   00155A  A4D8               	btfss	status,2,c
  3969   00155C  EFB2  F00A         	goto	u2281
  3970   001560  EFB4  F00A         	goto	u2280
  3971   001564                     u2281:
  3972   001564  EFDC  F00A         	goto	l2496
  3973   001568                     u2280:
  3974   001568  0414               	decf	check_month@leap_year^0,w,c
  3975   00156A  1015               	iorwf	(check_month@leap_year+1)^0,w,c
  3976   00156C  A4D8               	btfss	status,2,c
  3977   00156E  EFBB  F00A         	goto	u2291
  3978   001572  EFBD  F00A         	goto	u2290
  3979   001576                     u2291:
  3980   001576  EFDC  F00A         	goto	l2496
  3981   00157A                     u2290:
  3982   00157A                     
  3983                           ;../MonthTracker.c: 38:             if (*month_day == 30){
  3984   00157A  C00E  FFD9         	movff	check_month@month_day,fsr2l
  3985   00157E  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  3986   001582  0E1E               	movlw	30
  3987   001584  18DE               	xorwf	postinc2,w,c
  3988   001586  10DE               	iorwf	postinc2,w,c
  3989   001588  A4D8               	btfss	status,2,c
  3990   00158A  EFC9  F00A         	goto	u2301
  3991   00158E  EFCB  F00A         	goto	u2300
  3992   001592                     u2301:
  3993   001592  EF03  F00B         	goto	l257
  3994   001596                     u2300:
  3995   001596                     l2492:
  3996                           
  3997                           ;../MonthTracker.c: 39:                 *month_day = 1;
  3998   001596  C00E  FFD9         	movff	check_month@month_day,fsr2l
  3999   00159A  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  4000   00159E  0E01               	movlw	1
  4001   0015A0  6EDE               	movwf	postinc2,c
  4002   0015A2  0E00               	movlw	0
  4003   0015A4  6EDD               	movwf	postdec2,c
  4004   0015A6                     
  4005                           ;../MonthTracker.c: 40:                 (*month)++;
  4006   0015A6  C00C  FFD9         	movff	check_month@month,fsr2l
  4007   0015AA  C00D  FFDA         	movff	check_month@month+1,fsr2h
  4008   0015AE  2ADE               	incf	postinc2,f,c
  4009   0015B0  0E00               	movlw	0
  4010   0015B2  22DD               	addwfc	postdec2,f,c
  4011   0015B4  EF03  F00B         	goto	l257
  4012   0015B8                     l2496:
  4013   0015B8  C00C  FFD9         	movff	check_month@month,fsr2l
  4014   0015BC  C00D  FFDA         	movff	check_month@month+1,fsr2h
  4015   0015C0  0E02               	movlw	2
  4016   0015C2  18DE               	xorwf	postinc2,w,c
  4017   0015C4  10DE               	iorwf	postinc2,w,c
  4018   0015C6  A4D8               	btfss	status,2,c
  4019   0015C8  EFE8  F00A         	goto	u2311
  4020   0015CC  EFEA  F00A         	goto	u2310
  4021   0015D0                     u2311:
  4022   0015D0  EF03  F00B         	goto	l257
  4023   0015D4                     u2310:
  4024   0015D4  5014               	movf	check_month@leap_year^0,w,c
  4025   0015D6  1015               	iorwf	(check_month@leap_year+1)^0,w,c
  4026   0015D8  A4D8               	btfss	status,2,c
  4027   0015DA  EFF1  F00A         	goto	u2321
  4028   0015DE  EFF3  F00A         	goto	u2320
  4029   0015E2                     u2321:
  4030   0015E2  EF03  F00B         	goto	l257
  4031   0015E6                     u2320:
  4032   0015E6                     
  4033                           ;../MonthTracker.c: 44:             if (*month_day == 29){
  4034   0015E6  C00E  FFD9         	movff	check_month@month_day,fsr2l
  4035   0015EA  C00F  FFDA         	movff	check_month@month_day+1,fsr2h
  4036   0015EE  0E1D               	movlw	29
  4037   0015F0  18DE               	xorwf	postinc2,w,c
  4038   0015F2  10DE               	iorwf	postinc2,w,c
  4039   0015F4  A4D8               	btfss	status,2,c
  4040   0015F6  EFFF  F00A         	goto	u2331
  4041   0015FA  EF01  F00B         	goto	u2330
  4042   0015FE                     u2331:
  4043   0015FE  EF03  F00B         	goto	l257
  4044   001602                     u2330:
  4045   001602  EFCB  F00A         	goto	l2492
  4046   001606                     l257:
  4047   001606  0012               	return		;funcret
  4048   001608                     __end_of_check_month:
  4049                           	callstack 0
  4050                           
  4051 ;; *************** function ___lwmod *****************
  4052 ;; Defined at:
  4053 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwmod.c"
  4054 ;; Parameters:    Size  Location     Type
  4055 ;;  dividend        2    6[COMRAM] unsigned int 
  4056 ;;  divisor         2    8[COMRAM] unsigned int 
  4057 ;; Auto vars:     Size  Location     Type
  4058 ;;  counter         1   10[COMRAM] unsigned char 
  4059 ;; Return value:  Size  Location     Type
  4060 ;;                  2    6[COMRAM] unsigned int 
  4061 ;; Registers used:
  4062 ;;		wreg, status,2, status,0
  4063 ;; Tracked objects:
  4064 ;;		On entry : 0/0
  4065 ;;		On exit  : 0/0
  4066 ;;		Unchanged: 0/0
  4067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4068 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4069 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4071 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4072 ;;Total ram usage:        5 bytes
  4073 ;; Hardware stack levels used: 1
  4074 ;; Hardware stack levels required when called: 1
  4075 ;; This function calls:
  4076 ;;		Nothing
  4077 ;; This function is called by:
  4078 ;;		_main
  4079 ;;		_check_month
  4080 ;; This function uses a non-reentrant model
  4081 ;;
  4082                           
  4083                           	psect	text17
  4084   00236E                     __ptext17:
  4085                           	callstack 0
  4086   00236E                     ___lwmod:
  4087                           	callstack 28
  4088   00236E  5009               	movf	___lwmod@divisor^0,w,c
  4089   002370  100A               	iorwf	(___lwmod@divisor+1)^0,w,c
  4090   002372  B4D8               	btfsc	status,2,c
  4091   002374  EFBE  F011         	goto	u1951
  4092   002378  EFC0  F011         	goto	u1950
  4093   00237C                     u1951:
  4094   00237C  EFE4  F011         	goto	l822
  4095   002380                     u1950:
  4096   002380  0E01               	movlw	1
  4097   002382  6E0B               	movwf	___lwmod@counter^0,c
  4098   002384  EFC8  F011         	goto	l2300
  4099   002388                     l2298:
  4100   002388  90D8               	bcf	status,0,c
  4101   00238A  3609               	rlcf	___lwmod@divisor^0,f,c
  4102   00238C  360A               	rlcf	(___lwmod@divisor+1)^0,f,c
  4103   00238E  2A0B               	incf	___lwmod@counter^0,f,c
  4104   002390                     l2300:
  4105   002390  AE0A               	btfss	(___lwmod@divisor+1)^0,7,c
  4106   002392  EFCD  F011         	goto	u1961
  4107   002396  EFCF  F011         	goto	u1960
  4108   00239A                     u1961:
  4109   00239A  EFC4  F011         	goto	l2298
  4110   00239E                     u1960:
  4111   00239E                     l2302:
  4112   00239E  5009               	movf	___lwmod@divisor^0,w,c
  4113   0023A0  5C07               	subwf	___lwmod@dividend^0,w,c
  4114   0023A2  500A               	movf	(___lwmod@divisor+1)^0,w,c
  4115   0023A4  5808               	subwfb	(___lwmod@dividend+1)^0,w,c
  4116   0023A6  A0D8               	btfss	status,0,c
  4117   0023A8  EFD8  F011         	goto	u1971
  4118   0023AC  EFDA  F011         	goto	u1970
  4119   0023B0                     u1971:
  4120   0023B0  EFDE  F011         	goto	l2306
  4121   0023B4                     u1970:
  4122   0023B4  5009               	movf	___lwmod@divisor^0,w,c
  4123   0023B6  5E07               	subwf	___lwmod@dividend^0,f,c
  4124   0023B8  500A               	movf	(___lwmod@divisor+1)^0,w,c
  4125   0023BA  5A08               	subwfb	(___lwmod@dividend+1)^0,f,c
  4126   0023BC                     l2306:
  4127   0023BC  90D8               	bcf	status,0,c
  4128   0023BE  320A               	rrcf	(___lwmod@divisor+1)^0,f,c
  4129   0023C0  3209               	rrcf	___lwmod@divisor^0,f,c
  4130   0023C2  2E0B               	decfsz	___lwmod@counter^0,f,c
  4131   0023C4  EFCF  F011         	goto	l2302
  4132   0023C8                     l822:
  4133   0023C8  C007  F007         	movff	___lwmod@dividend,?___lwmod
  4134   0023CC  C008  F008         	movff	___lwmod@dividend+1,?___lwmod+1
  4135   0023D0  0012               	return		;funcret
  4136   0023D2                     __end_of___lwmod:
  4137                           	callstack 0
  4138                           
  4139 ;; *************** function ___lwdiv *****************
  4140 ;; Defined at:
  4141 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  4142 ;; Parameters:    Size  Location     Type
  4143 ;;  dividend        2    6[COMRAM] unsigned int 
  4144 ;;  divisor         2    8[COMRAM] unsigned int 
  4145 ;; Auto vars:     Size  Location     Type
  4146 ;;  quotient        2   10[COMRAM] unsigned int 
  4147 ;;  counter         1   12[COMRAM] unsigned char 
  4148 ;; Return value:  Size  Location     Type
  4149 ;;                  2    6[COMRAM] unsigned int 
  4150 ;; Registers used:
  4151 ;;		wreg, status,2, status,0
  4152 ;; Tracked objects:
  4153 ;;		On entry : 0/0
  4154 ;;		On exit  : 0/0
  4155 ;;		Unchanged: 0/0
  4156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4157 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4158 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4160 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4161 ;;Total ram usage:        7 bytes
  4162 ;; Hardware stack levels used: 1
  4163 ;; Hardware stack levels required when called: 1
  4164 ;; This function calls:
  4165 ;;		Nothing
  4166 ;; This function is called by:
  4167 ;;		_main
  4168 ;;		_LEDarray_disp_dec
  4169 ;;		_LEDarray_disp_PPM
  4170 ;;		_ADC2String
  4171 ;; This function uses a non-reentrant model
  4172 ;;
  4173                           
  4174                           	psect	text18
  4175   002292                     __ptext18:
  4176                           	callstack 0
  4177   002292                     ___lwdiv:
  4178                           	callstack 29
  4179   002292  0E00               	movlw	0
  4180   002294  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  4181   002296  0E00               	movlw	0
  4182   002298  6E0B               	movwf	___lwdiv@quotient^0,c
  4183   00229A  5009               	movf	___lwdiv@divisor^0,w,c
  4184   00229C  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4185   00229E  B4D8               	btfsc	status,2,c
  4186   0022A0  EF54  F011         	goto	u2341
  4187   0022A4  EF56  F011         	goto	u2340
  4188   0022A8                     u2341:
  4189   0022A8  EF7E  F011         	goto	l812
  4190   0022AC                     u2340:
  4191   0022AC  0E01               	movlw	1
  4192   0022AE  6E0D               	movwf	___lwdiv@counter^0,c
  4193   0022B0  EF5E  F011         	goto	l2518
  4194   0022B4                     l2516:
  4195   0022B4  90D8               	bcf	status,0,c
  4196   0022B6  3609               	rlcf	___lwdiv@divisor^0,f,c
  4197   0022B8  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4198   0022BA  2A0D               	incf	___lwdiv@counter^0,f,c
  4199   0022BC                     l2518:
  4200   0022BC  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  4201   0022BE  EF63  F011         	goto	u2351
  4202   0022C2  EF65  F011         	goto	u2350
  4203   0022C6                     u2351:
  4204   0022C6  EF5A  F011         	goto	l2516
  4205   0022CA                     u2350:
  4206   0022CA                     l2520:
  4207   0022CA  90D8               	bcf	status,0,c
  4208   0022CC  360B               	rlcf	___lwdiv@quotient^0,f,c
  4209   0022CE  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4210   0022D0  5009               	movf	___lwdiv@divisor^0,w,c
  4211   0022D2  5C07               	subwf	___lwdiv@dividend^0,w,c
  4212   0022D4  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  4213   0022D6  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4214   0022D8  A0D8               	btfss	status,0,c
  4215   0022DA  EF71  F011         	goto	u2361
  4216   0022DE  EF73  F011         	goto	u2360
  4217   0022E2                     u2361:
  4218   0022E2  EF78  F011         	goto	l2528
  4219   0022E6                     u2360:
  4220   0022E6  5009               	movf	___lwdiv@divisor^0,w,c
  4221   0022E8  5E07               	subwf	___lwdiv@dividend^0,f,c
  4222   0022EA  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  4223   0022EC  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4224   0022EE  800B               	bsf	___lwdiv@quotient^0,0,c
  4225   0022F0                     l2528:
  4226   0022F0  90D8               	bcf	status,0,c
  4227   0022F2  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4228   0022F4  3209               	rrcf	___lwdiv@divisor^0,f,c
  4229   0022F6  2E0D               	decfsz	___lwdiv@counter^0,f,c
  4230   0022F8  EF65  F011         	goto	l2520
  4231   0022FC                     l812:
  4232   0022FC  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  4233   002300  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4234   002304  0012               	return		;funcret
  4235   002306                     __end_of___lwdiv:
  4236                           	callstack 0
  4237                           
  4238 ;; *************** function _Timer0_init *****************
  4239 ;; Defined at:
  4240 ;;		line 7 in file "../timers.c"
  4241 ;; Parameters:    Size  Location     Type
  4242 ;;		None
  4243 ;; Auto vars:     Size  Location     Type
  4244 ;;		None
  4245 ;; Return value:  Size  Location     Type
  4246 ;;                  1    wreg      void 
  4247 ;; Registers used:
  4248 ;;		wreg, status,2
  4249 ;; Tracked objects:
  4250 ;;		On entry : 0/0
  4251 ;;		On exit  : 0/0
  4252 ;;		Unchanged: 0/0
  4253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4258 ;;Total ram usage:        0 bytes
  4259 ;; Hardware stack levels used: 1
  4260 ;; Hardware stack levels required when called: 1
  4261 ;; This function calls:
  4262 ;;		Nothing
  4263 ;; This function is called by:
  4264 ;;		_main
  4265 ;; This function uses a non-reentrant model
  4266 ;;
  4267                           
  4268                           	psect	text19
  4269   0026A6                     __ptext19:
  4270                           	callstack 0
  4271   0026A6                     _Timer0_init:
  4272                           	callstack 29
  4273   0026A6                     
  4274                           ;../timers.c: 9:     T0CON1bits.T0CS=0b010;
  4275   0026A6  50D6               	movf	214,w,c	;volatile
  4276   0026A8  0B1F               	andlw	-225
  4277   0026AA  0940               	iorlw	64
  4278   0026AC  6ED6               	movwf	214,c	;volatile
  4279   0026AE                     
  4280                           ;../timers.c: 10:     T0CON1bits.T0ASYNC=1;
  4281   0026AE  88D6               	bsf	214,4,c	;volatile
  4282                           
  4283                           ;../timers.c: 11:     T0CON1bits.T0CKPS=0b0010;
  4284   0026B0  50D6               	movf	214,w,c	;volatile
  4285   0026B2  0BF0               	andlw	-16
  4286   0026B4  0902               	iorlw	2
  4287   0026B6  6ED6               	movwf	214,c	;volatile
  4288   0026B8                     
  4289                           ;../timers.c: 12:     T0CON0bits.T016BIT=1;
  4290   0026B8  88D5               	bsf	213,4,c	;volatile
  4291                           
  4292                           ;../timers.c: 15:     TMR0H=0b00001011;
  4293   0026BA  0E0B               	movlw	11
  4294   0026BC  6ED4               	movwf	212,c	;volatile
  4295                           
  4296                           ;../timers.c: 16:     TMR0L=0b00001011;
  4297   0026BE  0E0B               	movlw	11
  4298   0026C0  6ED3               	movwf	211,c	;volatile
  4299   0026C2                     
  4300                           ;../timers.c: 17:     T0CON0bits.T0EN=1;
  4301   0026C2  8ED5               	bsf	213,7,c	;volatile
  4302   0026C4  0012               	return		;funcret
  4303   0026C6                     __end_of_Timer0_init:
  4304                           	callstack 0
  4305                           
  4306 ;; *************** function _Light_init *****************
  4307 ;; Defined at:
  4308 ;;		line 8 in file "../comparator.c"
  4309 ;; Parameters:    Size  Location     Type
  4310 ;;		None
  4311 ;; Auto vars:     Size  Location     Type
  4312 ;;		None
  4313 ;; Return value:  Size  Location     Type
  4314 ;;                  1    wreg      void 
  4315 ;; Registers used:
  4316 ;;		None
  4317 ;; Tracked objects:
  4318 ;;		On entry : 0/0
  4319 ;;		On exit  : 0/0
  4320 ;;		Unchanged: 0/0
  4321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4326 ;;Total ram usage:        0 bytes
  4327 ;; Hardware stack levels used: 1
  4328 ;; Hardware stack levels required when called: 1
  4329 ;; This function calls:
  4330 ;;		Nothing
  4331 ;; This function is called by:
  4332 ;;		_main
  4333 ;; This function uses a non-reentrant model
  4334 ;;
  4335                           
  4336                           	psect	text20
  4337   002726                     __ptext20:
  4338                           	callstack 0
  4339   002726                     _Light_init:
  4340                           	callstack 29
  4341   002726                     
  4342                           ;../comparator.c: 10:    LATHbits.LATH3=1;
  4343   002726  8680               	bsf	128,3,c	;volatile
  4344                           
  4345                           ;../comparator.c: 11:    TRISHbits.TRISH3=0;
  4346   002728  9688               	bcf	136,3,c	;volatile
  4347   00272A  0012               	return		;funcret
  4348   00272C                     __end_of_Light_init:
  4349                           	callstack 0
  4350                           
  4351 ;; *************** function _LEDarray_init *****************
  4352 ;; Defined at:
  4353 ;;		line 8 in file "../LEDarray.c"
  4354 ;; Parameters:    Size  Location     Type
  4355 ;;		None
  4356 ;; Auto vars:     Size  Location     Type
  4357 ;;		None
  4358 ;; Return value:  Size  Location     Type
  4359 ;;                  1    wreg      void 
  4360 ;; Registers used:
  4361 ;;		None
  4362 ;; Tracked objects:
  4363 ;;		On entry : 0/0
  4364 ;;		On exit  : 0/0
  4365 ;;		Unchanged: 0/0
  4366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4371 ;;Total ram usage:        0 bytes
  4372 ;; Hardware stack levels used: 1
  4373 ;; Hardware stack levels required when called: 1
  4374 ;; This function calls:
  4375 ;;		Nothing
  4376 ;; This function is called by:
  4377 ;;		_main
  4378 ;; This function uses a non-reentrant model
  4379 ;;
  4380                           
  4381                           	psect	text21
  4382   002684                     __ptext21:
  4383                           	callstack 0
  4384   002684                     _LEDarray_init:
  4385                           	callstack 29
  4386   002684                     
  4387                           ;../LEDarray.c: 9:     TRISGbits.TRISG0 = 0;
  4388   002684  9087               	bcf	135,0,c	;volatile
  4389                           
  4390                           ;../LEDarray.c: 10:     TRISGbits.TRISG1 = 0;
  4391   002686  9287               	bcf	135,1,c	;volatile
  4392                           
  4393                           ;../LEDarray.c: 11:     TRISAbits.TRISA2 = 0;
  4394   002688  9481               	bcf	129,2,c	;volatile
  4395                           
  4396                           ;../LEDarray.c: 12:     TRISFbits.TRISF6 = 0;
  4397   00268A  9C86               	bcf	134,6,c	;volatile
  4398                           
  4399                           ;../LEDarray.c: 13:     TRISAbits.TRISA4 = 0;
  4400   00268C  9881               	bcf	129,4,c	;volatile
  4401                           
  4402                           ;../LEDarray.c: 14:     TRISAbits.TRISA5 = 0;
  4403   00268E  9A81               	bcf	129,5,c	;volatile
  4404                           
  4405                           ;../LEDarray.c: 15:     TRISFbits.TRISF0 = 0;
  4406   002690  9086               	bcf	134,0,c	;volatile
  4407                           
  4408                           ;../LEDarray.c: 16:     TRISBbits.TRISB0 = 0;
  4409   002692  9082               	bcf	130,0,c	;volatile
  4410                           
  4411                           ;../LEDarray.c: 18:     LATGbits.LATG0 = 0;
  4412   002694  907F               	bcf	127,0,c	;volatile
  4413                           
  4414                           ;../LEDarray.c: 19:     LATGbits.LATG1 = 0;
  4415   002696  927F               	bcf	127,1,c	;volatile
  4416                           
  4417                           ;../LEDarray.c: 20:     LATAbits.LATA2 = 0;
  4418   002698  9479               	bcf	121,2,c	;volatile
  4419                           
  4420                           ;../LEDarray.c: 21:     LATFbits.LATF6 = 0;
  4421   00269A  9C7E               	bcf	126,6,c	;volatile
  4422                           
  4423                           ;../LEDarray.c: 22:     LATAbits.LATA4 = 0;
  4424   00269C  9879               	bcf	121,4,c	;volatile
  4425                           
  4426                           ;../LEDarray.c: 23:     LATAbits.LATA5 = 0;
  4427   00269E  9A79               	bcf	121,5,c	;volatile
  4428                           
  4429                           ;../LEDarray.c: 24:     LATFbits.LATF0 = 0;
  4430   0026A0  907E               	bcf	126,0,c	;volatile
  4431                           
  4432                           ;../LEDarray.c: 25:     LATBbits.LATB0 = 0;
  4433   0026A2  907A               	bcf	122,0,c	;volatile
  4434   0026A4  0012               	return		;funcret
  4435   0026A6                     __end_of_LEDarray_init:
  4436                           	callstack 0
  4437                           
  4438 ;; *************** function _LEDarray_disp_bin *****************
  4439 ;; Defined at:
  4440 ;;		line 37 in file "../LEDarray.c"
  4441 ;; Parameters:    Size  Location     Type
  4442 ;;  number          2    0[COMRAM] unsigned int 
  4443 ;; Auto vars:     Size  Location     Type
  4444 ;;		None
  4445 ;; Return value:  Size  Location     Type
  4446 ;;                  1    wreg      void 
  4447 ;; Registers used:
  4448 ;;		None
  4449 ;; Tracked objects:
  4450 ;;		On entry : 0/0
  4451 ;;		On exit  : 0/0
  4452 ;;		Unchanged: 0/0
  4453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4454 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4457 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4458 ;;Total ram usage:        2 bytes
  4459 ;; Hardware stack levels used: 1
  4460 ;; Hardware stack levels required when called: 1
  4461 ;; This function calls:
  4462 ;;		Nothing
  4463 ;; This function is called by:
  4464 ;;		_main
  4465 ;;		_LEDarray_disp_dec
  4466 ;;		_LEDarray_disp_PPM
  4467 ;; This function uses a non-reentrant model
  4468 ;;
  4469                           
  4470                           	psect	text22
  4471   00208A                     __ptext22:
  4472                           	callstack 0
  4473   00208A                     _LEDarray_disp_bin:
  4474                           	callstack 29
  4475   00208A                     
  4476                           ;../LEDarray.c: 38:     if (number & 0b000000001) {LATGbits.LATG0=1;} else {LATGbits.LAT
      +                          G0=0;}
  4477   00208A  A001               	btfss	LEDarray_disp_bin@number^0,0,c
  4478   00208C  EF4A  F010         	goto	u1991
  4479   002090  EF4C  F010         	goto	u1990
  4480   002094                     u1991:
  4481   002094  EF4F  F010         	goto	l48
  4482   002098                     u1990:
  4483   002098  807F               	bsf	127,0,c	;volatile
  4484   00209A  EF50  F010         	goto	l49
  4485   00209E                     l48:
  4486   00209E  907F               	bcf	127,0,c	;volatile
  4487   0020A0                     l49:
  4488                           
  4489                           ;../LEDarray.c: 39:     if (number & 0b000000010) {LATGbits.LATG1=1;} else {LATGbits.LAT
      +                          G1=0;}
  4490   0020A0  A201               	btfss	LEDarray_disp_bin@number^0,1,c
  4491   0020A2  EF55  F010         	goto	u2001
  4492   0020A6  EF57  F010         	goto	u2000
  4493   0020AA                     u2001:
  4494   0020AA  EF5A  F010         	goto	l50
  4495   0020AE                     u2000:
  4496   0020AE  827F               	bsf	127,1,c	;volatile
  4497   0020B0  EF5B  F010         	goto	l51
  4498   0020B4                     l50:
  4499   0020B4  927F               	bcf	127,1,c	;volatile
  4500   0020B6                     l51:
  4501                           
  4502                           ;../LEDarray.c: 40:     if (number & 0b000000100) {LATAbits.LATA2=1;} else {LATAbits.LAT
      +                          A2=0;}
  4503   0020B6  A401               	btfss	LEDarray_disp_bin@number^0,2,c
  4504   0020B8  EF60  F010         	goto	u2011
  4505   0020BC  EF62  F010         	goto	u2010
  4506   0020C0                     u2011:
  4507   0020C0  EF65  F010         	goto	l52
  4508   0020C4                     u2010:
  4509   0020C4  8479               	bsf	121,2,c	;volatile
  4510   0020C6  EF66  F010         	goto	l53
  4511   0020CA                     l52:
  4512   0020CA  9479               	bcf	121,2,c	;volatile
  4513   0020CC                     l53:
  4514                           
  4515                           ;../LEDarray.c: 41:     if (number & 0b000001000) {LATFbits.LATF6=1;} else {LATFbits.LAT
      +                          F6=0;}
  4516   0020CC  A601               	btfss	LEDarray_disp_bin@number^0,3,c
  4517   0020CE  EF6B  F010         	goto	u2021
  4518   0020D2  EF6D  F010         	goto	u2020
  4519   0020D6                     u2021:
  4520   0020D6  EF70  F010         	goto	l54
  4521   0020DA                     u2020:
  4522   0020DA  8C7E               	bsf	126,6,c	;volatile
  4523   0020DC  EF71  F010         	goto	l55
  4524   0020E0                     l54:
  4525   0020E0  9C7E               	bcf	126,6,c	;volatile
  4526   0020E2                     l55:
  4527                           
  4528                           ;../LEDarray.c: 42:     if (number & 0b000010000) {LATAbits.LATA4=1;} else {LATAbits.LAT
      +                          A4=0;}
  4529   0020E2  A801               	btfss	LEDarray_disp_bin@number^0,4,c
  4530   0020E4  EF76  F010         	goto	u2031
  4531   0020E8  EF78  F010         	goto	u2030
  4532   0020EC                     u2031:
  4533   0020EC  EF7B  F010         	goto	l56
  4534   0020F0                     u2030:
  4535   0020F0  8879               	bsf	121,4,c	;volatile
  4536   0020F2  EF7C  F010         	goto	l57
  4537   0020F6                     l56:
  4538   0020F6  9879               	bcf	121,4,c	;volatile
  4539   0020F8                     l57:
  4540                           
  4541                           ;../LEDarray.c: 43:     if (number & 0b000100000) {LATAbits.LATA5=1;} else {LATAbits.LAT
      +                          A5=0;}
  4542   0020F8  AA01               	btfss	LEDarray_disp_bin@number^0,5,c
  4543   0020FA  EF81  F010         	goto	u2041
  4544   0020FE  EF83  F010         	goto	u2040
  4545   002102                     u2041:
  4546   002102  EF86  F010         	goto	l58
  4547   002106                     u2040:
  4548   002106  8A79               	bsf	121,5,c	;volatile
  4549   002108  EF87  F010         	goto	l59
  4550   00210C                     l58:
  4551   00210C  9A79               	bcf	121,5,c	;volatile
  4552   00210E                     l59:
  4553                           
  4554                           ;../LEDarray.c: 44:     if (number & 0b001000000) {LATFbits.LATF0=1;} else {LATFbits.LAT
      +                          F0=0;}
  4555   00210E  AC01               	btfss	LEDarray_disp_bin@number^0,6,c
  4556   002110  EF8C  F010         	goto	u2051
  4557   002114  EF8E  F010         	goto	u2050
  4558   002118                     u2051:
  4559   002118  EF91  F010         	goto	l60
  4560   00211C                     u2050:
  4561   00211C  807E               	bsf	126,0,c	;volatile
  4562   00211E  EF92  F010         	goto	l61
  4563   002122                     l60:
  4564   002122  907E               	bcf	126,0,c	;volatile
  4565   002124                     l61:
  4566                           
  4567                           ;../LEDarray.c: 45:     if (number & 0b010000000) {LATBbits.LATB0=1;} else {LATBbits.LAT
      +                          B0=0;}
  4568   002124  AE01               	btfss	LEDarray_disp_bin@number^0,7,c
  4569   002126  EF97  F010         	goto	u2061
  4570   00212A  EF99  F010         	goto	u2060
  4571   00212E                     u2061:
  4572   00212E  EF9C  F010         	goto	l62
  4573   002132                     u2060:
  4574   002132  807A               	bsf	122,0,c	;volatile
  4575   002134  EF9D  F010         	goto	l63
  4576   002138                     l62:
  4577   002138  907A               	bcf	122,0,c	;volatile
  4578   00213A                     l63:
  4579                           
  4580                           ;../LEDarray.c: 46:     if (number & 0b100000000) {LATBbits.LATB1=1;} else {LATBbits.LAT
      +                          B1=0;}
  4581   00213A  A002               	btfss	(LEDarray_disp_bin@number+1)^0,0,c
  4582   00213C  EFA2  F010         	goto	u2071
  4583   002140  EFA4  F010         	goto	u2070
  4584   002144                     u2071:
  4585   002144  EFA7  F010         	goto	l64
  4586   002148                     u2070:
  4587   002148  827A               	bsf	122,1,c	;volatile
  4588   00214A  EFA8  F010         	goto	l66
  4589   00214E                     l64:
  4590   00214E  927A               	bcf	122,1,c	;volatile
  4591   002150                     l66:
  4592   002150  0012               	return		;funcret
  4593   002152                     __end_of_LEDarray_disp_bin:
  4594                           	callstack 0
  4595                           
  4596 ;; *************** function _LCD_setline *****************
  4597 ;; Defined at:
  4598 ;;		line 96 in file "../LCD.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;  line            1    wreg     unsigned char 
  4601 ;; Auto vars:     Size  Location     Type
  4602 ;;  line            1    3[COMRAM] unsigned char 
  4603 ;; Return value:  Size  Location     Type
  4604 ;;                  1    wreg      void 
  4605 ;; Registers used:
  4606 ;;		wreg, status,2, status,0, cstack
  4607 ;; Tracked objects:
  4608 ;;		On entry : 0/0
  4609 ;;		On exit  : 0/0
  4610 ;;		Unchanged: 0/0
  4611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4613 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4615 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4616 ;;Total ram usage:        1 bytes
  4617 ;; Hardware stack levels used: 1
  4618 ;; Hardware stack levels required when called: 4
  4619 ;; This function calls:
  4620 ;;		_LCD_sendbyte
  4621 ;; This function is called by:
  4622 ;;		_main
  4623 ;; This function uses a non-reentrant model
  4624 ;;
  4625                           
  4626                           	psect	text23
  4627   002540                     __ptext23:
  4628                           	callstack 0
  4629   002540                     _LCD_setline:
  4630                           	callstack 26
  4631                           
  4632                           ;incstack = 0
  4633                           ;LCD_setline@line stored from wreg
  4634   002540  6E04               	movwf	LCD_setline@line^0,c
  4635   002542                     
  4636                           ;../LCD.c: 96: void LCD_setline (char line);../LCD.c: 97: {;../LCD.c: 98:     if (line =
      +                          = 1) {LCD_sendbyte(0x80,0);};
  4637   002542  0404               	decf	LCD_setline@line^0,w,c
  4638   002544  A4D8               	btfss	status,2,c
  4639   002546  EFA7  F012         	goto	u2081
  4640   00254A  EFA9  F012         	goto	u2080
  4641   00254E                     u2081:
  4642   00254E  EFAE  F012         	goto	l2410
  4643   002552                     u2080:
  4644   002552  0E00               	movlw	0
  4645   002554  6E02               	movwf	LCD_sendbyte@type^0,c
  4646   002556  0E80               	movlw	128
  4647   002558  ECBD  F012         	call	_LCD_sendbyte
  4648   00255C                     l2410:
  4649                           
  4650                           ;../LCD.c: 99:     if (line == 2) {LCD_sendbyte(0xC0,0);}
  4651   00255C  0E02               	movlw	2
  4652   00255E  1804               	xorwf	LCD_setline@line^0,w,c
  4653   002560  A4D8               	btfss	status,2,c
  4654   002562  EFB5  F012         	goto	u2091
  4655   002566  EFB7  F012         	goto	u2090
  4656   00256A                     u2091:
  4657   00256A  EFBC  F012         	goto	l303
  4658   00256E                     u2090:
  4659   00256E  0E00               	movlw	0
  4660   002570  6E02               	movwf	LCD_sendbyte@type^0,c
  4661   002572  0EC0               	movlw	192
  4662   002574  ECBD  F012         	call	_LCD_sendbyte
  4663   002578                     l303:
  4664   002578  0012               	return		;funcret
  4665   00257A                     __end_of_LCD_setline:
  4666                           	callstack 0
  4667                           
  4668 ;; *************** function _LCD_sendstring *****************
  4669 ;; Defined at:
  4670 ;;		line 105 in file "../LCD.c"
  4671 ;; Parameters:    Size  Location     Type
  4672 ;;  string          2    3[COMRAM] PTR unsigned char 
  4673 ;;		 -> main@yearstr(20), main@datestr(50), 
  4674 ;; Auto vars:     Size  Location     Type
  4675 ;;		None
  4676 ;; Return value:  Size  Location     Type
  4677 ;;                  1    wreg      void 
  4678 ;; Registers used:
  4679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4680 ;; Tracked objects:
  4681 ;;		On entry : 0/0
  4682 ;;		On exit  : 0/0
  4683 ;;		Unchanged: 0/0
  4684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4685 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4688 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4689 ;;Total ram usage:        2 bytes
  4690 ;; Hardware stack levels used: 1
  4691 ;; Hardware stack levels required when called: 4
  4692 ;; This function calls:
  4693 ;;		_LCD_sendbyte
  4694 ;; This function is called by:
  4695 ;;		_main
  4696 ;; This function uses a non-reentrant model
  4697 ;;
  4698                           
  4699                           	psect	text24
  4700   0025B0                     __ptext24:
  4701                           	callstack 0
  4702   0025B0                     _LCD_sendstring:
  4703                           	callstack 26
  4704   0025B0                     
  4705                           ;../LCD.c: 105: void LCD_sendstring(char *string);../LCD.c: 106: {;../LCD.c: 107:  while
      +                          (*string != 0) {
  4706   0025B0  EFE5  F012         	goto	l2432
  4707   0025B4                     l2428:
  4708                           
  4709                           ;../LCD.c: 108:         LCD_sendbyte(*string++,1);
  4710   0025B4  0E01               	movlw	1
  4711   0025B6  6E02               	movwf	LCD_sendbyte@type^0,c
  4712   0025B8  C004  FFD9         	movff	LCD_sendstring@string,fsr2l
  4713   0025BC  C005  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  4714   0025C0  50DF               	movf	indf2,w,c
  4715   0025C2  ECBD  F012         	call	_LCD_sendbyte
  4716   0025C6  4A04               	infsnz	LCD_sendstring@string^0,f,c
  4717   0025C8  2A05               	incf	(LCD_sendstring@string+1)^0,f,c
  4718   0025CA                     l2432:
  4719                           
  4720                           ;../LCD.c: 107:  while(*string != 0) {
  4721   0025CA  C004  FFD9         	movff	LCD_sendstring@string,fsr2l
  4722   0025CE  C005  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  4723   0025D2  50DF               	movf	indf2,w,c
  4724   0025D4  A4D8               	btfss	status,2,c
  4725   0025D6  EFEF  F012         	goto	u2101
  4726   0025DA  EFF1  F012         	goto	u2100
  4727   0025DE                     u2101:
  4728   0025DE  EFDA  F012         	goto	l2428
  4729   0025E2                     u2100:
  4730   0025E2  0012               	return		;funcret
  4731   0025E4                     __end_of_LCD_sendstring:
  4732                           	callstack 0
  4733                           
  4734 ;; *************** function _LCD_clear *****************
  4735 ;; Defined at:
  4736 ;;		line 87 in file "../LCD.c"
  4737 ;; Parameters:    Size  Location     Type
  4738 ;;		None
  4739 ;; Auto vars:     Size  Location     Type
  4740 ;;		None
  4741 ;; Return value:  Size  Location     Type
  4742 ;;                  1    wreg      void 
  4743 ;; Registers used:
  4744 ;;		wreg, status,2, status,0, cstack
  4745 ;; Tracked objects:
  4746 ;;		On entry : 0/0
  4747 ;;		On exit  : 0/0
  4748 ;;		Unchanged: 0/0
  4749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4752 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4753 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4754 ;;Total ram usage:        1 bytes
  4755 ;; Hardware stack levels used: 1
  4756 ;; Hardware stack levels required when called: 4
  4757 ;; This function calls:
  4758 ;;		_LCD_sendbyte
  4759 ;; This function is called by:
  4760 ;;		_main
  4761 ;; This function uses a non-reentrant model
  4762 ;;
  4763                           
  4764                           	psect	text25
  4765   0026C6                     __ptext25:
  4766                           	callstack 0
  4767   0026C6                     _LCD_clear:
  4768                           	callstack 26
  4769   0026C6                     
  4770                           ;../LCD.c: 89:     LCD_sendbyte(0b00000001,0);
  4771   0026C6  0E00               	movlw	0
  4772   0026C8  6E02               	movwf	LCD_sendbyte@type^0,c
  4773   0026CA  0E01               	movlw	1
  4774   0026CC  ECBD  F012         	call	_LCD_sendbyte
  4775   0026D0                     
  4776                           ;../LCD.c: 90:     _delay((unsigned long)((2)*(64000000/4000.0)));
  4777   0026D0  0E2A               	movlw	42
  4778   0026D2  6E04               	movwf	??_LCD_clear^0,c
  4779   0026D4  0E8E               	movlw	142
  4780   0026D6                     u2767:
  4781   0026D6  2EE8               	decfsz	wreg,f,c
  4782   0026D8  D7FE               	bra	u2767
  4783   0026DA  2E04               	decfsz	??_LCD_clear^0,f,c
  4784   0026DC  D7FC               	bra	u2767
  4785   0026DE  0012               	return		;funcret
  4786   0026E0                     __end_of_LCD_clear:
  4787                           	callstack 0
  4788                           
  4789 ;; *************** function _LCD_Init *****************
  4790 ;; Defined at:
  4791 ;;		line 48 in file "../LCD.c"
  4792 ;; Parameters:    Size  Location     Type
  4793 ;;		None
  4794 ;; Auto vars:     Size  Location     Type
  4795 ;;		None
  4796 ;; Return value:  Size  Location     Type
  4797 ;;                  1    wreg      void 
  4798 ;; Registers used:
  4799 ;;		wreg, status,2, status,0, cstack
  4800 ;; Tracked objects:
  4801 ;;		On entry : 0/0
  4802 ;;		On exit  : 0/0
  4803 ;;		Unchanged: 0/0
  4804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4807 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4808 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4809 ;;Total ram usage:        2 bytes
  4810 ;; Hardware stack levels used: 1
  4811 ;; Hardware stack levels required when called: 4
  4812 ;; This function calls:
  4813 ;;		_LCD_sendbyte
  4814 ;;		_LCD_sendnibble
  4815 ;; This function is called by:
  4816 ;;		_main
  4817 ;; This function uses a non-reentrant model
  4818 ;;
  4819                           
  4820                           	psect	text26
  4821   0021FC                     __ptext26:
  4822                           	callstack 0
  4823   0021FC                     _LCD_Init:
  4824                           	callstack 26
  4825   0021FC                     
  4826                           ;../LCD.c: 51:     TRISCbits.TRISC6 = 0;
  4827   0021FC  9C83               	bcf	131,6,c	;volatile
  4828                           
  4829                           ;../LCD.c: 52:     TRISCbits.TRISC2 = 0;
  4830   0021FE  9483               	bcf	131,2,c	;volatile
  4831                           
  4832                           ;../LCD.c: 53:     TRISBbits.TRISB3 = 0;
  4833   002200  9682               	bcf	130,3,c	;volatile
  4834                           
  4835                           ;../LCD.c: 54:     TRISBbits.TRISB2 = 0;
  4836   002202  9482               	bcf	130,2,c	;volatile
  4837                           
  4838                           ;../LCD.c: 55:     TRISEbits.TRISE3 = 0;
  4839   002204  9685               	bcf	133,3,c	;volatile
  4840                           
  4841                           ;../LCD.c: 56:     TRISEbits.TRISE1 = 0;
  4842   002206  9285               	bcf	133,1,c	;volatile
  4843                           
  4844                           ;../LCD.c: 58:     LATCbits.LATC6 = 0;
  4845   002208  9C7B               	bcf	123,6,c	;volatile
  4846                           
  4847                           ;../LCD.c: 59:     LATCbits.LATC2 = 0;
  4848   00220A  947B               	bcf	123,2,c	;volatile
  4849                           
  4850                           ;../LCD.c: 60:     LATBbits.LATB3 = 0;
  4851   00220C  967A               	bcf	122,3,c	;volatile
  4852                           
  4853                           ;../LCD.c: 61:     LATBbits.LATB2 = 0;
  4854   00220E  947A               	bcf	122,2,c	;volatile
  4855                           
  4856                           ;../LCD.c: 62:     LATEbits.LATE3 = 0;
  4857   002210  967D               	bcf	125,3,c	;volatile
  4858                           
  4859                           ;../LCD.c: 63:     LATEbits.LATE1 = 0;
  4860   002212  927D               	bcf	125,1,c	;volatile
  4861   002214                     
  4862                           ;../LCD.c: 66:  _delay((unsigned long)((50)*(64000000/4000.0)));
  4863   002214  0E05               	movlw	5
  4864   002216  6E05               	movwf	(??_LCD_Init+1)^0,c
  4865   002218  0E0F               	movlw	15
  4866   00221A  6E04               	movwf	??_LCD_Init^0,c
  4867   00221C  0EF1               	movlw	241
  4868   00221E                     u2777:
  4869   00221E  2EE8               	decfsz	wreg,f,c
  4870   002220  D7FE               	bra	u2777
  4871   002222  2E04               	decfsz	??_LCD_Init^0,f,c
  4872   002224  D7FC               	bra	u2777
  4873   002226  2E05               	decfsz	(??_LCD_Init+1)^0,f,c
  4874   002228  D7FA               	bra	u2777
  4875   00222A  F000               	nop	
  4876   00222C                     
  4877                           ;../LCD.c: 67:  LCD_sendnibble(0b0011);
  4878   00222C  0E03               	movlw	3
  4879   00222E  EC83  F011         	call	_LCD_sendnibble
  4880   002232                     
  4881                           ;../LCD.c: 68:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  4882   002232  0EF0               	movlw	240
  4883   002234                     u2787:
  4884   002234  2EE8               	decfsz	wreg,f,c
  4885   002236  D7FE               	bra	u2787
  4886                           
  4887                           ;../LCD.c: 69:     LCD_sendnibble(0b0010);
  4888   002238  0E02               	movlw	2
  4889   00223A  EC83  F011         	call	_LCD_sendnibble
  4890   00223E                     
  4891                           ;../LCD.c: 70:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  4892   00223E  0EF0               	movlw	240
  4893   002240                     u2797:
  4894   002240  2EE8               	decfsz	wreg,f,c
  4895   002242  D7FE               	bra	u2797
  4896   002244                     
  4897                           ;../LCD.c: 71:     LCD_sendbyte(0b00101000,0);
  4898   002244  0E00               	movlw	0
  4899   002246  6E02               	movwf	LCD_sendbyte@type^0,c
  4900   002248  0E28               	movlw	40
  4901   00224A  ECBD  F012         	call	_LCD_sendbyte
  4902   00224E                     
  4903                           ;../LCD.c: 72:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  4904   00224E  0EF0               	movlw	240
  4905   002250                     u2807:
  4906   002250  2EE8               	decfsz	wreg,f,c
  4907   002252  D7FE               	bra	u2807
  4908   002254                     
  4909                           ;../LCD.c: 74:     LCD_sendbyte(0b00001000,0);
  4910   002254  0E00               	movlw	0
  4911   002256  6E02               	movwf	LCD_sendbyte@type^0,c
  4912   002258  0E08               	movlw	8
  4913   00225A  ECBD  F012         	call	_LCD_sendbyte
  4914   00225E                     
  4915                           ;../LCD.c: 75:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  4916   00225E  0EF0               	movlw	240
  4917   002260                     u2817:
  4918   002260  2EE8               	decfsz	wreg,f,c
  4919   002262  D7FE               	bra	u2817
  4920   002264                     
  4921                           ;../LCD.c: 76:     LCD_sendbyte(0b00000001,0);
  4922   002264  0E00               	movlw	0
  4923   002266  6E02               	movwf	LCD_sendbyte@type^0,c
  4924   002268  0E01               	movlw	1
  4925   00226A  ECBD  F012         	call	_LCD_sendbyte
  4926   00226E                     
  4927                           ;../LCD.c: 77:     _delay((unsigned long)((2)*(64000000/4000.0)));
  4928   00226E  0E2A               	movlw	42
  4929   002270  6E04               	movwf	??_LCD_Init^0,c
  4930   002272  0E8E               	movlw	142
  4931   002274                     u2827:
  4932   002274  2EE8               	decfsz	wreg,f,c
  4933   002276  D7FE               	bra	u2827
  4934   002278  2E04               	decfsz	??_LCD_Init^0,f,c
  4935   00227A  D7FC               	bra	u2827
  4936   00227C                     
  4937                           ;../LCD.c: 78:     LCD_sendbyte(0b0000110,0);
  4938   00227C  0E00               	movlw	0
  4939   00227E  6E02               	movwf	LCD_sendbyte@type^0,c
  4940   002280  0E06               	movlw	6
  4941   002282  ECBD  F012         	call	_LCD_sendbyte
  4942   002286                     
  4943                           ;../LCD.c: 81:     LCD_sendbyte(0b00001100,0);
  4944   002286  0E00               	movlw	0
  4945   002288  6E02               	movwf	LCD_sendbyte@type^0,c
  4946   00228A  0E0C               	movlw	12
  4947   00228C  ECBD  F012         	call	_LCD_sendbyte
  4948   002290  0012               	return		;funcret
  4949   002292                     __end_of_LCD_Init:
  4950                           	callstack 0
  4951                           
  4952 ;; *************** function _LCD_sendbyte *****************
  4953 ;; Defined at:
  4954 ;;		line 36 in file "../LCD.c"
  4955 ;; Parameters:    Size  Location     Type
  4956 ;;  Byte            1    wreg     unsigned char 
  4957 ;;  type            1    1[COMRAM] unsigned char 
  4958 ;; Auto vars:     Size  Location     Type
  4959 ;;  Byte            1    2[COMRAM] unsigned char 
  4960 ;; Return value:  Size  Location     Type
  4961 ;;                  1    wreg      void 
  4962 ;; Registers used:
  4963 ;;		wreg, status,2, status,0, cstack
  4964 ;; Tracked objects:
  4965 ;;		On entry : 0/0
  4966 ;;		On exit  : 0/0
  4967 ;;		Unchanged: 0/0
  4968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4969 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4970 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4972 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4973 ;;Total ram usage:        2 bytes
  4974 ;; Hardware stack levels used: 1
  4975 ;; Hardware stack levels required when called: 3
  4976 ;; This function calls:
  4977 ;;		_LCD_sendnibble
  4978 ;; This function is called by:
  4979 ;;		_LCD_Init
  4980 ;;		_LCD_clear
  4981 ;;		_LCD_setline
  4982 ;;		_LCD_sendstring
  4983 ;;		_LCD_scroll
  4984 ;; This function uses a non-reentrant model
  4985 ;;
  4986                           
  4987                           	psect	text27
  4988   00257A                     __ptext27:
  4989                           	callstack 0
  4990   00257A                     _LCD_sendbyte:
  4991                           	callstack 26
  4992                           
  4993                           ;incstack = 0
  4994                           ;LCD_sendbyte@Byte stored from wreg
  4995   00257A  6E03               	movwf	LCD_sendbyte@Byte^0,c
  4996   00257C                     
  4997                           ;../LCD.c: 36: void LCD_sendbyte(unsigned char Byte, char type);../LCD.c: 37: {;../LCD.c
      +                          : 38:     if (type) {LATCbits.LATC6 = 1;} else {LATCbits.LATC6 = 0;}
  4998   00257C  5002               	movf	LCD_sendbyte@type^0,w,c
  4999   00257E  B4D8               	btfsc	status,2,c
  5000   002580  EFC4  F012         	goto	u1941
  5001   002584  EFC6  F012         	goto	u1940
  5002   002588                     u1941:
  5003   002588  EFC9  F012         	goto	l290
  5004   00258C                     u1940:
  5005   00258C  8C7B               	bsf	123,6,c	;volatile
  5006   00258E  EFCA  F012         	goto	l2290
  5007   002592                     l290:
  5008   002592  9C7B               	bcf	123,6,c	;volatile
  5009   002594                     l2290:
  5010                           
  5011                           ;../LCD.c: 39:     LCD_sendnibble((Byte >> 4)& 0b1111);
  5012   002594  3803               	swapf	LCD_sendbyte@Byte^0,w,c
  5013   002596  0B0F               	andlw	15
  5014   002598  0B0F               	andlw	15
  5015   00259A  EC83  F011         	call	_LCD_sendnibble
  5016                           
  5017                           ;../LCD.c: 40:     LCD_sendnibble(Byte & 0b00001111);
  5018   00259E  5003               	movf	LCD_sendbyte@Byte^0,w,c
  5019   0025A0  0B0F               	andlw	15
  5020   0025A2  EC83  F011         	call	_LCD_sendnibble
  5021   0025A6                     
  5022                           ;../LCD.c: 42:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  5023   0025A6  0EA0               	movlw	160
  5024   0025A8                     u2837:
  5025   0025A8  D000               	nop2	
  5026   0025AA  2EE8               	decfsz	wreg,f,c
  5027   0025AC  D7FD               	bra	u2837
  5028   0025AE  0012               	return		;funcret
  5029   0025B0                     __end_of_LCD_sendbyte:
  5030                           	callstack 0
  5031                           
  5032 ;; *************** function _LCD_sendnibble *****************
  5033 ;; Defined at:
  5034 ;;		line 19 in file "../LCD.c"
  5035 ;; Parameters:    Size  Location     Type
  5036 ;;  number          1    wreg     unsigned char 
  5037 ;; Auto vars:     Size  Location     Type
  5038 ;;  number          1    0[COMRAM] unsigned char 
  5039 ;; Return value:  Size  Location     Type
  5040 ;;                  1    wreg      void 
  5041 ;; Registers used:
  5042 ;;		wreg, cstack
  5043 ;; Tracked objects:
  5044 ;;		On entry : 0/0
  5045 ;;		On exit  : 0/0
  5046 ;;		Unchanged: 0/0
  5047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5049 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5051 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5052 ;;Total ram usage:        1 bytes
  5053 ;; Hardware stack levels used: 1
  5054 ;; Hardware stack levels required when called: 2
  5055 ;; This function calls:
  5056 ;;		_LCD_E_TOG
  5057 ;; This function is called by:
  5058 ;;		_LCD_sendbyte
  5059 ;;		_LCD_Init
  5060 ;; This function uses a non-reentrant model
  5061 ;;
  5062                           
  5063                           	psect	text28
  5064   002306                     __ptext28:
  5065                           	callstack 0
  5066   002306                     _LCD_sendnibble:
  5067                           	callstack 26
  5068                           
  5069                           ;incstack = 0
  5070                           ;LCD_sendnibble@number stored from wreg
  5071   002306  6E01               	movwf	LCD_sendnibble@number^0,c
  5072   002308                     
  5073                           ;../LCD.c: 19: void LCD_sendnibble(unsigned char number);../LCD.c: 20: {;../LCD.c: 22:  
      +                          if (number & 0b0001) {LATBbits.LATB3 = 1;} else {LATBbits.LATB3 = 0;}
  5074   002308  A001               	btfss	LCD_sendnibble@number^0,0,c
  5075   00230A  EF89  F011         	goto	u1831
  5076   00230E  EF8B  F011         	goto	u1830
  5077   002312                     u1831:
  5078   002312  EF8E  F011         	goto	l279
  5079   002316                     u1830:
  5080   002316  867A               	bsf	122,3,c	;volatile
  5081   002318  EF8F  F011         	goto	l2200
  5082   00231C                     l279:
  5083   00231C  967A               	bcf	122,3,c	;volatile
  5084   00231E                     l2200:
  5085                           
  5086                           ;../LCD.c: 23:     if (number & 0b0010) {LATBbits.LATB2 = 1;} else {LATBbits.LATB2 = 0;}
  5087   00231E  A201               	btfss	LCD_sendnibble@number^0,1,c
  5088   002320  EF94  F011         	goto	u1841
  5089   002324  EF96  F011         	goto	u1840
  5090   002328                     u1841:
  5091   002328  EF99  F011         	goto	l281
  5092   00232C                     u1840:
  5093   00232C  847A               	bsf	122,2,c	;volatile
  5094   00232E  EF9A  F011         	goto	l2204
  5095   002332                     l281:
  5096   002332  947A               	bcf	122,2,c	;volatile
  5097   002334                     l2204:
  5098                           
  5099                           ;../LCD.c: 24:     if (number & 0b0100) {LATEbits.LATE3 = 1;} else {LATEbits.LATE3 = 0;}
  5100   002334  A401               	btfss	LCD_sendnibble@number^0,2,c
  5101   002336  EF9F  F011         	goto	u1851
  5102   00233A  EFA1  F011         	goto	u1850
  5103   00233E                     u1851:
  5104   00233E  EFA4  F011         	goto	l283
  5105   002342                     u1850:
  5106   002342  867D               	bsf	125,3,c	;volatile
  5107   002344  EFA5  F011         	goto	l2208
  5108   002348                     l283:
  5109   002348  967D               	bcf	125,3,c	;volatile
  5110   00234A                     l2208:
  5111                           
  5112                           ;../LCD.c: 25:     if (number & 0b1000) {LATEbits.LATE1 = 1;} else {LATEbits.LATE1 = 0;}
  5113   00234A  A601               	btfss	LCD_sendnibble@number^0,3,c
  5114   00234C  EFAA  F011         	goto	u1861
  5115   002350  EFAC  F011         	goto	u1860
  5116   002354                     u1861:
  5117   002354  EFAF  F011         	goto	l285
  5118   002358                     u1860:
  5119   002358  827D               	bsf	125,1,c	;volatile
  5120   00235A  EFB0  F011         	goto	l2212
  5121   00235E                     l285:
  5122   00235E  927D               	bcf	125,1,c	;volatile
  5123   002360                     l2212:
  5124                           
  5125                           ;../LCD.c: 27:     LCD_E_TOG();
  5126   002360  EC87  F013         	call	_LCD_E_TOG	;wreg free
  5127   002364                     
  5128                           ;../LCD.c: 28:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  5129   002364  0E1A               	movlw	26
  5130   002366                     u2847:
  5131   002366  2EE8               	decfsz	wreg,f,c
  5132   002368  D7FE               	bra	u2847
  5133   00236A  D000               	nop2	
  5134   00236C  0012               	return		;funcret
  5135   00236E                     __end_of_LCD_sendnibble:
  5136                           	callstack 0
  5137                           
  5138 ;; *************** function _LCD_E_TOG *****************
  5139 ;; Defined at:
  5140 ;;		line 9 in file "../LCD.c"
  5141 ;; Parameters:    Size  Location     Type
  5142 ;;		None
  5143 ;; Auto vars:     Size  Location     Type
  5144 ;;		None
  5145 ;; Return value:  Size  Location     Type
  5146 ;;                  1    wreg      void 
  5147 ;; Registers used:
  5148 ;;		wreg
  5149 ;; Tracked objects:
  5150 ;;		On entry : 0/0
  5151 ;;		On exit  : 0/0
  5152 ;;		Unchanged: 0/0
  5153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5158 ;;Total ram usage:        0 bytes
  5159 ;; Hardware stack levels used: 1
  5160 ;; Hardware stack levels required when called: 1
  5161 ;; This function calls:
  5162 ;;		Nothing
  5163 ;; This function is called by:
  5164 ;;		_LCD_sendnibble
  5165 ;; This function uses a non-reentrant model
  5166 ;;
  5167                           
  5168                           	psect	text29
  5169   00270E                     __ptext29:
  5170                           	callstack 0
  5171   00270E                     _LCD_E_TOG:
  5172                           	callstack 26
  5173   00270E                     
  5174                           ;../LCD.c: 11:  LATCbits.LATC2 = 1;
  5175   00270E  847B               	bsf	123,2,c	;volatile
  5176   002710                     
  5177                           ;../LCD.c: 12:  _delay((unsigned long)((2)*(64000000/4000000.0)));
  5178   002710  0E0A               	movlw	10
  5179   002712                     u2857:
  5180   002712  2EE8               	decfsz	wreg,f,c
  5181   002714  D7FE               	bra	u2857
  5182   002716  D000               	nop2	
  5183   002718                     
  5184                           ;../LCD.c: 13:  LATCbits.LATC2 = 0;
  5185   002718  947B               	bcf	123,2,c	;volatile
  5186   00271A  0012               	return		;funcret
  5187   00271C                     __end_of_LCD_E_TOG:
  5188                           	callstack 0
  5189                           
  5190 ;; *************** function _Interrupts_init *****************
  5191 ;; Defined at:
  5192 ;;		line 11 in file "../interrupts.c"
  5193 ;; Parameters:    Size  Location     Type
  5194 ;;		None
  5195 ;; Auto vars:     Size  Location     Type
  5196 ;;		None
  5197 ;; Return value:  Size  Location     Type
  5198 ;;                  1    wreg      void 
  5199 ;; Registers used:
  5200 ;;		None
  5201 ;; Tracked objects:
  5202 ;;		On entry : 0/0
  5203 ;;		On exit  : 0/0
  5204 ;;		Unchanged: 0/0
  5205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5210 ;;Total ram usage:        0 bytes
  5211 ;; Hardware stack levels used: 1
  5212 ;; Hardware stack levels required when called: 1
  5213 ;; This function calls:
  5214 ;;		Nothing
  5215 ;; This function is called by:
  5216 ;;		_main
  5217 ;; This function uses a non-reentrant model
  5218 ;;
  5219                           
  5220                           	psect	text30
  5221   00271C                     __ptext30:
  5222                           	callstack 0
  5223   00271C                     _Interrupts_init:
  5224                           	callstack 29
  5225   00271C                     
  5226                           ;../interrupts.c: 14:     TMR0IE=1;
  5227   00271C  010E               	movlb	14	; () banked
  5228   00271E  8B29               	bsf	41,5,b	;volatile
  5229                           
  5230                           ;../interrupts.c: 15:     INTCONbits.GIEH=1;
  5231   002720  8EF2               	bsf	242,7,c	;volatile
  5232                           
  5233                           ;../interrupts.c: 16:     INTCONbits.GIEL = 1;
  5234   002722  8CF2               	bsf	242,6,c	;volatile
  5235   002724                     
  5236                           ; BSR set to: 14
  5237   002724  0012               	return		;funcret
  5238   002726                     __end_of_Interrupts_init:
  5239                           	callstack 0
  5240                           
  5241 ;; *************** function _Comp1_init *****************
  5242 ;; Defined at:
  5243 ;;		line 29 in file "../comparator.c"
  5244 ;; Parameters:    Size  Location     Type
  5245 ;;		None
  5246 ;; Auto vars:     Size  Location     Type
  5247 ;;		None
  5248 ;; Return value:  Size  Location     Type
  5249 ;;                  1    wreg      void 
  5250 ;; Registers used:
  5251 ;;		wreg, status,2, cstack
  5252 ;; Tracked objects:
  5253 ;;		On entry : 0/0
  5254 ;;		On exit  : 0/0
  5255 ;;		Unchanged: 0/0
  5256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5261 ;;Total ram usage:        0 bytes
  5262 ;; Hardware stack levels used: 1
  5263 ;; Hardware stack levels required when called: 2
  5264 ;; This function calls:
  5265 ;;		_DAC_init
  5266 ;; This function is called by:
  5267 ;;		_main
  5268 ;; This function uses a non-reentrant model
  5269 ;;
  5270                           
  5271                           	psect	text31
  5272   00265E                     __ptext31:
  5273                           	callstack 0
  5274   00265E                     _Comp1_init:
  5275                           	callstack 28
  5276   00265E                     
  5277                           ;../comparator.c: 31:     TRISAbits.TRISA3=1;
  5278   00265E  8681               	bsf	129,3,c	;volatile
  5279   002660                     
  5280                           ;../comparator.c: 32:     CM1NCHbits.NCH=0b011;
  5281   002660  010E               	movlb	14	; () banked
  5282   002662  51D2               	movf	210,w,b	;volatile
  5283   002664  0BF8               	andlw	-8
  5284   002666  0903               	iorlw	3
  5285   002668  6FD2               	movwf	210,b	;volatile
  5286                           
  5287                           ;../comparator.c: 33:     CM1PCHbits.PCH=0b101;
  5288   00266A  51D3               	movf	211,w,b	;volatile
  5289   00266C  0BF8               	andlw	-8
  5290   00266E  0905               	iorlw	5
  5291   002670  6FD3               	movwf	211,b	;volatile
  5292   002672                     
  5293                           ; BSR set to: 14
  5294                           ;../comparator.c: 34:     CM1CON0bits.HYS=1;
  5295   002672  83D0               	bsf	208,1,b	;volatile
  5296   002674                     
  5297                           ; BSR set to: 14
  5298                           ;../comparator.c: 35:     CM1CON0bits.POL=1;
  5299   002674  89D0               	bsf	208,4,b	;volatile
  5300   002676                     
  5301                           ; BSR set to: 14
  5302                           ;../comparator.c: 36:     CM1CON1bits.INTP=1;
  5303   002676  83D1               	bsf	209,1,b	;volatile
  5304   002678                     
  5305                           ; BSR set to: 14
  5306                           ;../comparator.c: 37:     CM1CON1bits.INTN=1;
  5307   002678  81D1               	bsf	209,0,b	;volatile
  5308   00267A                     
  5309                           ; BSR set to: 14
  5310                           ;../comparator.c: 38:     DAC_init();
  5311   00267A  EC7D  F013         	call	_DAC_init	;wreg free
  5312   00267E                     
  5313                           ;../comparator.c: 39:     CM1CON0bits.EN=1;
  5314   00267E  010E               	movlb	14	; () banked
  5315   002680  8FD0               	bsf	208,7,b	;volatile
  5316   002682                     
  5317                           ; BSR set to: 14
  5318   002682  0012               	return		;funcret
  5319   002684                     __end_of_Comp1_init:
  5320                           	callstack 0
  5321                           
  5322 ;; *************** function _DAC_init *****************
  5323 ;; Defined at:
  5324 ;;		line 14 in file "../comparator.c"
  5325 ;; Parameters:    Size  Location     Type
  5326 ;;		None
  5327 ;; Auto vars:     Size  Location     Type
  5328 ;;		None
  5329 ;; Return value:  Size  Location     Type
  5330 ;;                  1    wreg      void 
  5331 ;; Registers used:
  5332 ;;		wreg, status,2
  5333 ;; Tracked objects:
  5334 ;;		On entry : 0/0
  5335 ;;		On exit  : 0/0
  5336 ;;		Unchanged: 0/0
  5337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5342 ;;Total ram usage:        0 bytes
  5343 ;; Hardware stack levels used: 1
  5344 ;; Hardware stack levels required when called: 1
  5345 ;; This function calls:
  5346 ;;		Nothing
  5347 ;; This function is called by:
  5348 ;;		_Comp1_init
  5349 ;; This function uses a non-reentrant model
  5350 ;;
  5351                           
  5352                           	psect	text32
  5353   0026FA                     __ptext32:
  5354                           	callstack 0
  5355   0026FA                     _DAC_init:
  5356                           	callstack 28
  5357   0026FA                     
  5358                           ;../comparator.c: 16:     DAC1CON0bits.PSS=0b00;
  5359   0026FA  0EF3               	movlw	-13
  5360   0026FC  010E               	movlb	14	; () banked
  5361   0026FE  17C6               	andwf	198,f,b	;volatile
  5362   002700                     
  5363                           ; BSR set to: 14
  5364                           ;../comparator.c: 17:     DAC1CON0bits.NSS=0b0;
  5365   002700  91C6               	bcf	198,0,b	;volatile
  5366                           
  5367                           ;../comparator.c: 21:     DAC1CON1bits.DAC1R=27;
  5368   002702  51C7               	movf	199,w,b	;volatile
  5369   002704  0BE0               	andlw	-32
  5370   002706  091B               	iorlw	27
  5371   002708  6FC7               	movwf	199,b	;volatile
  5372   00270A                     
  5373                           ; BSR set to: 14
  5374                           ;../comparator.c: 22:     DAC1CON0bits.DAC1EN=1;
  5375   00270A  8FC6               	bsf	198,7,b	;volatile
  5376   00270C                     
  5377                           ; BSR set to: 14
  5378   00270C  0012               	return		;funcret
  5379   00270E                     __end_of_DAC_init:
  5380                           	callstack 0
  5381                           
  5382 ;; *************** function _ADC_init *****************
  5383 ;; Defined at:
  5384 ;;		line 9 in file "../ADC.c"
  5385 ;; Parameters:    Size  Location     Type
  5386 ;;		None
  5387 ;; Auto vars:     Size  Location     Type
  5388 ;;		None
  5389 ;; Return value:  Size  Location     Type
  5390 ;;                  1    wreg      void 
  5391 ;; Registers used:
  5392 ;;		wreg, status,2
  5393 ;; Tracked objects:
  5394 ;;		On entry : 0/0
  5395 ;;		On exit  : 0/0
  5396 ;;		Unchanged: 0/0
  5397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5402 ;;Total ram usage:        0 bytes
  5403 ;; Hardware stack levels used: 1
  5404 ;; Hardware stack levels required when called: 1
  5405 ;; This function calls:
  5406 ;;		Nothing
  5407 ;; This function is called by:
  5408 ;;		_main
  5409 ;; This function uses a non-reentrant model
  5410 ;;
  5411                           
  5412                           	psect	text33
  5413   0026E0                     __ptext33:
  5414                           	callstack 0
  5415   0026E0                     _ADC_init:
  5416                           	callstack 29
  5417   0026E0                     
  5418                           ;../ADC.c: 11:     TRISAbits.TRISA3=1;
  5419   0026E0  8681               	bsf	129,3,c	;volatile
  5420                           
  5421                           ;../ADC.c: 12:     ANSELAbits.ANSELA3=1;
  5422   0026E2  010E               	movlb	14	; () banked
  5423   0026E4  8792               	bsf	146,3,b	;volatile
  5424                           
  5425                           ;../ADC.c: 15:     ADREFbits.ADNREF = 0;
  5426   0026E6  010F               	movlb	15	; () banked
  5427   0026E8  9958               	bcf	88,4,b	;volatile
  5428   0026EA                     
  5429                           ; BSR set to: 15
  5430                           ;../ADC.c: 16:     ADREFbits.ADPREF = 0b00;
  5431   0026EA  0EFC               	movlw	-4
  5432   0026EC  1758               	andwf	88,f,b	;volatile
  5433                           
  5434                           ;../ADC.c: 17:     ADPCH=0b11;
  5435   0026EE  0E03               	movlw	3
  5436   0026F0  6F5F               	movwf	95,b	;volatile
  5437   0026F2                     
  5438                           ; BSR set to: 15
  5439                           ;../ADC.c: 18:     ADCON0bits.ADFM = 0;
  5440   0026F2  9460               	bcf	96,2,c	;volatile
  5441   0026F4                     
  5442                           ; BSR set to: 15
  5443                           ;../ADC.c: 19:     ADCON0bits.ADCS = 1;
  5444   0026F4  8860               	bsf	96,4,c	;volatile
  5445   0026F6                     
  5446                           ; BSR set to: 15
  5447                           ;../ADC.c: 20:     ADCON0bits.ADON = 1;
  5448   0026F6  8E60               	bsf	96,7,c	;volatile
  5449   0026F8                     
  5450                           ; BSR set to: 15
  5451   0026F8  0012               	return		;funcret
  5452   0026FA                     __end_of_ADC_init:
  5453                           	callstack 0
  5454                           
  5455 ;; *************** function _HighISR *****************
  5456 ;; Defined at:
  5457 ;;		line 23 in file "../interrupts.c"
  5458 ;; Parameters:    Size  Location     Type
  5459 ;;		None
  5460 ;; Auto vars:     Size  Location     Type
  5461 ;;		None
  5462 ;; Return value:  Size  Location     Type
  5463 ;;                  1    wreg      void 
  5464 ;; Registers used:
  5465 ;;		wreg, status,2, status,0
  5466 ;; Tracked objects:
  5467 ;;		On entry : 0/0
  5468 ;;		On exit  : 0/0
  5469 ;;		Unchanged: 0/0
  5470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5475 ;;Total ram usage:        0 bytes
  5476 ;; Hardware stack levels used: 1
  5477 ;; This function calls:
  5478 ;;		Nothing
  5479 ;; This function is called by:
  5480 ;;		Interrupt level 2
  5481 ;; This function uses a non-reentrant model
  5482 ;;
  5483                           
  5484                           	psect	intcode
  5485   000008                     __pintcode:
  5486                           	callstack 0
  5487   000008                     _HighISR:
  5488                           	callstack 22
  5489                           
  5490                           ; BSR set to: 15
  5491                           ;incstack = 0
  5492   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5493   00000A                     
  5494                           ;../interrupts.c: 27:     if (TMR0IF) {
  5495   00000A  010E               	movlb	14	; () banked
  5496   00000C  AB33               	btfss	51,5,b	;volatile
  5497   00000E  EF0B  F000         	goto	i2u240_41
  5498   000012  EF0D  F000         	goto	i2u240_40
  5499   000016                     i2u240_41:
  5500   000016  EF16  F000         	goto	i2l2552
  5501   00001A                     i2u240_40:
  5502   00001A                     
  5503                           ; BSR set to: 14
  5504                           ;../interrupts.c: 28:         TMR0H=0b00001011;
  5505   00001A  0E0B               	movlw	11
  5506   00001C  6ED4               	movwf	212,c	;volatile
  5507                           
  5508                           ;../interrupts.c: 29:         TMR0L=0b00001011;
  5509   00001E  0E0B               	movlw	11
  5510   000020  6ED3               	movwf	211,c	;volatile
  5511   000022                     
  5512                           ; BSR set to: 14
  5513                           ;../interrupts.c: 30:         minute += 1;
  5514   000022  0100               	movlb	0	; () banked
  5515   000024  4BDD               	infsnz	_minute& (0+255),f,b
  5516   000026  2BDE               	incf	(_minute+1)& (0+255),f,b
  5517   000028                     
  5518                           ; BSR set to: 0
  5519                           ;../interrupts.c: 31:         TMR0IF=0;
  5520   000028  010E               	movlb	14	; () banked
  5521   00002A  9B33               	bcf	51,5,b	;volatile
  5522   00002C                     i2l2552:
  5523                           
  5524                           ; BSR set to: 14
  5525                           ;../interrupts.c: 34:     if (PIR2bits.C1IF){
  5526   00002C  A135               	btfss	53,0,b	;volatile
  5527   00002E  EF1B  F000         	goto	i2u241_41
  5528   000032  EF1D  F000         	goto	i2u241_40
  5529   000036                     i2u241_41:
  5530   000036  EF62  F000         	goto	i2l153
  5531   00003A                     i2u241_40:
  5532   00003A                     
  5533                           ; BSR set to: 14
  5534                           ;../interrupts.c: 35:         if (CM1CON0bits.OUT == 0) {
  5535   00003A  BDD0               	btfsc	208,6,b	;volatile
  5536   00003C  EF22  F000         	goto	i2u242_41
  5537   000040  EF24  F000         	goto	i2u242_40
  5538   000044                     i2u242_41:
  5539   000044  EF2F  F000         	goto	i2l145
  5540   000048                     i2u242_40:
  5541   000048                     
  5542                           ; BSR set to: 14
  5543                           ;../interrupts.c: 36:             daylight_start_hour = hour;
  5544   000048  C0DF  F0D7         	movff	_hour,_daylight_start_hour
  5545   00004C  C0E0  F0D8         	movff	_hour+1,_daylight_start_hour+1
  5546                           
  5547                           ;../interrupts.c: 37:             daylight_start_min = minute;
  5548   000050  C0DD  F0D5         	movff	_minute,_daylight_start_min
  5549   000054  C0DE  F0D6         	movff	_minute+1,_daylight_start_min+1
  5550                           
  5551                           ;../interrupts.c: 38:             LATHbits.LATH3=0;
  5552   000058  9680               	bcf	128,3,c	;volatile
  5553                           
  5554                           ;../interrupts.c: 39:             }
  5555   00005A  EF60  F000         	goto	i2l146
  5556   00005E                     i2l145:
  5557                           
  5558                           ; BSR set to: 14
  5559   00005E  ADD0               	btfss	208,6,b	;volatile
  5560   000060  EF34  F000         	goto	i2u243_41
  5561   000064  EF36  F000         	goto	i2u243_40
  5562   000068                     i2u243_41:
  5563   000068  EF60  F000         	goto	i2l146
  5564   00006C                     i2u243_40:
  5565   00006C                     
  5566                           ; BSR set to: 14
  5567                           ;../interrupts.c: 41:             daylight_end_hour = hour;
  5568   00006C  C0DF  F0D3         	movff	_hour,_daylight_end_hour
  5569   000070  C0E0  F0D4         	movff	_hour+1,_daylight_end_hour+1
  5570                           
  5571                           ;../interrupts.c: 42:             daylight_end_min = minute;
  5572   000074  C0DD  F0D1         	movff	_minute,_daylight_end_min
  5573   000078  C0DE  F0D2         	movff	_minute+1,_daylight_end_min+1
  5574   00007C                     
  5575                           ; BSR set to: 14
  5576                           ;../interrupts.c: 43:         if (hour <1 || hour >=5){
  5577   00007C  0100               	movlb	0	; () banked
  5578   00007E  51DF               	movf	_hour& (0+255),w,b
  5579   000080  11E0               	iorwf	(_hour+1)& (0+255),w,b
  5580   000082  B4D8               	btfsc	status,2,c
  5581   000084  EF46  F000         	goto	i2u244_41
  5582   000088  EF48  F000         	goto	i2u244_40
  5583   00008C                     i2u244_41:
  5584   00008C  EF53  F000         	goto	i2l150
  5585   000090                     i2u244_40:
  5586   000090                     
  5587                           ; BSR set to: 0
  5588   000090  51E0               	movf	(_hour+1)& (0+255),w,b
  5589   000092  E109               	bnz	i2u245_40
  5590   000094  0E05               	movlw	5
  5591   000096  5DDF               	subwf	_hour& (0+255),w,b
  5592   000098  A0D8               	btfss	status,0,c
  5593   00009A  EF51  F000         	goto	i2u245_41
  5594   00009E  EF53  F000         	goto	i2u245_40
  5595   0000A2                     i2u245_41:
  5596   0000A2  EF60  F000         	goto	i2l146
  5597   0000A6                     i2u245_40:
  5598   0000A6                     i2l150:
  5599                           
  5600                           ; BSR set to: 0
  5601                           ;../interrupts.c: 44:             if (CM1CON0bits.OUT == 1) {LATHbits.LATH3=1;}
  5602   0000A6  010E               	movlb	14	; () banked
  5603   0000A8  ADD0               	btfss	208,6,b	;volatile
  5604   0000AA  EF59  F000         	goto	i2u246_41
  5605   0000AE  EF5B  F000         	goto	i2u246_40
  5606   0000B2                     i2u246_41:
  5607   0000B2  EF5E  F000         	goto	i2l151
  5608   0000B6                     i2u246_40:
  5609   0000B6                     
  5610                           ; BSR set to: 14
  5611   0000B6  8680               	bsf	128,3,c	;volatile
  5612   0000B8  EF5F  F000         	goto	i2l152
  5613   0000BC                     i2l151:
  5614                           
  5615                           ; BSR set to: 14
  5616   0000BC  9680               	bcf	128,3,c	;volatile
  5617   0000BE                     i2l152:
  5618                           
  5619                           ; BSR set to: 14
  5620                           ;../interrupts.c: 46:             LATHbits.LATH3=1;}
  5621   0000BE  8680               	bsf	128,3,c	;volatile
  5622   0000C0                     i2l146:
  5623                           
  5624                           ;../interrupts.c: 48:         PIR2bits.C1IF=0;
  5625   0000C0  010E               	movlb	14	; () banked
  5626   0000C2  9135               	bcf	53,0,b	;volatile
  5627   0000C4                     i2l153:
  5628                           
  5629                           ; BSR set to: 14
  5630   0000C4  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5631   0000C6  0011               	retfie		f
  5632   0000C8                     __end_of_HighISR:
  5633                           	callstack 0
  5634                           
  5635                           	psect	rparam
  5636   000000                     
  5637                           	psect	temp
  5638   00005F                     btemp:
  5639                           	callstack 0
  5640   00005F                     	ds	1
  5641   000000                     int$flags	set	btemp
  5642   000000                     wtemp8	set	btemp+1
  5643   000000                     ttemp5	set	btemp+1
  5644   000000                     ttemp6	set	btemp+4
  5645   000000                     ttemp7	set	btemp+8
  5646                           
  5647                           	psect	idloc
  5648                           
  5649                           ;Config register IDLOC0 @ 0x200000
  5650                           ;	unspecified, using default values
  5651   200000                     	org	2097152
  5652   200000  0FFF               	dw	4095
  5653                           
  5654                           ;Config register IDLOC1 @ 0x200002
  5655                           ;	unspecified, using default values
  5656   200002                     	org	2097154
  5657   200002  0FFF               	dw	4095
  5658                           
  5659                           ;Config register IDLOC2 @ 0x200004
  5660                           ;	unspecified, using default values
  5661   200004                     	org	2097156
  5662   200004  0FFF               	dw	4095
  5663                           
  5664                           ;Config register IDLOC3 @ 0x200006
  5665                           ;	unspecified, using default values
  5666   200006                     	org	2097158
  5667   200006  0FFF               	dw	4095
  5668                           
  5669                           ;Config register IDLOC4 @ 0x200008
  5670                           ;	unspecified, using default values
  5671   200008                     	org	2097160
  5672   200008  0FFF               	dw	4095
  5673                           
  5674                           ;Config register IDLOC5 @ 0x20000A
  5675                           ;	unspecified, using default values
  5676   20000A                     	org	2097162
  5677   20000A  0FFF               	dw	4095
  5678                           
  5679                           ;Config register IDLOC6 @ 0x20000C
  5680                           ;	unspecified, using default values
  5681   20000C                     	org	2097164
  5682   20000C  0FFF               	dw	4095
  5683                           
  5684                           ;Config register IDLOC7 @ 0x20000E
  5685                           ;	unspecified, using default values
  5686   20000E                     	org	2097166
  5687   20000E  0FFF               	dw	4095
  5688                           
  5689                           	psect	config
  5690                           
  5691                           ;Config register CONFIG1L @ 0x300000
  5692                           ;	External Oscillator mode Selection bits
  5693                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5694                           ;	Power-up default value for COSC bits
  5695                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5696   300000                     	org	3145728
  5697   300000  AA                 	db	170
  5698                           
  5699                           ;Config register CONFIG1H @ 0x300001
  5700                           ;	unspecified, using default values
  5701                           ;	Clock Out Enable bit
  5702                           ;	CLKOUTEN = 0x1, unprogrammed default
  5703                           ;	Clock Switch Enable bit
  5704                           ;	CSWEN = 0x1, unprogrammed default
  5705                           ;	Fail-Safe Clock Monitor Enable bit
  5706                           ;	FCMEN = 0x1, unprogrammed default
  5707   300001                     	org	3145729
  5708   300001  FF                 	db	255
  5709                           
  5710                           ;Config register CONFIG2L @ 0x300002
  5711                           ;	unspecified, using default values
  5712                           ;	Master Clear Enable bit
  5713                           ;	MCLRE = 0x1, unprogrammed default
  5714                           ;	Power-up Timer Enable bit
  5715                           ;	PWRTE = 0x1, unprogrammed default
  5716                           ;	Low-power BOR enable bit
  5717                           ;	LPBOREN = 0x1, unprogrammed default
  5718                           ;	Brown-out Reset Enable bits
  5719                           ;	BOREN = 0x3, unprogrammed default
  5720   300002                     	org	3145730
  5721   300002  FF                 	db	255
  5722                           
  5723                           ;Config register CONFIG2H @ 0x300003
  5724                           ;	unspecified, using default values
  5725                           ;	Brown Out Reset Voltage selection bits
  5726                           ;	BORV = 0x3, unprogrammed default
  5727                           ;	ZCD Disable bit
  5728                           ;	ZCD = 0x1, unprogrammed default
  5729                           ;	PPSLOCK bit One-Way Set Enable bit
  5730                           ;	PPS1WAY = 0x1, unprogrammed default
  5731                           ;	Stack Full/Underflow Reset Enable bit
  5732                           ;	STVREN = 0x1, unprogrammed default
  5733                           ;	Debugger Enable bit
  5734                           ;	DEBUG = 0x1, unprogrammed default
  5735                           ;	Extended Instruction Set Enable bit
  5736                           ;	XINST = 0x1, unprogrammed default
  5737   300003                     	org	3145731
  5738   300003  FF                 	db	255
  5739                           
  5740                           ;Config register CONFIG3L @ 0x300004
  5741                           ;	WDT Period Select bits
  5742                           ;	WDTCPS = 0x1F, unprogrammed default
  5743                           ;	WDT operating mode
  5744                           ;	WDTE = OFF, WDT Disabled
  5745   300004                     	org	3145732
  5746   300004  9F                 	db	159
  5747                           
  5748                           ;Config register CONFIG3H @ 0x300005
  5749                           ;	unspecified, using default values
  5750                           ;	WDT Window Select bits
  5751                           ;	WDTCWS = 0x7, unprogrammed default
  5752                           ;	WDT input clock selector
  5753                           ;	WDTCCS = 0x7, unprogrammed default
  5754   300005                     	org	3145733
  5755   300005  FF                 	db	255
  5756                           
  5757                           ;Config register CONFIG4L @ 0x300006
  5758                           ;	unspecified, using default values
  5759                           ;	Write Protection Block 0
  5760                           ;	WRT0 = 0x1, unprogrammed default
  5761                           ;	Write Protection Block 1
  5762                           ;	WRT1 = 0x1, unprogrammed default
  5763                           ;	Write Protection Block 2
  5764                           ;	WRT2 = 0x1, unprogrammed default
  5765                           ;	Write Protection Block 3
  5766                           ;	WRT3 = 0x1, unprogrammed default
  5767                           ;	Write Protection Block 3
  5768                           ;	WRT4 = 0x1, unprogrammed default
  5769                           ;	Write Protection Block 3
  5770                           ;	WRT5 = 0x1, unprogrammed default
  5771                           ;	Write Protection Block 3
  5772                           ;	WRT6 = 0x1, unprogrammed default
  5773                           ;	Write Protection Block 3
  5774                           ;	WRT7 = 0x1, unprogrammed default
  5775   300006                     	org	3145734
  5776   300006  FF                 	db	255
  5777                           
  5778                           ;Config register CONFIG4H @ 0x300007
  5779                           ;	unspecified, using default values
  5780                           ;	Configuration Register Write Protection bit
  5781                           ;	WRTC = 0x1, unprogrammed default
  5782                           ;	Boot Block Write Protection bit
  5783                           ;	WRTB = 0x1, unprogrammed default
  5784                           ;	Data EEPROM Write Protection bit
  5785                           ;	WRTD = 0x1, unprogrammed default
  5786                           ;	Scanner Enable bit
  5787                           ;	SCANE = 0x1, unprogrammed default
  5788                           ;	Low Voltage Programming Enable bit
  5789                           ;	LVP = 0x1, unprogrammed default
  5790   300007                     	org	3145735
  5791   300007  FF                 	db	255
  5792                           
  5793                           ;Config register CONFIG5L @ 0x300008
  5794                           ;	unspecified, using default values
  5795                           ;	UserNVM Program Memory Code Protection bit
  5796                           ;	CP = 0x1, unprogrammed default
  5797                           ;	DataNVM Memory Code Protection bit
  5798                           ;	CPD = 0x1, unprogrammed default
  5799   300008                     	org	3145736
  5800   300008  FF                 	db	255
  5801                           
  5802                           ;Config register CONFIG5H @ 0x300009
  5803                           ;	unspecified, using default values
  5804   300009                     	org	3145737
  5805   300009  FF                 	db	255
  5806                           
  5807                           ;Config register CONFIG6L @ 0x30000A
  5808                           ;	unspecified, using default values
  5809                           ;	Table Read Protection Block 0
  5810                           ;	EBTR0 = 0x1, unprogrammed default
  5811                           ;	Table Read Protection Block 1
  5812                           ;	EBTR1 = 0x1, unprogrammed default
  5813                           ;	Table Read Protection Block 2
  5814                           ;	EBTR2 = 0x1, unprogrammed default
  5815                           ;	Table Read Protection Block 3
  5816                           ;	EBTR3 = 0x1, unprogrammed default
  5817                           ;	Table Read Protection Block 4
  5818                           ;	EBTR4 = 0x1, unprogrammed default
  5819                           ;	Table Read Protection Block 5
  5820                           ;	EBTR5 = 0x1, unprogrammed default
  5821                           ;	Table Read Protection Block 6
  5822                           ;	EBTR6 = 0x1, unprogrammed default
  5823                           ;	Table Read Protection Block 7
  5824                           ;	EBTR7 = 0x1, unprogrammed default
  5825   30000A                     	org	3145738
  5826   30000A  FF                 	db	255
  5827                           
  5828                           ;Config register CONFIG6H @ 0x30000B
  5829                           ;	unspecified, using default values
  5830                           ;	Boot Block Table Read Protection bit
  5831                           ;	EBTRB = 0x1, unprogrammed default
  5832   30000B                     	org	3145739
  5833   30000B  FF                 	db	255
  5834                           tosu	equ	0xFFF
  5835                           tosh	equ	0xFFE
  5836                           tosl	equ	0xFFD
  5837                           stkptr	equ	0xFFC
  5838                           pclatu	equ	0xFFB
  5839                           pclath	equ	0xFFA
  5840                           pcl	equ	0xFF9
  5841                           tblptru	equ	0xFF8
  5842                           tblptrh	equ	0xFF7
  5843                           tblptrl	equ	0xFF6
  5844                           tablat	equ	0xFF5
  5845                           prodh	equ	0xFF4
  5846                           prodl	equ	0xFF3
  5847                           indf0	equ	0xFEF
  5848                           postinc0	equ	0xFEE
  5849                           postdec0	equ	0xFED
  5850                           preinc0	equ	0xFEC
  5851                           plusw0	equ	0xFEB
  5852                           fsr0h	equ	0xFEA
  5853                           fsr0l	equ	0xFE9
  5854                           wreg	equ	0xFE8
  5855                           indf1	equ	0xFE7
  5856                           postinc1	equ	0xFE6
  5857                           postdec1	equ	0xFE5
  5858                           preinc1	equ	0xFE4
  5859                           plusw1	equ	0xFE3
  5860                           fsr1h	equ	0xFE2
  5861                           fsr1l	equ	0xFE1
  5862                           bsr	equ	0xFE0
  5863                           indf2	equ	0xFDF
  5864                           postinc2	equ	0xFDE
  5865                           postdec2	equ	0xFDD
  5866                           preinc2	equ	0xFDC
  5867                           plusw2	equ	0xFDB
  5868                           fsr2h	equ	0xFDA
  5869                           fsr2l	equ	0xFD9
  5870                           status	equ	0xFD8

Data Sizes:
    Strings     38
    Constant    0
    Data        0
    BSS         57
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     91      94
    BANK0           160    107     129
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[12]), STR_3(CODE[18]), STR_2(CODE[8]), STR_1(CODE[8]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[12]), STR_3(CODE[18]), STR_2(CODE[8]), STR_1(CODE[8]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[12]), STR_3(CODE[18]), STR_2(CODE[8]), STR_1(CODE[8]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[12]), STR_3(CODE[18]), STR_2(CODE[8]), STR_1(CODE[8]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1849$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[12]), STR_3(CODE[18]), STR_2(CODE[8]), STR_1(CODE[8]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> main@yearstr(BANK0[20]), main@datestr(BANK0[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1796$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1796$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    LCD_sendstring@string	PTR unsigned char  size(2) Largest target is 50
		 -> main@yearstr(BANK0[20]), main@datestr(BANK0[50]), 

    check_month@year	PTR unsigned short  size(2) Largest target is 2
		 -> main@year(BANK0[2]), 

    check_month@month_day	PTR unsigned int  size(2) Largest target is 2
		 -> main@month_day(BANK0[2]), 

    check_month@month	PTR unsigned int  size(2) Largest target is 2
		 -> main@month(BANK0[2]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    _check_month->___lwmod
    ___lwmod->___wmul
    ___lwdiv->___wmul
    _LCD_setline->_LCD_sendbyte
    _LCD_sendstring->_LCD_sendbyte
    _LCD_clear->_LCD_sendbyte
    _LCD_Init->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                86    86      0   18263
                                             21 BANK0     86    86      0
                           _ADC_init
                         _Comp1_init
                    _Interrupts_init
                           _LCD_Init
                          _LCD_clear
                     _LCD_sendstring
                        _LCD_setline
                  _LEDarray_disp_bin
                      _LEDarray_init
                         _Light_init
                        _Timer0_init
                            ___lwdiv
                            ___lwmod
                             ___wmul
                        _check_month
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    15      8    8708
                                              0 BANK0     21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7899
                                             83 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           24    18      6    7538
                                             62 COMRAM    21    15      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3867
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2195
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1083
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1992
                                              6 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     207
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              4     2      2     237
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1223
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _check_month                                         10     4      6    1572
                                             11 COMRAM    10     4      6
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                              6 COMRAM     5     1      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4    1074
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Light_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    2     0      2     426
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LCD_setline                                          1     1      0     958
                                              3 COMRAM     1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_sendstring                                       2     0      2    1111
                                              3 COMRAM     2     0      2
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_clear                                            1     1      0     914
                                              3 COMRAM     1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0    1002
                                              3 COMRAM     2     2      0
                       _LCD_sendbyte
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (2) _LCD_sendbyte                                         2     1      1     914
                                              1 COMRAM     2     1      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (3) _LCD_sendnibble                                       1     1      0      88
                                              0 COMRAM     1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (4) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comp1_init                                           0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Comp1_init
     _DAC_init
   _Interrupts_init
   _LCD_Init
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
     _LCD_sendnibble
   _LCD_clear
     _LCD_sendbyte
   _LCD_sendstring
     _LCD_sendbyte
   _LCD_setline
     _LCD_sendbyte
   _LEDarray_disp_bin
   _LEDarray_init
   _Light_init
   _Timer0_init
   ___lwdiv
     ___wmul (ARG)
   ___lwmod
     ___wmul (ARG)
   ___wmul
   _check_month
     ___lwmod
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
         _isdigit

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6B      81       5       80.6%
BITBIGSFRlhlhhh     84      0       0      40        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5B      5E       1      100.0%
BITBIGSFRllhhh      5C      0       0      44        0.0%
BITBIGSFRhhll       4A      0       0      34        0.0%
BITBIGSFRlll        3A      0       0      47        0.0%
BITBIGSFRlhll       21      0       0      43        0.0%
BITBIGSFRhhlhh      1B      0       0      33        0.0%
BITBIGSFRlhhhhl     14      0       0      37        0.0%
BITBIGSFRlhlhl      11      0       0      42        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRllhl        9      0       0      46        0.0%
BITBIGSFRlhlhhl      8      0       0      41        0.0%
BITBIGSFRlhhl        6      0       0      39        0.0%
BITBIGSFRlhhhl       3      0       0      38        0.0%
BITBIGSFRllhhl       1      0       0      45        0.0%
BITBIGSFRlhhhhl      1      0       0      36        0.0%
BITBIGSFRhl          1      0       0      35        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FF      48        0.0%
DATA                 0      0      FF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Nov 08 13:54:31 2022

                        l15 26F8                          l50 20B4                          l42 26A4  
                        l51 20B6                          l60 2122                          l52 20CA  
                        l61 2124                          l53 20CC                          l62 2138  
                        l54 20E0                          l63 213A                          l55 20E2  
                        l64 214E                          l56 20F6                          l48 209E  
                        l57 20F8                          l49 20A0                          l66 2150  
                        l58 210C                          l59 210E                          l93 272A  
                        l96 270C                          l99 2682         ___wmul@multiplicand 0003  
         ??_Interrupts_init 0001                         l303 2578                         l233 26C4  
                       l321 265C                         l209 109E                         l138 2724  
                       l309 25E2                         l281 2332                         l257 1606  
                       l290 2592                         l283 2348                         l435 1CFC  
                       l276 271A                         l292 25AE                         l285 235E  
                       l287 236C                         l279 231C                         l295 2290  
                       l448 1E60                         l298 26DE                         l812 22FC  
                       l822 23C8                         l819 2304                         l829 23D0  
                       l999 2422                         _abs 2500                         _pad 2152  
                       wreg 000FE8                 main@changed 00C1                 main@datestr 0079  
                      l1110 1FB6                        l1031 21FA                        l2000 1C10  
                      l1040 19AA                        l1113 1FBE                        l2010 1C92  
                      l2002 1C24                        l1026 2196                        ?_abs 0013  
                      l2100 2710                        l1116 260E                        l1124 24BA  
                      l2020 1CDC                        l2012 1C94                        l2004 1C32  
                      l1029 21D8                        l1053 1B74                        l1037 195C  
                      l2102 2718                        l2014 1CA6                        l2006 1C44  
                      l2030 1D30                        l1150 272C                        l2110 1906  
                      l1039 1964                        l2200 231E                        l2008 1C72  
                      l2016 1CAC                        l2040 1D88                        l2032 1D34  
                      l2024 1CFE                        l2120 196C                        l2112 1926  
                      l2104 18C2                        l1081 2474                        l2210 2358  
                      l2202 232C                        l2018 1CBC                        l2050 1E0A  
                      l2042 1D9C                        l2034 1D42                        l2026 1D02  
                      l2130 19A6                        l2122 197C                        l2114 1934  
                      l2106 18E2                        l1139 2088                        l1147 24FE  
                      l1075 18C0                        l2212 2360                        l2204 2334  
                      l2300 2390                        l2044 1DAA                        l2052 1E10  
                      l2036 1D62                        l2028 1D10                        l2060 2152  
                      l2140 1A4A                        l2132 19B2                        l2124 1982  
                      l2116 1936                        l2108 18F6                        l2220 163E  
                      l1085 2536                        l2214 2364                        l2206 2342  
                      l2302 239E                        l2054 1E20                        l2046 1DD8  
                      l2038 1D80                        l2070 21A2                        l2062 2160  
                      l2150 1B06                        l2142 1A50                        l2134 19BC  
                      l2126 1992                        l2118 1950                        l2230 1670  
                      l2222 164C                        l2310 2424                        l2320 26E0  
                      l2208 234A                        l2400 226E                        l2304 23B4  
                      l2056 1E40                        l2048 1DF8                        l1088 253E  
                      l2080 251A                        l2072 21B6                        l2064 2174  
                      l2160 1B54                        l2152 1B20                        l2136 19C2  
                      l2144 1AB4                        l2128 199E                        l2240 16EE  
                      l2224 1650                        l2216 1608                        l2312 2430  
                      l2322 26EA                        l2402 227C                        l2410 255C  
                      l2330 2684                        l2306 23BC                        l2082 25E4  
                      l2090 248E                        l2170 1E7A                        l2074 21BA  
                      l2066 2182                        l2146 1ACE                        l2154 1B2E  
                      l2138 1A44                        l2242 1724                        l2234 167C  
                      l2226 165C                        l2218 1630                        l2314 244C  
                      l2324 26F2                        l2404 2286                        l2412 256E  
                      l2340 20DA                        l2332 208A                        l2308 23C2  
                      l2500 15E6                        l2092 24B0                        l2180 1F1A  
                      l2172 1E9A                        l2164 1E62                        l2076 21E6  
                      l2068 218E                        l2156 1B3E                        l2148 1AEC  
                      l2260 17FC                        l2252 1770                        l2244 1734  
                      l2228 165E                        l2236 16B4                        l2316 246C  
                      l2420 23F4                        l2326 26F4                        l2430 25C6  
                      l2406 2542                        l2350 2148                        l2342 20F0  
                      l2334 2098                        l2510 2292                        l2094 24B4  
                      l2086 2476                        l2190 1F9A                        l2174 1ED2  
                      l2166 1E76                        l2078 2500                        l2158 1B44  
                      l2262 1852                        l2254 17AC                        l2246 1742  
                      l2238 16C6                        l2270 1894                        l2422 2410  
                      l2414 23D2                        l2328 26F6                        l2280 26FA  
                      l2360 2674                        l2432 25CA                        l2408 2552  
                      l2344 2106                        l2336 20AE                        l2352 2726  
                      l2520 22CA                        l2512 229A                        l2440 1308  
                      l2088 247A                        l2176 1EDA                        l2256 17BC  
                      l2248 1762                        l2416 23E4                        l2600 0F2C  
                      l2282 2700                        l2362 2676                        l2354 265E  
                      l2370 271C                        l2098 270E                        l2290 2594  
                      l2506 26C6                        l2426 25B0                        l2346 211C  
                      l2338 20C4                        l2530 22F6                        l2522 22D0  
                      l2514 22AC                        l2442 1324                        l2450 1394  
                      l2434 12D2                        l2186 1F54                        l2178 1EE2  
                      l2266 1882                        l2258 17DC                        l2418 23EC  
                      l2610 0F6E                        l2602 0F30                        l2284 270A  
                      l2364 2678                        l2356 2660                        l2196 2308  
                      l2292 25A6                        l2380 21FC                        l2508 26D0  
                      l2428 25B4                        l2348 2132                        l2372 26A6  
                      l2524 22E6                        l2516 22B4                        l2460 13FA  
                      l2452 13B0                        l2444 1340                        l2436 12D2  
                      l2188 1F88                        l2620 10B2                        l2612 0F86  
                      l2604 0F4C                        l2366 267A                        l2358 2672  
                      l2198 2316                        l2286 257C                        l2390 2244  
                      l2382 2214                        l2374 26AE                        l2526 22EE  
                      l2518 22BC                        l2294 236E                        l2470 1478  
                      l2454 13C0                        l2462 1408                        l2446 135C  
                      l2438 12EC                        l2630 10F8                        l2622 10C8  
                      l2614 0FA2                        l2606 0F62                        l2368 267E  
                      l2288 258C                        l2392 224E                        l2384 222C  
                      l2376 26B8                        l2528 22F0                        l2296 2380  
                      l2480 150A                        l2472 1494                        l2464 1424  
                      l2456 13CE                        l2448 1378                        l2640 1134  
                      l2632 1108                        l2624 10CA                        l2616 0FD2  
                      l2608 0F6A                        l2394 2254                        l2386 2232  
                      l2378 26C2                        l2298 2388                        l2490 157A  
                      l2482 1538                        l2474 14A4                        l2466 1440  
                      l2458 13EA                        l2650 1198                        l2642 1148  
                      l2634 110A                        l2626 10D2                        l2618 1038  
                      l2570 0E6A                        l2396 225E                        l2388 223E  
                      l2492 1596                        l2484 1544                        l2476 14B2  
                      l2468 145C                        l2660 11E8                        l2644 115A  
                      l2652 119C                        l2628 10E6                        l2636 1114  
                      l2580 0EA6                        l2572 0E6E                        l2398 2264  
                      l2494 15A6                        l2486 154C                        l2478 14DC  
                      l2662 11FE                        l2654 11AE                        l2670 1238  
                      l2646 116C                        l2638 1120                        l2590 0F00  
                      l2582 0EB2                        l2574 0E76                        l2566 0E28  
                      l2488 1568                        l2496 15B8                        l1960 200C  
                      l1952 1FC0                        l2736 16A6                        l2680 129A  
                      l2672 124A                        l2664 1214                        l2656 11C2  
                      l2648 1182                        l2592 0F04                        l2584 0EB8  
                      l2576 0E7A                        l2568 0E5A                        l2498 15D4  
                      l2738 1F04                        l1962 2042                        l1954 1FD2  
                      l1970 24DA                        l2682 12B0                        l2674 125E  
                      l2666 1226                        l2658 11D6                        l2594 0F0C  
                      l2586 0EDE                        l2578 0E80                        l1980 1B76  
                      l1956 1FE4                        l1972 24DE                        l2684 12C2  
                      l2676 1272                        l2668 122C                        l2596 0F20  
                      l2588 0EEA                        l1974 2638                        l1990 1BBA  
                      l1982 1B7A                        l1958 1FEE                        l1966 24BC  
                      l2678 1284                        l2598 0F28                        ?_pad 0011  
                      l1976 2654                        l1992 1BDA                        l1984 1B88  
                      l1968 24C8                        l1994 1BDE                        l1986 1BA8  
                      l1996 1BEA                        l1988 1BAC                        l1998 1C08  
                      STR_1 0E1F                        STR_2 0E1F                        STR_3 0E01  
                      STR_4 0E13                        u2000 20AE                        u2001 20AA  
                      u2010 20C4                        u2011 20C0                        u2100 25E2  
                      u2020 20DA                        u2101 25DE                        u2021 20D6  
                      u2030 20F0                        u2110 12EC                        u2031 20EC  
                      u2111 12E8                        u2040 2106                        u2200 1424  
                      u2120 1308                        u1400 1FE4                        u2041 2102  
                      u2201 1420                        u2121 1304                        u1401 1FE0  
                      u2050 211C                        u2210 1440                        u2130 1324  
                      u1410 200C                        u2051 2118                        u2211 143C  
                      u2131 1320                        u1411 2008                        u2060 2132  
                      u2300 1596                        u2220 145C                        u2140 1340  
                      u1500 1CBC                        u1420 2042                        u2061 212E  
                      u2301 1592                        u2221 1458                        u2141 133C  
                      u1501 1CB8                        u1421 203E                        u2070 2148  
                      u2310 15D4                        u2230 1478                        u2150 135C  
                      u1510 1D10                        u1430 24FE                        u2071 2144  
                      u2311 15D0                        u2231 1474                        u2151 1358  
                      u1511 1D0C                        u1431 24FA                        u2080 2552  
                      u2320 15E6                        u2240 1494                        u2160 1378  
                      u1440 1B88                        u1520 1D42                        u1600 21E6  
                      u2081 254E                        u2321 15E2                        u2241 1490  
                      u2161 1374                        u1441 1B84                        u1521 1D3E  
                      u1601 21E2                        u2090 256E                        u2330 1602  
                      u2250 14DC                        u2170 1394                        u1450 1BBA  
                      u1530 1D80                        u1610 251A                        u2091 256A  
                      u2331 15FE                        u2251 14D8                        u2171 1390  
                      u1451 1BB6                        u1531 1D7C                        u1611 2516  
                      u2340 22AC                        u2260 150A                        u2180 13B0  
                      u1620 2608                        u1540 1DAA                        u1700 1950  
                      u2500 0F86                        u2341 22A8                        u2261 1506  
                      u2181 13AC                        u1621 2602                        u1461 1BE4  
                      u1541 1DA6                        u1701 194C                        u2501 0F82  
                      u2350 22CA                        u2270 1538                        u2190 13EA  
                      u1630 260A                        u1470 1C08                        u1550 1DD8  
                      u1390 1FD2                        u1710 197C                        u2510 10B2  
                      u2351 22C6                        u2271 1534                        u2191 13E6  
                      u1471 1C04                        u1551 1DD4                        u1391 1FCE  
                      u1711 1978                        u2511 10AE                        u2360 22E6  
                      u2280 1568                        u1640 248E                        u1800 1ECE  
                      u1480 1C32                        u1560 1E20                        u1720 1992  
                      u2600 1182                        u2520 10C8                        u2361 22E2  
                      u2281 1564                        u1641 248A                        u1801 1ECA  
                      u1481 1C2E                        u1561 1E1C                        u1721 198E  
                      u2601 117E                        u2521 10C4                        u2290 157A  
                      u1650 24B0                        u1810 1F88                        u1490 1C72  
                      u1570 2160                        u1730 1ACE                        u2610 1198  
                      u2530 10E6                        u2291 1576                        u1651 24AC  
                      u1811 1F84                        u1491 1C6E                        u1571 215C  
                      u1731 1ACA                        u2611 1194                        u2531 10E2  
                      u1820 1F9A                        u1580 2182                        u1740 1AEC  
                      u1660 18F2                        u1900 1734                        u2700 125E  
                      u2620 11AE                        u2540 10F8                        u1821 1F96  
                      u1581 217E                        u1741 1AE8                        u1661 18EC  
                      u1901 1730                        u2701 125A                        u2621 11AA  
                      u2541 10F4                        u1830 2316                        u1590 21D8  
                      u1750 1B06                        u1670 18F4                        u1910 17AC  
                      u2710 1272                        u2630 11C2                        u2550 1108  
                      u2470 0F00                        u1831 2312                        u1591 21D4  
                      u1751 1B02                        u1911 17A8                        u2711 126E  
                      u2631 11BE                        u2551 1104                        u2471 0EFC  
                      u1840 232C                        u1760 1B20                        u1680 1906  
                      u1920 17DC                        u2720 1284                        u2640 11D6  
                      u2560 1134                        u2480 0F20                        u1841 2328  
                      u1761 1B1C                        u1681 1902                        u1921 17D8  
                      u2721 1280                        u2641 11D2                        u2561 1130  
                      u2481 0F1C                        u1850 2342                        u1770 1B2E  
                      u1690 1934                        u1930 17FC                        u2730 129A  
                      u2650 11E8                        u2570 1148                        u2490 0F62  
                      u1851 233E                        u1771 1B2A                        u1691 1930  
                      u1931 17F8                        u2731 1296                        u2651 11E4  
                      u2571 1144                        u2491 0F5E                        u1860 2358  
                      u1940 258C                        u1780 1B3E                        u2740 12B0  
                      u2660 11FE                        u2580 115A                        u1861 2354  
                      u1941 2588                        u1781 1B3A                        u2741 12AC  
                      u2661 11FA                        u2581 1156                        u1950 2380  
                      u1790 1E9A                        u1870 1630                        u2750 12C2  
                      u2670 1214                        u2590 116C                        u2807 2250  
                      u1951 237C                        u1791 1E96                        u1871 162C  
                      u2751 12BE                        u2671 1210                        u2591 1168  
                      u1960 239E                        u1880 16C6                        u2680 1226  
                      u2817 2260                        u1961 239A                        u1881 16C2  
                      u2681 1222                        u1970 23B4                        u1890 16EE  
                      u2690 124A                        u2827 2274                        u1971 23B0  
                      u1891 16EA                        u2691 1246                        u1980 246C  
                      u2837 25A8                        u1981 2468                        u1990 2098  
                      u2847 2366                        u2767 26D6                        u1991 2094  
                      u2857 2712                        u2777 221E                        u2787 2234  
                      u2797 2240                        abs@a 0013                        _dbuf 0100  
                      _atoi 1E62                        _main 0E28                        _dtoa 18C2  
                      _hour 00DF                        _prec 005C                        pad@i 0018  
                      pad@p 0015                        fsr1h 000FE2                        fsr2h 000FDA  
                      indf2 000FDF                        fsr1l 000FE1                        pad@w 001A  
                      fsr2l 000FD9                        btemp 005F                ?_LCD_setline 0001  
                      prodh 000FF4                        prodl 000FF3                 main@yearstr 00AB  
                      start 00C8            __end_of_ADC_init 26FA            __end_of_DAC_init 270E  
           __end_of_HighISR 00C8                ___param_bank 000000                  _Comp1_init 265E  
                     ??_abs 0015                       ??_pad 0017            __end_of_LCD_Init 2292  
           __end_of___aodiv 1CFE                       ?_atoi 0007                       ?_main 0001  
                     ?_dtoa 001C             __end_of___aomod 1E62                       _ADPCH 000F5F  
           __end_of___lwdiv 2306             __end_of___lwmod 23D2                       i2l150 00A6  
                     i2l151 00BC                       i2l152 00BE                       i2l145 005E  
                     i2l153 00C4                       i2l146 00C0                vfpfcnvrt@fmt 0041  
                     _TMR0H 000FD4                       _TMR0L 000FD3        check_month@leap_year 0014  
                     _flags 005E                       _fputc 1FC0                       _fputs 24BC  
           __end_of_isdigit 2610                       atoi@n 000E                       pad@fp 0011  
                     atoi@s 0007                       _width 00CB                       _putch 272C  
                     dtoa@d 001E                       dtoa@i 003C                       dtoa@n 0034  
                     dtoa@p 0030                       dtoa@s 003E                       dtoa@w 0032  
           __end_of_isspace 24BC               ?_LCD_sendbyte 0002                       tablat 000FF5  
                     ttemp5 0060                       ttemp6 0063                       ttemp7 0067  
                     status 000FD8                       wtemp8 0060             __end_of_sprintf 2424  
      check_month@month_day 000E             __initialization 2610                __end_of_atoi 1FC0  
              __end_of_main 12D2                __end_of_dtoa 1B76                  _Light_init 2726  
          _daylight_end_min 00D1           __end_of_LCD_E_TOG 271C                      ??_atoi 0009  
                    ??_main 0075                      ??_dtoa 0026               __activetblptr 000003  
         __end_of_LCD_clear 26E0                      ?_fputc 0001                      ?_fputs 000A  
                    _ADRESH 000F64              ??_LCD_sendbyte 0003                      ?_putch 0001  
                    i2l2550 0028                      i2l2560 007C                      i2l2552 002C  
                    i2l2544 000A                      i2l2562 0090                      i2l2554 003A  
                    i2l2546 001A                      i2l2564 00B6                      i2l2556 0048  
                    i2l2548 0022                      i2l2558 006C               vfpfcnvrt@done 0050  
                 ??_HighISR 0001                      _TMR0IE 00714D                      _TMR0IF 00719D  
         _LEDarray_disp_bin 208A          ?_LEDarray_disp_bin 0001               ??_Timer0_init 0001  
              vfprintf@cfmt 005A                   ??___aodiv 0011                   ??___aomod 0011  
                    ___wmul 2638                 ?_Comp1_init 0001                   ??___lwdiv 000B  
                 ??___lwmod 000B         ??_LEDarray_disp_bin 0003                      clear_0 2616  
                    clear_1 2622               main@month_day 00C9                      _minute 00DD  
                    isa$std 000001                      pad@buf 0013                      dtoa@fp 001C  
                    fputc@c 0001                      fputs@c 000E                      fputs@i 000F  
                    fputs@s 000A                   ??_isdigit 0003                __mediumconst 0000  
                 ??_isspace 0003                      tblptrh 000FF7                      tblptrl 000FF6  
                    tblptru 000FF8                   ?_ADC_init 0001                      putch@c 0001  
                 ?_DAC_init 0001            __end_of_vfprintf 2476                   ??_sprintf 005C  
           _current_day_min 00D9   __end_of_LEDarray_disp_bin 2152                  __accesstop 0060  
   __end_of__initialization 262E                   ?_LCD_Init 0001             check_month@year 0010  
             ___rparam_used 000001               _LEDarray_init 2684             _Interrupts_init 271C  
            __pcstackCOMRAM 0001                 ?_Light_init 0001               __end_of_fputc 208A  
             __end_of_fputs 2500               __end_of_putch 272E         __end_of_Timer0_init 26C6  
         _daylight_end_hour 00D3                  ??_ADC_init 0001                  ??_DAC_init 0001  
                   ??_fputc 0005                     ??_fputs 000E                     ??_putch 0001  
                __pbssBANK0 00CB                  __pbssBANK1 0100                  ??_LCD_Init 0004  
            _LCD_sendnibble 2306              ?_LEDarray_init 0001              _LCD_sendstring 25B0  
       _daylight_start_hour 00D7                     ?___wmul 0001        __end_of_LCD_sendbyte 25B0  
    __end_of_LCD_sendnibble 236E     __end_of_Interrupts_init 2726                     _HighISR 0008  
    __end_of_LCD_sendstring 25E4                   _ADREFbits 000F58                     __Hparam 0000  
                   __Lparam 0000                 _Timer0_init 26A6                     ___aodiv 1B76  
                   ___aomod 1CFE                     ___lwdiv 2292                     ___lwmod 236E  
                 ?_vfprintf 0054                __psmallconst 0E00                     __pcinit 2610  
                   __ramtop 0E00                     __ptext0 0E28                     __ptext1 23D2  
                   __ptext2 2424                     __ptext3 1608                     __ptext4 18C2  
                   __ptext5 2152                     __ptext6 24BC                     __ptext7 1FC0  
                   __ptext8 272C                     __ptext9 2500                     _isdigit 25E4  
             ??_check_month 0012                     _isspace 2476                   _LCD_E_TOG 270E  
           LCD_setline@line 0004                     atoi@neg 000C                     main@day 00C5  
                   _sprintf 23D2                   _LCD_clear 26C6        end_of_initialization 262E  
           ?_LCD_sendnibble 0001       main@OneAmToFiveAmFlag 00BF                     fputc@fp 0003  
           ??_LEDarray_init 0001                     fputs@fp 000C             ?_LCD_sendstring 0004  
         __end_of_vfpfcnvrt 18C2                     postdec2 000FDD                ??_Comp1_init 0001  
                   postinc0 000FEE                     postinc1 000FE6                     postinc2 000FDE  
          vfpfcnvrt@convarg 0048                  ??_vfprintf 005A            _current_day_hour 00DB  
                ?_LCD_E_TOG 0001                   _TRISAbits 000F81                   _TRISBbits 000F82  
                 _TRISCbits 000F83                   _TRISEbits 000F85                   _TRISFbits 000F86  
                 _TRISGbits 000F87                   _TRISHbits 000F88  _calculated_solar_noon_hour 00CF  
          check_month@month 000C                  ?_LCD_clear 0001         __end_of_check_month 1608  
        __end_of_Comp1_init 2684                 _CM1CON0bits 000ED0                 _CM1CON1bits 000ED1  
          ?_Interrupts_init 0001                ??_Light_init 0001                 vfpfcnvrt@ap 0043  
               vfpfcnvrt@cp 0052                 vfpfcnvrt@fp 003F              __end_of___wmul 265E  
      LCD_sendnibble@number 0001         start_initialization 2610                 __end_of_abs 2540  
               __end_of_pad 21FC          __end_of_Light_init 272C                _LCD_sendbyte 257A  
             ??_LCD_setline 0004                 vfprintf@fmt 0056        LCD_sendstring@string 0004  
                  ??___wmul 0005                 __pbssCOMRAM 005C                 _check_month 12D2  
               ??_LCD_E_TOG 0001               __pcstackBANK0 0060            ___aodiv@dividend 0001  
               ??_LCD_clear 0004                    ?_HighISR 0001            ___lwdiv@dividend 0007  
                 _dtoa$1887 002E                ?_Timer0_init 0001          _daylight_start_min 00D5  
                 __pintcode 0008                    ?___aodiv 0001                    ?___aomod 0001  
          ___aodiv@quotient 0013         __end_of_LCD_setline 257A                    ?___lwdiv 0007  
                  ?___lwmod 0007                 __smallconst 0E00                    ?_isdigit 0001  
                  ?_isspace 0001            ??_LCD_sendnibble 0001                    _ADC_init 26E0  
                  _DAC_init 26FA            ___lwdiv@quotient 000B            ??_LCD_sendstring 0006  
                  ?_sprintf 0060            LCD_sendbyte@Byte 0003                    _LCD_Init 21FC  
          LCD_sendbyte@type 0002              ___wmul@product 0005                    _LATAbits 000F79  
                  _LATBbits 000F7A                    _LATCbits 000F7B                    _LATEbits 000F7D  
                  _LATFbits 000F7E                    _LATGbits 000F7F                    _LATHbits 000F80  
                  i2u240_40 001A                    i2u240_41 0016                    i2u241_40 003A  
                  i2u241_41 0036                    i2u242_40 0048                    i2u242_41 0044  
                  i2u243_40 006C                    i2u243_41 0068                    i2u244_40 0090  
                  i2u244_41 008C                    i2u245_40 00A6                    i2u245_41 00A2  
                  i2u246_40 00B6                    i2u246_41 00B2                    _PIR2bits 000E35  
                 _vfpfcnvrt 1608                  _ADCON0bits 000F60           ___wmul@multiplier 0001  
                 main@month 00C7                _isspace$1936 0005                  _CM1NCHbits 000ED2  
                _CM1PCHbits 000ED3       __end_of_LEDarray_init 26A6                 _LCD_setline 2540  
                  __Hrparam 0000                  vfprintf@ap 0058                    __Lrparam 0000  
                vfprintf@fp 0054                  ?_vfpfcnvrt 003F             ___aodiv@divisor 0009  
           ___aodiv@counter 0011                  _ANSELAbits 000E92                  _ANSELFbits 000EB4  
                sprintf@fmt 0062                  _T0CON0bits 000FD5                  _T0CON1bits 000FD6  
           ___lwdiv@divisor 0009             ___lwdiv@counter 000D                    __ptext10 1CFE  
                  __ptext11 1B76                    __ptext20 2726                    __ptext12 1E62  
                  __ptext21 2684                    __ptext13 2476                    __ptext30 271C  
                  __ptext22 208A                    __ptext14 25E4                    __ptext31 265E  
                  __ptext23 2540                    __ptext15 2638                    __ptext32 26FA  
                  __ptext24 25B0                    __ptext16 12D2                    __ptext33 26E0  
                  __ptext25 26C6                    __ptext17 236E                    __ptext26 21FC  
                  __ptext18 2292                    __ptext27 257A                    __ptext19 26A6  
                  __ptext28 2306                    __ptext29 270E     LEDarray_disp_bin@number 0001  
                  isa$xinst 000000                    int$flags 005F                    _vfprintf 2424  
                  main@year 00C3            ___aomod@dividend 0001                  _INTCONbits 000FF2  
              ?_check_month 000C                    isdigit@c 0001                    intlevel2 0000  
                 sprintf@ap 0068                _DAC1CON0bits 000EC6                _DAC1CON1bits 000EC7  
          ___lwmod@dividend 0007                    isspace@c 0001             ___aomod@divisor 0009  
               ??_vfpfcnvrt 0045             ___aomod@counter 0011                    sprintf@f 006A  
                  sprintf@s 0060   _calculated_solar_noon_min 00CD             ___lwmod@divisor 0009  
           ___lwmod@counter 000B                ___aodiv@sign 0012                ___aomod@sign 0012  
